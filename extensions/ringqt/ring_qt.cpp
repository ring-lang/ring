/* Copyright (c) 2013-2017 Mahmoud Fayed <msfclipper@yahoo.com> */

extern "C" {
	#include "ring.h"
}

#include "gpushbutton.h"
#include "gaction.h"
#include "glineedit.h"
#include "gtextedit.h"
#include "glistwidget.h"
#include "gtreeview.h"
#include "gtreewidget.h"
#include "gcombobox.h"
#include "gtabwidget.h"
#include "gtablewidget.h"
#include "gprogressbar.h"
#include "gspinbox.h"
#include "gslider.h"
#include "gdial.h"
#include "gnetworkaccessmanager.h"
#include "gcheckbox.h"
#include "gradiobutton.h"
#include "gbuttongroup.h"
#include "gvideowidget.h"
#include "gtimer.h"
#include "gtcpserver.h"
#include "giodevice.h"
#include "gabstractsocket.h"
#include "gtcpsocket.h"
#include "gcolordialog.h"
#include "gallevents.h"
#include "gthread.h"
#include "gplaintextedit.h"
#include "gheaderview.h"
#include "gprocess.h"
#include "codeeditor.h"
#include "highlighter.h"
#include "gtoolbutton.h"
#include "gbluetoothdevicediscoveryagent.h"
#include "gbluetoothlocaldevice.h"
#include "gbluetoothserver.h"
#include "gbluetoothservicediscoveryagent.h"
#include "gbluetoothsocket.h"
#include "gbluetoothtransfermanager.h"
#include "gbluetoothtransferreply.h"
#include "gwindow.h"
#include "gguiapplication.h"
#include "gtextbrowser.h"
#include "gdockwidget.h"
#include "gstackedwidget.h"
#include "gcalendarwidget.h"

#include <QApplication>
#include <QObject>
#include <QWidget>
#include <QLabel>
#include <QPixmap>
#include <QIcon>
#include <QSize>
#include <QPushButton>
#include <QMainWindow>
#include <QVBoxLayout>
#include <QHBoxLayout>
#include <QLineEdit>
#include <QTextEdit>
#include <QListWidget>
#include <QTreeView>
#include <QDir>
#include <QFileSystemModel>
#include <QTreeWidget>
#include <QTreeWidgetItem>
#include <QComboBox>
#include <QVariant>
#include <QMenuBar>
#include <QMenu>
#include <QToolBar>
#include <QMainWindow>
#include <QStatusBar>
#include <QDockWidget>
#include <QTabWidget>
#include <QTableWidget>
#include <QTableWidgetItem>
#include <QSizePolicy>
#include <QFrame>
#include <QAbstractScrollArea>
#include <QAbstractItemView>
#include <QProgressBar>
#include <QSpinBox>
#include <QSlider>
#include <QAbstractSlider>
#include <QDateEdit>
#include <QDateTimeEdit>
#include <QAbstractSpinBox>
#include <QDial>
#include <QUrl>
#include <QCheckBox>
#include <QRadioButton>
#include <QButtonGroup>
#include <QMediaPlayer>
#include <QMediaPlaylist>
#include <QVideoWidget>
#include <QPrinter>
#include <QAction>
#include <QEvent>
#include <QMessageBox>
#include <QTimer>
#include <QFileDialog>
#include <QPainter>
#include <QPicture>
#include <QPen>
#include <QColor>
#include <QPrinter>
#include <QFont>
#include <QBrush>
#include <QByteArray>
#include <QIODevice>
#include <QAbstractSocket>
#include <QTcpSocket>
#include <QTcpServer>
#include <QNetworkProxy>
#include <QHostAddress>
#include <QHostInfo>
#include <QList>
#include <QFileInfo>
#include <QDirModel>
#include <QModelIndex>
#include <QFontDialog>
#include <QDialog>
#include <QTextCursor>
#include <QTextBlock>
#include <QTextDocumentFragment>
#include <QColorDialog>
#include <QHeaderView>
#include <QStringList>
#include <QKeySequence>
#include <QLCDNumber>
#include <QInputDialog>
#include <QDesktopWidget>
#include <QRect>
#include <QTextDocument>
#include <QTime>
#include <QTest>
#include <QListWidgetItem>
#include <QSystemTrayIcon>
#include <QDate>
#include <QTextCodec>
#include <QtSql>
#include <QSqlDatabase>
#include <QSqlDriver>
#include <QSqlQuery>
#include <QSqlError>
#include <QSqlIndex>
#include <QSqlRecord>
#include <QSqlField>
#include <QSqlDriverCreatorBase>
#include <QNetworkRequest>
#include <QNetworkAccessManager>
#include <QNetworkReply>
#include <QPainterPath>
#include <QImage>
#include <QBitmap>
#include <QMediaContent>
#include <QTableView>
#include <QXmlStreamReader>
#include <QXmlStreamWriter>
#include <QXmlStreamNotationDeclaration>
#include <QXmlStreamNamespaceDeclaration>
#include <QXmlStreamEntityResolver>
#include <QXmlStreamEntityDeclaration>
#include <QXmlStreamAttributes>
#include <QXmlStreamAttribute>
#include <QThread>
#include <QThreadPool>
#include <QRegularExpression>
#include <QRegularExpressionMatch>
#include <QRegularExpressionMatchIterator>
#include <QJsonValue>
#include <QJsonParseError>
#include <QJsonObject>
#include <QJsonDocument>
#include <QJsonArray>
#include <iterator>
#include <QPlainTextEdit>
#include <QGridLayout>
#include <QTextCharFormat>
#include <QCameraViewfinder>
#include <QGraphicsVideoItem>
#include <QVideoWidgetControl>
#include <QCamera>
#include <QCameraImageCapture>
#include <QFontMetrics>
#include <QList>
#include <QSplashScreen>
#include <QBoxLayout>
#include <QLayout>
#include <QLinearGradient>
#include <QGradient>
#include <QPointF>
#include <QPoint>
#include <QStyleFactory>
#include <QScrollArea>
#include <QSplitter>
#include <QCompleter>
#include <QString>
#include <QProcess>
#include <QMdiArea>
#include <QMdiSubWindow>
#include <QCursor>
#include <QListView>
#include <QUuid>
#include <QDesktopServices>
#include <QToolButton>
#include <QStringRef>
#include <QMutex>
#include <QMutexLocker>
#include <QBuffer>
#include <QBluetoothAddress>
#include <QBluetoothDeviceDiscoveryAgent>
#include <QBluetoothDeviceInfo>
#include <QBluetoothUuid>
#include <QBluetoothHostInfo>
#include <QBluetoothLocalDevice>
#include <QBluetoothServer>
#include <QBluetoothServiceDiscoveryAgent>
#include <QBluetoothServiceInfo>
#include <QBluetoothSocket>
#include <QBluetoothTransferManager>
#include <QBluetoothTransferReply>
#include <QBluetoothTransferRequest>
#include <QBluetoothUuid>
#include <QDateTime>
#include <QScreen>
#include <QWindow>
#include <QGuiApplication>
#include <QTextBrowser>
#include <QRegion>
#include <QStackedWidget>
#include <QCalendarWidget>
#include <QOpenGLFunctions>
#include <QOpenGLContext>


#include "gserialport.h"
#include "gwebview.h"

#include <QSerialPort>
#include <QSerialPortInfo>
#include <QWebSettings>
#include <QWebView>



#include <QAxObject>
#include <QAxBase>


extern "C" {

	RING_API void ring_qt_start(RingState *pRingState);

	RING_API void ringlib_init(RingState *pRingState)
	{

		new QApplication(pRingState->argc,pRingState->argv);
	   	ring_qt_start(pRingState) ;
	}

}

RING_FUNC(ring_QApp_quit)
{
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	qApp->quit();
	exit(0);
}

RING_FUNC(ring_QApp_exec)
{
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	qApp->exec();
}

RING_FUNC(ring_QApp_styleWindows)
{
	qApp->setPalette(qApp->style()->standardPalette());
	qApp->setStyle(QStyleFactory::create("windows"));
}

RING_FUNC(ring_QApp_styleWindowsVista)
{
	qApp->setPalette(qApp->style()->standardPalette());
	qApp->setStyle(QStyleFactory::create("windowsvista"));
}

RING_FUNC(ring_QApp_styleFusion)
{
	qApp->setPalette(qApp->style()->standardPalette());
	qApp->setStyle(QStyleFactory::create("fusion"));
}

RING_FUNC(ring_QApp_styleFusionBlack)
{
	qApp->setStyle(QStyleFactory::create("fusion"));
	QPalette palette;
	palette.setColor(QPalette::Window, QColor(53,53,53));
	palette.setColor(QPalette::WindowText, Qt::white);
	palette.setColor(QPalette::Base, QColor(15,15,15));
	palette.setColor(QPalette::AlternateBase, QColor(53,53,53));
	palette.setColor(QPalette::ToolTipBase, Qt::white);
	palette.setColor(QPalette::ToolTipText, Qt::white);
	palette.setColor(QPalette::Text, Qt::white);
	palette.setColor(QPalette::Button, QColor(53,53,53));
	palette.setColor(QPalette::ButtonText, Qt::white);
	palette.setColor(QPalette::BrightText, Qt::red);

	palette.setColor(QPalette::Highlight, QColor(142,45,197).lighter());
	palette.setColor(QPalette::HighlightedText, Qt::black);

	palette.setColor(QPalette::Disabled, QPalette::Text, Qt::darkGray);
	palette.setColor(QPalette::Disabled, QPalette::ButtonText, Qt::darkGray);

	qApp->setPalette(palette);
}

RING_FUNC(ring_QApp_styleFusionCustom)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 12 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	if ( (! RING_API_ISPOINTER(1)) || (! RING_API_ISPOINTER(2)) ||
		(! RING_API_ISPOINTER(3)) || (! RING_API_ISPOINTER(4)) ||
		(! RING_API_ISPOINTER(5)) || (! RING_API_ISPOINTER(6)) ||
		(! RING_API_ISPOINTER(7)) || (! RING_API_ISPOINTER(8)) ||
		(! RING_API_ISPOINTER(9)) || (! RING_API_ISPOINTER(10)) ||
		(! RING_API_ISPOINTER(11)) || (! RING_API_ISPOINTER(12)) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	qApp->setStyle(QStyleFactory::create("fusion"));
	QPalette palette;
	palette.setColor(QPalette::Window, 		* (QColor *) RING_API_GETCPOINTER(1,"QColor") );
	palette.setColor(QPalette::WindowText, 		* (QColor *) RING_API_GETCPOINTER(2,"QColor") );
	palette.setColor(QPalette::Base, 		* (QColor *) RING_API_GETCPOINTER(3,"QColor") );
	palette.setColor(QPalette::AlternateBase, 	* (QColor *) RING_API_GETCPOINTER(4,"QColor") );
	palette.setColor(QPalette::ToolTipBase, 	* (QColor *) RING_API_GETCPOINTER(5,"QColor") );
	palette.setColor(QPalette::ToolTipText, 	* (QColor *) RING_API_GETCPOINTER(6,"QColor") );
	palette.setColor(QPalette::Text,		* (QColor *) RING_API_GETCPOINTER(7,"QColor") );
	palette.setColor(QPalette::Button, 		* (QColor *) RING_API_GETCPOINTER(8,"QColor") );
	palette.setColor(QPalette::ButtonText, 		* (QColor *) RING_API_GETCPOINTER(9,"QColor") );
	palette.setColor(QPalette::BrightText, 		* (QColor *) RING_API_GETCPOINTER(10,"QColor") );
	palette.setColor(QPalette::Highlight, 		* (QColor *) RING_API_GETCPOINTER(11,"QColor") );
	palette.setColor(QPalette::HighlightedText, 	* (QColor *) RING_API_GETCPOINTER(12,"QColor") );
	qApp->setPalette(palette);
}


RING_FUNC(ring_QApp_processEvents)
{
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	qApp->processEvents();
}

RING_FUNC(ring_QApp_closeAllWindows)
{
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	qApp->closeAllWindows();
}

RING_FUNC(ring_QApp_keyboardModifiers)
{
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_RETNUMBER( (double) qApp->keyboardModifiers() );
}

RING_FUNC(ring_QDesktopServices_openUrl)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_RETNUMBER(QDesktopServices::openUrl(* (QUrl *) RING_API_GETCPOINTER(1,"QUrl"))) ;
}
RING_FUNC(ring_QDesktopServices_setUrlHandler)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QDesktopServices::setUrlHandler(RING_API_GETSTRING(1),(QObject *) RING_API_GETCPOINTER(2,"QObject *"),RING_API_GETSTRING(3));
}
RING_FUNC(ring_QDesktopServices_unsetUrlHandler)
{
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QDesktopServices::unsetUrlHandler(RING_API_GETSTRING(1));
}
RING_FUNC(ring_QTest_qsleep)
{
	QTest::qSleep((int) RING_API_GETNUMBER(1));
}

RING_FUNC(ring_QObject_blockSignals)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->blockSignals( (bool ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QObject_children)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	{
		QObjectList *pValue ; 
		pValue = (QObjectList *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QObjectList)) ;
		*pValue = pObject->children();
		RING_API_RETCPOINTER(pValue,"QObjectList");
	}
}


RING_FUNC(ring_QObject_dumpObjectInfo)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	pObject->dumpObjectInfo();
}


RING_FUNC(ring_QObject_dumpObjectTree)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	pObject->dumpObjectTree();
}


RING_FUNC(ring_QObject_inherits)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->inherits(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QObject_installEventFilter)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->installEventFilter((QObject *) RING_API_GETCPOINTER(2,"QObject"));
}


RING_FUNC(ring_QObject_isWidgetType)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	RING_API_RETNUMBER(pObject->isWidgetType());
}


RING_FUNC(ring_QObject_killTimer)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->killTimer( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QObject_moveToThread)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->moveToThread((QThread *) RING_API_GETCPOINTER(2,"QThread"));
}


RING_FUNC(ring_QObject_objectName)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	RING_API_RETSTRING(pObject->objectName().toStdString().c_str());
}


RING_FUNC(ring_QObject_parent)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	RING_API_RETCPOINTER(pObject->parent(),"QObject");
}


RING_FUNC(ring_QObject_property)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->property(RING_API_GETSTRING(2));
		RING_API_RETCPOINTER(pValue,"QVariant");
	}
}


RING_FUNC(ring_QObject_removeEventFilter)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeEventFilter((QObject *) RING_API_GETCPOINTER(2,"QObject"));
}


RING_FUNC(ring_QObject_setObjectName)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setObjectName(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QObject_setParent)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setParent((QObject *) RING_API_GETCPOINTER(2,"QObject"));
}


RING_FUNC(ring_QObject_setProperty)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setProperty(RING_API_GETSTRING(2),* (QVariant *) RING_API_GETCPOINTER(3,"QVariant")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QVariant"));
}


RING_FUNC(ring_QObject_signalsBlocked)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	RING_API_RETNUMBER(pObject->signalsBlocked());
}


RING_FUNC(ring_QObject_startTimer)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->startTimer( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QObject_thread)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	RING_API_RETCPOINTER(pObject->thread(),"QThread");
}


RING_FUNC(ring_QObject_deleteLater)
{
	QObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
	pObject->deleteLater();
}


RING_FUNC(ring_QWidget_acceptDrops)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->acceptDrops());
}


RING_FUNC(ring_QWidget_accessibleDescription)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETSTRING(pObject->accessibleDescription().toStdString().c_str());
}


RING_FUNC(ring_QWidget_accessibleName)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETSTRING(pObject->accessibleName().toStdString().c_str());
}


RING_FUNC(ring_QWidget_activateWindow)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->activateWindow();
}


RING_FUNC(ring_QWidget_addAction)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addAction((QAction *) RING_API_GETCPOINTER(2,"QAction"));
}


RING_FUNC(ring_QWidget_adjustSize)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->adjustSize();
}


RING_FUNC(ring_QWidget_autoFillBackground)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->autoFillBackground());
}


RING_FUNC(ring_QWidget_backgroundRole)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->backgroundRole());
}


RING_FUNC(ring_QWidget_baseSize)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->baseSize();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QWidget_childAt)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->childAt( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3)),"QWidget");
}


RING_FUNC(ring_QWidget_childrenRect)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->childrenRect();
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QWidget_childrenRegion)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QRegion *pValue ; 
		pValue = new QRegion() ;
		*pValue = pObject->childrenRegion();
		RING_API_RETCPOINTER(pValue,"QRegion");
	}
}


RING_FUNC(ring_QWidget_clearFocus)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->clearFocus();
}


RING_FUNC(ring_QWidget_clearMask)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->clearMask();
}


RING_FUNC(ring_QWidget_contentsMargins)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QMargins *pValue ; 
		pValue = (QMargins *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QMargins)) ;
		*pValue = pObject->contentsMargins();
		RING_API_RETCPOINTER(pValue,"QMargins");
	}
}


RING_FUNC(ring_QWidget_contentsRect)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->contentsRect();
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QWidget_contextMenuPolicy)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->contextMenuPolicy());
}


RING_FUNC(ring_QWidget_cursor)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QCursor *pValue ; 
		pValue = new QCursor() ;
		*pValue = pObject->cursor();
		RING_API_RETCPOINTER(pValue,"QCursor");
	}
}


RING_FUNC(ring_QWidget_effectiveWinId)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->effectiveWinId());
}


RING_FUNC(ring_QWidget_ensurePolished)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->ensurePolished();
}


RING_FUNC(ring_QWidget_focusPolicy)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->focusPolicy());
}


RING_FUNC(ring_QWidget_focusProxy)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETCPOINTER(pObject->focusProxy(),"QWidget");
}


RING_FUNC(ring_QWidget_focusWidget)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETCPOINTER(pObject->focusWidget(),"QWidget");
}


RING_FUNC(ring_QWidget_font)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QFont *pValue ; 
		pValue = new QFont() ;
		*pValue = pObject->font();
		RING_API_RETCPOINTER(pValue,"QFont");
	}
}


RING_FUNC(ring_QWidget_fontInfo)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QFontInfo *pValue ; 
		pValue = (QFontInfo *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QFontInfo)) ;
		*pValue = pObject->fontInfo();
		RING_API_RETCPOINTER(pValue,"QFontInfo");
	}
}


RING_FUNC(ring_QWidget_foregroundRole)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->foregroundRole());
}


RING_FUNC(ring_QWidget_frameGeometry)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->frameGeometry();
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QWidget_frameSize)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->frameSize();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QWidget_geometry)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->geometry();
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QWidget_getContentsMargins)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->getContentsMargins(RING_API_GETINTPOINTER(2),RING_API_GETINTPOINTER(3),RING_API_GETINTPOINTER(4),RING_API_GETINTPOINTER(5));
	RING_API_ACCEPTINTVALUE(1) ;
	RING_API_ACCEPTINTVALUE(2) ;
	RING_API_ACCEPTINTVALUE(3) ;
	RING_API_ACCEPTINTVALUE(4) ;
}


RING_FUNC(ring_QWidget_grab)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->grab(* (QRect *) RING_API_GETCPOINTER(2,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QRect"));
		RING_API_RETCPOINTER(pValue,"QPixmap");
	}
}


RING_FUNC(ring_QWidget_grabGesture)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->grabGesture( (Qt::GestureType )  (int) RING_API_GETNUMBER(2), (Qt::GestureFlag )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QWidget_grabKeyboard)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->grabKeyboard();
}


RING_FUNC(ring_QWidget_grabMouse)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->grabMouse();
}


RING_FUNC(ring_QWidget_grabShortcut)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->grabShortcut(* (QKeySequence *) RING_API_GETCPOINTER(2,"QKeySequence"), (Qt::ShortcutContext )  (int) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QKeySequence"));
}


RING_FUNC(ring_QWidget_graphicsEffect)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETCPOINTER(pObject->graphicsEffect(),"QGraphicsEffect");
}


RING_FUNC(ring_QWidget_graphicsProxyWidget)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETCPOINTER(pObject->graphicsProxyWidget(),"QGraphicsProxyWidget");
}


RING_FUNC(ring_QWidget_hasFocus)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->hasFocus());
}


RING_FUNC(ring_QWidget_hasMouseTracking)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->hasMouseTracking());
}


RING_FUNC(ring_QWidget_height)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->height());
}


RING_FUNC(ring_QWidget_heightForWidth)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->heightForWidth( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QWidget_inputMethodHints)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->inputMethodHints());
}


RING_FUNC(ring_QWidget_inputMethodQuery)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->inputMethodQuery( (Qt::InputMethodQuery )  (int) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QVariant");
	}
}


RING_FUNC(ring_QWidget_insertAction)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertAction((QAction *) RING_API_GETCPOINTER(2,"QAction"),(QAction *) RING_API_GETCPOINTER(3,"QAction"));
}


RING_FUNC(ring_QWidget_isActiveWindow)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->isActiveWindow());
}


RING_FUNC(ring_QWidget_isAncestorOf)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isAncestorOf((QWidget *) RING_API_GETCPOINTER(2,"QWidget")));
}


RING_FUNC(ring_QWidget_isEnabled)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->isEnabled());
}


RING_FUNC(ring_QWidget_isEnabledTo)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isEnabledTo((QWidget *) RING_API_GETCPOINTER(2,"QWidget")));
}


RING_FUNC(ring_QWidget_isFullScreen)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->isFullScreen());
}


RING_FUNC(ring_QWidget_isHidden)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->isHidden());
}


RING_FUNC(ring_QWidget_isMaximized)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->isMaximized());
}


RING_FUNC(ring_QWidget_isMinimized)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->isMinimized());
}


RING_FUNC(ring_QWidget_isModal)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->isModal());
}


RING_FUNC(ring_QWidget_isVisible)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->isVisible());
}


RING_FUNC(ring_QWidget_isVisibleTo)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isVisibleTo((QWidget *) RING_API_GETCPOINTER(2,"QWidget")));
}


RING_FUNC(ring_QWidget_isWindow)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->isWindow());
}


RING_FUNC(ring_QWidget_isWindowModified)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->isWindowModified());
}


RING_FUNC(ring_QWidget_layout)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETCPOINTER(pObject->layout(),"QLayout");
}


RING_FUNC(ring_QWidget_layoutDirection)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->layoutDirection());
}


RING_FUNC(ring_QWidget_locale)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QLocale *pValue ; 
		pValue = (QLocale *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QLocale)) ;
		*pValue = pObject->locale();
		RING_API_RETCPOINTER(pValue,"QLocale");
	}
}


RING_FUNC(ring_QWidget_mapFrom)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->mapFrom((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),* (QPoint *) RING_API_GETCPOINTER(3,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QPoint"));
		RING_API_RETCPOINTER(pValue,"QPoint");
	}
}


RING_FUNC(ring_QWidget_mapFromGlobal)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->mapFromGlobal(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
		RING_API_RETCPOINTER(pValue,"QPoint");
	}
}


RING_FUNC(ring_QWidget_mapFromParent)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->mapFromParent(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
		RING_API_RETCPOINTER(pValue,"QPoint");
	}
}


RING_FUNC(ring_QWidget_mapTo)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->mapTo((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),* (QPoint *) RING_API_GETCPOINTER(3,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QPoint"));
		RING_API_RETCPOINTER(pValue,"QPoint");
	}
}


RING_FUNC(ring_QWidget_mapToGlobal)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->mapToGlobal(* (QPoint  *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
		RING_API_RETCPOINTER(pValue,"QPoint");
	}
}


RING_FUNC(ring_QWidget_mapToParent)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->mapToParent(* (QPoint  *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
		RING_API_RETCPOINTER(pValue,"QPoint");
	}
}


RING_FUNC(ring_QWidget_mask)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QRegion *pValue ; 
		pValue = new QRegion() ;
		*pValue = pObject->mask();
		RING_API_RETCPOINTER(pValue,"QRegion");
	}
}


RING_FUNC(ring_QWidget_maximumHeight)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->maximumHeight());
}


RING_FUNC(ring_QWidget_maximumSize)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->maximumSize();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QWidget_maximumWidth)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->maximumWidth());
}


RING_FUNC(ring_QWidget_minimumHeight)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->minimumHeight());
}


RING_FUNC(ring_QWidget_minimumSize)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->minimumSize();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QWidget_minimumWidth)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->minimumWidth());
}


RING_FUNC(ring_QWidget_move)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->move( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QWidget_nativeParentWidget)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETCPOINTER(pObject->nativeParentWidget(),"QWidget");
}


RING_FUNC(ring_QWidget_nextInFocusChain)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETCPOINTER(pObject->nextInFocusChain(),"QWidget");
}


RING_FUNC(ring_QWidget_normalGeometry)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->normalGeometry();
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QWidget_overrideWindowFlags)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->overrideWindowFlags( (Qt::WindowType )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_palette)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QPalette *pValue ; 
		pValue = (QPalette *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QPalette)) ;
		*pValue = pObject->palette();
		RING_API_RETCPOINTER(pValue,"QPalette");
	}
}


RING_FUNC(ring_QWidget_parentWidget)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETCPOINTER(pObject->parentWidget(),"QWidget");
}


RING_FUNC(ring_QWidget_pos)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->pos();
		RING_API_RETCPOINTER(pValue,"QPoint");
	}
}


RING_FUNC(ring_QWidget_previousInFocusChain)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETCPOINTER(pObject->previousInFocusChain(),"QWidget");
}


RING_FUNC(ring_QWidget_rect)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->rect();
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QWidget_releaseKeyboard)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->releaseKeyboard();
}


RING_FUNC(ring_QWidget_releaseMouse)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->releaseMouse();
}


RING_FUNC(ring_QWidget_releaseShortcut)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->releaseShortcut( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_removeAction)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeAction((QAction *) RING_API_GETCPOINTER(2,"QAction"));
}


RING_FUNC(ring_QWidget_render)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->render((QPaintDevice *) RING_API_GETCPOINTER(2,"QPaintDevice"),* (QPoint *) RING_API_GETCPOINTER(3,"QPoint"),* (QRegion *) RING_API_GETCPOINTER(4,"QRegion"), (QWidget::RenderFlag)  (int) RING_API_GETNUMBER(5));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"QRegion"));
}


RING_FUNC(ring_QWidget_repaint)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->repaint();
}


RING_FUNC(ring_QWidget_resize)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->resize( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QWidget_restoreGeometry)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->restoreGeometry(* (QByteArray *) RING_API_GETCPOINTER(2,"QByteArray")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QByteArray"));
}


RING_FUNC(ring_QWidget_saveGeometry)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->saveGeometry();
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QWidget_scroll)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->scroll( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QWidget_setAcceptDrops)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAcceptDrops( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setAccessibleDescription)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAccessibleDescription(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWidget_setAccessibleName)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAccessibleName(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWidget_setAttribute)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAttribute( (Qt::WidgetAttribute )  (int) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QWidget_setAutoFillBackground)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAutoFillBackground( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setBackgroundRole)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setBackgroundRole( (QPalette::ColorRole )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setBaseSize)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setBaseSize( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QWidget_setContentsMargins)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setContentsMargins( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QWidget_setContextMenuPolicy)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setContextMenuPolicy( (Qt::ContextMenuPolicy )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setCursor)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->setCursor(* (QCursor *) RING_API_GETCPOINTER(2,"QCursor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QCursor"));
}


RING_FUNC(ring_QWidget_setFixedHeight)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFixedHeight( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setFixedSize)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFixedSize( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QWidget_setFixedWidth)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFixedWidth( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setFocus)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFocus( (Qt::FocusReason )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setFocusPolicy)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFocusPolicy( (Qt::FocusPolicy )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setFocusProxy)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFocusProxy((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QWidget_setFont)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->setFont(* (QFont *) RING_API_GETCPOINTER(2,"QFont"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QFont"));
}


RING_FUNC(ring_QWidget_setForegroundRole)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setForegroundRole( (QPalette::ColorRole )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setGeometry)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setGeometry( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QWidget_setGraphicsEffect)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setGraphicsEffect((QGraphicsEffect *) RING_API_GETCPOINTER(2,"QGraphicsEffect"));
}


RING_FUNC(ring_QWidget_setInputMethodHints)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setInputMethodHints( (Qt::InputMethodHint )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setLayout)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLayout((QLayout *) RING_API_GETCPOINTER(2,"QLayout"));
}


RING_FUNC(ring_QWidget_setLayoutDirection)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLayoutDirection( (Qt::LayoutDirection )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setLocale)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->setLocale(* (QLocale *) RING_API_GETCPOINTER(2,"QLocale"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QLocale"));
}


RING_FUNC(ring_QWidget_setMask)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->setMask(* (QBitmap *) RING_API_GETCPOINTER(2,"QBitmap"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QBitmap"));
}


RING_FUNC(ring_QWidget_setMaximumHeight)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMaximumHeight( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setMaximumSize)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMaximumSize( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QWidget_setMaximumWidth)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMaximumWidth( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setMinimumHeight)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMinimumHeight( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setMinimumSize)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMinimumSize( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QWidget_setMinimumWidth)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMinimumWidth( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setMouseTracking)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMouseTracking( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setPalette)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->setPalette(* (QPalette *) RING_API_GETCPOINTER(2,"QPalette"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPalette"));
}


RING_FUNC(ring_QWidget_setParent)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setParent((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QWidget_setShortcutAutoRepeat)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setShortcutAutoRepeat( (int ) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QWidget_setShortcutEnabled)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setShortcutEnabled( (int ) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QWidget_setSizeIncrement)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSizeIncrement( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QWidget_setSizePolicy)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSizePolicy( (QSizePolicy::Policy )  (int) RING_API_GETNUMBER(2), (QSizePolicy::Policy )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QWidget_setStatusTip)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStatusTip(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWidget_setStyle)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStyle((QStyle *) RING_API_GETCPOINTER(2,"QStyle"));
}


RING_FUNC(ring_QWidget_setToolTip)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setToolTip(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWidget_setUpdatesEnabled)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUpdatesEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setWhatsThis)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWhatsThis(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWidget_setWindowFilePath)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowFilePath(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWidget_setWindowFlags)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowFlags( (Qt::WindowType )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setWindowIcon)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->setWindowIcon(* (QIcon *) RING_API_GETCPOINTER(2,"QIcon"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QIcon"));
}


RING_FUNC(ring_QWidget_setWindowIconText)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowIconText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWidget_setWindowModality)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowModality( (Qt::WindowModality )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setWindowOpacity)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowOpacity( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setWindowRole)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowRole(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWidget_setWindowState)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowState( (Qt::WindowState )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_size)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->size();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QWidget_sizeIncrement)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->sizeIncrement();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QWidget_sizePolicy)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QSizePolicy *pValue ; 
		pValue = (QSizePolicy *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QSizePolicy)) ;
		*pValue = pObject->sizePolicy();
		RING_API_RETCPOINTER(pValue,"QSizePolicy");
	}
}


RING_FUNC(ring_QWidget_stackUnder)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->stackUnder((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QWidget_statusTip)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETSTRING(pObject->statusTip().toStdString().c_str());
}


RING_FUNC(ring_QWidget_style)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETCPOINTER(pObject->style(),"QStyle");
}


RING_FUNC(ring_QWidget_styleSheet)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETSTRING(pObject->styleSheet().toStdString().c_str());
}


RING_FUNC(ring_QWidget_testAttribute)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->testAttribute( (Qt::WidgetAttribute )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QWidget_toolTip)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETSTRING(pObject->toolTip().toStdString().c_str());
}


RING_FUNC(ring_QWidget_underMouse)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->underMouse());
}


RING_FUNC(ring_QWidget_ungrabGesture)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->ungrabGesture( (Qt::GestureType )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_unsetCursor)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->unsetCursor();
}


RING_FUNC(ring_QWidget_unsetLayoutDirection)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->unsetLayoutDirection();
}


RING_FUNC(ring_QWidget_unsetLocale)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->unsetLocale();
}


RING_FUNC(ring_QWidget_update)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->update( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QWidget_updateGeometry)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->updateGeometry();
}


RING_FUNC(ring_QWidget_updatesEnabled)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->updatesEnabled());
}


RING_FUNC(ring_QWidget_visibleRegion)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QRegion *pValue ; 
		pValue = new QRegion() ;
		*pValue = pObject->visibleRegion();
		RING_API_RETCPOINTER(pValue,"QRegion");
	}
}


RING_FUNC(ring_QWidget_whatsThis)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETSTRING(pObject->whatsThis().toStdString().c_str());
}


RING_FUNC(ring_QWidget_width)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->width());
}


RING_FUNC(ring_QWidget_winId)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->winId());
}


RING_FUNC(ring_QWidget_window)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETCPOINTER(pObject->window(),"QWidget");
}


RING_FUNC(ring_QWidget_windowFilePath)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETSTRING(pObject->windowFilePath().toStdString().c_str());
}


RING_FUNC(ring_QWidget_windowFlags)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->windowFlags());
}


RING_FUNC(ring_QWidget_windowHandle)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETCPOINTER(pObject->windowHandle(),"QWindow");
}


RING_FUNC(ring_QWidget_windowIcon)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	{
		QIcon *pValue ; 
		pValue = new QIcon() ;
		*pValue = pObject->windowIcon();
		RING_API_RETCPOINTER(pValue,"QIcon");
	}
}


RING_FUNC(ring_QWidget_windowIconText)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETSTRING(pObject->windowIconText().toStdString().c_str());
}


RING_FUNC(ring_QWidget_windowModality)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->windowModality());
}


RING_FUNC(ring_QWidget_windowOpacity)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->windowOpacity());
}


RING_FUNC(ring_QWidget_windowRole)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETSTRING(pObject->windowRole().toStdString().c_str());
}


RING_FUNC(ring_QWidget_windowState)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->windowState());
}


RING_FUNC(ring_QWidget_windowTitle)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETSTRING(pObject->windowTitle().toStdString().c_str());
}


RING_FUNC(ring_QWidget_windowType)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->windowType());
}


RING_FUNC(ring_QWidget_x)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->x());
}


RING_FUNC(ring_QWidget_y)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->y());
}


RING_FUNC(ring_QWidget_close)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETNUMBER(pObject->close());
}


RING_FUNC(ring_QWidget_hide)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->hide();
}


RING_FUNC(ring_QWidget_lower)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->lower();
}


RING_FUNC(ring_QWidget_raise)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->raise();
}


RING_FUNC(ring_QWidget_setDisabled)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDisabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setEnabled)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setEnabled( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setHidden)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHidden( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setStyleSheet)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStyleSheet(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWidget_setWindowModified)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowModified( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWidget_setWindowTitle)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowTitle(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWidget_show)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->show();
}


RING_FUNC(ring_QWidget_showFullScreen)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->showFullScreen();
}


RING_FUNC(ring_QWidget_showMaximized)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->showMaximized();
}


RING_FUNC(ring_QWidget_showMinimized)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->showMinimized();
}


RING_FUNC(ring_QWidget_showNormal)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	pObject->showNormal();
}


RING_FUNC(ring_QWidget_find)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->find( (int ) RING_API_GETNUMBER(2)),"QWidget");
}


RING_FUNC(ring_QWidget_keyboardGrabber)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETCPOINTER(pObject->keyboardGrabber(),"QWidget");
}


RING_FUNC(ring_QWidget_mouseGrabber)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	RING_API_RETCPOINTER(pObject->mouseGrabber(),"QWidget");
}


RING_FUNC(ring_QWidget_setTabOrder)
{
	QWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabOrder((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),(QWidget *) RING_API_GETCPOINTER(3,"QWidget"));
}


RING_FUNC(ring_QLabel_alignment)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	RING_API_RETNUMBER(pObject->alignment());
}


RING_FUNC(ring_QLabel_buddy)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	RING_API_RETCPOINTER(pObject->buddy(),"QWidget");
}


RING_FUNC(ring_QLabel_hasScaledContents)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	RING_API_RETNUMBER(pObject->hasScaledContents());
}


RING_FUNC(ring_QLabel_hasSelectedText)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	RING_API_RETNUMBER(pObject->hasSelectedText());
}


RING_FUNC(ring_QLabel_indent)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	RING_API_RETNUMBER(pObject->indent());
}


RING_FUNC(ring_QLabel_margin)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	RING_API_RETNUMBER(pObject->margin());
}


RING_FUNC(ring_QLabel_movie)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	RING_API_RETCPOINTER(pObject->movie(),"QMovie");
}


RING_FUNC(ring_QLabel_openExternalLinks)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	RING_API_RETNUMBER(pObject->openExternalLinks());
}


RING_FUNC(ring_QLabel_picture)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	RING_API_RETCPOINTER(pObject->picture(),"QPicture");
}


RING_FUNC(ring_QLabel_pixmap)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	RING_API_RETCPOINTER(pObject->pixmap(),"QPixmap");
}


RING_FUNC(ring_QLabel_selectedText)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	RING_API_RETSTRING(pObject->selectedText().toStdString().c_str());
}


RING_FUNC(ring_QLabel_selectionStart)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	RING_API_RETNUMBER(pObject->selectionStart());
}


RING_FUNC(ring_QLabel_setAlignment)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAlignment( (Qt::AlignmentFlag)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLabel_setBuddy)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setBuddy((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QLabel_setIndent)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setIndent( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLabel_setMargin)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMargin( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLabel_setOpenExternalLinks)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOpenExternalLinks( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLabel_setScaledContents)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setScaledContents( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLabel_setSelection)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSelection( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QLabel_setTextFormat)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTextFormat( (Qt::TextFormat)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLabel_setTextInteractionFlags)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTextInteractionFlags( (Qt::TextInteractionFlag )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLabel_setWordWrap)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWordWrap( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLabel_text)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	RING_API_RETSTRING(pObject->text().toStdString().c_str());
}


RING_FUNC(ring_QLabel_textFormat)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	RING_API_RETNUMBER(pObject->textFormat());
}


RING_FUNC(ring_QLabel_textInteractionFlags)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	RING_API_RETNUMBER(pObject->textInteractionFlags());
}


RING_FUNC(ring_QLabel_wordWrap)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	RING_API_RETNUMBER(pObject->wordWrap());
}


RING_FUNC(ring_QLabel_clear)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	pObject->clear();
}


RING_FUNC(ring_QLabel_setMovie)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMovie((QMovie *) RING_API_GETCPOINTER(2,"QMovie"));
}


RING_FUNC(ring_QLabel_setNum)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNum( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLabel_setPicture)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	pObject->setPicture(* (QPicture *) RING_API_GETCPOINTER(2,"QPicture"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPicture"));
}


RING_FUNC(ring_QLabel_setPixmap)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	pObject->setPixmap(* (QPixmap *) RING_API_GETCPOINTER(2,"QPixmap"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPixmap"));
}


RING_FUNC(ring_QLabel_setText)
{
	QLabel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPushButton_setText)
{
	GPushButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPushButton *) RING_API_GETCPOINTER(1,"QPushButton");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPushButton_setClickEvent)
{
	GPushButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPushButton *) RING_API_GETCPOINTER(1,"QPushButton");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setClickEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPushButton_setIcon)
{
	GPushButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPushButton *) RING_API_GETCPOINTER(1,"QPushButton");
	pObject->setIcon(* (QIcon *) RING_API_GETCPOINTER(2,"QIcon"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QIcon"));
}


RING_FUNC(ring_QPushButton_setIconSize)
{
	GPushButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPushButton *) RING_API_GETCPOINTER(1,"QPushButton");
	pObject->setIconSize(* (QSize *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QSize"));
}


RING_FUNC(ring_QPushButton_getClickEvent)
{
	GPushButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPushButton *) RING_API_GETCPOINTER(1,"QPushButton");
	RING_API_RETSTRING(pObject->getClickEvent());
}


RING_FUNC(ring_QBitmap_clear)
{
	QBitmap *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBitmap *) RING_API_GETCPOINTER(1,"QBitmap");
	pObject->clear();
}


RING_FUNC(ring_QBitmap_swap)
{
	QBitmap *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBitmap *) RING_API_GETCPOINTER(1,"QBitmap");
	pObject->swap(* (QBitmap *) RING_API_GETCPOINTER(2,"QBitmap"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QBitmap"));
}


RING_FUNC(ring_QBitmap_transformed)
{
	QBitmap *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBitmap *) RING_API_GETCPOINTER(1,"QBitmap");
	{
		QBitmap *pValue ; 
		pValue = new QBitmap() ;
		*pValue = pObject->transformed(* (QTransform *) RING_API_GETCPOINTER(2,"QTransform"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTransform"));
		RING_API_RETCPOINTER(pValue,"QBitmap");
	}
}


RING_FUNC(ring_QBitmap_fromData)
{
	QBitmap *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBitmap *) RING_API_GETCPOINTER(1,"QBitmap");
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QBitmap *pValue ; 
		pValue = new QBitmap() ;
		*pValue = pObject->fromData(* (QSize *) RING_API_GETCPOINTER(2,"QSize"),(uchar *) RING_API_GETCPOINTER(3,"uchar"), (QImage::Format )  (int) RING_API_GETNUMBER(4));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QSize"));
		RING_API_RETCPOINTER(pValue,"QBitmap");
	}
}


RING_FUNC(ring_QBitmap_fromImage)
{
	QBitmap *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBitmap *) RING_API_GETCPOINTER(1,"QBitmap");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QBitmap *pValue ; 
		pValue = new QBitmap() ;
		*pValue = pObject->fromImage(* (QImage *) RING_API_GETCPOINTER(2,"QImage"), (Qt::ImageConversionFlags )  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QImage"));
		RING_API_RETCPOINTER(pValue,"QBitmap");
	}
}


RING_FUNC(ring_QPixmap_copy)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->copy( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
		RING_API_RETCPOINTER(pValue,"QPixmap");
	}
}


RING_FUNC(ring_QPixmap_scaled)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->scaled( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (Qt::AspectRatioMode )  (int) RING_API_GETNUMBER(4), (Qt::TransformationMode )  (int) RING_API_GETNUMBER(5));
		RING_API_RETCPOINTER(pValue,"QPixmap");
	}
}


RING_FUNC(ring_QPixmap_width)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	RING_API_RETNUMBER(pObject->width());
}


RING_FUNC(ring_QPixmap_height)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	RING_API_RETNUMBER(pObject->height());
}


RING_FUNC(ring_QPixmap_createMaskFromColor)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QBitmap *pValue ; 
		pValue = new QBitmap() ;
		*pValue = pObject->createMaskFromColor(* (QColor *) RING_API_GETCPOINTER(2,"QColor"), (Qt::MaskMode)  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QColor"));
		RING_API_RETCPOINTER(pValue,"QBitmap");
	}
}


RING_FUNC(ring_QPixmap_mask)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	{
		QBitmap *pValue ; 
		pValue = new QBitmap() ;
		*pValue = pObject->mask();
		RING_API_RETCPOINTER(pValue,"QBitmap");
	}
}


RING_FUNC(ring_QPixmap_setMask)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	pObject->setMask(* (QBitmap *) RING_API_GETCPOINTER(2,"QBitmap"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QBitmap"));
}


RING_FUNC(ring_QPixmap_fill)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	pObject->fill(* (QColor *) RING_API_GETCPOINTER(2,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QColor"));
}


RING_FUNC(ring_QPixmap_fromImage)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->fromImage(* (QImage *) RING_API_GETCPOINTER(2,"QImage"), (Qt::ImageConversionFlags)  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QImage"));
		RING_API_RETCPOINTER(pValue,"QPixmap");
	}
}


RING_FUNC(ring_QPixmap_load)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->load(RING_API_GETSTRING(2),RING_API_GETSTRING(3), (Qt::ImageConversionFlags)  (int) RING_API_GETNUMBER(4)));
}


RING_FUNC(ring_QPixmap_cacheKey)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	RING_API_RETNUMBER(pObject->cacheKey());
}


RING_FUNC(ring_QPixmap_convertFromImage)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->convertFromImage(* (QImage  *) RING_API_GETCPOINTER(2,"QImage"), (Qt::ImageConversionFlags )  (int) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QImage"));
}


RING_FUNC(ring_QPixmap_copy_2)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->copy(* (QRect  *) RING_API_GETCPOINTER(2,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QRect"));
		RING_API_RETCPOINTER(pValue,"QPixmap");
	}
}


RING_FUNC(ring_QPixmap_createHeuristicMask)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QBitmap *pValue ; 
		pValue = new QBitmap() ;
		*pValue = pObject->createHeuristicMask( (bool ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QBitmap");
	}
}


RING_FUNC(ring_QPixmap_depth)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	RING_API_RETNUMBER(pObject->depth());
}


RING_FUNC(ring_QPixmap_detach)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	pObject->detach();
}


RING_FUNC(ring_QPixmap_devicePixelRatio)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	RING_API_RETNUMBER(pObject->devicePixelRatio());
}


RING_FUNC(ring_QPixmap_hasAlpha)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	RING_API_RETNUMBER(pObject->hasAlpha());
}


RING_FUNC(ring_QPixmap_hasAlphaChannel)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	RING_API_RETNUMBER(pObject->hasAlphaChannel());
}


RING_FUNC(ring_QPixmap_isNull)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QPixmap_isQBitmap)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	RING_API_RETNUMBER(pObject->isQBitmap());
}


RING_FUNC(ring_QPixmap_loadFromData)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->loadFromData((uchar *) RING_API_GETCPOINTER(2,"uchar"),* (uint  *) RING_API_GETCPOINTER(3,"uint"),RING_API_GETSTRING(4), (Qt::ImageConversionFlags )  (int) RING_API_GETNUMBER(5)));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"uint"));
}


RING_FUNC(ring_QPixmap_loadFromData_2)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->loadFromData(* (QByteArray  *) RING_API_GETCPOINTER(2,"QByteArray"),RING_API_GETSTRING(3), (Qt::ImageConversionFlags )  (int) RING_API_GETNUMBER(4)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QByteArray"));
}


RING_FUNC(ring_QPixmap_rect)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->rect();
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QPixmap_save)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->save(RING_API_GETSTRING(2),RING_API_GETSTRING(3), (int ) RING_API_GETNUMBER(4)));
}


RING_FUNC(ring_QPixmap_save_2)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->save((QIODevice *) RING_API_GETCPOINTER(2,"QIODevice"),RING_API_GETSTRING(3), (int ) RING_API_GETNUMBER(4)));
}


RING_FUNC(ring_QPixmap_scaled_2)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->scaled(* (QSize  *) RING_API_GETCPOINTER(2,"QSize"), (Qt::AspectRatioMode )  (int) RING_API_GETNUMBER(3), (Qt::TransformationMode )  (int) RING_API_GETNUMBER(4));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QSize"));
		RING_API_RETCPOINTER(pValue,"QPixmap");
	}
}


RING_FUNC(ring_QPixmap_scaledToHeight)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->scaledToHeight( (int ) RING_API_GETNUMBER(2), (Qt::TransformationMode )  (int) RING_API_GETNUMBER(3));
		RING_API_RETCPOINTER(pValue,"QPixmap");
	}
}


RING_FUNC(ring_QPixmap_scaledToWidth)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->scaledToWidth( (int ) RING_API_GETNUMBER(2), (Qt::TransformationMode )  (int) RING_API_GETNUMBER(3));
		RING_API_RETCPOINTER(pValue,"QPixmap");
	}
}


RING_FUNC(ring_QPixmap_scroll)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 8 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(8) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->scroll( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5), (int ) RING_API_GETNUMBER(6), (int ) RING_API_GETNUMBER(7),(QRegion *) RING_API_GETCPOINTER(8,"QRegion"));
}


RING_FUNC(ring_QPixmap_scroll_2)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->scroll( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3),* (QRect  *) RING_API_GETCPOINTER(4,"QRect"),(QRegion *) RING_API_GETCPOINTER(5,"QRegion"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"QRect"));
}


RING_FUNC(ring_QPixmap_setDevicePixelRatio)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDevicePixelRatio( (qreal ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPixmap_size)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->size();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QPixmap_swap)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	pObject->swap(* (QPixmap  *) RING_API_GETCPOINTER(2,"QPixmap"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPixmap"));
}


RING_FUNC(ring_QPixmap_toImage)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	{
		QImage *pValue ; 
		pValue = new QImage() ;
		*pValue = pObject->toImage();
		RING_API_RETCPOINTER(pValue,"QImage");
	}
}


RING_FUNC(ring_QPixmap_transformed)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->transformed(* (QTransform  *) RING_API_GETCPOINTER(2,"QTransform"), (Qt::TransformationMode )  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTransform"));
		RING_API_RETCPOINTER(pValue,"QPixmap");
	}
}


RING_FUNC(ring_QPixmap_transformed_2)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->transformed(* (QMatrix  *) RING_API_GETCPOINTER(2,"QMatrix"), (Qt::TransformationMode )  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QMatrix"));
		RING_API_RETCPOINTER(pValue,"QPixmap");
	}
}


RING_FUNC(ring_QPixmap_defaultDepth)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	RING_API_RETNUMBER(pObject->defaultDepth());
}


RING_FUNC(ring_QPixmap_fromImage_2)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->fromImage(* (QImage  *) RING_API_GETCPOINTER(2,"QImage"), (Qt::ImageConversionFlags )  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QImage"));
		RING_API_RETCPOINTER(pValue,"QPixmap");
	}
}


RING_FUNC(ring_QPixmap_fromImageReader)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->fromImageReader((QImageReader *) RING_API_GETCPOINTER(2,"QImageReader"), (Qt::ImageConversionFlags )  (int) RING_API_GETNUMBER(3));
		RING_API_RETCPOINTER(pValue,"QPixmap");
	}
}


RING_FUNC(ring_QPixmap_trueMatrix)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QTransform *pValue ; 
		pValue = (QTransform *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QTransform)) ;
		*pValue = pObject->trueMatrix(* (QTransform  *) RING_API_GETCPOINTER(2,"QTransform"), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTransform"));
		RING_API_RETCPOINTER(pValue,"QTransform");
	}
}


RING_FUNC(ring_QPixmap_trueMatrix_2)
{
	QPixmap *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QMatrix *pValue ; 
		pValue = (QMatrix *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QMatrix)) ;
		*pValue = pObject->trueMatrix(* (QMatrix  *) RING_API_GETCPOINTER(2,"QMatrix"), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QMatrix"));
		RING_API_RETCPOINTER(pValue,"QMatrix");
	}
}


RING_FUNC(ring_QLineEdit_alignment)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETNUMBER(pObject->alignment());
}


RING_FUNC(ring_QLineEdit_backspace)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	pObject->backspace();
}


RING_FUNC(ring_QLineEdit_completer)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETCPOINTER(pObject->completer(),"QCompleter");
}


RING_FUNC(ring_QLineEdit_createStandardContextMenu)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETCPOINTER(pObject->createStandardContextMenu(),"QMenu");
}


RING_FUNC(ring_QLineEdit_cursorBackward)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->cursorBackward( (bool ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QLineEdit_cursorForward)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->cursorForward( (bool ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QLineEdit_cursorMoveStyle)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETNUMBER(pObject->cursorMoveStyle());
}


RING_FUNC(ring_QLineEdit_cursorPosition)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETNUMBER(pObject->cursorPosition());
}


RING_FUNC(ring_QLineEdit_cursorPositionAt)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETNUMBER(pObject->cursorPositionAt(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
}


RING_FUNC(ring_QLineEdit_cursorWordBackward)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->cursorWordBackward( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLineEdit_cursorWordForward)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->cursorWordForward( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLineEdit_del)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	pObject->del();
}


RING_FUNC(ring_QLineEdit_deselect)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	pObject->deselect();
}


RING_FUNC(ring_QLineEdit_displayText)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETSTRING(pObject->displayText().toStdString().c_str());
}


RING_FUNC(ring_QLineEdit_dragEnabled)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETNUMBER(pObject->dragEnabled());
}


RING_FUNC(ring_QLineEdit_echoMode)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETNUMBER(pObject->echoMode());
}


RING_FUNC(ring_QLineEdit_end)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->end( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLineEdit_getTextMargins)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->getTextMargins(RING_API_GETINTPOINTER(2),RING_API_GETINTPOINTER(3),RING_API_GETINTPOINTER(4),RING_API_GETINTPOINTER(5));
	RING_API_ACCEPTINTVALUE(1) ;
	RING_API_ACCEPTINTVALUE(2) ;
	RING_API_ACCEPTINTVALUE(3) ;
	RING_API_ACCEPTINTVALUE(4) ;
}


RING_FUNC(ring_QLineEdit_hasAcceptableInput)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETNUMBER(pObject->hasAcceptableInput());
}


RING_FUNC(ring_QLineEdit_hasFrame)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETNUMBER(pObject->hasFrame());
}


RING_FUNC(ring_QLineEdit_hasSelectedText)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETNUMBER(pObject->hasSelectedText());
}


RING_FUNC(ring_QLineEdit_home)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->home( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLineEdit_inputMask)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETSTRING(pObject->inputMask().toStdString().c_str());
}


RING_FUNC(ring_QLineEdit_insert)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insert(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QLineEdit_isModified)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETNUMBER(pObject->isModified());
}


RING_FUNC(ring_QLineEdit_isReadOnly)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETNUMBER(pObject->isReadOnly());
}


RING_FUNC(ring_QLineEdit_isRedoAvailable)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETNUMBER(pObject->isRedoAvailable());
}


RING_FUNC(ring_QLineEdit_isUndoAvailable)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETNUMBER(pObject->isUndoAvailable());
}


RING_FUNC(ring_QLineEdit_maxLength)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETNUMBER(pObject->maxLength());
}


RING_FUNC(ring_QLineEdit_placeholderText)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETSTRING(pObject->placeholderText().toStdString().c_str());
}


RING_FUNC(ring_QLineEdit_selectedText)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETSTRING(pObject->selectedText().toStdString().c_str());
}


RING_FUNC(ring_QLineEdit_selectionStart)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETNUMBER(pObject->selectionStart());
}


RING_FUNC(ring_QLineEdit_setAlignment)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAlignment( (Qt::AlignmentFlag )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLineEdit_setCompleter)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCompleter((QCompleter *) RING_API_GETCPOINTER(2,"QCompleter"));
}


RING_FUNC(ring_QLineEdit_setCursorMoveStyle)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCursorMoveStyle( (Qt::CursorMoveStyle )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLineEdit_setCursorPosition)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCursorPosition( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLineEdit_setDragEnabled)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDragEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLineEdit_setEchoMode)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setEchoMode( (QLineEdit::EchoMode)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLineEdit_setFrame)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFrame( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLineEdit_setInputMask)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setInputMask(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QLineEdit_setMaxLength)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMaxLength( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLineEdit_setModified)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setModified( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLineEdit_setPlaceholderText)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPlaceholderText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QLineEdit_setReadOnly)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setReadOnly( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLineEdit_setSelection)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSelection( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QLineEdit_setTextMargins)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTextMargins( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QLineEdit_setValidator)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setValidator((QValidator *) RING_API_GETCPOINTER(2,"QValidator"));
}


RING_FUNC(ring_QLineEdit_text)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETSTRING(pObject->text().toStdString().c_str());
}


RING_FUNC(ring_QLineEdit_textMargins)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	{
		QMargins *pValue ; 
		pValue = (QMargins *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QMargins)) ;
		*pValue = pObject->textMargins();
		RING_API_RETCPOINTER(pValue,"QMargins");
	}
}


RING_FUNC(ring_QLineEdit_validator)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETCPOINTER(pObject->validator(),"QValidator");
}


RING_FUNC(ring_QLineEdit_clear)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	pObject->clear();
}


RING_FUNC(ring_QLineEdit_copy)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	pObject->copy();
}


RING_FUNC(ring_QLineEdit_cut)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	pObject->cut();
}


RING_FUNC(ring_QLineEdit_paste)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	pObject->paste();
}


RING_FUNC(ring_QLineEdit_redo)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	pObject->redo();
}


RING_FUNC(ring_QLineEdit_selectAll)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	pObject->selectAll();
}


RING_FUNC(ring_QLineEdit_setText)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QLineEdit_undo)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	pObject->undo();
}


RING_FUNC(ring_QLineEdit_setTextChangedEvent)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTextChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QLineEdit_setcursorPositionChangedEvent)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcursorPositionChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QLineEdit_seteditingFinishedEvent)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->seteditingFinishedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QLineEdit_setreturnPressedEvent)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setreturnPressedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QLineEdit_setselectionChangedEvent)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setselectionChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QLineEdit_settextEditedEvent)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->settextEditedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QLineEdit_getTextChangedEvent)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETSTRING(pObject->getTextChangedEvent());
}


RING_FUNC(ring_QLineEdit_getcursorPositionChangedEvent)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETSTRING(pObject->getcursorPositionChangedEvent());
}


RING_FUNC(ring_QLineEdit_geteditingFinishedEvent)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETSTRING(pObject->geteditingFinishedEvent());
}


RING_FUNC(ring_QLineEdit_getreturnPressedEvent)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETSTRING(pObject->getreturnPressedEvent());
}


RING_FUNC(ring_QLineEdit_getselectionChangedEvent)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETSTRING(pObject->getselectionChangedEvent());
}


RING_FUNC(ring_QLineEdit_gettextEditedEvent)
{
	GLineEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"QLineEdit");
	RING_API_RETSTRING(pObject->gettextEditedEvent());
}


RING_FUNC(ring_QVBoxLayout_addWidget)
{
	QVBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVBoxLayout *) RING_API_GETCPOINTER(1,"QVBoxLayout");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QVBoxLayout_addLayout)
{
	QVBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVBoxLayout *) RING_API_GETCPOINTER(1,"QVBoxLayout");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addLayout((QLayout *) RING_API_GETCPOINTER(2,"QLayout"));
}


RING_FUNC(ring_QHBoxLayout_addWidget)
{
	QHBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QHBoxLayout *) RING_API_GETCPOINTER(1,"QHBoxLayout");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QHBoxLayout_addLayout)
{
	QHBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QHBoxLayout *) RING_API_GETCPOINTER(1,"QHBoxLayout");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addLayout((QLayout *) RING_API_GETCPOINTER(2,"QLayout"));
}


RING_FUNC(ring_QTextEdit_acceptRichText)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETNUMBER(pObject->acceptRichText());
}


RING_FUNC(ring_QTextEdit_alignment)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETNUMBER(pObject->alignment());
}


RING_FUNC(ring_QTextEdit_anchorAt)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETSTRING(pObject->anchorAt(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint")).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
}


RING_FUNC(ring_QTextEdit_canPaste)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETNUMBER(pObject->canPaste());
}


RING_FUNC(ring_QTextEdit_currentCharFormat)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	{
		QTextCharFormat *pValue ; 
		pValue = new QTextCharFormat() ;
		*pValue = pObject->currentCharFormat();
		RING_API_RETCPOINTER(pValue,"QTextCharFormat");
	}
}


RING_FUNC(ring_QTextEdit_currentFont)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	{
		QFont *pValue ; 
		pValue = new QFont() ;
		*pValue = pObject->currentFont();
		RING_API_RETCPOINTER(pValue,"QFont");
	}
}


RING_FUNC(ring_QTextEdit_cursorForPosition)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	{
		QTextCursor *pValue ; 
		pValue = new QTextCursor() ;
		*pValue = pObject->cursorForPosition(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
		RING_API_RETCPOINTER(pValue,"QTextCursor");
	}
}


RING_FUNC(ring_QTextEdit_cursorRect)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->cursorRect();
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QTextEdit_cursorWidth)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETNUMBER(pObject->cursorWidth());
}


RING_FUNC(ring_QTextEdit_document)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETCPOINTER(pObject->document(),"QTextDocument");
}


RING_FUNC(ring_QTextEdit_documentTitle)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETSTRING(pObject->documentTitle().toStdString().c_str());
}


RING_FUNC(ring_QTextEdit_ensureCursorVisible)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	pObject->ensureCursorVisible();
}


RING_FUNC(ring_QTextEdit_find)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->find(RING_API_GETSTRING(2), (QTextDocument::FindFlag)  (int) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QTextEdit_fontFamily)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETSTRING(pObject->fontFamily().toStdString().c_str());
}


RING_FUNC(ring_QTextEdit_fontItalic)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETNUMBER(pObject->fontItalic());
}


RING_FUNC(ring_QTextEdit_fontPointSize)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETNUMBER(pObject->fontPointSize());
}


RING_FUNC(ring_QTextEdit_fontUnderline)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETNUMBER(pObject->fontUnderline());
}


RING_FUNC(ring_QTextEdit_fontWeight)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETNUMBER(pObject->fontWeight());
}


RING_FUNC(ring_QTextEdit_isReadOnly)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETNUMBER(pObject->isReadOnly());
}


RING_FUNC(ring_QTextEdit_isUndoRedoEnabled)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETNUMBER(pObject->isUndoRedoEnabled());
}


RING_FUNC(ring_QTextEdit_lineWrapColumnOrWidth)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETNUMBER(pObject->lineWrapColumnOrWidth());
}


RING_FUNC(ring_QTextEdit_loadResource)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->loadResource( (int) RING_API_GETNUMBER(2),* (QUrl *) RING_API_GETCPOINTER(3,"QUrl"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QUrl"));
		RING_API_RETCPOINTER(pValue,"QVariant");
	}
}


RING_FUNC(ring_QTextEdit_mergeCurrentCharFormat)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	pObject->mergeCurrentCharFormat(* (QTextCharFormat *) RING_API_GETCPOINTER(2,"QTextCharFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTextCharFormat"));
}


RING_FUNC(ring_QTextEdit_moveCursor)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->moveCursor( (QTextCursor::MoveOperation )  (int) RING_API_GETNUMBER(2), (QTextCursor::MoveMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTextEdit_overwriteMode)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETNUMBER(pObject->overwriteMode());
}


RING_FUNC(ring_QTextEdit_print)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->print((QPrinter *) RING_API_GETCPOINTER(2,"QPrinter"));
}


RING_FUNC(ring_QTextEdit_setAcceptRichText)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAcceptRichText( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_setCurrentCharFormat)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	pObject->setCurrentCharFormat(* (QTextCharFormat *) RING_API_GETCPOINTER(2,"QTextCharFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTextCharFormat"));
}


RING_FUNC(ring_QTextEdit_setCursorWidth)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCursorWidth( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_setDocument)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDocument((QTextDocument *) RING_API_GETCPOINTER(2,"QTextDocument"));
}


RING_FUNC(ring_QTextEdit_setDocumentTitle)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDocumentTitle(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextEdit_setLineWrapColumnOrWidth)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLineWrapColumnOrWidth( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_setLineWrapMode)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLineWrapMode( (QTextEdit::LineWrapMode)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_setOverwriteMode)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOverwriteMode( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_setReadOnly)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setReadOnly( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_setTabChangesFocus)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabChangesFocus( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_setTabStopWidth)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabStopWidth( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_setTextCursor)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	pObject->setTextCursor(* (QTextCursor *) RING_API_GETCPOINTER(2,"QTextCursor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTextCursor"));
}


RING_FUNC(ring_QTextEdit_setTextInteractionFlags)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTextInteractionFlags( (Qt::TextInteractionFlag )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_setUndoRedoEnabled)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUndoRedoEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_setWordWrapMode)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWordWrapMode( (QTextOption::WrapMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_tabChangesFocus)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETNUMBER(pObject->tabChangesFocus());
}


RING_FUNC(ring_QTextEdit_tabStopWidth)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETNUMBER(pObject->tabStopWidth());
}


RING_FUNC(ring_QTextEdit_textBackgroundColor)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->textBackgroundColor();
		RING_API_RETCPOINTER(pValue,"QColor");
	}
}


RING_FUNC(ring_QTextEdit_textColor)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->textColor();
		RING_API_RETCPOINTER(pValue,"QColor");
	}
}


RING_FUNC(ring_QTextEdit_textCursor)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	{
		QTextCursor *pValue ; 
		pValue = new QTextCursor() ;
		*pValue = pObject->textCursor();
		RING_API_RETCPOINTER(pValue,"QTextCursor");
	}
}


RING_FUNC(ring_QTextEdit_textInteractionFlags)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETNUMBER(pObject->textInteractionFlags());
}


RING_FUNC(ring_QTextEdit_toHtml)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETSTRING(pObject->toHtml().toStdString().c_str());
}


RING_FUNC(ring_QTextEdit_toPlainText)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETSTRING(pObject->toPlainText().toStdString().c_str());
}


RING_FUNC(ring_QTextEdit_wordWrapMode)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETNUMBER(pObject->wordWrapMode());
}


RING_FUNC(ring_QTextEdit_append)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->append(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextEdit_clear)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	pObject->clear();
}


RING_FUNC(ring_QTextEdit_copy)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	pObject->copy();
}


RING_FUNC(ring_QTextEdit_cut)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	pObject->cut();
}


RING_FUNC(ring_QTextEdit_insertHtml)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertHtml(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextEdit_insertPlainText)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertPlainText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextEdit_paste)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	pObject->paste();
}


RING_FUNC(ring_QTextEdit_redo)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	pObject->redo();
}


RING_FUNC(ring_QTextEdit_scrollToAnchor)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->scrollToAnchor(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextEdit_selectAll)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	pObject->selectAll();
}


RING_FUNC(ring_QTextEdit_setAlignment)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAlignment( (Qt::AlignmentFlag )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_setCurrentFont)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	pObject->setCurrentFont(* (QFont *) RING_API_GETCPOINTER(2,"QFont"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QFont"));
}


RING_FUNC(ring_QTextEdit_setFontFamily)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontFamily(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextEdit_setFontItalic)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontItalic( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_setFontPointSize)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontPointSize( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_setFontUnderline)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontUnderline( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_setFontWeight)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontWeight( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_setHtml)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHtml(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextEdit_setPlainText)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPlainText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextEdit_setText)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextEdit_setTextBackgroundColor)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	pObject->setTextBackgroundColor(* (QColor *) RING_API_GETCPOINTER(2,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QColor"));
}


RING_FUNC(ring_QTextEdit_setTextColor)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	pObject->setTextColor(* (QColor *) RING_API_GETCPOINTER(2,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QColor"));
}


RING_FUNC(ring_QTextEdit_undo)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	pObject->undo();
}


RING_FUNC(ring_QTextEdit_zoomIn)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->zoomIn( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_zoomOut)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->zoomOut( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextEdit_setcopyAvailableEvent)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcopyAvailableEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextEdit_setcurrentCharFormatChangedEvent)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcurrentCharFormatChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextEdit_setcursorPositionChangedEvent)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcursorPositionChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextEdit_setredoAvailableEvent)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setredoAvailableEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextEdit_setselectionChangedEvent)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setselectionChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextEdit_settextChangedEvent)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->settextChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextEdit_setundoAvailableEvent)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setundoAvailableEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextEdit_getcopyAvailableEvent)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETSTRING(pObject->getcopyAvailableEvent());
}


RING_FUNC(ring_QTextEdit_getcurrentCharFormatChangedEvent)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETSTRING(pObject->getcurrentCharFormatChangedEvent());
}


RING_FUNC(ring_QTextEdit_getcursorPositionChangedEvent)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETSTRING(pObject->getcursorPositionChangedEvent());
}


RING_FUNC(ring_QTextEdit_getredoAvailableEvent)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETSTRING(pObject->getredoAvailableEvent());
}


RING_FUNC(ring_QTextEdit_getselectionChangedEvent)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETSTRING(pObject->getselectionChangedEvent());
}


RING_FUNC(ring_QTextEdit_gettextChangedEvent)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETSTRING(pObject->gettextChangedEvent());
}


RING_FUNC(ring_QTextEdit_getundoAvailableEvent)
{
	GTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit");
	RING_API_RETSTRING(pObject->getundoAvailableEvent());
}

RING_FUNC(ring_QTextEdit_cyanline)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}

	QTextEdit *editor;
	editor = (QTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit *");

	QTextEdit::ExtraSelection highlight;
	highlight.cursor = editor->textCursor();
	highlight.format.setProperty(QTextFormat::FullWidthSelection, true);
	highlight.format.setBackground( Qt::cyan );

	QList<QTextEdit::ExtraSelection> extras;
	extras << highlight;
	editor->setExtraSelections( extras );
}
RING_FUNC(ring_QTextEdit_setactivelinecolor)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}

	QTextEdit *editor;
	editor = (QTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit *");

	QTextEdit::ExtraSelection highlight;
	highlight.cursor = editor->textCursor();
	highlight.format.setProperty(QTextFormat::FullWidthSelection, true);
	highlight.format.setBackground( * (QColor *) RING_API_GETCPOINTER(2,"QColor") );

	QList<QTextEdit::ExtraSelection> extras;
	extras << highlight;
	editor->setExtraSelections( extras );
}

RING_FUNC(ring_QListWidget_addItem)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addItem(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QListWidget_count)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	RING_API_RETNUMBER(pObject->count());
}


RING_FUNC(ring_QListWidget_currentRow)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	RING_API_RETNUMBER(pObject->currentRow());
}


RING_FUNC(ring_QListWidget_editItem)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->editItem((QListWidgetItem *) RING_API_GETCPOINTER(2,"QListWidgetItem"));
}


RING_FUNC(ring_QListWidget_insertItem)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertItem( (int) RING_API_GETNUMBER(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QListWidget_isSortingEnabled)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	RING_API_RETNUMBER(pObject->isSortingEnabled());
}


RING_FUNC(ring_QListWidget_item)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->item( (int ) RING_API_GETNUMBER(2)),"QListWidgetItem");
}


RING_FUNC(ring_QListWidget_itemAt)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->itemAt( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3)),"QListWidgetItem");
}


RING_FUNC(ring_QListWidget_itemWidget)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->itemWidget((QListWidgetItem *) RING_API_GETCPOINTER(2,"QListWidgetItem")),"QWidget");
}


RING_FUNC(ring_QListWidget_openPersistentEditor)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->openPersistentEditor((QListWidgetItem *) RING_API_GETCPOINTER(2,"QListWidgetItem"));
}


RING_FUNC(ring_QListWidget_removeItemWidget)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeItemWidget((QListWidgetItem *) RING_API_GETCPOINTER(2,"QListWidgetItem"));
}


RING_FUNC(ring_QListWidget_row)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->row((QListWidgetItem *) RING_API_GETCPOINTER(2,"QListWidgetItem")));
}


RING_FUNC(ring_QListWidget_setCurrentItem)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCurrentItem((QListWidgetItem *) RING_API_GETCPOINTER(2,"QListWidgetItem"), (QItemSelectionModel::SelectionFlag )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QListWidget_setCurrentRow)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCurrentRow( (int ) RING_API_GETNUMBER(2), (QItemSelectionModel::SelectionFlag )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QListWidget_setItemWidget)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setItemWidget((QListWidgetItem *) RING_API_GETCPOINTER(2,"QListWidgetItem"),(QWidget *) RING_API_GETCPOINTER(3,"QWidget"));
}


RING_FUNC(ring_QListWidget_setSortingEnabled)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSortingEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListWidget_sortItems)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->sortItems( (Qt::SortOrder )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListWidget_takeItem)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->takeItem( (int ) RING_API_GETNUMBER(2)),"QListWidgetItem");
}


RING_FUNC(ring_QListWidget_visualItemRect)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->visualItemRect((QListWidgetItem *) RING_API_GETCPOINTER(2,"QListWidgetItem"));
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QListWidget_clear)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	pObject->clear();
}


RING_FUNC(ring_QListWidget_scrollToItem)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->scrollToItem((QListWidgetItem *) RING_API_GETCPOINTER(2,"QListWidgetItem"), (QAbstractItemView::ScrollHint )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QListWidget_setcurrentItemChangedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcurrentItemChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QListWidget_setcurrentRowChangedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcurrentRowChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QListWidget_setcurrentTextChangedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcurrentTextChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QListWidget_setitemActivatedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemActivatedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QListWidget_setitemChangedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QListWidget_setitemClickedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemClickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QListWidget_setitemDoubleClickedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemDoubleClickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QListWidget_setitemEnteredEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemEnteredEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QListWidget_setitemPressedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemPressedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QListWidget_setitemSelectionChangedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemSelectionChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QListWidget_getcurrentItemChangedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	RING_API_RETSTRING(pObject->getcurrentItemChangedEvent());
}


RING_FUNC(ring_QListWidget_getcurrentRowChangedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	RING_API_RETSTRING(pObject->getcurrentRowChangedEvent());
}


RING_FUNC(ring_QListWidget_getcurrentTextChangedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	RING_API_RETSTRING(pObject->getcurrentTextChangedEvent());
}


RING_FUNC(ring_QListWidget_getitemActivatedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	RING_API_RETSTRING(pObject->getitemActivatedEvent());
}


RING_FUNC(ring_QListWidget_getitemChangedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	RING_API_RETSTRING(pObject->getitemChangedEvent());
}


RING_FUNC(ring_QListWidget_getitemClickedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	RING_API_RETSTRING(pObject->getitemClickedEvent());
}


RING_FUNC(ring_QListWidget_getitemDoubleClickedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	RING_API_RETSTRING(pObject->getitemDoubleClickedEvent());
}


RING_FUNC(ring_QListWidget_getitemEnteredEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	RING_API_RETSTRING(pObject->getitemEnteredEvent());
}


RING_FUNC(ring_QListWidget_getitemPressedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	RING_API_RETSTRING(pObject->getitemPressedEvent());
}


RING_FUNC(ring_QListWidget_getitemSelectionChangedEvent)
{
	GListWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GListWidget *) RING_API_GETCPOINTER(1,"QListWidget");
	RING_API_RETSTRING(pObject->getitemSelectionChangedEvent());
}


RING_FUNC(ring_QTreeView_allColumnsShowFocus)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETNUMBER(pObject->allColumnsShowFocus());
}


RING_FUNC(ring_QTreeView_autoExpandDelay)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETNUMBER(pObject->autoExpandDelay());
}


RING_FUNC(ring_QTreeView_columnAt)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->columnAt( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTreeView_columnViewportPosition)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->columnViewportPosition( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTreeView_columnWidth)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->columnWidth( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTreeView_expandsOnDoubleClick)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETNUMBER(pObject->expandsOnDoubleClick());
}


RING_FUNC(ring_QTreeView_header)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETCPOINTER(pObject->header(),"QHeaderView");
}


RING_FUNC(ring_QTreeView_indentation)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETNUMBER(pObject->indentation());
}


RING_FUNC(ring_QTreeView_indexAbove)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	{
		QModelIndex *pValue ; 
		pValue = (QModelIndex *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QModelIndex)) ;
		*pValue = pObject->indexAbove(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
		RING_API_RETCPOINTER(pValue,"QModelIndex");
	}
}


RING_FUNC(ring_QTreeView_indexBelow)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	{
		QModelIndex *pValue ; 
		pValue = (QModelIndex *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QModelIndex)) ;
		*pValue = pObject->indexBelow(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
		RING_API_RETCPOINTER(pValue,"QModelIndex");
	}
}


RING_FUNC(ring_QTreeView_isAnimated)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETNUMBER(pObject->isAnimated());
}


RING_FUNC(ring_QTreeView_isColumnHidden)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isColumnHidden( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTreeView_isExpanded)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETNUMBER(pObject->isExpanded(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QTreeView_isFirstColumnSpanned)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isFirstColumnSpanned( (int ) RING_API_GETNUMBER(2),* (QModelIndex *) RING_API_GETCPOINTER(3,"QModelIndex")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QTreeView_isHeaderHidden)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETNUMBER(pObject->isHeaderHidden());
}


RING_FUNC(ring_QTreeView_isRowHidden)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isRowHidden( (int ) RING_API_GETNUMBER(2),* (QModelIndex *) RING_API_GETCPOINTER(3,"QModelIndex")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QTreeView_isSortingEnabled)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETNUMBER(pObject->isSortingEnabled());
}


RING_FUNC(ring_QTreeView_itemsExpandable)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETNUMBER(pObject->itemsExpandable());
}


RING_FUNC(ring_QTreeView_rootIsDecorated)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETNUMBER(pObject->rootIsDecorated());
}


RING_FUNC(ring_QTreeView_setAllColumnsShowFocus)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAllColumnsShowFocus( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeView_setAnimated)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAnimated( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeView_setAutoExpandDelay)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAutoExpandDelay( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeView_setColumnHidden)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setColumnHidden( (int ) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTreeView_setColumnWidth)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setColumnWidth( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTreeView_setExpanded)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setExpanded(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"), (bool ) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QTreeView_setExpandsOnDoubleClick)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setExpandsOnDoubleClick( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeView_setFirstColumnSpanned)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFirstColumnSpanned( (int ) RING_API_GETNUMBER(2),* (QModelIndex *) RING_API_GETCPOINTER(3,"QModelIndex"), (bool ) RING_API_GETNUMBER(4));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QTreeView_setHeader)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHeader((QHeaderView *) RING_API_GETCPOINTER(2,"QHeaderView"));
}


RING_FUNC(ring_QTreeView_setHeaderHidden)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHeaderHidden( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeView_setIndentation)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setIndentation( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeView_setItemsExpandable)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setItemsExpandable( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeView_setRootIsDecorated)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRootIsDecorated( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeView_setRowHidden)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRowHidden( (int ) RING_API_GETNUMBER(2),* (QModelIndex *) RING_API_GETCPOINTER(3,"QModelIndex"), (bool ) RING_API_GETNUMBER(4));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QTreeView_setSortingEnabled)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSortingEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeView_setUniformRowHeights)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUniformRowHeights( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeView_setWordWrap)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWordWrap( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeView_sortByColumn)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->sortByColumn( (int ) RING_API_GETNUMBER(2), (Qt::SortOrder )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTreeView_uniformRowHeights)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETNUMBER(pObject->uniformRowHeights());
}


RING_FUNC(ring_QTreeView_wordWrap)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETNUMBER(pObject->wordWrap());
}


RING_FUNC(ring_QTreeView_dataChanged)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	pObject->dataChanged(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"),* (QModelIndex *) RING_API_GETCPOINTER(3,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QModelIndex"));
}


RING_FUNC(ring_QTreeView_indexAt)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	{
		QModelIndex *pValue ; 
		pValue = (QModelIndex *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QModelIndex)) ;
		*pValue = pObject->indexAt(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
		RING_API_RETCPOINTER(pValue,"QModelIndex");
	}
}


RING_FUNC(ring_QTreeView_keyboardSearch)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->keyboardSearch(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeView_reset)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	pObject->reset();
}


RING_FUNC(ring_QTreeView_scrollTo)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->scrollTo(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"), (QAbstractItemView::ScrollHint)  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QTreeView_selectAll)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	pObject->selectAll();
}


RING_FUNC(ring_QTreeView_setModel)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setModel((QAbstractItemModel *) RING_API_GETCPOINTER(2,"QAbstractItemModel"));
}


RING_FUNC(ring_QTreeView_setRootIndex)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	pObject->setRootIndex(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QTreeView_setSelectionModel)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSelectionModel((QItemSelectionModel *) RING_API_GETCPOINTER(2,"QItemSelectionModel"));
}


RING_FUNC(ring_QTreeView_visualRect)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->visualRect(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QTreeView_collapse)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	pObject->collapse(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QTreeView_collapseAll)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	pObject->collapseAll();
}


RING_FUNC(ring_QTreeView_expand)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	pObject->expand(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QTreeView_expandAll)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	pObject->expandAll();
}


RING_FUNC(ring_QTreeView_expandToDepth)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->expandToDepth( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeView_hideColumn)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->hideColumn( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeView_resizeColumnToContents)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->resizeColumnToContents( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeView_showColumn)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->showColumn( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeView_setcollapsedEvent)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcollapsedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeView_setexpandedEvent)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setexpandedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeView_setactivatedEvent)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setactivatedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeView_setclickedEvent)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setclickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeView_setdoubleClickedEvent)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setdoubleClickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeView_setenteredEvent)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setenteredEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeView_setpressedEvent)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setpressedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeView_setviewportEnteredEvent)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setviewportEnteredEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeView_getcollapsedEvent)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETSTRING(pObject->getcollapsedEvent());
}


RING_FUNC(ring_QTreeView_getexpandedEvent)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETSTRING(pObject->getexpandedEvent());
}


RING_FUNC(ring_QTreeView_getactivatedEvent)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETSTRING(pObject->getactivatedEvent());
}


RING_FUNC(ring_QTreeView_getclickedEvent)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETSTRING(pObject->getclickedEvent());
}


RING_FUNC(ring_QTreeView_getdoubleClickedEvent)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETSTRING(pObject->getdoubleClickedEvent());
}


RING_FUNC(ring_QTreeView_getenteredEvent)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETSTRING(pObject->getenteredEvent());
}


RING_FUNC(ring_QTreeView_getpressedEvent)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETSTRING(pObject->getpressedEvent());
}


RING_FUNC(ring_QTreeView_getviewportEnteredEvent)
{
	GTreeView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeView *) RING_API_GETCPOINTER(1,"QTreeView");
	RING_API_RETSTRING(pObject->getviewportEnteredEvent());
}


RING_FUNC(ring_QDir_currentPath)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	RING_API_RETSTRING(pObject->currentPath().toStdString().c_str());
}


RING_FUNC(ring_QDir_setNameFilters)
{
	QDir *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
	pObject->setNameFilters(* (QStringList *) RING_API_GETCPOINTER(2,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QStringList"));
}


RING_FUNC(ring_QFileSystemModel_fileIcon)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	{
		QIcon *pValue ; 
		pValue = new QIcon() ;
		*pValue = pObject->fileIcon(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
		RING_API_RETCPOINTER(pValue,"QIcon");
	}
}


RING_FUNC(ring_QFileSystemModel_fileInfo)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	{
		QFileInfo *pValue ; 
		pValue = new QFileInfo() ;
		*pValue = pObject->fileInfo(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
		RING_API_RETCPOINTER(pValue,"QFileInfo");
	}
}


RING_FUNC(ring_QFileSystemModel_fileName)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETSTRING(pObject->fileName(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex")).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QFileSystemModel_filePath)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETSTRING(pObject->filePath(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex")).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QFileSystemModel_filter)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETNUMBER(pObject->filter());
}


RING_FUNC(ring_QFileSystemModel_iconProvider)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETCPOINTER(pObject->iconProvider(),"QFileIconProvider");
}


RING_FUNC(ring_QFileSystemModel_index)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QModelIndex *pValue ; 
		pValue = (QModelIndex *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QModelIndex)) ;
		*pValue = pObject->index(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3));
		RING_API_RETCPOINTER(pValue,"QModelIndex");
	}
}


RING_FUNC(ring_QFileSystemModel_isDir)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETNUMBER(pObject->isDir(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QFileSystemModel_isReadOnly)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETNUMBER(pObject->isReadOnly());
}


RING_FUNC(ring_QFileSystemModel_lastModified)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->lastModified(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
		RING_API_RETCPOINTER(pValue,"QDateTime");
	}
}


RING_FUNC(ring_QFileSystemModel_mkdir)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QModelIndex *pValue ; 
		pValue = (QModelIndex *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QModelIndex)) ;
		*pValue = pObject->mkdir(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"),RING_API_GETSTRING(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
		RING_API_RETCPOINTER(pValue,"QModelIndex");
	}
}


RING_FUNC(ring_QFileSystemModel_myComputer)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->myComputer( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QVariant");
	}
}


RING_FUNC(ring_QFileSystemModel_nameFilterDisables)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETNUMBER(pObject->nameFilterDisables());
}


RING_FUNC(ring_QFileSystemModel_nameFilters)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->nameFilters();
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QFileSystemModel_permissions)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETNUMBER(pObject->permissions(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QFileSystemModel_remove)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETNUMBER(pObject->remove(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QFileSystemModel_resolveSymlinks)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETNUMBER(pObject->resolveSymlinks());
}


RING_FUNC(ring_QFileSystemModel_rmdir)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETNUMBER(pObject->rmdir(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QFileSystemModel_rootDirectory)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	{
		QDir *pValue ; 
		pValue = new QDir() ;
		*pValue = pObject->rootDirectory();
		RING_API_RETCPOINTER(pValue,"QDir");
	}
}


RING_FUNC(ring_QFileSystemModel_rootPath)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETSTRING(pObject->rootPath().toStdString().c_str());
}


RING_FUNC(ring_QFileSystemModel_setFilter)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFilter( (QDir::Filter )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFileSystemModel_setIconProvider)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setIconProvider((QFileIconProvider *) RING_API_GETCPOINTER(2,"QFileIconProvider"));
}


RING_FUNC(ring_QFileSystemModel_setNameFilterDisables)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNameFilterDisables( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFileSystemModel_setNameFilters)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	pObject->setNameFilters(* (QStringList *) RING_API_GETCPOINTER(2,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QStringList"));
}


RING_FUNC(ring_QFileSystemModel_setReadOnly)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setReadOnly( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFileSystemModel_setResolveSymlinks)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setResolveSymlinks( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFileSystemModel_setRootPath)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QModelIndex *pValue ; 
		pValue = (QModelIndex *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QModelIndex)) ;
		*pValue = pObject->setRootPath(RING_API_GETSTRING(2));
		RING_API_RETCPOINTER(pValue,"QModelIndex");
	}
}


RING_FUNC(ring_QFileSystemModel_size)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETNUMBER(pObject->size(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QFileSystemModel_type)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETSTRING(pObject->type(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex")).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QFileSystemModel_canFetchMore)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETNUMBER(pObject->canFetchMore(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QFileSystemModel_columnCount)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETNUMBER(pObject->columnCount());
}


RING_FUNC(ring_QFileSystemModel_data)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->data(* (QModelIndex  *) RING_API_GETCPOINTER(2,"QModelIndex"), (int ) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
		RING_API_RETCPOINTER(pValue,"QVariant");
	}
}


RING_FUNC(ring_QFileSystemModel_dropMimeData)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->dropMimeData((QMimeData *) RING_API_GETCPOINTER(2,"QMimeData"), (Qt::DropAction )  (int) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5),* (QModelIndex  *) RING_API_GETCPOINTER(6,"QModelIndex")));
	if (RING_API_ISCPOINTERNOTASSIGNED(5))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(5,"QModelIndex"));
}


RING_FUNC(ring_QFileSystemModel_fetchMore)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	pObject->fetchMore(* (QModelIndex  *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QFileSystemModel_flags)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETNUMBER(pObject->flags(* (QModelIndex  *) RING_API_GETCPOINTER(2,"QModelIndex")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QFileSystemModel_hasChildren)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETNUMBER(pObject->hasChildren(* (QModelIndex  *) RING_API_GETCPOINTER(2,"QModelIndex")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QFileSystemModel_headerData)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->headerData( (int ) RING_API_GETNUMBER(2), (Qt::Orientation )  (int) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4));
		RING_API_RETCPOINTER(pValue,"QVariant");
	}
}


RING_FUNC(ring_QFileSystemModel_mimeData)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETCPOINTER(pObject->mimeData(* (QModelIndexList  *) RING_API_GETCPOINTER(2,"QModelIndexList")),"QMimeData");
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndexList"));
}


RING_FUNC(ring_QFileSystemModel_mimeTypes)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->mimeTypes();
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QFileSystemModel_parent)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	{
		QModelIndex *pValue ; 
		pValue = (QModelIndex *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QModelIndex)) ;
		*pValue = pObject->parent(* (QModelIndex  *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
		RING_API_RETCPOINTER(pValue,"QModelIndex");
	}
}


RING_FUNC(ring_QFileSystemModel_rowCount)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETNUMBER(pObject->rowCount(* (QModelIndex  *) RING_API_GETCPOINTER(2,"QModelIndex")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QFileSystemModel_setData)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setData(* (QModelIndex  *) RING_API_GETCPOINTER(2,"QModelIndex"),* (QVariant  *) RING_API_GETCPOINTER(3,"QVariant"), (int ) RING_API_GETNUMBER(4)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QVariant"));
}


RING_FUNC(ring_QFileSystemModel_sort)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->sort( (int ) RING_API_GETNUMBER(2), (Qt::SortOrder )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QFileSystemModel_supportedDropActions)
{
	QFileSystemModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
	RING_API_RETNUMBER(pObject->supportedDropActions());
}


RING_FUNC(ring_QTreeWidget_addTopLevelItem)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addTopLevelItem((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem"));
}


RING_FUNC(ring_QTreeWidget_closePersistentEditor)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->closePersistentEditor((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem"), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTreeWidget_columnCount)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETNUMBER(pObject->columnCount());
}


RING_FUNC(ring_QTreeWidget_currentColumn)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETNUMBER(pObject->currentColumn());
}


RING_FUNC(ring_QTreeWidget_currentItem)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETCPOINTER(pObject->currentItem(),"QTreeWidgetItem");
}


RING_FUNC(ring_QTreeWidget_editItem)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->editItem((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem"), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTreeWidget_headerItem)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETCPOINTER(pObject->headerItem(),"QTreeWidgetItem");
}


RING_FUNC(ring_QTreeWidget_indexOfTopLevelItem)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->indexOfTopLevelItem((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem")));
}


RING_FUNC(ring_QTreeWidget_insertTopLevelItem)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertTopLevelItem( (int ) RING_API_GETNUMBER(2),(QTreeWidgetItem *) RING_API_GETCPOINTER(3,"QTreeWidgetItem"));
}


RING_FUNC(ring_QTreeWidget_invisibleRootItem)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETCPOINTER(pObject->invisibleRootItem(),"QTreeWidgetItem");
}


RING_FUNC(ring_QTreeWidget_isFirstItemColumnSpanned)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isFirstItemColumnSpanned((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem")));
}


RING_FUNC(ring_QTreeWidget_itemAbove)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->itemAbove((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem")),"QTreeWidgetItem");
}


RING_FUNC(ring_QTreeWidget_itemAt)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->itemAt( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3)),"QTreeWidgetItem");
}


RING_FUNC(ring_QTreeWidget_itemBelow)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->itemBelow((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem")),"QTreeWidgetItem");
}


RING_FUNC(ring_QTreeWidget_itemWidget)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->itemWidget((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem"), (int ) RING_API_GETNUMBER(3)),"QWidget");
}


RING_FUNC(ring_QTreeWidget_openPersistentEditor)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->openPersistentEditor((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem"), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTreeWidget_removeItemWidget)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeItemWidget((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem"), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTreeWidget_setColumnCount)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setColumnCount( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeWidget_setCurrentItem)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCurrentItem((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem"), (QItemSelectionModel::SelectionFlag )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTreeWidget_setFirstItemColumnSpanned)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFirstItemColumnSpanned((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem"), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTreeWidget_setHeaderItem)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHeaderItem((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem"));
}


RING_FUNC(ring_QTreeWidget_setHeaderLabel)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHeaderLabel(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setHeaderLabels)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	pObject->setHeaderLabels(* (QStringList *) RING_API_GETCPOINTER(2,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QStringList"));
}


RING_FUNC(ring_QTreeWidget_setItemWidget)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setItemWidget((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem"), (int ) RING_API_GETNUMBER(3),(QWidget *) RING_API_GETCPOINTER(4,"QWidget"));
}


RING_FUNC(ring_QTreeWidget_sortColumn)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETNUMBER(pObject->sortColumn());
}


RING_FUNC(ring_QTreeWidget_sortItems)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->sortItems( (int ) RING_API_GETNUMBER(2), (Qt::SortOrder )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTreeWidget_takeTopLevelItem)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->takeTopLevelItem( (int ) RING_API_GETNUMBER(2)),"QTreeWidgetItem");
}


RING_FUNC(ring_QTreeWidget_topLevelItem)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->topLevelItem( (int ) RING_API_GETNUMBER(2)),"QTreeWidgetItem");
}


RING_FUNC(ring_QTreeWidget_topLevelItemCount)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETNUMBER(pObject->topLevelItemCount());
}


RING_FUNC(ring_QTreeWidget_visualItemRect)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->visualItemRect((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem"));
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QTreeWidget_setSelectionModel)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSelectionModel((QItemSelectionModel *) RING_API_GETCPOINTER(2,"QItemSelectionModel"));
}


RING_FUNC(ring_QTreeWidget_clear)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	pObject->clear();
}


RING_FUNC(ring_QTreeWidget_collapseItem)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->collapseItem((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem"));
}


RING_FUNC(ring_QTreeWidget_expandItem)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->expandItem((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem"));
}


RING_FUNC(ring_QTreeWidget_scrollToItem)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->scrollToItem((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem"), (QAbstractItemView::ScrollHint )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTreeWidget_setcollapsedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcollapsedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setexpandedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setexpandedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setactivatedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setactivatedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setclickedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setclickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setdoubleClickedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setdoubleClickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setenteredEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setenteredEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setpressedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setpressedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setviewportEnteredEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setviewportEnteredEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setcurrentItemChangedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcurrentItemChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setitemActivatedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemActivatedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setitemChangedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setitemClickedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemClickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setitemCollapsedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemCollapsedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setitemDoubleClickedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemDoubleClickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setitemEnteredEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemEnteredEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setitemExpandedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemExpandedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setitemPressedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemPressedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_setitemSelectionChangedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemSelectionChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTreeWidget_getcollapsedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getcollapsedEvent());
}


RING_FUNC(ring_QTreeWidget_getexpandedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getexpandedEvent());
}


RING_FUNC(ring_QTreeWidget_getactivatedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getactivatedEvent());
}


RING_FUNC(ring_QTreeWidget_getclickedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getclickedEvent());
}


RING_FUNC(ring_QTreeWidget_getdoubleClickedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getdoubleClickedEvent());
}


RING_FUNC(ring_QTreeWidget_getenteredEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getenteredEvent());
}


RING_FUNC(ring_QTreeWidget_getpressedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getpressedEvent());
}


RING_FUNC(ring_QTreeWidget_getviewportEnteredEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getviewportEnteredEvent());
}


RING_FUNC(ring_QTreeWidget_getcurrentItemChangedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getcurrentItemChangedEvent());
}


RING_FUNC(ring_QTreeWidget_getitemActivatedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getitemActivatedEvent());
}


RING_FUNC(ring_QTreeWidget_getitemChangedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getitemChangedEvent());
}


RING_FUNC(ring_QTreeWidget_getitemClickedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getitemClickedEvent());
}


RING_FUNC(ring_QTreeWidget_getitemCollapsedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getitemCollapsedEvent());
}


RING_FUNC(ring_QTreeWidget_getitemDoubleClickedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getitemDoubleClickedEvent());
}


RING_FUNC(ring_QTreeWidget_getitemEnteredEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getitemEnteredEvent());
}


RING_FUNC(ring_QTreeWidget_getitemExpandedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getitemExpandedEvent());
}


RING_FUNC(ring_QTreeWidget_getitemPressedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getitemPressedEvent());
}


RING_FUNC(ring_QTreeWidget_getitemSelectionChangedEvent)
{
	GTreeWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"QTreeWidget");
	RING_API_RETSTRING(pObject->getitemSelectionChangedEvent());
}


RING_FUNC(ring_QTreeWidgetItem_addChild)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addChild((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem"));
}


RING_FUNC(ring_QTreeWidgetItem_background)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QBrush *pValue ; 
		pValue = new QBrush() ;
		*pValue = pObject->background( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QBrush");
	}
}


RING_FUNC(ring_QTreeWidgetItem_checkState)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->checkState( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTreeWidgetItem_child)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->child( (int ) RING_API_GETNUMBER(2)),"QTreeWidgetItem");
}


RING_FUNC(ring_QTreeWidgetItem_childCount)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	RING_API_RETNUMBER(pObject->childCount());
}


RING_FUNC(ring_QTreeWidgetItem_childIndicatorPolicy)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	RING_API_RETNUMBER(pObject->childIndicatorPolicy());
}


RING_FUNC(ring_QTreeWidgetItem_clone)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	RING_API_RETCPOINTER(pObject->clone(),"QTreeWidgetItem");
}


RING_FUNC(ring_QTreeWidgetItem_columnCount)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	RING_API_RETNUMBER(pObject->columnCount());
}


RING_FUNC(ring_QTreeWidgetItem_data)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->data( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
		RING_API_RETCPOINTER(pValue,"QVariant");
	}
}


RING_FUNC(ring_QTreeWidgetItem_flags)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	RING_API_RETNUMBER(pObject->flags());
}


RING_FUNC(ring_QTreeWidgetItem_font)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QFont *pValue ; 
		pValue = new QFont() ;
		*pValue = pObject->font( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QFont");
	}
}


RING_FUNC(ring_QTreeWidgetItem_foreground)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QBrush *pValue ; 
		pValue = new QBrush() ;
		*pValue = pObject->foreground( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QBrush");
	}
}


RING_FUNC(ring_QTreeWidgetItem_icon)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QIcon *pValue ; 
		pValue = new QIcon() ;
		*pValue = pObject->icon( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QIcon");
	}
}


RING_FUNC(ring_QTreeWidgetItem_indexOfChild)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->indexOfChild((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem")));
}


RING_FUNC(ring_QTreeWidgetItem_insertChild)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertChild( (int ) RING_API_GETNUMBER(2),(QTreeWidgetItem *) RING_API_GETCPOINTER(3,"QTreeWidgetItem"));
}


RING_FUNC(ring_QTreeWidgetItem_isDisabled)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	RING_API_RETNUMBER(pObject->isDisabled());
}


RING_FUNC(ring_QTreeWidgetItem_isExpanded)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	RING_API_RETNUMBER(pObject->isExpanded());
}


RING_FUNC(ring_QTreeWidgetItem_isFirstColumnSpanned)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	RING_API_RETNUMBER(pObject->isFirstColumnSpanned());
}


RING_FUNC(ring_QTreeWidgetItem_isHidden)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	RING_API_RETNUMBER(pObject->isHidden());
}


RING_FUNC(ring_QTreeWidgetItem_isSelected)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	RING_API_RETNUMBER(pObject->isSelected());
}


RING_FUNC(ring_QTreeWidgetItem_parent)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	RING_API_RETCPOINTER(pObject->parent(),"QTreeWidgetItem");
}


RING_FUNC(ring_QTreeWidgetItem_read)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	pObject->read(* (QDataStream *) RING_API_GETCPOINTER(2,"QDataStream"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QDataStream"));
}


RING_FUNC(ring_QTreeWidgetItem_removeChild)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeChild((QTreeWidgetItem *) RING_API_GETCPOINTER(2,"QTreeWidgetItem"));
}


RING_FUNC(ring_QTreeWidgetItem_setBackground)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setBackground( (int ) RING_API_GETNUMBER(2),* (QBrush *) RING_API_GETCPOINTER(3,"QBrush"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QBrush"));
}


RING_FUNC(ring_QTreeWidgetItem_setCheckState)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCheckState( (int ) RING_API_GETNUMBER(2), (Qt::CheckState )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTreeWidgetItem_setChildIndicatorPolicy)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setChildIndicatorPolicy( (QTreeWidgetItem::ChildIndicatorPolicy )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeWidgetItem_setData)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setData( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3),* (QVariant *) RING_API_GETCPOINTER(4,"QVariant"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"QVariant"));
}


RING_FUNC(ring_QTreeWidgetItem_setDisabled)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDisabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeWidgetItem_setExpanded)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setExpanded( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeWidgetItem_setFirstColumnSpanned)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFirstColumnSpanned( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeWidgetItem_setFlags)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFlags( (Qt::ItemFlag )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeWidgetItem_setFont)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFont( (int ) RING_API_GETNUMBER(2),* (QFont *) RING_API_GETCPOINTER(3,"QFont"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QFont"));
}


RING_FUNC(ring_QTreeWidgetItem_setForeground)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setForeground( (int ) RING_API_GETNUMBER(2),* (QBrush *) RING_API_GETCPOINTER(3,"QBrush"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QBrush"));
}


RING_FUNC(ring_QTreeWidgetItem_setHidden)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHidden( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeWidgetItem_setIcon)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setIcon( (int ) RING_API_GETNUMBER(2),* (QIcon *) RING_API_GETCPOINTER(3,"QIcon"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QIcon"));
}


RING_FUNC(ring_QTreeWidgetItem_setSelected)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSelected( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTreeWidgetItem_setSizeHint)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSizeHint( (int ) RING_API_GETNUMBER(2),* (QSize *) RING_API_GETCPOINTER(3,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QSize"));
}


RING_FUNC(ring_QTreeWidgetItem_setStatusTip)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStatusTip( (int ) RING_API_GETNUMBER(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QTreeWidgetItem_setText)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setText( (int ) RING_API_GETNUMBER(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QTreeWidgetItem_setTextAlignment)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTextAlignment( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTreeWidgetItem_setToolTip)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setToolTip( (int ) RING_API_GETNUMBER(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QTreeWidgetItem_setWhatsThis)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWhatsThis( (int ) RING_API_GETNUMBER(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QTreeWidgetItem_sizeHint)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->sizeHint( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QTreeWidgetItem_sortChildren)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->sortChildren( (int ) RING_API_GETNUMBER(2), (Qt::SortOrder )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTreeWidgetItem_statusTip)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->statusTip( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QTreeWidgetItem_takeChild)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->takeChild( (int ) RING_API_GETNUMBER(2)),"QTreeWidgetItem");
}


RING_FUNC(ring_QTreeWidgetItem_text)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->text( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QTreeWidgetItem_textAlignment)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->textAlignment( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTreeWidgetItem_toolTip)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->toolTip( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QTreeWidgetItem_treeWidget)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	RING_API_RETCPOINTER(pObject->treeWidget(),"QTreeWidget");
}


RING_FUNC(ring_QTreeWidgetItem_type)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	RING_API_RETNUMBER(pObject->type());
}


RING_FUNC(ring_QTreeWidgetItem_whatsThis)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->whatsThis( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QTreeWidgetItem_write)
{
	QTreeWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
	pObject->write(* (QDataStream *) RING_API_GETCPOINTER(2,"QDataStream"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QDataStream"));
}

RING_FUNC(ring_QComboBox_addItem)
{
	QComboBox *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addItem(RING_API_GETSTRING(2),QVariant(RING_API_GETNUMBER(3)));
}

RING_FUNC(ring_QComboBox_completer)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETCPOINTER(pObject->completer(),"QCompleter");
}


RING_FUNC(ring_QComboBox_count)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETNUMBER(pObject->count());
}


RING_FUNC(ring_QComboBox_currentIndex)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETNUMBER(pObject->currentIndex());
}


RING_FUNC(ring_QComboBox_currentText)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETSTRING(pObject->currentText().toStdString().c_str());
}


RING_FUNC(ring_QComboBox_duplicatesEnabled)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETNUMBER(pObject->duplicatesEnabled());
}


RING_FUNC(ring_QComboBox_findData)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->findData(* (QVariant *) RING_API_GETCPOINTER(2,"QVariant"), (int ) RING_API_GETNUMBER(3), (Qt::MatchFlag )  (int) RING_API_GETNUMBER(4)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QVariant"));
}


RING_FUNC(ring_QComboBox_findText)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->findText(RING_API_GETSTRING(2), (Qt::MatchFlag )  (int) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QComboBox_hasFrame)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETNUMBER(pObject->hasFrame());
}


RING_FUNC(ring_QComboBox_hidePopup)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	pObject->hidePopup();
}


RING_FUNC(ring_QComboBox_iconSize)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->iconSize();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QComboBox_insertItem)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertItem( (int ) RING_API_GETNUMBER(2),RING_API_GETSTRING(3),* (QVariant *) RING_API_GETCPOINTER(4,"QVariant"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"QVariant"));
}


RING_FUNC(ring_QComboBox_insertSeparator)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertSeparator( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QComboBox_isEditable)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETNUMBER(pObject->isEditable());
}


RING_FUNC(ring_QComboBox_itemData)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->itemData( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
		RING_API_RETCPOINTER(pValue,"QVariant");
	}
}


RING_FUNC(ring_QComboBox_itemDelegate)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETCPOINTER(pObject->itemDelegate(),"QAbstractItemDelegate");
}


RING_FUNC(ring_QComboBox_itemIcon)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QIcon *pValue ; 
		pValue = new QIcon() ;
		*pValue = pObject->itemIcon( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QIcon");
	}
}


RING_FUNC(ring_QComboBox_itemText)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->itemText( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QComboBox_lineEdit)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETCPOINTER(pObject->lineEdit(),"QLineEdit");
}


RING_FUNC(ring_QComboBox_maxCount)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETNUMBER(pObject->maxCount());
}


RING_FUNC(ring_QComboBox_maxVisibleItems)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETNUMBER(pObject->maxVisibleItems());
}


RING_FUNC(ring_QComboBox_minimumContentsLength)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETNUMBER(pObject->minimumContentsLength());
}


RING_FUNC(ring_QComboBox_model)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETCPOINTER(pObject->model(),"QAbstractItemModel");
}


RING_FUNC(ring_QComboBox_modelColumn)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETNUMBER(pObject->modelColumn());
}


RING_FUNC(ring_QComboBox_removeItem)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeItem( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QComboBox_rootModelIndex)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	{
		QModelIndex *pValue ; 
		pValue = (QModelIndex *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QModelIndex)) ;
		*pValue = pObject->rootModelIndex();
		RING_API_RETCPOINTER(pValue,"QModelIndex");
	}
}


RING_FUNC(ring_QComboBox_setCompleter)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCompleter((QCompleter *) RING_API_GETCPOINTER(2,"QCompleter"));
}


RING_FUNC(ring_QComboBox_setDuplicatesEnabled)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDuplicatesEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QComboBox_setEditable)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setEditable( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QComboBox_setFrame)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFrame( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QComboBox_setIconSize)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	pObject->setIconSize(* (QSize *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QSize"));
}


RING_FUNC(ring_QComboBox_setItemData)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setItemData( (int ) RING_API_GETNUMBER(2),* (QVariant *) RING_API_GETCPOINTER(3,"QVariant"), (int ) RING_API_GETNUMBER(4));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QVariant"));
}


RING_FUNC(ring_QComboBox_setItemDelegate)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setItemDelegate((QAbstractItemDelegate *) RING_API_GETCPOINTER(2,"QAbstractItemDelegate"));
}


RING_FUNC(ring_QComboBox_setItemIcon)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setItemIcon( (int ) RING_API_GETNUMBER(2),* (QIcon *) RING_API_GETCPOINTER(3,"QIcon"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QIcon"));
}


RING_FUNC(ring_QComboBox_setItemText)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setItemText( (int ) RING_API_GETNUMBER(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QComboBox_setLineEdit)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLineEdit((QLineEdit *) RING_API_GETCPOINTER(2,"QLineEdit"));
}


RING_FUNC(ring_QComboBox_setMaxCount)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMaxCount( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QComboBox_setMaxVisibleItems)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMaxVisibleItems( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QComboBox_setMinimumContentsLength)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMinimumContentsLength( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QComboBox_setModel)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setModel((QAbstractItemModel *) RING_API_GETCPOINTER(2,"QAbstractItemModel"));
}


RING_FUNC(ring_QComboBox_setModelColumn)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setModelColumn( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QComboBox_setRootModelIndex)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	pObject->setRootModelIndex(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QComboBox_setValidator)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setValidator((QValidator *) RING_API_GETCPOINTER(2,"QValidator"));
}


RING_FUNC(ring_QComboBox_setView)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setView((QAbstractItemView *) RING_API_GETCPOINTER(2,"QAbstractItemView"));
}


RING_FUNC(ring_QComboBox_showPopup)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	pObject->showPopup();
}


RING_FUNC(ring_QComboBox_validator)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETCPOINTER(pObject->validator(),"QValidator");
}


RING_FUNC(ring_QComboBox_view)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETCPOINTER(pObject->view(),"QAbstractItemView");
}


RING_FUNC(ring_QComboBox_clear)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	pObject->clear();
}


RING_FUNC(ring_QComboBox_clearEditText)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	pObject->clearEditText();
}


RING_FUNC(ring_QComboBox_setCurrentIndex)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCurrentIndex( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QComboBox_setEditText)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setEditText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QComboBox_setactivatedEvent)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setactivatedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QComboBox_setcurrentIndexChangedEvent)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcurrentIndexChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QComboBox_seteditTextChangedEvent)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->seteditTextChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QComboBox_sethighlightedEvent)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->sethighlightedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QComboBox_getactivatedEvent)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETSTRING(pObject->getactivatedEvent());
}


RING_FUNC(ring_QComboBox_getcurrentIndexChangedEvent)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETSTRING(pObject->getcurrentIndexChangedEvent());
}


RING_FUNC(ring_QComboBox_geteditTextChangedEvent)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETSTRING(pObject->geteditTextChangedEvent());
}


RING_FUNC(ring_QComboBox_gethighlightedEvent)
{
	GComboBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GComboBox *) RING_API_GETCPOINTER(1,"QComboBox");
	RING_API_RETSTRING(pObject->gethighlightedEvent());
}


RING_FUNC(ring_QMenuBar_actionAt)
{
	QMenuBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
	RING_API_RETCPOINTER(pObject->actionAt(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint")),"QAction");
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
}


RING_FUNC(ring_QMenuBar_actionGeometry)
{
	QMenuBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->actionGeometry((QAction *) RING_API_GETCPOINTER(2,"QAction"));
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QMenuBar_activeAction)
{
	QMenuBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
	RING_API_RETCPOINTER(pObject->activeAction(),"QAction");
}


RING_FUNC(ring_QMenuBar_addAction)
{
	QMenuBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->addAction(RING_API_GETSTRING(2)),"QAction");
}


RING_FUNC(ring_QMenuBar_addMenu)
{
	QMenuBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->addMenu(RING_API_GETSTRING(2)),"QMenu");
}


RING_FUNC(ring_QMenuBar_addSeparator)
{
	QMenuBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
	RING_API_RETCPOINTER(pObject->addSeparator(),"QAction");
}


RING_FUNC(ring_QMenuBar_clear)
{
	QMenuBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
	pObject->clear();
}


RING_FUNC(ring_QMenuBar_cornerWidget)
{
	QMenuBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->cornerWidget( (Qt::Corner)  (int) RING_API_GETNUMBER(2)),"QWidget");
}


RING_FUNC(ring_QMenuBar_insertMenu)
{
	QMenuBar *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->insertMenu((QAction *) RING_API_GETCPOINTER(2,"QAction"),(QMenu *) RING_API_GETCPOINTER(3,"QMenu")),"QAction");
}


RING_FUNC(ring_QMenuBar_insertSeparator)
{
	QMenuBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->insertSeparator((QAction *) RING_API_GETCPOINTER(2,"QAction")),"QAction");
}


RING_FUNC(ring_QMenuBar_isDefaultUp)
{
	QMenuBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
	RING_API_RETNUMBER(pObject->isDefaultUp());
}


RING_FUNC(ring_QMenuBar_isNativeMenuBar)
{
	QMenuBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
	RING_API_RETNUMBER(pObject->isNativeMenuBar());
}


RING_FUNC(ring_QMenuBar_setActiveAction)
{
	QMenuBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setActiveAction((QAction *) RING_API_GETCPOINTER(2,"QAction"));
}


RING_FUNC(ring_QMenuBar_setCornerWidget)
{
	QMenuBar *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCornerWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"), (Qt::Corner)  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QMenuBar_setDefaultUp)
{
	QMenuBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDefaultUp( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMenuBar_setNativeMenuBar)
{
	QMenuBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNativeMenuBar( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMenu_actionAt)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	RING_API_RETCPOINTER(pObject->actionAt(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint")),"QAction");
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
}


RING_FUNC(ring_QMenu_actionGeometry)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->actionGeometry((QAction *) RING_API_GETCPOINTER(2,"QAction"));
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QMenu_activeAction)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	RING_API_RETCPOINTER(pObject->activeAction(),"QAction");
}


RING_FUNC(ring_QMenu_addAction)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addAction((QAction *) RING_API_GETCPOINTER(2,"QAction"));
}


RING_FUNC(ring_QMenu_addMenu)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->addMenu(RING_API_GETSTRING(2)),"QMenu");
}


RING_FUNC(ring_QMenu_addSeparator)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	RING_API_RETCPOINTER(pObject->addSeparator(),"QAction");
}


RING_FUNC(ring_QMenu_clear)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	pObject->clear();
}


RING_FUNC(ring_QMenu_defaultAction)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	RING_API_RETCPOINTER(pObject->defaultAction(),"QAction");
}


RING_FUNC(ring_QMenu_exec)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	RING_API_RETCPOINTER(pObject->exec(* (const QPoint  *) RING_API_GETCPOINTER(2,"const QPoint")),"QAction");
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
}


RING_FUNC(ring_QMenu_exec_2)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	RING_API_RETCPOINTER(pObject->exec(),"QAction");
}


RING_FUNC(ring_QMenu_exec_3)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->exec(* (const QPoint  *) RING_API_GETCPOINTER(2,"const QPoint"),(QAction *) RING_API_GETCPOINTER(3,"QAction")),"QAction");
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
}


RING_FUNC(ring_QMenu_hideTearOffMenu)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	pObject->hideTearOffMenu();
}


RING_FUNC(ring_QMenu_icon)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	{
		QIcon *pValue ; 
		pValue = new QIcon() ;
		*pValue = pObject->icon();
		RING_API_RETCPOINTER(pValue,"QIcon");
	}
}


RING_FUNC(ring_QMenu_insertMenu)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->insertMenu((QAction *) RING_API_GETCPOINTER(2,"QAction"),(QMenu *) RING_API_GETCPOINTER(3,"QMenu")),"QAction");
}


RING_FUNC(ring_QMenu_insertSeparator)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->insertSeparator((QAction *) RING_API_GETCPOINTER(2,"QAction")),"QAction");
}


RING_FUNC(ring_QMenu_isEmpty)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	RING_API_RETNUMBER(pObject->isEmpty());
}


RING_FUNC(ring_QMenu_isTearOffEnabled)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	RING_API_RETNUMBER(pObject->isTearOffEnabled());
}


RING_FUNC(ring_QMenu_isTearOffMenuVisible)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	RING_API_RETNUMBER(pObject->isTearOffMenuVisible());
}


RING_FUNC(ring_QMenu_menuAction)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	RING_API_RETCPOINTER(pObject->menuAction(),"QAction");
}


RING_FUNC(ring_QMenu_popup)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->popup(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"),(QAction *) RING_API_GETCPOINTER(3,"QAction"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
}


RING_FUNC(ring_QMenu_separatorsCollapsible)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	RING_API_RETNUMBER(pObject->separatorsCollapsible());
}


RING_FUNC(ring_QMenu_setActiveAction)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setActiveAction((QAction *) RING_API_GETCPOINTER(2,"QAction"));
}


RING_FUNC(ring_QMenu_setDefaultAction)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDefaultAction((QAction *) RING_API_GETCPOINTER(2,"QAction"));
}


RING_FUNC(ring_QMenu_setIcon)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	pObject->setIcon(* (QIcon *) RING_API_GETCPOINTER(2,"QIcon"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QIcon"));
}


RING_FUNC(ring_QMenu_setSeparatorsCollapsible)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSeparatorsCollapsible( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMenu_setTearOffEnabled)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTearOffEnabled( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMenu_setTitle)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTitle(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QMenu_title)
{
	QMenu *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
	RING_API_RETSTRING(pObject->title().toStdString().c_str());
}


RING_FUNC(ring_QToolBar_actionAt)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->actionAt( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3)),"QAction");
}


RING_FUNC(ring_QToolBar_addAction)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->addAction(RING_API_GETSTRING(2)),"QAction");
}


RING_FUNC(ring_QToolBar_addSeparator)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	RING_API_RETCPOINTER(pObject->addSeparator(),"QAction");
}


RING_FUNC(ring_QToolBar_addWidget)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->addWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget")),"QAction");
}


RING_FUNC(ring_QToolBar_allowedAreas)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	RING_API_RETNUMBER(pObject->allowedAreas());
}


RING_FUNC(ring_QToolBar_clear)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	pObject->clear();
}


RING_FUNC(ring_QToolBar_iconSize)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->iconSize();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QToolBar_insertSeparator)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->insertSeparator((QAction *) RING_API_GETCPOINTER(2,"QAction")),"QAction");
}


RING_FUNC(ring_QToolBar_insertWidget)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->insertWidget((QAction *) RING_API_GETCPOINTER(2,"QAction"),(QWidget *) RING_API_GETCPOINTER(3,"QWidget")),"QAction");
}


RING_FUNC(ring_QToolBar_isAreaAllowed)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isAreaAllowed( (Qt::ToolBarArea )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QToolBar_isFloatable)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	RING_API_RETNUMBER(pObject->isFloatable());
}


RING_FUNC(ring_QToolBar_isFloating)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	RING_API_RETNUMBER(pObject->isFloating());
}


RING_FUNC(ring_QToolBar_isMovable)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	RING_API_RETNUMBER(pObject->isMovable());
}


RING_FUNC(ring_QToolBar_orientation)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	RING_API_RETNUMBER(pObject->orientation());
}


RING_FUNC(ring_QToolBar_setAllowedAreas)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAllowedAreas( (Qt::ToolBarArea )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QToolBar_setFloatable)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFloatable( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QToolBar_setMovable)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMovable( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QToolBar_setOrientation)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOrientation( (Qt::Orientation )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QToolBar_toggleViewAction)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	RING_API_RETCPOINTER(pObject->toggleViewAction(),"QAction");
}


RING_FUNC(ring_QToolBar_toolButtonStyle)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	RING_API_RETNUMBER(pObject->toolButtonStyle());
}


RING_FUNC(ring_QToolBar_widgetForAction)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->widgetForAction((QAction *) RING_API_GETCPOINTER(2,"QAction")),"QWidget");
}


RING_FUNC(ring_QToolBar_setIconSize)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	pObject->setIconSize(* (QSize *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QSize"));
}


RING_FUNC(ring_QToolBar_setToolButtonStyle)
{
	QToolBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setToolButtonStyle( (Qt::ToolButtonStyle )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMainWindow_addDockWidget)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addDockWidget( (Qt::DockWidgetArea )  (int) RING_API_GETNUMBER(2),(QDockWidget *) RING_API_GETCPOINTER(3,"QDockWidget"), (Qt::Orientation )  (int) RING_API_GETNUMBER(4));
}


RING_FUNC(ring_QMainWindow_addToolBar)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->addToolBar(RING_API_GETSTRING(2)),"QToolBar");
}


RING_FUNC(ring_QMainWindow_addToolBar_2)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addToolBar( (Qt::ToolBarArea )  (int) RING_API_GETNUMBER(2),(QToolBar *) RING_API_GETCPOINTER(3,"QToolBar"));
}


RING_FUNC(ring_QMainWindow_addToolBarBreak)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addToolBarBreak( (Qt::ToolBarArea)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMainWindow_centralWidget)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	RING_API_RETCPOINTER(pObject->centralWidget(),"QWidget");
}


RING_FUNC(ring_QMainWindow_corner)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->corner( (Qt::Corner )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QMainWindow_createPopupMenu)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	RING_API_RETCPOINTER(pObject->createPopupMenu(),"QMenu");
}


RING_FUNC(ring_QMainWindow_dockOptions)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	RING_API_RETNUMBER(pObject->dockOptions());
}


RING_FUNC(ring_QMainWindow_dockWidgetArea)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->dockWidgetArea((QDockWidget *) RING_API_GETCPOINTER(2,"QDockWidget")));
}


RING_FUNC(ring_QMainWindow_documentMode)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	RING_API_RETNUMBER(pObject->documentMode());
}


RING_FUNC(ring_QMainWindow_iconSize)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->iconSize();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QMainWindow_insertToolBar)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertToolBar((QToolBar *) RING_API_GETCPOINTER(2,"QToolBar"),(QToolBar *) RING_API_GETCPOINTER(3,"QToolBar"));
}


RING_FUNC(ring_QMainWindow_insertToolBarBreak)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertToolBarBreak((QToolBar *) RING_API_GETCPOINTER(2,"QToolBar"));
}


RING_FUNC(ring_QMainWindow_isAnimated)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	RING_API_RETNUMBER(pObject->isAnimated());
}


RING_FUNC(ring_QMainWindow_isDockNestingEnabled)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	RING_API_RETNUMBER(pObject->isDockNestingEnabled());
}


RING_FUNC(ring_QMainWindow_menuBar)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	RING_API_RETCPOINTER(pObject->menuBar(),"QMenuBar");
}


RING_FUNC(ring_QMainWindow_menuWidget)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	RING_API_RETCPOINTER(pObject->menuWidget(),"QWidget");
}


RING_FUNC(ring_QMainWindow_removeDockWidget)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeDockWidget((QDockWidget *) RING_API_GETCPOINTER(2,"QDockWidget"));
}


RING_FUNC(ring_QMainWindow_removeToolBar)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeToolBar((QToolBar *) RING_API_GETCPOINTER(2,"QToolBar"));
}


RING_FUNC(ring_QMainWindow_removeToolBarBreak)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeToolBarBreak((QToolBar *) RING_API_GETCPOINTER(2,"QToolBar"));
}


RING_FUNC(ring_QMainWindow_restoreDockWidget)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->restoreDockWidget((QDockWidget *) RING_API_GETCPOINTER(2,"QDockWidget")));
}


RING_FUNC(ring_QMainWindow_restoreState)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->restoreState(* (QByteArray  *) RING_API_GETCPOINTER(2,"QByteArray"), (int ) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QByteArray"));
}


RING_FUNC(ring_QMainWindow_saveState)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->saveState( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QMainWindow_setCentralWidget)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCentralWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QMainWindow_setCorner)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCorner( (Qt::Corner )  (int) RING_API_GETNUMBER(2), (Qt::DockWidgetArea )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QMainWindow_setDockOptions)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDockOptions( (QMainWindow::DockOption )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMainWindow_setDocumentMode)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDocumentMode( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMainWindow_setIconSize)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	pObject->setIconSize(* (QSize *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QSize"));
}


RING_FUNC(ring_QMainWindow_setMenuBar)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMenuBar((QMenuBar *) RING_API_GETCPOINTER(2,"QMenuBar"));
}


RING_FUNC(ring_QMainWindow_setMenuWidget)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMenuWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QMainWindow_setStatusBar)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStatusBar((QStatusBar *) RING_API_GETCPOINTER(2,"QStatusBar"));
}


RING_FUNC(ring_QMainWindow_setTabPosition)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabPosition( (Qt::DockWidgetArea )  (int) RING_API_GETNUMBER(2), (QTabWidget::TabPosition )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QMainWindow_setTabShape)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabShape( (QTabWidget::TabShape )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMainWindow_setToolButtonStyle)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setToolButtonStyle( (Qt::ToolButtonStyle )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMainWindow_setUnifiedTitleAndToolBarOnMac)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUnifiedTitleAndToolBarOnMac( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMainWindow_splitDockWidget)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->splitDockWidget((QDockWidget *) RING_API_GETCPOINTER(2,"QDockWidget"),(QDockWidget *) RING_API_GETCPOINTER(3,"QDockWidget"), (Qt::Orientation )  (int) RING_API_GETNUMBER(4));
}


RING_FUNC(ring_QMainWindow_statusBar)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	RING_API_RETCPOINTER(pObject->statusBar(),"QStatusBar");
}


RING_FUNC(ring_QMainWindow_tabPosition)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->tabPosition( (Qt::DockWidgetArea )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QMainWindow_tabShape)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	RING_API_RETNUMBER(pObject->tabShape());
}


RING_FUNC(ring_QMainWindow_tabifyDockWidget)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->tabifyDockWidget((QDockWidget *) RING_API_GETCPOINTER(2,"QDockWidget"),(QDockWidget *) RING_API_GETCPOINTER(3,"QDockWidget"));
}


RING_FUNC(ring_QMainWindow_toolBarArea)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toolBarArea((QToolBar *) RING_API_GETCPOINTER(2,"QToolBar")));
}


RING_FUNC(ring_QMainWindow_toolBarBreak)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toolBarBreak((QToolBar *) RING_API_GETCPOINTER(2,"QToolBar")));
}


RING_FUNC(ring_QMainWindow_toolButtonStyle)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	RING_API_RETNUMBER(pObject->toolButtonStyle());
}


RING_FUNC(ring_QMainWindow_unifiedTitleAndToolBarOnMac)
{
	QMainWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
	RING_API_RETNUMBER(pObject->unifiedTitleAndToolBarOnMac());
}


RING_FUNC(ring_QStatusBar_addPermanentWidget)
{
	QStatusBar *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStatusBar *) RING_API_GETCPOINTER(1,"QStatusBar");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addPermanentWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QStatusBar_addWidget)
{
	QStatusBar *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStatusBar *) RING_API_GETCPOINTER(1,"QStatusBar");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QStatusBar_currentMessage)
{
	QStatusBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStatusBar *) RING_API_GETCPOINTER(1,"QStatusBar");
	RING_API_RETSTRING(pObject->currentMessage().toStdString().c_str());
}


RING_FUNC(ring_QStatusBar_insertPermanentWidget)
{
	QStatusBar *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStatusBar *) RING_API_GETCPOINTER(1,"QStatusBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->insertPermanentWidget( (int ) RING_API_GETNUMBER(2),(QWidget *) RING_API_GETCPOINTER(3,"QWidget"), (int ) RING_API_GETNUMBER(4)));
}


RING_FUNC(ring_QStatusBar_insertWidget)
{
	QStatusBar *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStatusBar *) RING_API_GETCPOINTER(1,"QStatusBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->insertWidget( (int ) RING_API_GETNUMBER(2),(QWidget *) RING_API_GETCPOINTER(3,"QWidget"), (int ) RING_API_GETNUMBER(4)));
}


RING_FUNC(ring_QStatusBar_isSizeGripEnabled)
{
	QStatusBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStatusBar *) RING_API_GETCPOINTER(1,"QStatusBar");
	RING_API_RETNUMBER(pObject->isSizeGripEnabled());
}


RING_FUNC(ring_QStatusBar_removeWidget)
{
	QStatusBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStatusBar *) RING_API_GETCPOINTER(1,"QStatusBar");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QStatusBar_setSizeGripEnabled)
{
	QStatusBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStatusBar *) RING_API_GETCPOINTER(1,"QStatusBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSizeGripEnabled( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QStatusBar_clearMessage)
{
	QStatusBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStatusBar *) RING_API_GETCPOINTER(1,"QStatusBar");
	pObject->clearMessage();
}


RING_FUNC(ring_QStatusBar_showMessage)
{
	QStatusBar *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStatusBar *) RING_API_GETCPOINTER(1,"QStatusBar");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->showMessage(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QDockWidget_allowedAreas)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	RING_API_RETNUMBER(pObject->allowedAreas());
}


RING_FUNC(ring_QDockWidget_features)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	RING_API_RETNUMBER(pObject->features());
}


RING_FUNC(ring_QDockWidget_isAreaAllowed)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isAreaAllowed( (Qt::DockWidgetArea )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QDockWidget_isFloating)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	RING_API_RETNUMBER(pObject->isFloating());
}


RING_FUNC(ring_QDockWidget_setAllowedAreas)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAllowedAreas( (Qt::DockWidgetArea )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDockWidget_setFeatures)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFeatures( (QDockWidget::DockWidgetFeature )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDockWidget_setFloating)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFloating( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDockWidget_setTitleBarWidget)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTitleBarWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QDockWidget_setWidget)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QDockWidget_titleBarWidget)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	RING_API_RETCPOINTER(pObject->titleBarWidget(),"QWidget");
}


RING_FUNC(ring_QDockWidget_toggleViewAction)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	RING_API_RETCPOINTER(pObject->toggleViewAction(),"QAction");
}


RING_FUNC(ring_QDockWidget_widget)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	RING_API_RETCPOINTER(pObject->widget(),"QWidget");
}


RING_FUNC(ring_QDockWidget_allowedAreasChanged)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->allowedAreasChanged( (Qt::DockWidgetArea )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDockWidget_dockLocationChanged)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->dockLocationChanged( (Qt::DockWidgetArea )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDockWidget_featuresChanged)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->featuresChanged( (QDockWidget::DockWidgetFeature )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDockWidget_topLevelChanged)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->topLevelChanged( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDockWidget_visibilityChanged)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->visibilityChanged( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDockWidget_setallowedAreasChangedEvent)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setallowedAreasChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QDockWidget_setdockLocationChangedEvent)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setdockLocationChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QDockWidget_setfeaturesChangedEvent)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setfeaturesChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QDockWidget_settopLevelChangedEvent)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->settopLevelChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QDockWidget_setvisibilityChangedEvent)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setvisibilityChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QDockWidget_getallowedAreasChangedEvent)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	RING_API_RETSTRING(pObject->getallowedAreasChangedEvent());
}


RING_FUNC(ring_QDockWidget_getdockLocationChangedEvent)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	RING_API_RETSTRING(pObject->getdockLocationChangedEvent());
}


RING_FUNC(ring_QDockWidget_getfeaturesChangedEvent)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	RING_API_RETSTRING(pObject->getfeaturesChangedEvent());
}


RING_FUNC(ring_QDockWidget_gettopLevelChangedEvent)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	RING_API_RETSTRING(pObject->gettopLevelChangedEvent());
}


RING_FUNC(ring_QDockWidget_getvisibilityChangedEvent)
{
	GDockWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"QDockWidget");
	RING_API_RETSTRING(pObject->getvisibilityChangedEvent());
}


RING_FUNC(ring_QTabWidget_addTab)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->addTab((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3)));
}


RING_FUNC(ring_QTabWidget_clear)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	pObject->clear();
}


RING_FUNC(ring_QTabWidget_cornerWidget)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->cornerWidget( (Qt::Corner )  (int) RING_API_GETNUMBER(2)),"QWidget");
}


RING_FUNC(ring_QTabWidget_count)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	RING_API_RETNUMBER(pObject->count());
}


RING_FUNC(ring_QTabWidget_currentIndex)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	RING_API_RETNUMBER(pObject->currentIndex());
}


RING_FUNC(ring_QTabWidget_currentWidget)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	RING_API_RETCPOINTER(pObject->currentWidget(),"QWidget");
}


RING_FUNC(ring_QTabWidget_documentMode)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	RING_API_RETNUMBER(pObject->documentMode());
}


RING_FUNC(ring_QTabWidget_elideMode)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	RING_API_RETNUMBER(pObject->elideMode());
}


RING_FUNC(ring_QTabWidget_iconSize)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->iconSize();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QTabWidget_indexOf)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->indexOf((QWidget *) RING_API_GETCPOINTER(2,"QWidget")));
}


RING_FUNC(ring_QTabWidget_insertTab)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->insertTab( (int ) RING_API_GETNUMBER(2),(QWidget *) RING_API_GETCPOINTER(3,"QWidget"),RING_API_GETSTRING(4)));
}


RING_FUNC(ring_QTabWidget_isMovable)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	RING_API_RETNUMBER(pObject->isMovable());
}


RING_FUNC(ring_QTabWidget_isTabEnabled)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isTabEnabled( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTabWidget_removeTab)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeTab( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTabWidget_setCornerWidget)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCornerWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"), (Qt::Corner )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTabWidget_setDocumentMode)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDocumentMode( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTabWidget_setElideMode)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setElideMode( (Qt::TextElideMode)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTabWidget_setIconSize)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	pObject->setIconSize(* (QSize *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QSize"));
}


RING_FUNC(ring_QTabWidget_setMovable)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMovable( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTabWidget_setTabEnabled)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabEnabled( (int ) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTabWidget_setTabIcon)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabIcon( (int ) RING_API_GETNUMBER(2),* (QIcon *) RING_API_GETCPOINTER(3,"QIcon"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QIcon"));
}


RING_FUNC(ring_QTabWidget_setTabText)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabText( (int ) RING_API_GETNUMBER(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QTabWidget_setTabToolTip)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabToolTip( (int ) RING_API_GETNUMBER(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QTabWidget_setTabWhatsThis)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabWhatsThis( (int ) RING_API_GETNUMBER(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QTabWidget_setTabsClosable)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabsClosable( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTabWidget_setUsesScrollButtons)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUsesScrollButtons( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTabWidget_tabIcon)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QIcon *pValue ; 
		pValue = new QIcon() ;
		*pValue = pObject->tabIcon( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QIcon");
	}
}


RING_FUNC(ring_QTabWidget_tabText)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->tabText( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QTabWidget_tabToolTip)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->tabToolTip( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QTabWidget_tabWhatsThis)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->tabWhatsThis( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QTabWidget_tabsClosable)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	RING_API_RETNUMBER(pObject->tabsClosable());
}


RING_FUNC(ring_QTabWidget_usesScrollButtons)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	RING_API_RETNUMBER(pObject->usesScrollButtons());
}


RING_FUNC(ring_QTabWidget_widget)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->widget( (int ) RING_API_GETNUMBER(2)),"QWidget");
}


RING_FUNC(ring_QTabWidget_heightForWidth)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->heightForWidth( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTabWidget_minimumSizeHint)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->minimumSizeHint();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QTabWidget_sizeHint)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->sizeHint();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QTabWidget_setCurrentIndex)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCurrentIndex( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTabWidget_setCurrentWidget)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCurrentWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QTabWidget_setcurrentChangedEvent)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcurrentChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTabWidget_settabCloseRequestedEvent)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->settabCloseRequestedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTabWidget_getcurrentChangedEvent)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	RING_API_RETSTRING(pObject->getcurrentChangedEvent());
}


RING_FUNC(ring_QTabWidget_gettabCloseRequestedEvent)
{
	GTabWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"QTabWidget");
	RING_API_RETSTRING(pObject->gettabCloseRequestedEvent());
}


RING_FUNC(ring_QTableWidgetItem_background)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	{
		QBrush *pValue ; 
		pValue = new QBrush() ;
		*pValue = pObject->background();
		RING_API_RETCPOINTER(pValue,"QBrush");
	}
}


RING_FUNC(ring_QTableWidgetItem_checkState)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	RING_API_RETNUMBER(pObject->checkState());
}


RING_FUNC(ring_QTableWidgetItem_clone)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	RING_API_RETCPOINTER(pObject->clone(),"QTableWidgetItem");
}


RING_FUNC(ring_QTableWidgetItem_column)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	RING_API_RETNUMBER(pObject->column());
}


RING_FUNC(ring_QTableWidgetItem_data)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->data( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QVariant");
	}
}


RING_FUNC(ring_QTableWidgetItem_flags)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	RING_API_RETNUMBER(pObject->flags());
}


RING_FUNC(ring_QTableWidgetItem_font)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	{
		QFont *pValue ; 
		pValue = new QFont() ;
		*pValue = pObject->font();
		RING_API_RETCPOINTER(pValue,"QFont");
	}
}


RING_FUNC(ring_QTableWidgetItem_foreground)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	{
		QBrush *pValue ; 
		pValue = new QBrush() ;
		*pValue = pObject->foreground();
		RING_API_RETCPOINTER(pValue,"QBrush");
	}
}


RING_FUNC(ring_QTableWidgetItem_icon)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	{
		QIcon *pValue ; 
		pValue = new QIcon() ;
		*pValue = pObject->icon();
		RING_API_RETCPOINTER(pValue,"QIcon");
	}
}


RING_FUNC(ring_QTableWidgetItem_isSelected)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	RING_API_RETNUMBER(pObject->isSelected());
}


RING_FUNC(ring_QTableWidgetItem_read)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	pObject->read(* (QDataStream *) RING_API_GETCPOINTER(2,"QDataStream"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QDataStream"));
}


RING_FUNC(ring_QTableWidgetItem_row)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	RING_API_RETNUMBER(pObject->row());
}


RING_FUNC(ring_QTableWidgetItem_setBackground)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	pObject->setBackground(* (QBrush *) RING_API_GETCPOINTER(2,"QBrush"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QBrush"));
}


RING_FUNC(ring_QTableWidgetItem_setCheckState)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCheckState( (Qt::CheckState )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableWidgetItem_setData)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setData( (int ) RING_API_GETNUMBER(2),* (QVariant *) RING_API_GETCPOINTER(3,"QVariant"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QVariant"));
}


RING_FUNC(ring_QTableWidgetItem_setFlags)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFlags( (Qt::ItemFlag )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableWidgetItem_setFont)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	pObject->setFont(* (QFont *) RING_API_GETCPOINTER(2,"QFont"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QFont"));
}


RING_FUNC(ring_QTableWidgetItem_setForeground)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	pObject->setForeground(* (QBrush *) RING_API_GETCPOINTER(2,"QBrush"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QBrush"));
}


RING_FUNC(ring_QTableWidgetItem_setIcon)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	pObject->setIcon(* (QIcon *) RING_API_GETCPOINTER(2,"QIcon"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QIcon"));
}


RING_FUNC(ring_QTableWidgetItem_setSelected)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSelected( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableWidgetItem_setSizeHint)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	pObject->setSizeHint(* (QSize *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QSize"));
}


RING_FUNC(ring_QTableWidgetItem_setStatusTip)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStatusTip(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidgetItem_setText)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidgetItem_setTextAlignment)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTextAlignment( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableWidgetItem_setToolTip)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setToolTip(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidgetItem_setWhatsThis)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWhatsThis(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidgetItem_sizeHint)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->sizeHint();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QTableWidgetItem_statusTip)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	RING_API_RETSTRING(pObject->statusTip().toStdString().c_str());
}


RING_FUNC(ring_QTableWidgetItem_tableWidget)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	RING_API_RETCPOINTER(pObject->tableWidget(),"QTableWidget");
}


RING_FUNC(ring_QTableWidgetItem_text)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	RING_API_RETSTRING(pObject->text().toStdString().c_str());
}


RING_FUNC(ring_QTableWidgetItem_textAlignment)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	RING_API_RETNUMBER(pObject->textAlignment());
}


RING_FUNC(ring_QTableWidgetItem_toolTip)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	RING_API_RETSTRING(pObject->toolTip().toStdString().c_str());
}


RING_FUNC(ring_QTableWidgetItem_type)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	RING_API_RETNUMBER(pObject->type());
}


RING_FUNC(ring_QTableWidgetItem_whatsThis)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	RING_API_RETSTRING(pObject->whatsThis().toStdString().c_str());
}


RING_FUNC(ring_QTableWidgetItem_write)
{
	QTableWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
	pObject->write(* (QDataStream *) RING_API_GETCPOINTER(2,"QDataStream"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QDataStream"));
}


RING_FUNC(ring_QFrame_frameRect)
{
	QFrame *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->frameRect();
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QFrame_frameShadow)
{
	QFrame *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
	RING_API_RETNUMBER(pObject->frameShadow());
}


RING_FUNC(ring_QFrame_frameShape)
{
	QFrame *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
	RING_API_RETNUMBER(pObject->frameShape());
}


RING_FUNC(ring_QFrame_frameStyle)
{
	QFrame *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
	RING_API_RETNUMBER(pObject->frameStyle());
}


RING_FUNC(ring_QFrame_frameWidth)
{
	QFrame *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
	RING_API_RETNUMBER(pObject->frameWidth());
}


RING_FUNC(ring_QFrame_lineWidth)
{
	QFrame *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
	RING_API_RETNUMBER(pObject->lineWidth());
}


RING_FUNC(ring_QFrame_midLineWidth)
{
	QFrame *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
	RING_API_RETNUMBER(pObject->midLineWidth());
}


RING_FUNC(ring_QFrame_setFrameRect)
{
	QFrame *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
	pObject->setFrameRect(* (QRect *) RING_API_GETCPOINTER(2,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QRect"));
}


RING_FUNC(ring_QFrame_setFrameShadow)
{
	QFrame *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFrameShadow( (QFrame::Shadow)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFrame_setFrameShape)
{
	QFrame *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFrameShape( (QFrame::Shape)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFrame_setFrameStyle)
{
	QFrame *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFrameStyle( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFrame_setLineWidth)
{
	QFrame *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLineWidth( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFrame_setMidLineWidth)
{
	QFrame *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMidLineWidth( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFrame_sizeHint)
{
	QFrame *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->sizeHint();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QAbstractScrollArea_addScrollBarWidget)
{
	QAbstractScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractScrollArea *) RING_API_GETCPOINTER(1,"QAbstractScrollArea");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addScrollBarWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"), (Qt::AlignmentFlag )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QAbstractScrollArea_cornerWidget)
{
	QAbstractScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractScrollArea *) RING_API_GETCPOINTER(1,"QAbstractScrollArea");
	RING_API_RETCPOINTER(pObject->cornerWidget(),"QWidget");
}


RING_FUNC(ring_QAbstractScrollArea_horizontalScrollBar)
{
	QAbstractScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractScrollArea *) RING_API_GETCPOINTER(1,"QAbstractScrollArea");
	RING_API_RETCPOINTER(pObject->horizontalScrollBar(),"QScrollBar");
}


RING_FUNC(ring_QAbstractScrollArea_horizontalScrollBarPolicy)
{
	QAbstractScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractScrollArea *) RING_API_GETCPOINTER(1,"QAbstractScrollArea");
	RING_API_RETNUMBER(pObject->horizontalScrollBarPolicy());
}


RING_FUNC(ring_QAbstractScrollArea_maximumViewportSize)
{
	QAbstractScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractScrollArea *) RING_API_GETCPOINTER(1,"QAbstractScrollArea");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->maximumViewportSize();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QAbstractScrollArea_scrollBarWidgets)
{
	QAbstractScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractScrollArea *) RING_API_GETCPOINTER(1,"QAbstractScrollArea");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QWidgetList *pValue ; 
		pValue = (QWidgetList *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QWidgetList)) ;
		*pValue = pObject->scrollBarWidgets( (Qt::AlignmentFlag)  (int) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QWidgetList");
	}
}


RING_FUNC(ring_QAbstractScrollArea_setCornerWidget)
{
	QAbstractScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractScrollArea *) RING_API_GETCPOINTER(1,"QAbstractScrollArea");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCornerWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QAbstractScrollArea_setHorizontalScrollBar)
{
	QAbstractScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractScrollArea *) RING_API_GETCPOINTER(1,"QAbstractScrollArea");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHorizontalScrollBar((QScrollBar *) RING_API_GETCPOINTER(2,"QScrollBar"));
}


RING_FUNC(ring_QAbstractScrollArea_setHorizontalScrollBarPolicy)
{
	QAbstractScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractScrollArea *) RING_API_GETCPOINTER(1,"QAbstractScrollArea");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHorizontalScrollBarPolicy( (Qt::ScrollBarPolicy)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractScrollArea_setVerticalScrollBar)
{
	QAbstractScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractScrollArea *) RING_API_GETCPOINTER(1,"QAbstractScrollArea");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setVerticalScrollBar((QScrollBar *) RING_API_GETCPOINTER(2,"QScrollBar"));
}


RING_FUNC(ring_QAbstractScrollArea_setVerticalScrollBarPolicy)
{
	QAbstractScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractScrollArea *) RING_API_GETCPOINTER(1,"QAbstractScrollArea");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setVerticalScrollBarPolicy( (Qt::ScrollBarPolicy)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractScrollArea_setViewport)
{
	QAbstractScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractScrollArea *) RING_API_GETCPOINTER(1,"QAbstractScrollArea");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setViewport((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QAbstractScrollArea_verticalScrollBar)
{
	QAbstractScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractScrollArea *) RING_API_GETCPOINTER(1,"QAbstractScrollArea");
	RING_API_RETCPOINTER(pObject->verticalScrollBar(),"QScrollBar");
}


RING_FUNC(ring_QAbstractScrollArea_verticalScrollBarPolicy)
{
	QAbstractScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractScrollArea *) RING_API_GETCPOINTER(1,"QAbstractScrollArea");
	RING_API_RETNUMBER(pObject->verticalScrollBarPolicy());
}


RING_FUNC(ring_QAbstractScrollArea_viewport)
{
	QAbstractScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractScrollArea *) RING_API_GETCPOINTER(1,"QAbstractScrollArea");
	RING_API_RETCPOINTER(pObject->viewport(),"QWidget");
}


RING_FUNC(ring_QAbstractItemView_alternatingRowColors)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETNUMBER(pObject->alternatingRowColors());
}


RING_FUNC(ring_QAbstractItemView_autoScrollMargin)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETNUMBER(pObject->autoScrollMargin());
}


RING_FUNC(ring_QAbstractItemView_closePersistentEditor)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	pObject->closePersistentEditor(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QAbstractItemView_currentIndex)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	{
		QModelIndex *pValue ; 
		pValue = (QModelIndex *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QModelIndex)) ;
		*pValue = pObject->currentIndex();
		RING_API_RETCPOINTER(pValue,"QModelIndex");
	}
}


RING_FUNC(ring_QAbstractItemView_defaultDropAction)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETNUMBER(pObject->defaultDropAction());
}


RING_FUNC(ring_QAbstractItemView_dragDropMode)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETNUMBER(pObject->dragDropMode());
}


RING_FUNC(ring_QAbstractItemView_dragDropOverwriteMode)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETNUMBER(pObject->dragDropOverwriteMode());
}


RING_FUNC(ring_QAbstractItemView_dragEnabled)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETNUMBER(pObject->dragEnabled());
}


RING_FUNC(ring_QAbstractItemView_editTriggers)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETNUMBER(pObject->editTriggers());
}


RING_FUNC(ring_QAbstractItemView_hasAutoScroll)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETNUMBER(pObject->hasAutoScroll());
}


RING_FUNC(ring_QAbstractItemView_horizontalScrollMode)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETNUMBER(pObject->horizontalScrollMode());
}


RING_FUNC(ring_QAbstractItemView_iconSize)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->iconSize();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QAbstractItemView_indexAt)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	{
		QModelIndex *pValue ; 
		pValue = (QModelIndex *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QModelIndex)) ;
		*pValue = pObject->indexAt(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
		RING_API_RETCPOINTER(pValue,"QModelIndex");
	}
}


RING_FUNC(ring_QAbstractItemView_indexWidget)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETCPOINTER(pObject->indexWidget(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex")),"QWidget");
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QAbstractItemView_itemDelegate)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETCPOINTER(pObject->itemDelegate(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex")),"QAbstractItemDelegate");
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QAbstractItemView_itemDelegateForColumn)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->itemDelegateForColumn( (int ) RING_API_GETNUMBER(2)),"QAbstractItemDelegate");
}


RING_FUNC(ring_QAbstractItemView_itemDelegateForRow)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->itemDelegateForRow( (int ) RING_API_GETNUMBER(2)),"QAbstractItemDelegate");
}


RING_FUNC(ring_QAbstractItemView_keyboardSearch)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->keyboardSearch(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAbstractItemView_model)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETCPOINTER(pObject->model(),"QAbstractItemModel");
}


RING_FUNC(ring_QAbstractItemView_openPersistentEditor)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	pObject->openPersistentEditor(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QAbstractItemView_rootIndex)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	{
		QModelIndex *pValue ; 
		pValue = (QModelIndex *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QModelIndex)) ;
		*pValue = pObject->rootIndex();
		RING_API_RETCPOINTER(pValue,"QModelIndex");
	}
}


RING_FUNC(ring_QAbstractItemView_scrollTo)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->scrollTo(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"), (QAbstractItemView::ScrollHint)  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QAbstractItemView_selectionBehavior)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETNUMBER(pObject->selectionBehavior());
}


RING_FUNC(ring_QAbstractItemView_selectionMode)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETNUMBER(pObject->selectionMode());
}


RING_FUNC(ring_QAbstractItemView_selectionModel)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETCPOINTER(pObject->selectionModel(),"QItemSelectionModel");
}


RING_FUNC(ring_QAbstractItemView_setAlternatingRowColors)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAlternatingRowColors( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractItemView_setAutoScroll)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAutoScroll( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractItemView_setAutoScrollMargin)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAutoScrollMargin( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractItemView_setDefaultDropAction)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDefaultDropAction( (Qt::DropAction )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractItemView_setDragDropMode)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDragDropMode( (QAbstractItemView::DragDropMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractItemView_setDragDropOverwriteMode)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDragDropOverwriteMode( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractItemView_setDragEnabled)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDragEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractItemView_setDropIndicatorShown)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDropIndicatorShown( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractItemView_setEditTriggers)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setEditTriggers( (QAbstractItemView::EditTrigger )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractItemView_setHorizontalScrollMode)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHorizontalScrollMode( (QAbstractItemView::ScrollMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractItemView_setIconSize)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	pObject->setIconSize(* (QSize *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QSize"));
}


RING_FUNC(ring_QAbstractItemView_setIndexWidget)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setIndexWidget(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"),(QWidget *) RING_API_GETCPOINTER(3,"QWidget"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QAbstractItemView_setItemDelegate)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setItemDelegate((QAbstractItemDelegate *) RING_API_GETCPOINTER(2,"QAbstractItemDelegate"));
}


RING_FUNC(ring_QAbstractItemView_setItemDelegateForColumn)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setItemDelegateForColumn( (int ) RING_API_GETNUMBER(2),(QAbstractItemDelegate *) RING_API_GETCPOINTER(3,"QAbstractItemDelegate"));
}


RING_FUNC(ring_QAbstractItemView_setItemDelegateForRow)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setItemDelegateForRow( (int ) RING_API_GETNUMBER(2),(QAbstractItemDelegate *) RING_API_GETCPOINTER(3,"QAbstractItemDelegate"));
}


RING_FUNC(ring_QAbstractItemView_setModel)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setModel((QAbstractItemModel *) RING_API_GETCPOINTER(2,"QAbstractItemModel"));
}


RING_FUNC(ring_QAbstractItemView_setSelectionBehavior)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSelectionBehavior( (QAbstractItemView::SelectionBehavior )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractItemView_setSelectionMode)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSelectionMode( (QAbstractItemView::SelectionMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractItemView_setSelectionModel)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSelectionModel((QItemSelectionModel *) RING_API_GETCPOINTER(2,"QItemSelectionModel"));
}


RING_FUNC(ring_QAbstractItemView_setTabKeyNavigation)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabKeyNavigation( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractItemView_setTextElideMode)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTextElideMode( (Qt::TextElideMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractItemView_setVerticalScrollMode)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setVerticalScrollMode( (QAbstractItemView::ScrollMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractItemView_showDropIndicator)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETNUMBER(pObject->showDropIndicator());
}


RING_FUNC(ring_QAbstractItemView_sizeHintForColumn)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->sizeHintForColumn( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QAbstractItemView_sizeHintForIndex)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->sizeHintForIndex(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QAbstractItemView_sizeHintForRow)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->sizeHintForRow( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QAbstractItemView_tabKeyNavigation)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETNUMBER(pObject->tabKeyNavigation());
}


RING_FUNC(ring_QAbstractItemView_textElideMode)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETNUMBER(pObject->textElideMode());
}


RING_FUNC(ring_QAbstractItemView_verticalScrollMode)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	RING_API_RETNUMBER(pObject->verticalScrollMode());
}


RING_FUNC(ring_QAbstractItemView_visualRect)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->visualRect(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QAbstractItemView_clearSelection)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	pObject->clearSelection();
}


RING_FUNC(ring_QAbstractItemView_edit)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	pObject->edit(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QAbstractItemView_scrollToBottom)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	pObject->scrollToBottom();
}


RING_FUNC(ring_QAbstractItemView_scrollToTop)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	pObject->scrollToTop();
}


RING_FUNC(ring_QAbstractItemView_setCurrentIndex)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	pObject->setCurrentIndex(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QAbstractItemView_update)
{
	QAbstractItemView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractItemView *) RING_API_GETCPOINTER(1,"QAbstractItemView");
	pObject->update(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QTableView_clearSpans)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	pObject->clearSpans();
}


RING_FUNC(ring_QTableView_columnAt)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->columnAt( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTableView_columnSpan)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->columnSpan( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QTableView_columnViewportPosition)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->columnViewportPosition( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTableView_columnWidth)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->columnWidth( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTableView_gridStyle)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	RING_API_RETNUMBER(pObject->gridStyle());
}


RING_FUNC(ring_QTableView_horizontalHeader)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	RING_API_RETCPOINTER(pObject->horizontalHeader(),"QHeaderView");
}


RING_FUNC(ring_QTableView_isColumnHidden)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isColumnHidden( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTableView_isCornerButtonEnabled)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	RING_API_RETNUMBER(pObject->isCornerButtonEnabled());
}


RING_FUNC(ring_QTableView_isRowHidden)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isRowHidden( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTableView_isSortingEnabled)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	RING_API_RETNUMBER(pObject->isSortingEnabled());
}


RING_FUNC(ring_QTableView_rowAt)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->rowAt( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTableView_rowHeight)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->rowHeight( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTableView_rowSpan)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->rowSpan( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QTableView_rowViewportPosition)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->rowViewportPosition( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTableView_setColumnHidden)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setColumnHidden( (int ) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTableView_setColumnWidth)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setColumnWidth( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTableView_setCornerButtonEnabled)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCornerButtonEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableView_setGridStyle)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setGridStyle( (Qt::PenStyle )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableView_setHorizontalHeader)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHorizontalHeader((QHeaderView *) RING_API_GETCPOINTER(2,"QHeaderView"));
}


RING_FUNC(ring_QTableView_setRowHeight)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRowHeight( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTableView_setRowHidden)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRowHidden( (int ) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTableView_setSortingEnabled)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSortingEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableView_setSpan)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSpan( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QTableView_setVerticalHeader)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setVerticalHeader((QHeaderView *) RING_API_GETCPOINTER(2,"QHeaderView"));
}


RING_FUNC(ring_QTableView_setWordWrap)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWordWrap( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableView_showGrid)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	RING_API_RETNUMBER(pObject->showGrid());
}


RING_FUNC(ring_QTableView_sortByColumn)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->sortByColumn( (int ) RING_API_GETNUMBER(2), (Qt::SortOrder )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTableView_verticalHeader)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	RING_API_RETCPOINTER(pObject->verticalHeader(),"QHeaderView");
}


RING_FUNC(ring_QTableView_wordWrap)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	RING_API_RETNUMBER(pObject->wordWrap());
}


RING_FUNC(ring_QTableView_hideColumn)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->hideColumn( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableView_hideRow)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->hideRow( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableView_resizeColumnToContents)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->resizeColumnToContents( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableView_resizeColumnsToContents)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	pObject->resizeColumnsToContents();
}


RING_FUNC(ring_QTableView_resizeRowToContents)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->resizeRowToContents( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableView_resizeRowsToContents)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	pObject->resizeRowsToContents();
}


RING_FUNC(ring_QTableView_selectColumn)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->selectColumn( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableView_selectRow)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->selectRow( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableView_setShowGrid)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setShowGrid( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableView_showColumn)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->showColumn( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableView_showRow)
{
	QTableView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->showRow( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableWidget_cellWidget)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->cellWidget( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3)),"QWidget");
}


RING_FUNC(ring_QTableWidget_closePersistentEditor)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->closePersistentEditor((QTableWidgetItem *) RING_API_GETCPOINTER(2,"QTableWidgetItem"));
}


RING_FUNC(ring_QTableWidget_column)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->column((QTableWidgetItem *) RING_API_GETCPOINTER(2,"QTableWidgetItem")));
}


RING_FUNC(ring_QTableWidget_columnCount)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETNUMBER(pObject->columnCount());
}


RING_FUNC(ring_QTableWidget_currentColumn)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETNUMBER(pObject->currentColumn());
}


RING_FUNC(ring_QTableWidget_currentItem)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETCPOINTER(pObject->currentItem(),"QTableWidgetItem");
}


RING_FUNC(ring_QTableWidget_currentRow)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETNUMBER(pObject->currentRow());
}


RING_FUNC(ring_QTableWidget_editItem)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->editItem((QTableWidgetItem *) RING_API_GETCPOINTER(2,"QTableWidgetItem"));
}


RING_FUNC(ring_QTableWidget_horizontalHeaderItem)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->horizontalHeaderItem( (int ) RING_API_GETNUMBER(2)),"QTableWidgetItem");
}


RING_FUNC(ring_QTableWidget_item)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->item( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3)),"QTableWidgetItem");
}


RING_FUNC(ring_QTableWidget_itemAt)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->itemAt( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3)),"QTableWidgetItem");
}


RING_FUNC(ring_QTableWidget_itemPrototype)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETCPOINTER(pObject->itemPrototype(),"QTableWidgetItem");
}


RING_FUNC(ring_QTableWidget_openPersistentEditor)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->openPersistentEditor((QTableWidgetItem *) RING_API_GETCPOINTER(2,"QTableWidgetItem"));
}


RING_FUNC(ring_QTableWidget_removeCellWidget)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeCellWidget( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTableWidget_row)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->row((QTableWidgetItem *) RING_API_GETCPOINTER(2,"QTableWidgetItem")));
}


RING_FUNC(ring_QTableWidget_rowCount)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETNUMBER(pObject->rowCount());
}


RING_FUNC(ring_QTableWidget_selectedItems)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	{
		QList<QTableWidgetItem *> *pValue ; 
		pValue = (QList<QTableWidgetItem *> *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QList<QTableWidgetItem *>)) ;
		*pValue = pObject->selectedItems();
		RING_API_RETCPOINTER(pValue,"QList<QTableWidgetItem *>");
	}
}


RING_FUNC(ring_QTableWidget_selectedRanges)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	{
		QList<QTableWidgetSelectionRange> *pValue ; 
		pValue = (QList<QTableWidgetSelectionRange> *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QList<QTableWidgetSelectionRange>)) ;
		*pValue = pObject->selectedRanges();
		RING_API_RETCPOINTER(pValue,"QList<QTableWidgetSelectionRange>");
	}
}


RING_FUNC(ring_QTableWidget_setCellWidget)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCellWidget( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3),(QWidget *) RING_API_GETCPOINTER(4,"QWidget"));
}


RING_FUNC(ring_QTableWidget_setColumnCount)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setColumnCount( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableWidget_setCurrentCell)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCurrentCell( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTableWidget_setCurrentItem)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCurrentItem((QTableWidgetItem *) RING_API_GETCPOINTER(2,"QTableWidgetItem"));
}


RING_FUNC(ring_QTableWidget_setHorizontalHeaderItem)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHorizontalHeaderItem( (int ) RING_API_GETNUMBER(2),(QTableWidgetItem *) RING_API_GETCPOINTER(3,"QTableWidgetItem"));
}


RING_FUNC(ring_QTableWidget_setHorizontalHeaderLabels)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	pObject->setHorizontalHeaderLabels(* (QStringList *) RING_API_GETCPOINTER(2,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QStringList"));
}


RING_FUNC(ring_QTableWidget_setItem)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setItem( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3),(QTableWidgetItem *) RING_API_GETCPOINTER(4,"QTableWidgetItem"));
}


RING_FUNC(ring_QTableWidget_setItemPrototype)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setItemPrototype((QTableWidgetItem *) RING_API_GETCPOINTER(2,"QTableWidgetItem"));
}


RING_FUNC(ring_QTableWidget_setRowCount)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRowCount( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableWidget_setVerticalHeaderItem)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setVerticalHeaderItem( (int ) RING_API_GETNUMBER(2),(QTableWidgetItem *) RING_API_GETCPOINTER(3,"QTableWidgetItem"));
}


RING_FUNC(ring_QTableWidget_sortItems)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->sortItems( (int ) RING_API_GETNUMBER(2), (Qt::SortOrder )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTableWidget_takeHorizontalHeaderItem)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->takeHorizontalHeaderItem( (int ) RING_API_GETNUMBER(2)),"QTableWidgetItem");
}


RING_FUNC(ring_QTableWidget_takeItem)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->takeItem( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3)),"QTableWidgetItem");
}


RING_FUNC(ring_QTableWidget_takeVerticalHeaderItem)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->takeVerticalHeaderItem( (int ) RING_API_GETNUMBER(2)),"QTableWidgetItem");
}


RING_FUNC(ring_QTableWidget_verticalHeaderItem)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->verticalHeaderItem( (int ) RING_API_GETNUMBER(2)),"QTableWidgetItem");
}


RING_FUNC(ring_QTableWidget_visualColumn)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->visualColumn( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTableWidget_visualItemRect)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->visualItemRect((QTableWidgetItem *) RING_API_GETCPOINTER(2,"QTableWidgetItem"));
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QTableWidget_visualRow)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->visualRow( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTableWidget_clear)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	pObject->clear();
}


RING_FUNC(ring_QTableWidget_clearContents)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	pObject->clearContents();
}


RING_FUNC(ring_QTableWidget_insertColumn)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertColumn( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableWidget_insertRow)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertRow( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableWidget_removeColumn)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeColumn( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableWidget_removeRow)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeRow( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTableWidget_scrollToItem)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->scrollToItem((QTableWidgetItem *) RING_API_GETCPOINTER(2,"QTableWidgetItem"), (QAbstractItemView::ScrollHint )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTableWidget_setcellActivatedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcellActivatedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidget_setcellChangedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcellChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidget_setcellClickedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcellClickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidget_setcellDoubleClickedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcellDoubleClickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidget_setcellEnteredEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcellEnteredEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidget_setcellPressedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcellPressedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidget_setcurrentCellChangedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcurrentCellChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidget_setcurrentItemChangedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcurrentItemChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidget_setitemActivatedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemActivatedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidget_setitemChangedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidget_setitemClickedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemClickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidget_setitemDoubleClickedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemDoubleClickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidget_setitemEnteredEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemEnteredEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidget_setitemPressedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemPressedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidget_setitemSelectionChangedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setitemSelectionChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTableWidget_getcellActivatedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETSTRING(pObject->getcellActivatedEvent());
}


RING_FUNC(ring_QTableWidget_getcellChangedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETSTRING(pObject->getcellChangedEvent());
}


RING_FUNC(ring_QTableWidget_getcellClickedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETSTRING(pObject->getcellClickedEvent());
}


RING_FUNC(ring_QTableWidget_getcellDoubleClickedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETSTRING(pObject->getcellDoubleClickedEvent());
}


RING_FUNC(ring_QTableWidget_getcellEnteredEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETSTRING(pObject->getcellEnteredEvent());
}


RING_FUNC(ring_QTableWidget_getcellPressedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETSTRING(pObject->getcellPressedEvent());
}


RING_FUNC(ring_QTableWidget_getcurrentCellChangedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETSTRING(pObject->getcurrentCellChangedEvent());
}


RING_FUNC(ring_QTableWidget_getcurrentItemChangedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETSTRING(pObject->getcurrentItemChangedEvent());
}


RING_FUNC(ring_QTableWidget_getitemActivatedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETSTRING(pObject->getitemActivatedEvent());
}


RING_FUNC(ring_QTableWidget_getitemChangedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETSTRING(pObject->getitemChangedEvent());
}


RING_FUNC(ring_QTableWidget_getitemClickedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETSTRING(pObject->getitemClickedEvent());
}


RING_FUNC(ring_QTableWidget_getitemDoubleClickedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETSTRING(pObject->getitemDoubleClickedEvent());
}


RING_FUNC(ring_QTableWidget_getitemEnteredEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETSTRING(pObject->getitemEnteredEvent());
}


RING_FUNC(ring_QTableWidget_getitemPressedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETSTRING(pObject->getitemPressedEvent());
}


RING_FUNC(ring_QTableWidget_getitemSelectionChangedEvent)
{
	GTableWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"QTableWidget");
	RING_API_RETSTRING(pObject->getitemSelectionChangedEvent());
}


RING_FUNC(ring_QProgressBar_alignment)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	RING_API_RETNUMBER(pObject->alignment());
}


RING_FUNC(ring_QProgressBar_format)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	RING_API_RETSTRING(pObject->format().toStdString().c_str());
}


RING_FUNC(ring_QProgressBar_invertedAppearance)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	RING_API_RETNUMBER(pObject->invertedAppearance());
}


RING_FUNC(ring_QProgressBar_isTextVisible)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	RING_API_RETNUMBER(pObject->isTextVisible());
}


RING_FUNC(ring_QProgressBar_maximum)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	RING_API_RETNUMBER(pObject->maximum());
}


RING_FUNC(ring_QProgressBar_minimum)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	RING_API_RETNUMBER(pObject->minimum());
}


RING_FUNC(ring_QProgressBar_orientation)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	RING_API_RETNUMBER(pObject->orientation());
}


RING_FUNC(ring_QProgressBar_resetFormat)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	pObject->resetFormat();
}


RING_FUNC(ring_QProgressBar_setAlignment)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAlignment( (Qt::AlignmentFlag )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QProgressBar_setFormat)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFormat(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QProgressBar_setInvertedAppearance)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setInvertedAppearance( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QProgressBar_setTextDirection)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTextDirection( (QProgressBar::Direction )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QProgressBar_setTextVisible)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTextVisible( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QProgressBar_text)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	RING_API_RETSTRING(pObject->text().toStdString().c_str());
}


RING_FUNC(ring_QProgressBar_textDirection)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	RING_API_RETNUMBER(pObject->textDirection());
}


RING_FUNC(ring_QProgressBar_value)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	RING_API_RETNUMBER(pObject->value());
}


RING_FUNC(ring_QProgressBar_reset)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	pObject->reset();
}


RING_FUNC(ring_QProgressBar_setMaximum)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMaximum( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QProgressBar_setMinimum)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMinimum( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QProgressBar_setOrientation)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOrientation( (Qt::Orientation)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QProgressBar_setRange)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRange( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QProgressBar_setValue)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setValue( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QProgressBar_setvalueChangedEvent)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setvalueChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QProgressBar_getvalueChangedEvent)
{
	GProgressBar *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"QProgressBar");
	RING_API_RETSTRING(pObject->getvalueChangedEvent());
}


RING_FUNC(ring_QSpinBox_cleanText)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	RING_API_RETSTRING(pObject->cleanText().toStdString().c_str());
}


RING_FUNC(ring_QSpinBox_displayIntegerBase)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	RING_API_RETNUMBER(pObject->displayIntegerBase());
}


RING_FUNC(ring_QSpinBox_maximum)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	RING_API_RETNUMBER(pObject->maximum());
}


RING_FUNC(ring_QSpinBox_minimum)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	RING_API_RETNUMBER(pObject->minimum());
}


RING_FUNC(ring_QSpinBox_prefix)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	RING_API_RETSTRING(pObject->prefix().toStdString().c_str());
}


RING_FUNC(ring_QSpinBox_setDisplayIntegerBase)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDisplayIntegerBase( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSpinBox_setMaximum)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMaximum( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSpinBox_setMinimum)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMinimum( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSpinBox_setPrefix)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPrefix(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSpinBox_setRange)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRange( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QSpinBox_setSingleStep)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSingleStep( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSpinBox_setSuffix)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSuffix(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSpinBox_singleStep)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	RING_API_RETNUMBER(pObject->singleStep());
}


RING_FUNC(ring_QSpinBox_suffix)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	RING_API_RETSTRING(pObject->suffix().toStdString().c_str());
}


RING_FUNC(ring_QSpinBox_value)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	RING_API_RETNUMBER(pObject->value());
}


RING_FUNC(ring_QSpinBox_setValue)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setValue( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSpinBox_setvalueChangedEvent)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setvalueChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSpinBox_getvalueChangedEvent)
{
	GSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"QSpinBox");
	RING_API_RETSTRING(pObject->getvalueChangedEvent());
}


RING_FUNC(ring_QAbstractSlider_hasTracking)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	RING_API_RETNUMBER(pObject->hasTracking());
}


RING_FUNC(ring_QAbstractSlider_invertedAppearance)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	RING_API_RETNUMBER(pObject->invertedAppearance());
}


RING_FUNC(ring_QAbstractSlider_invertedControls)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	RING_API_RETNUMBER(pObject->invertedControls());
}


RING_FUNC(ring_QAbstractSlider_isSliderDown)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	RING_API_RETNUMBER(pObject->isSliderDown());
}


RING_FUNC(ring_QAbstractSlider_maximum)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	RING_API_RETNUMBER(pObject->maximum());
}


RING_FUNC(ring_QAbstractSlider_minimum)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	RING_API_RETNUMBER(pObject->minimum());
}


RING_FUNC(ring_QAbstractSlider_orientation)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	RING_API_RETNUMBER(pObject->orientation());
}


RING_FUNC(ring_QAbstractSlider_pageStep)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	RING_API_RETNUMBER(pObject->pageStep());
}


RING_FUNC(ring_QAbstractSlider_setInvertedAppearance)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setInvertedAppearance( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSlider_setInvertedControls)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setInvertedControls( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSlider_setMaximum)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMaximum( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSlider_setMinimum)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMinimum( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSlider_setPageStep)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPageStep( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSlider_setSingleStep)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSingleStep( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSlider_setSliderDown)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSliderDown( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSlider_setSliderPosition)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSliderPosition( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSlider_setTracking)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTracking( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSlider_singleStep)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	RING_API_RETNUMBER(pObject->singleStep());
}


RING_FUNC(ring_QAbstractSlider_sliderPosition)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	RING_API_RETNUMBER(pObject->sliderPosition());
}


RING_FUNC(ring_QAbstractSlider_triggerAction)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->triggerAction( (QAbstractSlider::SliderAction )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSlider_value)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	RING_API_RETNUMBER(pObject->value());
}


RING_FUNC(ring_QAbstractSlider_setOrientation)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOrientation( (Qt::Orientation)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSlider_setRange)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRange( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QAbstractSlider_setValue)
{
	QAbstractSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setValue( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSlider_setTickInterval)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTickInterval( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSlider_setTickPosition)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTickPosition( (QSlider::TickPosition )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSlider_tickInterval)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	RING_API_RETNUMBER(pObject->tickInterval());
}


RING_FUNC(ring_QSlider_tickPosition)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	RING_API_RETNUMBER(pObject->tickPosition());
}


RING_FUNC(ring_QSlider_minimumSizeHint)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->minimumSizeHint();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QSlider_sizeHint)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->sizeHint();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QSlider_setactionTriggeredEvent)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setactionTriggeredEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSlider_setrangeChangedEvent)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setrangeChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSlider_setsliderMovedEvent)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsliderMovedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSlider_setsliderPressedEvent)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsliderPressedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSlider_setsliderReleasedEvent)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsliderReleasedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSlider_setvalueChangedEvent)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setvalueChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSlider_getactionTriggeredEvent)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	RING_API_RETSTRING(pObject->getactionTriggeredEvent());
}


RING_FUNC(ring_QSlider_getrangeChangedEvent)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	RING_API_RETSTRING(pObject->getrangeChangedEvent());
}


RING_FUNC(ring_QSlider_getsliderMovedEvent)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	RING_API_RETSTRING(pObject->getsliderMovedEvent());
}


RING_FUNC(ring_QSlider_getsliderPressedEvent)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	RING_API_RETSTRING(pObject->getsliderPressedEvent());
}


RING_FUNC(ring_QSlider_getsliderReleasedEvent)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	RING_API_RETSTRING(pObject->getsliderReleasedEvent());
}


RING_FUNC(ring_QSlider_getvalueChangedEvent)
{
	GSlider *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSlider *) RING_API_GETCPOINTER(1,"QSlider");
	RING_API_RETSTRING(pObject->getvalueChangedEvent());
}


RING_FUNC(ring_QDateTimeEdit_calendarPopup)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	RING_API_RETNUMBER(pObject->calendarPopup());
}


RING_FUNC(ring_QDateTimeEdit_calendarWidget)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	RING_API_RETCPOINTER(pObject->calendarWidget(),"QCalendarWidget");
}


RING_FUNC(ring_QDateTimeEdit_clearMaximumDate)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->clearMaximumDate();
}


RING_FUNC(ring_QDateTimeEdit_clearMaximumDateTime)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->clearMaximumDateTime();
}


RING_FUNC(ring_QDateTimeEdit_clearMaximumTime)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->clearMaximumTime();
}


RING_FUNC(ring_QDateTimeEdit_clearMinimumDate)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->clearMinimumDate();
}


RING_FUNC(ring_QDateTimeEdit_clearMinimumDateTime)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->clearMinimumDateTime();
}


RING_FUNC(ring_QDateTimeEdit_clearMinimumTime)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->clearMinimumTime();
}


RING_FUNC(ring_QDateTimeEdit_currentSection)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	RING_API_RETNUMBER(pObject->currentSection());
}


RING_FUNC(ring_QDateTimeEdit_currentSectionIndex)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	RING_API_RETNUMBER(pObject->currentSectionIndex());
}


RING_FUNC(ring_QDateTimeEdit_date)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	{
		QDate *pValue ; 
		pValue = new QDate() ;
		*pValue = pObject->date();
		RING_API_RETCPOINTER(pValue,"QDate");
	}
}


RING_FUNC(ring_QDateTimeEdit_dateTime)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->dateTime();
		RING_API_RETCPOINTER(pValue,"QDateTime");
	}
}


RING_FUNC(ring_QDateTimeEdit_displayFormat)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	RING_API_RETSTRING(pObject->displayFormat().toStdString().c_str());
}


RING_FUNC(ring_QDateTimeEdit_displayedSections)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	RING_API_RETNUMBER(pObject->displayedSections());
}


RING_FUNC(ring_QDateTimeEdit_maximumDate)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	{
		QDate *pValue ; 
		pValue = new QDate() ;
		*pValue = pObject->maximumDate();
		RING_API_RETCPOINTER(pValue,"QDate");
	}
}


RING_FUNC(ring_QDateTimeEdit_maximumDateTime)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->maximumDateTime();
		RING_API_RETCPOINTER(pValue,"QDateTime");
	}
}


RING_FUNC(ring_QDateTimeEdit_maximumTime)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	{
		QTime *pValue ; 
		pValue = new QTime() ;
		*pValue = pObject->maximumTime();
		RING_API_RETCPOINTER(pValue,"QTime");
	}
}


RING_FUNC(ring_QDateTimeEdit_minimumDate)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	{
		QDate *pValue ; 
		pValue = new QDate() ;
		*pValue = pObject->minimumDate();
		RING_API_RETCPOINTER(pValue,"QDate");
	}
}


RING_FUNC(ring_QDateTimeEdit_minimumDateTime)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->minimumDateTime();
		RING_API_RETCPOINTER(pValue,"QDateTime");
	}
}


RING_FUNC(ring_QDateTimeEdit_minimumTime)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	{
		QTime *pValue ; 
		pValue = new QTime() ;
		*pValue = pObject->minimumTime();
		RING_API_RETCPOINTER(pValue,"QTime");
	}
}


RING_FUNC(ring_QDateTimeEdit_sectionAt)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->sectionAt( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QDateTimeEdit_sectionCount)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	RING_API_RETNUMBER(pObject->sectionCount());
}


RING_FUNC(ring_QDateTimeEdit_sectionText)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->sectionText( (QDateTimeEdit::Section )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QDateTimeEdit_setCalendarPopup)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCalendarPopup( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDateTimeEdit_setCalendarWidget)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCalendarWidget((QCalendarWidget *) RING_API_GETCPOINTER(2,"QCalendarWidget"));
}


RING_FUNC(ring_QDateTimeEdit_setCurrentSection)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCurrentSection( (QDateTimeEdit::Section )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDateTimeEdit_setCurrentSectionIndex)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCurrentSectionIndex( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDateTimeEdit_setDateRange)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->setDateRange(* (QDate *) RING_API_GETCPOINTER(2,"QDate"),* (QDate *) RING_API_GETCPOINTER(3,"QDate"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QDate"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QDate"));
}


RING_FUNC(ring_QDateTimeEdit_setDateTimeRange)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->setDateTimeRange(* (QDateTime *) RING_API_GETCPOINTER(2,"QDateTime"),* (QDateTime *) RING_API_GETCPOINTER(3,"QDateTime"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QDateTime"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QDateTime"));
}


RING_FUNC(ring_QDateTimeEdit_setDisplayFormat)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDisplayFormat(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QDateTimeEdit_setMaximumDate)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->setMaximumDate(* (QDate *) RING_API_GETCPOINTER(2,"QDate"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QDate"));
}


RING_FUNC(ring_QDateTimeEdit_setMaximumDateTime)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->setMaximumDateTime(* (QDateTime *) RING_API_GETCPOINTER(2,"QDateTime"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QDateTime"));
}


RING_FUNC(ring_QDateTimeEdit_setMaximumTime)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->setMaximumTime(* (QTime *) RING_API_GETCPOINTER(2,"QTime"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTime"));
}


RING_FUNC(ring_QDateTimeEdit_setMinimumDate)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->setMinimumDate(* (QDate *) RING_API_GETCPOINTER(2,"QDate"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QDate"));
}


RING_FUNC(ring_QDateTimeEdit_setMinimumDateTime)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->setMinimumDateTime(* (QDateTime *) RING_API_GETCPOINTER(2,"QDateTime"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QDateTime"));
}


RING_FUNC(ring_QDateTimeEdit_setMinimumTime)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->setMinimumTime(* (QTime *) RING_API_GETCPOINTER(2,"QTime"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTime"));
}


RING_FUNC(ring_QDateTimeEdit_setSelectedSection)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSelectedSection( (QDateTimeEdit::Section )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDateTimeEdit_setTimeRange)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->setTimeRange(* (QTime *) RING_API_GETCPOINTER(2,"QTime"),* (QTime *) RING_API_GETCPOINTER(3,"QTime"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTime"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QTime"));
}


RING_FUNC(ring_QDateTimeEdit_setTimeSpec)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTimeSpec( (Qt::TimeSpec )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDateTimeEdit_time)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	{
		QTime *pValue ; 
		pValue = new QTime() ;
		*pValue = pObject->time();
		RING_API_RETCPOINTER(pValue,"QTime");
	}
}


RING_FUNC(ring_QDateTimeEdit_timeSpec)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	RING_API_RETNUMBER(pObject->timeSpec());
}


RING_FUNC(ring_QDateTimeEdit_setDate)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->setDate(* (QDate *) RING_API_GETCPOINTER(2,"QDate"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QDate"));
}


RING_FUNC(ring_QDateTimeEdit_setDateTime)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->setDateTime(* (QDateTime *) RING_API_GETCPOINTER(2,"QDateTime"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QDateTime"));
}


RING_FUNC(ring_QDateTimeEdit_setTime)
{
	QDateTimeEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
	pObject->setTime(* (QTime *) RING_API_GETCPOINTER(2,"QTime"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTime"));
}


RING_FUNC(ring_QAbstractSpinBox_alignment)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	RING_API_RETNUMBER(pObject->alignment());
}


RING_FUNC(ring_QAbstractSpinBox_buttonSymbols)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	RING_API_RETNUMBER(pObject->buttonSymbols());
}


RING_FUNC(ring_QAbstractSpinBox_correctionMode)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	RING_API_RETNUMBER(pObject->correctionMode());
}


RING_FUNC(ring_QAbstractSpinBox_hasAcceptableInput)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	RING_API_RETNUMBER(pObject->hasAcceptableInput());
}


RING_FUNC(ring_QAbstractSpinBox_hasFrame)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	RING_API_RETNUMBER(pObject->hasFrame());
}


RING_FUNC(ring_QAbstractSpinBox_interpretText)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	pObject->interpretText();
}


RING_FUNC(ring_QAbstractSpinBox_isAccelerated)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	RING_API_RETNUMBER(pObject->isAccelerated());
}


RING_FUNC(ring_QAbstractSpinBox_isReadOnly)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	RING_API_RETNUMBER(pObject->isReadOnly());
}


RING_FUNC(ring_QAbstractSpinBox_keyboardTracking)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	RING_API_RETNUMBER(pObject->keyboardTracking());
}


RING_FUNC(ring_QAbstractSpinBox_setAccelerated)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAccelerated( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSpinBox_setAlignment)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAlignment( (Qt::AlignmentFlag )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSpinBox_setButtonSymbols)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setButtonSymbols( (QAbstractSpinBox::ButtonSymbols )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSpinBox_setCorrectionMode)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCorrectionMode( (QAbstractSpinBox::CorrectionMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSpinBox_setFrame)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFrame( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSpinBox_setKeyboardTracking)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setKeyboardTracking( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSpinBox_setReadOnly)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setReadOnly( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSpinBox_setSpecialValueText)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSpecialValueText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAbstractSpinBox_setWrapping)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWrapping( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSpinBox_specialValueText)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	RING_API_RETSTRING(pObject->specialValueText().toStdString().c_str());
}


RING_FUNC(ring_QAbstractSpinBox_stepBy)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->stepBy( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSpinBox_text)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	RING_API_RETSTRING(pObject->text().toStdString().c_str());
}


RING_FUNC(ring_QAbstractSpinBox_wrapping)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	RING_API_RETNUMBER(pObject->wrapping());
}


RING_FUNC(ring_QAbstractSpinBox_clear)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	pObject->clear();
}


RING_FUNC(ring_QAbstractSpinBox_selectAll)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	pObject->selectAll();
}


RING_FUNC(ring_QAbstractSpinBox_stepDown)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	pObject->stepDown();
}


RING_FUNC(ring_QAbstractSpinBox_stepUp)
{
	QAbstractSpinBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
	pObject->stepUp();
}


RING_FUNC(ring_QDial_notchSize)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	RING_API_RETNUMBER(pObject->notchSize());
}


RING_FUNC(ring_QDial_notchTarget)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	RING_API_RETNUMBER(pObject->notchTarget());
}


RING_FUNC(ring_QDial_notchesVisible)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	RING_API_RETNUMBER(pObject->notchesVisible());
}


RING_FUNC(ring_QDial_setNotchTarget)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNotchTarget( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDial_wrapping)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	RING_API_RETNUMBER(pObject->wrapping());
}


RING_FUNC(ring_QDial_minimumSizeHint)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->minimumSizeHint();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QDial_sizeHint)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->sizeHint();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QDial_setNotchesVisible)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNotchesVisible( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDial_setWrapping)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWrapping( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDial_setactionTriggeredEvent)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setactionTriggeredEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QDial_setrangeChangedEvent)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setrangeChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QDial_setsliderMovedEvent)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsliderMovedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QDial_setsliderPressedEvent)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsliderPressedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QDial_setsliderReleasedEvent)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsliderReleasedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QDial_setvalueChangedEvent)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setvalueChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QDial_getactionTriggeredEvent)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	RING_API_RETSTRING(pObject->getactionTriggeredEvent());
}


RING_FUNC(ring_QDial_getrangeChangedEvent)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	RING_API_RETSTRING(pObject->getrangeChangedEvent());
}


RING_FUNC(ring_QDial_getsliderMovedEvent)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	RING_API_RETSTRING(pObject->getsliderMovedEvent());
}


RING_FUNC(ring_QDial_getsliderPressedEvent)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	RING_API_RETSTRING(pObject->getsliderPressedEvent());
}


RING_FUNC(ring_QDial_getsliderReleasedEvent)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	RING_API_RETSTRING(pObject->getsliderReleasedEvent());
}


RING_FUNC(ring_QDial_getvalueChangedEvent)
{
	GDial *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GDial *) RING_API_GETCPOINTER(1,"QDial");
	RING_API_RETSTRING(pObject->getvalueChangedEvent());
}


RING_FUNC(ring_QWebView_hasSelection)
{
	GWebView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWebView *) RING_API_GETCPOINTER(1,"QWebView");
	RING_API_RETNUMBER(pObject->hasSelection());
}


RING_FUNC(ring_QWebView_history)
{
	GWebView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWebView *) RING_API_GETCPOINTER(1,"QWebView");
	RING_API_RETCPOINTER(pObject->history(),"QWebHistory");
}


RING_FUNC(ring_QWebView_load)
{
	GWebView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWebView *) RING_API_GETCPOINTER(1,"QWebView");
	pObject->load(* (QUrl *) RING_API_GETCPOINTER(2,"QUrl"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QUrl"));
}


RING_FUNC(ring_QWebView_page)
{
	GWebView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWebView *) RING_API_GETCPOINTER(1,"QWebView");
	RING_API_RETCPOINTER(pObject->page(),"QWebPage");
}


RING_FUNC(ring_QWebView_pageAction)
{
	GWebView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWebView *) RING_API_GETCPOINTER(1,"QWebView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->pageAction( (QWebPage::WebAction )  (int) RING_API_GETNUMBER(2)),"QAction");
}


RING_FUNC(ring_QWebView_selectedText)
{
	GWebView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWebView *) RING_API_GETCPOINTER(1,"QWebView");
	RING_API_RETSTRING(pObject->selectedText().toStdString().c_str());
}


RING_FUNC(ring_QWebView_setContent)
{
	GWebView *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWebView *) RING_API_GETCPOINTER(1,"QWebView");
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setContent(* (QByteArray *) RING_API_GETCPOINTER(2,"QByteArray"),RING_API_GETSTRING(3),* (QUrl *) RING_API_GETCPOINTER(4,"QUrl"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QByteArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"QUrl"));
}


RING_FUNC(ring_QWebView_setHtml)
{
	GWebView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWebView *) RING_API_GETCPOINTER(1,"QWebView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHtml(RING_API_GETSTRING(2),* (QUrl *) RING_API_GETCPOINTER(3,"QUrl"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QUrl"));
}


RING_FUNC(ring_QWebView_setPage)
{
	GWebView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWebView *) RING_API_GETCPOINTER(1,"QWebView");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPage((QWebPage *) RING_API_GETCPOINTER(2,"QWebPage"));
}


RING_FUNC(ring_QWebView_setUrl)
{
	GWebView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWebView *) RING_API_GETCPOINTER(1,"QWebView");
	pObject->setUrl(* (QUrl *) RING_API_GETCPOINTER(2,"QUrl"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QUrl"));
}


RING_FUNC(ring_QWebView_setZoomFactor)
{
	GWebView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWebView *) RING_API_GETCPOINTER(1,"QWebView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setZoomFactor( (qreal ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWebView_settings)
{
	GWebView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWebView *) RING_API_GETCPOINTER(1,"QWebView");
	RING_API_RETCPOINTER(pObject->settings(),"QWebSettings");
}


RING_FUNC(ring_QWebView_title)
{
	GWebView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWebView *) RING_API_GETCPOINTER(1,"QWebView");
	RING_API_RETSTRING(pObject->title().toStdString().c_str());
}


RING_FUNC(ring_QWebView_triggerPageAction)
{
	GWebView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWebView *) RING_API_GETCPOINTER(1,"QWebView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->triggerPageAction( (QWebPage::WebAction )  (int) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QWebView_url)
{
	GWebView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWebView *) RING_API_GETCPOINTER(1,"QWebView");
	{
		QUrl *pValue ; 
		pValue = new QUrl() ;
		*pValue = pObject->url();
		RING_API_RETCPOINTER(pValue,"QUrl");
	}
}


RING_FUNC(ring_QWebView_zoomFactor)
{
	GWebView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWebView *) RING_API_GETCPOINTER(1,"QWebView");
	RING_API_RETNUMBER(pObject->zoomFactor());
}


RING_FUNC(ring_QWebView_back)
{
	GWebView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWebView *) RING_API_GETCPOINTER(1,"QWebView");
	pObject->back();
}


RING_FUNC(ring_QWebView_forward)
{
	GWebView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWebView *) RING_API_GETCPOINTER(1,"QWebView");
	pObject->forward();
}


RING_FUNC(ring_QWebView_print)
{
	GWebView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWebView *) RING_API_GETCPOINTER(1,"QWebView");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->print((QPrinter *) RING_API_GETCPOINTER(2,"QPrinter"));
}


RING_FUNC(ring_QWebView_reload)
{
	GWebView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWebView *) RING_API_GETCPOINTER(1,"QWebView");
	pObject->reload();
}


RING_FUNC(ring_QWebView_stop)
{
	GWebView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWebView *) RING_API_GETCPOINTER(1,"QWebView");
	pObject->stop();
}


RING_FUNC(ring_QWebView_setloadFinishedEvent)
{
	GWebView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWebView *) RING_API_GETCPOINTER(1,"QWebView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setloadFinishedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWebView_setloadProgressEvent)
{
	GWebView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWebView *) RING_API_GETCPOINTER(1,"QWebView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setloadProgressEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWebView_setloadStartedEvent)
{
	GWebView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWebView *) RING_API_GETCPOINTER(1,"QWebView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setloadStartedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWebView_setselectionChangedEvent)
{
	GWebView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWebView *) RING_API_GETCPOINTER(1,"QWebView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setselectionChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWebView_settitleChangedEvent)
{
	GWebView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWebView *) RING_API_GETCPOINTER(1,"QWebView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->settitleChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWebView_seturlChangedEvent)
{
	GWebView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWebView *) RING_API_GETCPOINTER(1,"QWebView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->seturlChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWebView_getloadFinishedEvent)
{
	GWebView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWebView *) RING_API_GETCPOINTER(1,"QWebView");
	RING_API_RETSTRING(pObject->getloadFinishedEvent());
}


RING_FUNC(ring_QWebView_getloadProgressEvent)
{
	GWebView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWebView *) RING_API_GETCPOINTER(1,"QWebView");
	RING_API_RETSTRING(pObject->getloadProgressEvent());
}


RING_FUNC(ring_QWebView_getloadStartedEvent)
{
	GWebView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWebView *) RING_API_GETCPOINTER(1,"QWebView");
	RING_API_RETSTRING(pObject->getloadStartedEvent());
}


RING_FUNC(ring_QWebView_getselectionChangedEvent)
{
	GWebView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWebView *) RING_API_GETCPOINTER(1,"QWebView");
	RING_API_RETSTRING(pObject->getselectionChangedEvent());
}


RING_FUNC(ring_QWebView_gettitleChangedEvent)
{
	GWebView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWebView *) RING_API_GETCPOINTER(1,"QWebView");
	RING_API_RETSTRING(pObject->gettitleChangedEvent());
}


RING_FUNC(ring_QWebView_geturlChangedEvent)
{
	GWebView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWebView *) RING_API_GETCPOINTER(1,"QWebView");
	RING_API_RETSTRING(pObject->geturlChangedEvent());
}


RING_FUNC(ring_QUrl_authority)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->authority( (QUrl::ComponentFormattingOption )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QUrl_clear)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	pObject->clear();
}


RING_FUNC(ring_QUrl_errorString)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	RING_API_RETSTRING(pObject->errorString().toStdString().c_str());
}


RING_FUNC(ring_QUrl_fileName)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->fileName( (QUrl::ComponentFormattingOption )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QUrl_fragment)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->fragment( (QUrl::ComponentFormattingOption )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QUrl_hasFragment)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	RING_API_RETNUMBER(pObject->hasFragment());
}


RING_FUNC(ring_QUrl_hasQuery)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	RING_API_RETNUMBER(pObject->hasQuery());
}


RING_FUNC(ring_QUrl_host)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->host( (QUrl::ComponentFormattingOption )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QUrl_isEmpty)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	RING_API_RETNUMBER(pObject->isEmpty());
}


RING_FUNC(ring_QUrl_isLocalFile)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	RING_API_RETNUMBER(pObject->isLocalFile());
}


RING_FUNC(ring_QUrl_isParentOf)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	RING_API_RETNUMBER(pObject->isParentOf(* (QUrl *) RING_API_GETCPOINTER(2,"QUrl")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QUrl"));
}


RING_FUNC(ring_QUrl_isRelative)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	RING_API_RETNUMBER(pObject->isRelative());
}


RING_FUNC(ring_QUrl_isValid)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	RING_API_RETNUMBER(pObject->isValid());
}


RING_FUNC(ring_QUrl_password)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->password( (QUrl::ComponentFormattingOption )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QUrl_path)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->path( (QUrl::ComponentFormattingOption )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QUrl_port)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->port( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QUrl_query)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->query( (QUrl::ComponentFormattingOption )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QUrl_resolved)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	{
		QUrl *pValue ; 
		pValue = new QUrl() ;
		*pValue = pObject->resolved(* (QUrl *) RING_API_GETCPOINTER(2,"QUrl"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QUrl"));
		RING_API_RETCPOINTER(pValue,"QUrl");
	}
}


RING_FUNC(ring_QUrl_scheme)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	RING_API_RETSTRING(pObject->scheme().toStdString().c_str());
}


RING_FUNC(ring_QUrl_setAuthority)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAuthority(RING_API_GETSTRING(2), (QUrl::ParsingMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QUrl_setFragment)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFragment(RING_API_GETSTRING(2), (QUrl::ParsingMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QUrl_setHost)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHost(RING_API_GETSTRING(2), (QUrl::ParsingMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QUrl_setPassword)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPassword(RING_API_GETSTRING(2), (QUrl::ParsingMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QUrl_setPath)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPath(RING_API_GETSTRING(2), (QUrl::ParsingMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QUrl_setPort)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPort( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QUrl_setQuery)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setQuery(RING_API_GETSTRING(2), (QUrl::ParsingMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QUrl_setScheme)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setScheme(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QUrl_setUrl)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUrl(RING_API_GETSTRING(2), (QUrl::ParsingMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QUrl_setUserInfo)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUserInfo(RING_API_GETSTRING(2), (QUrl::ParsingMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QUrl_setUserName)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUserName(RING_API_GETSTRING(2), (QUrl::ParsingMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QUrl_swap)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	pObject->swap(* (QUrl *) RING_API_GETCPOINTER(2,"QUrl"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QUrl"));
}


RING_FUNC(ring_QUrl_toLocalFile)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	RING_API_RETSTRING(pObject->toLocalFile().toStdString().c_str());
}


RING_FUNC(ring_QUrl_topLevelDomain)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->topLevelDomain( (QUrl::ComponentFormattingOption )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QUrl_userInfo)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->userInfo( (QUrl::ComponentFormattingOption )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QUrl_userName)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->userName( (QUrl::ComponentFormattingOption )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QUrl_fromLocalFile)
{
	QUrl *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QUrl *pValue ; 
		pValue = new QUrl() ;
		*pValue = pObject->fromLocalFile(RING_API_GETSTRING(2));
		RING_API_RETCPOINTER(pValue,"QUrl");
	}
}


RING_FUNC(ring_QCheckBox_checkState)
{
	GCheckBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"QCheckBox");
	RING_API_RETNUMBER(pObject->checkState());
}


RING_FUNC(ring_QCheckBox_isTristate)
{
	GCheckBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"QCheckBox");
	RING_API_RETNUMBER(pObject->isTristate());
}


RING_FUNC(ring_QCheckBox_setCheckState)
{
	GCheckBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"QCheckBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCheckState( (Qt::CheckState )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCheckBox_setTristate)
{
	GCheckBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"QCheckBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTristate( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCheckBox_minimumSizeHint)
{
	GCheckBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"QCheckBox");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->minimumSizeHint();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QCheckBox_sizeHint)
{
	GCheckBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"QCheckBox");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->sizeHint();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QCheckBox_setstateChangedEvent)
{
	GCheckBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"QCheckBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setstateChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QCheckBox_setclickedEvent)
{
	GCheckBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"QCheckBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setclickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QCheckBox_setpressedEvent)
{
	GCheckBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"QCheckBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setpressedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QCheckBox_setreleasedEvent)
{
	GCheckBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"QCheckBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setreleasedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QCheckBox_settoggledEvent)
{
	GCheckBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"QCheckBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->settoggledEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QCheckBox_getstateChangedEvent)
{
	GCheckBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"QCheckBox");
	RING_API_RETSTRING(pObject->getstateChangedEvent());
}


RING_FUNC(ring_QCheckBox_getclickedEvent)
{
	GCheckBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"QCheckBox");
	RING_API_RETSTRING(pObject->getclickedEvent());
}


RING_FUNC(ring_QCheckBox_getpressedEvent)
{
	GCheckBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"QCheckBox");
	RING_API_RETSTRING(pObject->getpressedEvent());
}


RING_FUNC(ring_QCheckBox_getreleasedEvent)
{
	GCheckBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"QCheckBox");
	RING_API_RETSTRING(pObject->getreleasedEvent());
}


RING_FUNC(ring_QCheckBox_gettoggledEvent)
{
	GCheckBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"QCheckBox");
	RING_API_RETSTRING(pObject->gettoggledEvent());
}


RING_FUNC(ring_QAbstractButton_autoExclusive)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	RING_API_RETNUMBER(pObject->autoExclusive());
}


RING_FUNC(ring_QAbstractButton_autoRepeat)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	RING_API_RETNUMBER(pObject->autoRepeat());
}


RING_FUNC(ring_QAbstractButton_autoRepeatDelay)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	RING_API_RETNUMBER(pObject->autoRepeatDelay());
}


RING_FUNC(ring_QAbstractButton_autoRepeatInterval)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	RING_API_RETNUMBER(pObject->autoRepeatInterval());
}


RING_FUNC(ring_QAbstractButton_group)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	RING_API_RETCPOINTER(pObject->group(),"QButtonGroup");
}


RING_FUNC(ring_QAbstractButton_icon)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	{
		QIcon *pValue ; 
		pValue = new QIcon() ;
		*pValue = pObject->icon();
		RING_API_RETCPOINTER(pValue,"QIcon");
	}
}


RING_FUNC(ring_QAbstractButton_iconSize)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->iconSize();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QAbstractButton_isCheckable)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	RING_API_RETNUMBER(pObject->isCheckable());
}


RING_FUNC(ring_QAbstractButton_isChecked)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	RING_API_RETNUMBER(pObject->isChecked());
}


RING_FUNC(ring_QAbstractButton_isDown)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	RING_API_RETNUMBER(pObject->isDown());
}


RING_FUNC(ring_QAbstractButton_setAutoExclusive)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAutoExclusive( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractButton_setAutoRepeat)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAutoRepeat( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractButton_setAutoRepeatDelay)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAutoRepeatDelay( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractButton_setAutoRepeatInterval)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAutoRepeatInterval( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractButton_setCheckable)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCheckable( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractButton_setDown)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDown( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractButton_setIcon)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	pObject->setIcon(* (QIcon *) RING_API_GETCPOINTER(2,"QIcon"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QIcon"));
}


RING_FUNC(ring_QAbstractButton_setShortcut)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	pObject->setShortcut(* (QKeySequence *) RING_API_GETCPOINTER(2,"QKeySequence"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QKeySequence"));
}


RING_FUNC(ring_QAbstractButton_setText)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAbstractButton_shortcut)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	{
		QKeySequence *pValue ; 
		pValue = new QKeySequence() ;
		*pValue = pObject->shortcut();
		RING_API_RETCPOINTER(pValue,"QKeySequence");
	}
}


RING_FUNC(ring_QAbstractButton_text)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	RING_API_RETSTRING(pObject->text().toStdString().c_str());
}


RING_FUNC(ring_QAbstractButton_animateClick)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->animateClick( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractButton_click)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	pObject->click();
}


RING_FUNC(ring_QAbstractButton_setChecked)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setChecked( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractButton_setIconSize)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	pObject->setIconSize(* (QSize *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QSize"));
}


RING_FUNC(ring_QAbstractButton_toggle)
{
	QAbstractButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAbstractButton *) RING_API_GETCPOINTER(1,"QAbstractButton");
	pObject->toggle();
}


RING_FUNC(ring_QRadioButton_minimumSizeHint)
{
	GRadioButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GRadioButton *) RING_API_GETCPOINTER(1,"QRadioButton");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->minimumSizeHint();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QRadioButton_sizeHint)
{
	GRadioButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GRadioButton *) RING_API_GETCPOINTER(1,"QRadioButton");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->sizeHint();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QRadioButton_setclickedEvent)
{
	GRadioButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GRadioButton *) RING_API_GETCPOINTER(1,"QRadioButton");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setclickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QRadioButton_setpressedEvent)
{
	GRadioButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GRadioButton *) RING_API_GETCPOINTER(1,"QRadioButton");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setpressedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QRadioButton_setreleasedEvent)
{
	GRadioButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GRadioButton *) RING_API_GETCPOINTER(1,"QRadioButton");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setreleasedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QRadioButton_settoggledEvent)
{
	GRadioButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GRadioButton *) RING_API_GETCPOINTER(1,"QRadioButton");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->settoggledEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QRadioButton_getclickedEvent)
{
	GRadioButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GRadioButton *) RING_API_GETCPOINTER(1,"QRadioButton");
	RING_API_RETSTRING(pObject->getclickedEvent());
}


RING_FUNC(ring_QRadioButton_getpressedEvent)
{
	GRadioButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GRadioButton *) RING_API_GETCPOINTER(1,"QRadioButton");
	RING_API_RETSTRING(pObject->getpressedEvent());
}


RING_FUNC(ring_QRadioButton_getreleasedEvent)
{
	GRadioButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GRadioButton *) RING_API_GETCPOINTER(1,"QRadioButton");
	RING_API_RETSTRING(pObject->getreleasedEvent());
}


RING_FUNC(ring_QRadioButton_gettoggledEvent)
{
	GRadioButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GRadioButton *) RING_API_GETCPOINTER(1,"QRadioButton");
	RING_API_RETSTRING(pObject->gettoggledEvent());
}


RING_FUNC(ring_QButtonGroup_addButton)
{
	GButtonGroup *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GButtonGroup *) RING_API_GETCPOINTER(1,"QButtonGroup");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addButton((QAbstractButton *) RING_API_GETCPOINTER(2,"QAbstractButton"), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QButtonGroup_button)
{
	GButtonGroup *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GButtonGroup *) RING_API_GETCPOINTER(1,"QButtonGroup");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->button( (int ) RING_API_GETNUMBER(2)),"QAbstractButton");
}


RING_FUNC(ring_QButtonGroup_checkedButton)
{
	GButtonGroup *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GButtonGroup *) RING_API_GETCPOINTER(1,"QButtonGroup");
	RING_API_RETCPOINTER(pObject->checkedButton(),"QAbstractButton");
}


RING_FUNC(ring_QButtonGroup_checkedId)
{
	GButtonGroup *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GButtonGroup *) RING_API_GETCPOINTER(1,"QButtonGroup");
	RING_API_RETNUMBER(pObject->checkedId());
}


RING_FUNC(ring_QButtonGroup_exclusive)
{
	GButtonGroup *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GButtonGroup *) RING_API_GETCPOINTER(1,"QButtonGroup");
	RING_API_RETNUMBER(pObject->exclusive());
}


RING_FUNC(ring_QButtonGroup_id)
{
	GButtonGroup *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GButtonGroup *) RING_API_GETCPOINTER(1,"QButtonGroup");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->id((QAbstractButton *) RING_API_GETCPOINTER(2,"QAbstractButton")));
}


RING_FUNC(ring_QButtonGroup_removeButton)
{
	GButtonGroup *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GButtonGroup *) RING_API_GETCPOINTER(1,"QButtonGroup");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeButton((QAbstractButton *) RING_API_GETCPOINTER(2,"QAbstractButton"));
}


RING_FUNC(ring_QButtonGroup_setExclusive)
{
	GButtonGroup *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GButtonGroup *) RING_API_GETCPOINTER(1,"QButtonGroup");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setExclusive( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QButtonGroup_setId)
{
	GButtonGroup *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GButtonGroup *) RING_API_GETCPOINTER(1,"QButtonGroup");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setId((QAbstractButton *) RING_API_GETCPOINTER(2,"QAbstractButton"), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QButtonGroup_setbuttonClickedEvent)
{
	GButtonGroup *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GButtonGroup *) RING_API_GETCPOINTER(1,"QButtonGroup");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setbuttonClickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QButtonGroup_setbuttonPressedEvent)
{
	GButtonGroup *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GButtonGroup *) RING_API_GETCPOINTER(1,"QButtonGroup");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setbuttonPressedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QButtonGroup_setbuttonReleasedEvent)
{
	GButtonGroup *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GButtonGroup *) RING_API_GETCPOINTER(1,"QButtonGroup");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setbuttonReleasedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QButtonGroup_getbuttonClickedEvent)
{
	GButtonGroup *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GButtonGroup *) RING_API_GETCPOINTER(1,"QButtonGroup");
	RING_API_RETSTRING(pObject->getbuttonClickedEvent());
}


RING_FUNC(ring_QButtonGroup_getbuttonPressedEvent)
{
	GButtonGroup *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GButtonGroup *) RING_API_GETCPOINTER(1,"QButtonGroup");
	RING_API_RETSTRING(pObject->getbuttonPressedEvent());
}


RING_FUNC(ring_QButtonGroup_getbuttonReleasedEvent)
{
	GButtonGroup *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GButtonGroup *) RING_API_GETCPOINTER(1,"QButtonGroup");
	RING_API_RETSTRING(pObject->getbuttonReleasedEvent());
}


RING_FUNC(ring_QMediaPlayer_bufferStatus)
{
	QMediaPlayer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlayer *) RING_API_GETCPOINTER(1,"QMediaPlayer");
	RING_API_RETNUMBER(pObject->bufferStatus());
}


RING_FUNC(ring_QMediaPlayer_currentMedia)
{
	QMediaPlayer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlayer *) RING_API_GETCPOINTER(1,"QMediaPlayer");
	{
		QMediaContent *pValue ; 
		pValue = (QMediaContent *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QMediaContent)) ;
		*pValue = pObject->currentMedia();
		RING_API_RETCPOINTER(pValue,"QMediaContent");
	}
}


RING_FUNC(ring_QMediaPlayer_currentNetworkConfiguration)
{
	QMediaPlayer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlayer *) RING_API_GETCPOINTER(1,"QMediaPlayer");
	{
		QNetworkConfiguration *pValue ; 
		pValue = (QNetworkConfiguration *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QNetworkConfiguration)) ;
		*pValue = pObject->currentNetworkConfiguration();
		RING_API_RETCPOINTER(pValue,"QNetworkConfiguration");
	}
}


RING_FUNC(ring_QMediaPlayer_duration)
{
	QMediaPlayer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlayer *) RING_API_GETCPOINTER(1,"QMediaPlayer");
	RING_API_RETNUMBER(pObject->duration());
}


RING_FUNC(ring_QMediaPlayer_error)
{
	QMediaPlayer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlayer *) RING_API_GETCPOINTER(1,"QMediaPlayer");
	RING_API_RETNUMBER(pObject->error());
}


RING_FUNC(ring_QMediaPlayer_errorString)
{
	QMediaPlayer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlayer *) RING_API_GETCPOINTER(1,"QMediaPlayer");
	RING_API_RETSTRING(pObject->errorString().toStdString().c_str());
}


RING_FUNC(ring_QMediaPlayer_isAudioAvailable)
{
	QMediaPlayer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlayer *) RING_API_GETCPOINTER(1,"QMediaPlayer");
	RING_API_RETNUMBER(pObject->isAudioAvailable());
}


RING_FUNC(ring_QMediaPlayer_isMuted)
{
	QMediaPlayer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlayer *) RING_API_GETCPOINTER(1,"QMediaPlayer");
	RING_API_RETNUMBER(pObject->isMuted());
}


RING_FUNC(ring_QMediaPlayer_isSeekable)
{
	QMediaPlayer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlayer *) RING_API_GETCPOINTER(1,"QMediaPlayer");
	RING_API_RETNUMBER(pObject->isSeekable());
}


RING_FUNC(ring_QMediaPlayer_isVideoAvailable)
{
	QMediaPlayer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlayer *) RING_API_GETCPOINTER(1,"QMediaPlayer");
	RING_API_RETNUMBER(pObject->isVideoAvailable());
}


RING_FUNC(ring_QMediaPlayer_media)
{
	QMediaPlayer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlayer *) RING_API_GETCPOINTER(1,"QMediaPlayer");
	{
		QMediaContent *pValue ; 
		pValue = (QMediaContent *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QMediaContent)) ;
		*pValue = pObject->media();
		RING_API_RETCPOINTER(pValue,"QMediaContent");
	}
}


RING_FUNC(ring_QMediaPlayer_mediaStatus)
{
	QMediaPlayer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlayer *) RING_API_GETCPOINTER(1,"QMediaPlayer");
	RING_API_RETNUMBER(pObject->mediaStatus());
}


RING_FUNC(ring_QMediaPlayer_mediaStream)
{
	QMediaPlayer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlayer *) RING_API_GETCPOINTER(1,"QMediaPlayer");
	RING_API_RETCPOINTER(pObject->mediaStream(),"QIODevice");
}


RING_FUNC(ring_QMediaPlayer_playbackRate)
{
	QMediaPlayer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlayer *) RING_API_GETCPOINTER(1,"QMediaPlayer");
	RING_API_RETNUMBER(pObject->playbackRate());
}


RING_FUNC(ring_QMediaPlayer_playlist)
{
	QMediaPlayer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlayer *) RING_API_GETCPOINTER(1,"QMediaPlayer");
	RING_API_RETCPOINTER(pObject->playlist(),"QMediaPlaylist");
}


RING_FUNC(ring_QMediaPlayer_position)
{
	QMediaPlayer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlayer *) RING_API_GETCPOINTER(1,"QMediaPlayer");
	RING_API_RETNUMBER(pObject->position());
}


RING_FUNC(ring_QMediaPlayer_setVideoOutput)
{
	QMediaPlayer *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlayer *) RING_API_GETCPOINTER(1,"QMediaPlayer");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setVideoOutput((QVideoWidget *) RING_API_GETCPOINTER(2,"QVideoWidget"));
}


RING_FUNC(ring_QMediaPlayer_state)
{
	QMediaPlayer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlayer *) RING_API_GETCPOINTER(1,"QMediaPlayer");
	RING_API_RETNUMBER(pObject->state());
}


RING_FUNC(ring_QMediaPlayer_volume)
{
	QMediaPlayer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlayer *) RING_API_GETCPOINTER(1,"QMediaPlayer");
	RING_API_RETNUMBER(pObject->volume());
}


RING_FUNC(ring_QMediaPlayer_pause)
{
	QMediaPlayer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlayer *) RING_API_GETCPOINTER(1,"QMediaPlayer");
	pObject->pause();
}


RING_FUNC(ring_QMediaPlayer_play)
{
	QMediaPlayer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlayer *) RING_API_GETCPOINTER(1,"QMediaPlayer");
	pObject->play();
}


RING_FUNC(ring_QMediaPlayer_setMedia)
{
	QMediaPlayer *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlayer *) RING_API_GETCPOINTER(1,"QMediaPlayer");
	pObject->setMedia(* (QUrl *) RING_API_GETCPOINTER(2,"QUrl"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QUrl"));
}


RING_FUNC(ring_QMediaPlayer_setMuted)
{
	QMediaPlayer *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlayer *) RING_API_GETCPOINTER(1,"QMediaPlayer");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMuted( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMediaPlayer_setPlaybackRate)
{
	QMediaPlayer *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlayer *) RING_API_GETCPOINTER(1,"QMediaPlayer");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPlaybackRate( (qreal ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMediaPlayer_setPlaylist)
{
	QMediaPlayer *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlayer *) RING_API_GETCPOINTER(1,"QMediaPlayer");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPlaylist((QMediaPlaylist *) RING_API_GETCPOINTER(2,"QMediaPlaylist"));
}


RING_FUNC(ring_QMediaPlayer_setPosition)
{
	QMediaPlayer *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlayer *) RING_API_GETCPOINTER(1,"QMediaPlayer");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPosition( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMediaPlayer_setVolume)
{
	QMediaPlayer *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlayer *) RING_API_GETCPOINTER(1,"QMediaPlayer");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setVolume( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMediaPlayer_stop)
{
	QMediaPlayer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlayer *) RING_API_GETCPOINTER(1,"QMediaPlayer");
	pObject->stop();
}


RING_FUNC(ring_QMediaPlaylist_addMedia)
{
	QMediaPlaylist *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlaylist *) RING_API_GETCPOINTER(1,"QMediaPlaylist");
	RING_API_RETNUMBER(pObject->addMedia(* (QUrl *) RING_API_GETCPOINTER(2,"QUrl")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QUrl"));
}


RING_FUNC(ring_QMediaPlaylist_clear)
{
	QMediaPlaylist *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlaylist *) RING_API_GETCPOINTER(1,"QMediaPlaylist");
	RING_API_RETNUMBER(pObject->clear());
}


RING_FUNC(ring_QMediaPlaylist_currentIndex)
{
	QMediaPlaylist *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlaylist *) RING_API_GETCPOINTER(1,"QMediaPlaylist");
	RING_API_RETNUMBER(pObject->currentIndex());
}


RING_FUNC(ring_QMediaPlaylist_currentMedia)
{
	QMediaPlaylist *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlaylist *) RING_API_GETCPOINTER(1,"QMediaPlaylist");
	{
		QMediaContent *pValue ; 
		pValue = (QMediaContent *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QMediaContent)) ;
		*pValue = pObject->currentMedia();
		RING_API_RETCPOINTER(pValue,"QMediaContent");
	}
}


RING_FUNC(ring_QMediaPlaylist_error)
{
	QMediaPlaylist *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlaylist *) RING_API_GETCPOINTER(1,"QMediaPlaylist");
	RING_API_RETNUMBER(pObject->error());
}


RING_FUNC(ring_QMediaPlaylist_errorString)
{
	QMediaPlaylist *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlaylist *) RING_API_GETCPOINTER(1,"QMediaPlaylist");
	RING_API_RETSTRING(pObject->errorString().toStdString().c_str());
}


RING_FUNC(ring_QMediaPlaylist_insertMedia)
{
	QMediaPlaylist *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlaylist *) RING_API_GETCPOINTER(1,"QMediaPlaylist");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->insertMedia( (int ) RING_API_GETNUMBER(2),* (QMediaContent *) RING_API_GETCPOINTER(3,"QMediaContent")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QMediaContent"));
}


RING_FUNC(ring_QMediaPlaylist_isEmpty)
{
	QMediaPlaylist *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlaylist *) RING_API_GETCPOINTER(1,"QMediaPlaylist");
	RING_API_RETNUMBER(pObject->isEmpty());
}


RING_FUNC(ring_QMediaPlaylist_isReadOnly)
{
	QMediaPlaylist *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlaylist *) RING_API_GETCPOINTER(1,"QMediaPlaylist");
	RING_API_RETNUMBER(pObject->isReadOnly());
}


RING_FUNC(ring_QMediaPlaylist_load)
{
	QMediaPlaylist *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlaylist *) RING_API_GETCPOINTER(1,"QMediaPlaylist");
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->load(* (QUrl *) RING_API_GETCPOINTER(2,"QUrl"),RING_API_GETSTRING(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QUrl"));
}


RING_FUNC(ring_QMediaPlaylist_media)
{
	QMediaPlaylist *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlaylist *) RING_API_GETCPOINTER(1,"QMediaPlaylist");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QMediaContent *pValue ; 
		pValue = (QMediaContent *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QMediaContent)) ;
		*pValue = pObject->media( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QMediaContent");
	}
}


RING_FUNC(ring_QMediaPlaylist_mediaCount)
{
	QMediaPlaylist *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlaylist *) RING_API_GETCPOINTER(1,"QMediaPlaylist");
	RING_API_RETNUMBER(pObject->mediaCount());
}


RING_FUNC(ring_QMediaPlaylist_nextIndex)
{
	QMediaPlaylist *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlaylist *) RING_API_GETCPOINTER(1,"QMediaPlaylist");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->nextIndex( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QMediaPlaylist_playbackMode)
{
	QMediaPlaylist *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlaylist *) RING_API_GETCPOINTER(1,"QMediaPlaylist");
	RING_API_RETNUMBER(pObject->playbackMode());
}


RING_FUNC(ring_QMediaPlaylist_previousIndex)
{
	QMediaPlaylist *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlaylist *) RING_API_GETCPOINTER(1,"QMediaPlaylist");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->previousIndex( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QMediaPlaylist_removeMedia)
{
	QMediaPlaylist *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlaylist *) RING_API_GETCPOINTER(1,"QMediaPlaylist");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->removeMedia( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QMediaPlaylist_save)
{
	QMediaPlaylist *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlaylist *) RING_API_GETCPOINTER(1,"QMediaPlaylist");
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->save(* (QUrl *) RING_API_GETCPOINTER(2,"QUrl"),RING_API_GETSTRING(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QUrl"));
}


RING_FUNC(ring_QMediaPlaylist_setPlaybackMode)
{
	QMediaPlaylist *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlaylist *) RING_API_GETCPOINTER(1,"QMediaPlaylist");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPlaybackMode( (QMediaPlaylist::PlaybackMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMediaPlaylist_next)
{
	QMediaPlaylist *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlaylist *) RING_API_GETCPOINTER(1,"QMediaPlaylist");
	pObject->next();
}


RING_FUNC(ring_QMediaPlaylist_previous)
{
	QMediaPlaylist *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlaylist *) RING_API_GETCPOINTER(1,"QMediaPlaylist");
	pObject->previous();
}


RING_FUNC(ring_QMediaPlaylist_setCurrentIndex)
{
	QMediaPlaylist *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlaylist *) RING_API_GETCPOINTER(1,"QMediaPlaylist");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCurrentIndex( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMediaPlaylist_shuffle)
{
	QMediaPlaylist *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaPlaylist *) RING_API_GETCPOINTER(1,"QMediaPlaylist");
	pObject->shuffle();
}


RING_FUNC(ring_QVideoWidget_aspectRatioMode)
{
	GVideoWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GVideoWidget *) RING_API_GETCPOINTER(1,"QVideoWidget");
	RING_API_RETNUMBER(pObject->aspectRatioMode());
}


RING_FUNC(ring_QVideoWidget_brightness)
{
	GVideoWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GVideoWidget *) RING_API_GETCPOINTER(1,"QVideoWidget");
	RING_API_RETNUMBER(pObject->brightness());
}


RING_FUNC(ring_QVideoWidget_contrast)
{
	GVideoWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GVideoWidget *) RING_API_GETCPOINTER(1,"QVideoWidget");
	RING_API_RETNUMBER(pObject->contrast());
}


RING_FUNC(ring_QVideoWidget_hue)
{
	GVideoWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GVideoWidget *) RING_API_GETCPOINTER(1,"QVideoWidget");
	RING_API_RETNUMBER(pObject->hue());
}


RING_FUNC(ring_QVideoWidget_isFullScreen)
{
	GVideoWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GVideoWidget *) RING_API_GETCPOINTER(1,"QVideoWidget");
	RING_API_RETNUMBER(pObject->isFullScreen());
}


RING_FUNC(ring_QVideoWidget_saturation)
{
	GVideoWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GVideoWidget *) RING_API_GETCPOINTER(1,"QVideoWidget");
	RING_API_RETNUMBER(pObject->saturation());
}


RING_FUNC(ring_QVideoWidget_setAspectRatioMode)
{
	GVideoWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GVideoWidget *) RING_API_GETCPOINTER(1,"QVideoWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAspectRatioMode( (Qt::AspectRatioMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QVideoWidget_setBrightness)
{
	GVideoWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GVideoWidget *) RING_API_GETCPOINTER(1,"QVideoWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setBrightness( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QVideoWidget_setContrast)
{
	GVideoWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GVideoWidget *) RING_API_GETCPOINTER(1,"QVideoWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setContrast( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QVideoWidget_setFullScreen)
{
	GVideoWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GVideoWidget *) RING_API_GETCPOINTER(1,"QVideoWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFullScreen( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QVideoWidget_setHue)
{
	GVideoWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GVideoWidget *) RING_API_GETCPOINTER(1,"QVideoWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHue( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QVideoWidget_setSaturation)
{
	GVideoWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GVideoWidget *) RING_API_GETCPOINTER(1,"QVideoWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSaturation( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QVideoWidget_setbrightnessChangedEvent)
{
	GVideoWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GVideoWidget *) RING_API_GETCPOINTER(1,"QVideoWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setbrightnessChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QVideoWidget_setcontrastChangedEvent)
{
	GVideoWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GVideoWidget *) RING_API_GETCPOINTER(1,"QVideoWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcontrastChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QVideoWidget_setfullScreenChangedEvent)
{
	GVideoWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GVideoWidget *) RING_API_GETCPOINTER(1,"QVideoWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setfullScreenChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QVideoWidget_sethueChangedEvent)
{
	GVideoWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GVideoWidget *) RING_API_GETCPOINTER(1,"QVideoWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->sethueChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QVideoWidget_setsaturationChangedEvent)
{
	GVideoWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GVideoWidget *) RING_API_GETCPOINTER(1,"QVideoWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsaturationChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QVideoWidget_getbrightnessChangedEvent)
{
	GVideoWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GVideoWidget *) RING_API_GETCPOINTER(1,"QVideoWidget");
	RING_API_RETSTRING(pObject->getbrightnessChangedEvent());
}


RING_FUNC(ring_QVideoWidget_getcontrastChangedEvent)
{
	GVideoWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GVideoWidget *) RING_API_GETCPOINTER(1,"QVideoWidget");
	RING_API_RETSTRING(pObject->getcontrastChangedEvent());
}


RING_FUNC(ring_QVideoWidget_getfullScreenChangedEvent)
{
	GVideoWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GVideoWidget *) RING_API_GETCPOINTER(1,"QVideoWidget");
	RING_API_RETSTRING(pObject->getfullScreenChangedEvent());
}


RING_FUNC(ring_QVideoWidget_gethueChangedEvent)
{
	GVideoWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GVideoWidget *) RING_API_GETCPOINTER(1,"QVideoWidget");
	RING_API_RETSTRING(pObject->gethueChangedEvent());
}


RING_FUNC(ring_QVideoWidget_getsaturationChangedEvent)
{
	GVideoWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GVideoWidget *) RING_API_GETCPOINTER(1,"QVideoWidget");
	RING_API_RETSTRING(pObject->getsaturationChangedEvent());
}


RING_FUNC(ring_QAction_actionGroup)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETCPOINTER(pObject->actionGroup(),"QActionGroup");
}


RING_FUNC(ring_QAction_activate)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->activate( (QAction::ActionEvent )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAction_autoRepeat)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETNUMBER(pObject->autoRepeat());
}


RING_FUNC(ring_QAction_data)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->data();
		RING_API_RETCPOINTER(pValue,"QVariant");
	}
}


RING_FUNC(ring_QAction_font)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	{
		QFont *pValue ; 
		pValue = new QFont() ;
		*pValue = pObject->font();
		RING_API_RETCPOINTER(pValue,"QFont");
	}
}


RING_FUNC(ring_QAction_icon)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	{
		QIcon *pValue ; 
		pValue = new QIcon() ;
		*pValue = pObject->icon();
		RING_API_RETCPOINTER(pValue,"QIcon");
	}
}


RING_FUNC(ring_QAction_iconText)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETSTRING(pObject->iconText().toStdString().c_str());
}


RING_FUNC(ring_QAction_isCheckable)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETNUMBER(pObject->isCheckable());
}


RING_FUNC(ring_QAction_isChecked)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETNUMBER(pObject->isChecked());
}


RING_FUNC(ring_QAction_isEnabled)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETNUMBER(pObject->isEnabled());
}


RING_FUNC(ring_QAction_isIconVisibleInMenu)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETNUMBER(pObject->isIconVisibleInMenu());
}


RING_FUNC(ring_QAction_isSeparator)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETNUMBER(pObject->isSeparator());
}


RING_FUNC(ring_QAction_isVisible)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETNUMBER(pObject->isVisible());
}


RING_FUNC(ring_QAction_menu)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETCPOINTER(pObject->menu(),"QMenu");
}


RING_FUNC(ring_QAction_menuRole)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETNUMBER(pObject->menuRole());
}


RING_FUNC(ring_QAction_parentWidget)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETCPOINTER(pObject->parentWidget(),"QWidget");
}


RING_FUNC(ring_QAction_priority)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETNUMBER(pObject->priority());
}


RING_FUNC(ring_QAction_setActionGroup)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setActionGroup((QActionGroup *) RING_API_GETCPOINTER(2,"QActionGroup"));
}


RING_FUNC(ring_QAction_setAutoRepeat)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAutoRepeat( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAction_setCheckable)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCheckable( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAction_setData)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	pObject->setData(* (QVariant *) RING_API_GETCPOINTER(2,"QVariant"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QVariant"));
}


RING_FUNC(ring_QAction_setFont)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	pObject->setFont(* (QFont *) RING_API_GETCPOINTER(2,"QFont"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QFont"));
}


RING_FUNC(ring_QAction_setIcon)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	pObject->setIcon(* (QIcon *) RING_API_GETCPOINTER(2,"QIcon"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QIcon"));
}


RING_FUNC(ring_QAction_setIconText)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setIconText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAction_setIconVisibleInMenu)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setIconVisibleInMenu( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAction_setMenu)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMenu((QMenu *) RING_API_GETCPOINTER(2,"QMenu"));
}


RING_FUNC(ring_QAction_setMenuRole)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMenuRole( (QAction::MenuRole )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAction_setPriority)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPriority( (QAction::Priority )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAction_setSeparator)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSeparator( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAction_setShortcut)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	pObject->setShortcut(* (QKeySequence *) RING_API_GETCPOINTER(2,"QKeySequence"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QKeySequence"));
}


RING_FUNC(ring_QAction_setShortcutContext)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setShortcutContext( (Qt::ShortcutContext )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAction_setShortcuts)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setShortcuts( (QKeySequence::StandardKey )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAction_setStatusTip)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStatusTip(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAction_setText)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAction_setToolTip)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setToolTip(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAction_setWhatsThis)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWhatsThis(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAction_shortcut)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	{
		QKeySequence *pValue ; 
		pValue = new QKeySequence() ;
		*pValue = pObject->shortcut();
		RING_API_RETCPOINTER(pValue,"QKeySequence");
	}
}


RING_FUNC(ring_QAction_shortcutContext)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETNUMBER(pObject->shortcutContext());
}


RING_FUNC(ring_QAction_showStatusText)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->showStatusText((QWidget *) RING_API_GETCPOINTER(2,"QWidget")));
}


RING_FUNC(ring_QAction_statusTip)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETSTRING(pObject->statusTip().toStdString().c_str());
}


RING_FUNC(ring_QAction_text)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETSTRING(pObject->text().toStdString().c_str());
}


RING_FUNC(ring_QAction_toolTip)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETSTRING(pObject->toolTip().toStdString().c_str());
}


RING_FUNC(ring_QAction_whatsThis)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETSTRING(pObject->whatsThis().toStdString().c_str());
}


RING_FUNC(ring_QAction_hover)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	pObject->hover();
}


RING_FUNC(ring_QAction_setChecked)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setChecked( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAction_setDisabled)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDisabled( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAction_setEnabled)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setEnabled( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAction_setVisible)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setVisible( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAction_toggle)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	pObject->toggle();
}


RING_FUNC(ring_QAction_trigger)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	pObject->trigger();
}


RING_FUNC(ring_QAction_setClickEvent)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setClickEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAction_getClickEvent)
{
	GAction *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAction *) RING_API_GETCPOINTER(1,"QAction");
	RING_API_RETSTRING(pObject->getClickEvent());
}


RING_FUNC(ring_QEvent_accept)
{
	QEvent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QEvent *) RING_API_GETCPOINTER(1,"QEvent");
	pObject->accept();
}


RING_FUNC(ring_QEvent_ignore)
{
	QEvent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QEvent *) RING_API_GETCPOINTER(1,"QEvent");
	pObject->ignore();
}


RING_FUNC(ring_QEvent_isAccepted)
{
	QEvent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QEvent *) RING_API_GETCPOINTER(1,"QEvent");
	RING_API_RETNUMBER(pObject->isAccepted());
}


RING_FUNC(ring_QEvent_setAccepted)
{
	QEvent *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QEvent *) RING_API_GETCPOINTER(1,"QEvent");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAccepted( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QEvent_spontaneous)
{
	QEvent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QEvent *) RING_API_GETCPOINTER(1,"QEvent");
	RING_API_RETNUMBER(pObject->spontaneous());
}


RING_FUNC(ring_QEvent_type)
{
	QEvent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QEvent *) RING_API_GETCPOINTER(1,"QEvent");
	RING_API_RETNUMBER(pObject->type());
}


RING_FUNC(ring_QMessageBox_addButton)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addButton((QAbstractButton *) RING_API_GETCPOINTER(2,"QAbstractButton"), (QMessageBox::ButtonRole )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QMessageBox_button)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->button( (QMessageBox::StandardButton )  (int) RING_API_GETNUMBER(2)),"QAbstractButton");
}


RING_FUNC(ring_QMessageBox_buttonRole)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->buttonRole((QAbstractButton *) RING_API_GETCPOINTER(2,"QAbstractButton")));
}


RING_FUNC(ring_QMessageBox_clickedButton)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	RING_API_RETCPOINTER(pObject->clickedButton(),"QAbstractButton");
}


RING_FUNC(ring_QMessageBox_defaultButton)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	RING_API_RETCPOINTER(pObject->defaultButton(),"QPushButton");
}


RING_FUNC(ring_QMessageBox_detailedText)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	RING_API_RETSTRING(pObject->detailedText().toStdString().c_str());
}


RING_FUNC(ring_QMessageBox_escapeButton)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	RING_API_RETCPOINTER(pObject->escapeButton(),"QAbstractButton");
}


RING_FUNC(ring_QMessageBox_iconPixmap)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->iconPixmap();
		RING_API_RETCPOINTER(pValue,"QPixmap");
	}
}


RING_FUNC(ring_QMessageBox_informativeText)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	RING_API_RETSTRING(pObject->informativeText().toStdString().c_str());
}


RING_FUNC(ring_QMessageBox_open)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->open((QObject *) RING_API_GETCPOINTER(2,"QObject"),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QMessageBox_removeButton)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeButton((QAbstractButton *) RING_API_GETCPOINTER(2,"QAbstractButton"));
}


RING_FUNC(ring_QMessageBox_setDefaultButton)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDefaultButton((QPushButton *) RING_API_GETCPOINTER(2,"QPushButton"));
}


RING_FUNC(ring_QMessageBox_setDetailedText)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDetailedText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QMessageBox_setEscapeButton)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setEscapeButton((QAbstractButton *) RING_API_GETCPOINTER(2,"QAbstractButton"));
}


RING_FUNC(ring_QMessageBox_setIconPixmap)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	pObject->setIconPixmap(* (QPixmap *) RING_API_GETCPOINTER(2,"QPixmap"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPixmap"));
}


RING_FUNC(ring_QMessageBox_setInformativeText)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setInformativeText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QMessageBox_setStandardButtons)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStandardButtons( (QMessageBox::StandardButton )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMessageBox_setText)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QMessageBox_setTextFormat)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTextFormat( (Qt::TextFormat )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMessageBox_setWindowModality)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowModality( (Qt::WindowModality )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMessageBox_setWindowTitle)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowTitle(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QMessageBox_standardButton)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->standardButton((QAbstractButton *) RING_API_GETCPOINTER(2,"QAbstractButton")));
}


RING_FUNC(ring_QMessageBox_standardButtons)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	RING_API_RETNUMBER(pObject->standardButtons());
}


RING_FUNC(ring_QMessageBox_text)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	RING_API_RETSTRING(pObject->text().toStdString().c_str());
}


RING_FUNC(ring_QMessageBox_textFormat)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	RING_API_RETNUMBER(pObject->textFormat());
}


RING_FUNC(ring_QMessageBox_exec)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	RING_API_RETNUMBER(pObject->exec());
}


RING_FUNC(ring_QMessageBox_about)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->about((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3),RING_API_GETSTRING(4));
}


RING_FUNC(ring_QMessageBox_aboutQt)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->aboutQt((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QMessageBox_critical)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->critical((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3),RING_API_GETSTRING(4), (int ) RING_API_GETNUMBER(5), (int ) RING_API_GETNUMBER(6)));
}


RING_FUNC(ring_QMessageBox_information)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->information((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3),RING_API_GETSTRING(4), (int ) RING_API_GETNUMBER(5), (int ) RING_API_GETNUMBER(6)));
}


RING_FUNC(ring_QMessageBox_question)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->question((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3),RING_API_GETSTRING(4), (int ) RING_API_GETNUMBER(5), (int  ) RING_API_GETNUMBER(6)));
}


RING_FUNC(ring_QMessageBox_warning)
{
	QMessageBox *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->warning((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3),RING_API_GETSTRING(4), (int ) RING_API_GETNUMBER(5), (int ) RING_API_GETNUMBER(6)));
}


RING_FUNC(ring_QTimer_interval)
{
	GTimer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTimer *) RING_API_GETCPOINTER(1,"QTimer");
	RING_API_RETNUMBER(pObject->interval());
}


RING_FUNC(ring_QTimer_isActive)
{
	GTimer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTimer *) RING_API_GETCPOINTER(1,"QTimer");
	RING_API_RETNUMBER(pObject->isActive());
}


RING_FUNC(ring_QTimer_isSingleShot)
{
	GTimer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTimer *) RING_API_GETCPOINTER(1,"QTimer");
	RING_API_RETNUMBER(pObject->isSingleShot());
}


RING_FUNC(ring_QTimer_setInterval)
{
	GTimer *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTimer *) RING_API_GETCPOINTER(1,"QTimer");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setInterval( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTimer_setSingleShot)
{
	GTimer *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTimer *) RING_API_GETCPOINTER(1,"QTimer");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSingleShot( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTimer_timerId)
{
	GTimer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTimer *) RING_API_GETCPOINTER(1,"QTimer");
	RING_API_RETNUMBER(pObject->timerId());
}


RING_FUNC(ring_QTimer_start)
{
	GTimer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTimer *) RING_API_GETCPOINTER(1,"QTimer");
	pObject->start();
}


RING_FUNC(ring_QTimer_stop)
{
	GTimer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTimer *) RING_API_GETCPOINTER(1,"QTimer");
	pObject->stop();
}


RING_FUNC(ring_QTimer_settimeoutEvent)
{
	GTimer *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTimer *) RING_API_GETCPOINTER(1,"QTimer");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->settimeoutEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTimer_gettimeoutEvent)
{
	GTimer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTimer *) RING_API_GETCPOINTER(1,"QTimer");
	RING_API_RETSTRING(pObject->gettimeoutEvent());
}


RING_FUNC(ring_QFileDialog_acceptMode)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	RING_API_RETNUMBER(pObject->acceptMode());
}


RING_FUNC(ring_QFileDialog_defaultSuffix)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	RING_API_RETSTRING(pObject->defaultSuffix().toStdString().c_str());
}


RING_FUNC(ring_QFileDialog_directory)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	{
		QDir *pValue ; 
		pValue = new QDir() ;
		*pValue = pObject->directory();
		RING_API_RETCPOINTER(pValue,"QDir");
	}
}


RING_FUNC(ring_QFileDialog_directoryUrl)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	{
		QUrl *pValue ; 
		pValue = new QUrl() ;
		*pValue = pObject->directoryUrl();
		RING_API_RETCPOINTER(pValue,"QUrl");
	}
}


RING_FUNC(ring_QFileDialog_fileMode)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	RING_API_RETNUMBER(pObject->fileMode());
}


RING_FUNC(ring_QFileDialog_filter)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	RING_API_RETNUMBER(pObject->filter());
}


RING_FUNC(ring_QFileDialog_history)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->history();
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QFileDialog_iconProvider)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	RING_API_RETCPOINTER(pObject->iconProvider(),"QFileIconProvider");
}


RING_FUNC(ring_QFileDialog_itemDelegate)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	RING_API_RETCPOINTER(pObject->itemDelegate(),"QAbstractItemDelegate");
}


RING_FUNC(ring_QFileDialog_labelText)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->labelText( (QFileDialog::DialogLabel )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QFileDialog_mimeTypeFilters)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->mimeTypeFilters();
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QFileDialog_nameFilters)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->nameFilters();
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QFileDialog_open)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->open((QObject *) RING_API_GETCPOINTER(2,"QObject"),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QFileDialog_options)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	RING_API_RETNUMBER(pObject->options());
}


RING_FUNC(ring_QFileDialog_proxyModel)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	RING_API_RETCPOINTER(pObject->proxyModel(),"QAbstractProxyModel");
}


RING_FUNC(ring_QFileDialog_restoreState)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	RING_API_RETNUMBER(pObject->restoreState(* (QByteArray *) RING_API_GETCPOINTER(2,"QByteArray")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QByteArray"));
}


RING_FUNC(ring_QFileDialog_saveState)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->saveState();
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QFileDialog_selectFile)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->selectFile(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QFileDialog_selectMimeTypeFilter)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->selectMimeTypeFilter(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QFileDialog_selectNameFilter)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->selectNameFilter(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QFileDialog_selectUrl)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	pObject->selectUrl(* (QUrl *) RING_API_GETCPOINTER(2,"QUrl"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QUrl"));
}


RING_FUNC(ring_QFileDialog_selectedFiles)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->selectedFiles();
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QFileDialog_selectedNameFilter)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	RING_API_RETSTRING(pObject->selectedNameFilter().toStdString().c_str());
}


RING_FUNC(ring_QFileDialog_setAcceptMode)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAcceptMode( (QFileDialog::AcceptMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFileDialog_setDefaultSuffix)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDefaultSuffix(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QFileDialog_setDirectory)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDirectory(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QFileDialog_setDirectoryUrl)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	pObject->setDirectoryUrl(* (QUrl *) RING_API_GETCPOINTER(2,"QUrl"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QUrl"));
}


RING_FUNC(ring_QFileDialog_setFileMode)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFileMode( (QFileDialog::FileMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFileDialog_setFilter)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFilter( (QDir::Filter )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFileDialog_setHistory)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	pObject->setHistory(* (QStringList *) RING_API_GETCPOINTER(2,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QStringList"));
}


RING_FUNC(ring_QFileDialog_setIconProvider)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setIconProvider((QFileIconProvider *) RING_API_GETCPOINTER(2,"QFileIconProvider"));
}


RING_FUNC(ring_QFileDialog_setItemDelegate)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setItemDelegate((QAbstractItemDelegate *) RING_API_GETCPOINTER(2,"QAbstractItemDelegate"));
}


RING_FUNC(ring_QFileDialog_setLabelText)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLabelText( (QFileDialog::DialogLabel )  (int) RING_API_GETNUMBER(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QFileDialog_setMimeTypeFilters)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	pObject->setMimeTypeFilters(* (QStringList *) RING_API_GETCPOINTER(2,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QStringList"));
}


RING_FUNC(ring_QFileDialog_setNameFilter)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNameFilter(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QFileDialog_setNameFilters)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	pObject->setNameFilters(* (QStringList *) RING_API_GETCPOINTER(2,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QStringList"));
}


RING_FUNC(ring_QFileDialog_setOption)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOption( (QFileDialog::Option )  (int) RING_API_GETNUMBER(2), (bool) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QFileDialog_setOptions)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOptions( (QFileDialog::Option )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFileDialog_setProxyModel)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setProxyModel((QAbstractProxyModel *) RING_API_GETCPOINTER(2,"QAbstractProxyModel"));
}


RING_FUNC(ring_QFileDialog_setViewMode)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setViewMode( (QFileDialog::ViewMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFileDialog_testOption)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->testOption( (QFileDialog::Option )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QFileDialog_viewMode)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	RING_API_RETNUMBER(pObject->viewMode());
}


RING_FUNC(ring_QFileDialog_getExistingDirectory)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->getExistingDirectory((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3),RING_API_GETSTRING(4), (QFileDialog::Option)  (int) RING_API_GETNUMBER(5)).toStdString().c_str());
}


RING_FUNC(ring_QFileDialog_getExistingDirectoryUrl)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QUrl *pValue ; 
		pValue = new QUrl() ;
		*pValue = pObject->getExistingDirectoryUrl((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3),* (QUrl *) RING_API_GETCPOINTER(4,"QUrl"), (QFileDialog::Option)  (int) RING_API_GETNUMBER(5),* (QStringList *) RING_API_GETCPOINTER(6,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"QUrl"));
	if (RING_API_ISCPOINTERNOTASSIGNED(5))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(5,"QStringList"));
		RING_API_RETCPOINTER(pValue,"QUrl");
	}
}


RING_FUNC(ring_QFileDialog_getOpenFileName)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->getOpenFileName((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3),RING_API_GETSTRING(4),RING_API_GETSTRING(5)).toStdString().c_str());
}


RING_FUNC(ring_QFileDialog_getOpenFileUrl)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 8 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QUrl *pValue ; 
		pValue = new QUrl() ;
		*pValue = pObject->getOpenFileUrl((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3),* (QUrl *) RING_API_GETCPOINTER(4,"QUrl"),RING_API_GETSTRING(5),(QString *) RING_API_GETCPOINTER(6,"QString"), (QFileDialog::Option )  (int) RING_API_GETNUMBER(7),* (QStringList *) RING_API_GETCPOINTER(8,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"QUrl"));
	if (RING_API_ISCPOINTERNOTASSIGNED(7))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(7,"QStringList"));
		RING_API_RETCPOINTER(pValue,"QUrl");
	}
}


RING_FUNC(ring_QFileDialog_getSaveFileName)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->getSaveFileName((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3),RING_API_GETSTRING(4),RING_API_GETSTRING(5)).toStdString().c_str());
}


RING_FUNC(ring_QFileDialog_getSaveFileUrl)
{
	QFileDialog *pObject ;
	if ( RING_API_PARACOUNT != 8 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QUrl *pValue ; 
		pValue = new QUrl() ;
		*pValue = pObject->getSaveFileUrl((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3),* (QUrl *) RING_API_GETCPOINTER(4,"QUrl"),RING_API_GETSTRING(5),(QString *) RING_API_GETCPOINTER(6,"QString"), (QFileDialog::Option )  (int) RING_API_GETNUMBER(7),* (QStringList *) RING_API_GETCPOINTER(8,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"QUrl"));
	if (RING_API_ISCPOINTERNOTASSIGNED(7))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(7,"QStringList"));
		RING_API_RETCPOINTER(pValue,"QUrl");
	}
}


RING_FUNC(ring_QPainter_background)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	{
		QBrush *pValue ; 
		pValue = new QBrush() ;
		*pValue = pObject->background();
		RING_API_RETCPOINTER(pValue,"QBrush");
	}
}


RING_FUNC(ring_QPainter_backgroundMode)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	RING_API_RETNUMBER(pObject->backgroundMode());
}


RING_FUNC(ring_QPainter_begin)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->begin((QPaintDevice *) RING_API_GETCPOINTER(2,"QPaintDevice")));
}


RING_FUNC(ring_QPainter_beginNativePainting)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	pObject->beginNativePainting();
}


RING_FUNC(ring_QPainter_boundingRect)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 7 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->boundingRect( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5), (int ) RING_API_GETNUMBER(6),RING_API_GETSTRING(7));
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QPainter_brush)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	{
		QBrush *pValue ; 
		pValue = new QBrush() ;
		*pValue = pObject->brush();
		RING_API_RETCPOINTER(pValue,"QBrush");
	}
}


RING_FUNC(ring_QPainter_brushOrigin)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->brushOrigin();
		RING_API_RETCPOINTER(pValue,"QPoint");
	}
}


RING_FUNC(ring_QPainter_clipBoundingRect)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	{
		QRectF *pValue ; 
		pValue = (QRectF *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QRectF)) ;
		*pValue = pObject->clipBoundingRect();
		RING_API_RETCPOINTER(pValue,"QRectF");
	}
}


RING_FUNC(ring_QPainter_clipPath)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	{
		QPainterPath *pValue ; 
		pValue = new QPainterPath() ;
		*pValue = pObject->clipPath();
		RING_API_RETCPOINTER(pValue,"QPainterPath");
	}
}


RING_FUNC(ring_QPainter_clipRegion)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	{
		QRegion *pValue ; 
		pValue = new QRegion() ;
		*pValue = pObject->clipRegion();
		RING_API_RETCPOINTER(pValue,"QRegion");
	}
}


RING_FUNC(ring_QPainter_combinedTransform)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	{
		QTransform *pValue ; 
		pValue = (QTransform *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QTransform)) ;
		*pValue = pObject->combinedTransform();
		RING_API_RETCPOINTER(pValue,"QTransform");
	}
}


RING_FUNC(ring_QPainter_compositionMode)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	RING_API_RETNUMBER(pObject->compositionMode());
}


RING_FUNC(ring_QPainter_device)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	RING_API_RETCPOINTER(pObject->device(),"QPaintDevice");
}


RING_FUNC(ring_QPainter_deviceTransform)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	{
		QTransform *pValue ; 
		pValue = (QTransform *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QTransform)) ;
		*pValue = pObject->deviceTransform();
		RING_API_RETCPOINTER(pValue,"QTransform");
	}
}


RING_FUNC(ring_QPainter_drawArc)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 7 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawArc( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5), (int ) RING_API_GETNUMBER(6), (int ) RING_API_GETNUMBER(7));
}


RING_FUNC(ring_QPainter_drawChord)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 7 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawChord( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5), (int ) RING_API_GETNUMBER(6), (int ) RING_API_GETNUMBER(7));
}


RING_FUNC(ring_QPainter_drawConvexPolygon)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawConvexPolygon((QPoint *) RING_API_GETCPOINTER(2,"QPoint"), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QPainter_drawEllipse)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawEllipse( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QPainter_drawGlyphRun)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	pObject->drawGlyphRun(* (QPointF   *) RING_API_GETCPOINTER(2,"QPointF"),* (QGlyphRun   *) RING_API_GETCPOINTER(3,"QGlyphRun"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPointF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QGlyphRun"));
}


RING_FUNC(ring_QPainter_drawImage)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawImage( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3),* (QImage  *) RING_API_GETCPOINTER(4,"QImage"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"QImage"));
}


RING_FUNC(ring_QPainter_drawLine)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawLine( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QPainter_drawLines)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawLines((QLine *) RING_API_GETCPOINTER(2,"QLine"), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QPainter_drawPath)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	pObject->drawPath(* (QPainterPath   *) RING_API_GETCPOINTER(2,"QPainterPath"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPainterPath"));
}


RING_FUNC(ring_QPainter_drawPicture)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawPicture( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3),* (QPicture   *) RING_API_GETCPOINTER(4,"QPicture"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"QPicture"));
}


RING_FUNC(ring_QPainter_drawPie)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 7 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawPie( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5), (int ) RING_API_GETNUMBER(6), (int ) RING_API_GETNUMBER(7));
}


RING_FUNC(ring_QPainter_drawPixmap)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawPixmap( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3),* (QPixmap *) RING_API_GETCPOINTER(4,"QPixmap"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"QPixmap"));
}


RING_FUNC(ring_QPainter_drawPoint)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawPoint( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QPainter_drawPoints)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawPoints((QPointF *) RING_API_GETCPOINTER(2,"QPointF"), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QPainter_drawPolyline)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawPolyline((QPointF *) RING_API_GETCPOINTER(2,"QPointF"), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QPainter_drawRect)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawRect( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QPainter_drawRects)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawRects((QRectF *) RING_API_GETCPOINTER(2,"QRectF"), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QPainter_drawRoundedRect)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 8 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(8) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawRoundedRect( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5), (qreal ) RING_API_GETNUMBER(6), (qreal ) RING_API_GETNUMBER(7), (Qt::SizeMode )  (int) RING_API_GETNUMBER(8));
}


RING_FUNC(ring_QPainter_drawStaticText)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawStaticText( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3),* (QStaticText   *) RING_API_GETCPOINTER(4,"QStaticText"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"QStaticText"));
}


RING_FUNC(ring_QPainter_drawText)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawText( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3),RING_API_GETSTRING(4));
}


RING_FUNC(ring_QPainter_drawTiledPixmap)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 8 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(8) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawTiledPixmap( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5),* (QPixmap   *) RING_API_GETCPOINTER(6,"QPixmap"), (int ) RING_API_GETNUMBER(7), (int ) RING_API_GETNUMBER(8));
	if (RING_API_ISCPOINTERNOTASSIGNED(5))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(5,"QPixmap"));
}


RING_FUNC(ring_QPainter_end)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	RING_API_RETNUMBER(pObject->end());
}


RING_FUNC(ring_QPainter_endNativePainting)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	pObject->endNativePainting();
}


RING_FUNC(ring_QPainter_eraseRect)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->eraseRect( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QPainter_fillPath)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	pObject->fillPath(* (QPainterPath   *) RING_API_GETCPOINTER(2,"QPainterPath"),* (QBrush   *) RING_API_GETCPOINTER(3,"QBrush"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPainterPath"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QBrush"));
}


RING_FUNC(ring_QPainter_fillRect)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->fillRect( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5),* (QBrush *) RING_API_GETCPOINTER(6,"QBrush"));
	if (RING_API_ISCPOINTERNOTASSIGNED(5))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(5,"QBrush"));
}


RING_FUNC(ring_QPainter_font)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	{
		QFont *pValue ; 
		pValue = new QFont() ;
		*pValue = pObject->font();
		RING_API_RETCPOINTER(pValue,"QFont");
	}
}


RING_FUNC(ring_QPainter_fontInfo)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	{
		QFontInfo *pValue ; 
		pValue = (QFontInfo *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QFontInfo)) ;
		*pValue = pObject->fontInfo();
		RING_API_RETCPOINTER(pValue,"QFontInfo");
	}
}


RING_FUNC(ring_QPainter_hasClipping)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	RING_API_RETNUMBER(pObject->hasClipping());
}


RING_FUNC(ring_QPainter_initFrom)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->initFrom((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QPainter_isActive)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	RING_API_RETNUMBER(pObject->isActive());
}


RING_FUNC(ring_QPainter_layoutDirection)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	RING_API_RETNUMBER(pObject->layoutDirection());
}


RING_FUNC(ring_QPainter_opacity)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	RING_API_RETNUMBER(pObject->opacity());
}


RING_FUNC(ring_QPainter_paintEngine)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	RING_API_RETCPOINTER(pObject->paintEngine(),"QPaintEngine");
}


RING_FUNC(ring_QPainter_pen)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	{
		QPen *pValue ; 
		pValue = new QPen() ;
		*pValue = pObject->pen();
		RING_API_RETCPOINTER(pValue,"QPen");
	}
}


RING_FUNC(ring_QPainter_renderHints)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	RING_API_RETNUMBER(pObject->renderHints());
}


RING_FUNC(ring_QPainter_resetTransform)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	pObject->resetTransform();
}


RING_FUNC(ring_QPainter_restore)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	pObject->restore();
}


RING_FUNC(ring_QPainter_rotate)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->rotate( (qreal ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPainter_save)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	pObject->save();
}


RING_FUNC(ring_QPainter_scale)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->scale( (double ) RING_API_GETNUMBER(2), (double ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QPainter_setBackground)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	pObject->setBackground(* (QBrush   *) RING_API_GETCPOINTER(2,"QBrush"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QBrush"));
}


RING_FUNC(ring_QPainter_setBackgroundMode)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setBackgroundMode( (Qt::BGMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPainter_setBrush)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	pObject->setBrush(* (QBrush  *) RING_API_GETCPOINTER(2,"QBrush"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QBrush"));
}


RING_FUNC(ring_QPainter_setBrushOrigin)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setBrushOrigin( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QPainter_setClipPath)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setClipPath(* (QPainterPath   *) RING_API_GETCPOINTER(2,"QPainterPath"), (Qt::ClipOperation )  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPainterPath"));
}


RING_FUNC(ring_QPainter_setClipRect)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setClipRect( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5), (Qt::ClipOperation )  (int) RING_API_GETNUMBER(6));
}


RING_FUNC(ring_QPainter_setClipRegion)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setClipRegion(* (QRegion   *) RING_API_GETCPOINTER(2,"QRegion"), (Qt::ClipOperation )  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QRegion"));
}


RING_FUNC(ring_QPainter_setClipping)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setClipping( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPainter_setCompositionMode)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCompositionMode( (QPainter::CompositionMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPainter_setFont)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	pObject->setFont(* (QFont   *) RING_API_GETCPOINTER(2,"QFont"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QFont"));
}


RING_FUNC(ring_QPainter_setLayoutDirection)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLayoutDirection( (Qt::LayoutDirection )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPainter_setOpacity)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOpacity( (qreal ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPainter_setPen)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	pObject->setPen(* (QPen   *) RING_API_GETCPOINTER(2,"QPen"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPen"));
}


RING_FUNC(ring_QPainter_setRenderHint)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRenderHint( (QPainter::RenderHint )  (int) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QPainter_setTransform)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTransform(* (QTransform   *) RING_API_GETCPOINTER(2,"QTransform"), (bool ) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTransform"));
}


RING_FUNC(ring_QPainter_setViewTransformEnabled)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setViewTransformEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPainter_setViewport)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setViewport( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QPainter_setWindow)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindow( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QPainter_setWorldMatrixEnabled)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWorldMatrixEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPainter_setWorldTransform)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWorldTransform(* (QTransform   *) RING_API_GETCPOINTER(2,"QTransform"), (bool ) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTransform"));
}


RING_FUNC(ring_QPainter_shear)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->shear( (double ) RING_API_GETNUMBER(2), (double ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QPainter_strokePath)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	pObject->strokePath(* (QPainterPath   *) RING_API_GETCPOINTER(2,"QPainterPath"),* (QPen   *) RING_API_GETCPOINTER(3,"QPen"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPainterPath"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QPen"));
}


RING_FUNC(ring_QPainter_testRenderHint)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->testRenderHint( (QPainter::RenderHint )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QPainter_transform)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	{
		QTransform  *pValue ; 
		pValue = (QTransform  *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QTransform )) ;
		*pValue = pObject->transform();
		RING_API_RETCPOINTER(pValue,"QTransform");
	}
}


RING_FUNC(ring_QPainter_translate)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->translate( (double ) RING_API_GETNUMBER(2), (double ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QPainter_viewTransformEnabled)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	RING_API_RETNUMBER(pObject->viewTransformEnabled());
}


RING_FUNC(ring_QPainter_viewport)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->viewport();
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QPainter_window)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->window();
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QPainter_worldMatrixEnabled)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	RING_API_RETNUMBER(pObject->worldMatrixEnabled());
}


RING_FUNC(ring_QPainter_worldTransform)
{
	QPainter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	{
		QTransform  *pValue ; 
		pValue = (QTransform  *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QTransform )) ;
		*pValue = pObject->worldTransform();
		RING_API_RETCPOINTER(pValue,"QTransform");
	}
}

RING_FUNC(ring_QPainter_drawPolygon)
{
	QPainter *pObject;
	List *pList,*pList2;
	int x,nSize;
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
	pList = (List *) RING_API_GETLIST(2);
	nSize = ring_list_getsize(pList);
	QPointF *points = new QPointF[nSize];
	for (x=0 ; x < nSize ; x++) {
		pList2 = ring_list_getlist(pList,x+1);
		points[x].setX((float) ring_list_getdouble(pList2,1));
		points[x].setY((float) ring_list_getdouble(pList2,2));
	}
	pObject->drawPolygon(points, nSize, (Qt::FillRule )  (int) RING_API_GETNUMBER(3));	
	delete [] points;
}

RING_FUNC(ring_QPicture_boundingRect)
{
	QPicture *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPicture *) RING_API_GETCPOINTER(1,"QPicture");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->boundingRect();
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QPicture_data)
{
	QPicture *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPicture *) RING_API_GETCPOINTER(1,"QPicture");
	RING_API_RETSTRING(pObject->data());
}


RING_FUNC(ring_QPicture_isNull)
{
	QPicture *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPicture *) RING_API_GETCPOINTER(1,"QPicture");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QPicture_load)
{
	QPicture *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPicture *) RING_API_GETCPOINTER(1,"QPicture");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->load(RING_API_GETSTRING(2),RING_API_GETSTRING(3)));
}


RING_FUNC(ring_QPicture_play)
{
	QPicture *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPicture *) RING_API_GETCPOINTER(1,"QPicture");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->play((QPainter *) RING_API_GETCPOINTER(2,"QPainter")));
}


RING_FUNC(ring_QPicture_save)
{
	QPicture *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPicture *) RING_API_GETCPOINTER(1,"QPicture");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->save(RING_API_GETSTRING(2),RING_API_GETSTRING(3)));
}


RING_FUNC(ring_QPicture_setBoundingRect)
{
	QPicture *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPicture *) RING_API_GETCPOINTER(1,"QPicture");
	pObject->setBoundingRect(* (QRect *) RING_API_GETCPOINTER(2,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QRect"));
}


RING_FUNC(ring_QPicture_size)
{
	QPicture *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPicture *) RING_API_GETCPOINTER(1,"QPicture");
	RING_API_RETNUMBER(pObject->size());
}


RING_FUNC(ring_QPicture_swap)
{
	QPicture *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPicture *) RING_API_GETCPOINTER(1,"QPicture");
	pObject->swap(* (QPicture *) RING_API_GETCPOINTER(2,"QPicture"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPicture"));
}


RING_FUNC(ring_QPen_brush)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	{
		QBrush *pValue ; 
		pValue = new QBrush() ;
		*pValue = pObject->brush();
		RING_API_RETCPOINTER(pValue,"QBrush");
	}
}


RING_FUNC(ring_QPen_capStyle)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	RING_API_RETNUMBER(pObject->capStyle());
}


RING_FUNC(ring_QPen_color)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->color();
		RING_API_RETCPOINTER(pValue,"QColor");
	}
}


RING_FUNC(ring_QPen_dashOffset)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	RING_API_RETNUMBER(pObject->dashOffset());
}


RING_FUNC(ring_QPen_isCosmetic)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	RING_API_RETNUMBER(pObject->isCosmetic());
}


RING_FUNC(ring_QPen_isSolid)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	RING_API_RETNUMBER(pObject->isSolid());
}


RING_FUNC(ring_QPen_joinStyle)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	RING_API_RETNUMBER(pObject->joinStyle());
}


RING_FUNC(ring_QPen_miterLimit)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	RING_API_RETNUMBER(pObject->miterLimit());
}


RING_FUNC(ring_QPen_setBrush)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	pObject->setBrush(* (QBrush *) RING_API_GETCPOINTER(2,"QBrush"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QBrush"));
}


RING_FUNC(ring_QPen_setCapStyle)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCapStyle( (Qt::PenCapStyle )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPen_setColor)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	pObject->setColor(* (QColor *) RING_API_GETCPOINTER(2,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QColor"));
}


RING_FUNC(ring_QPen_setCosmetic)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCosmetic( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPen_setDashOffset)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDashOffset( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPen_setJoinStyle)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setJoinStyle( (Qt::PenJoinStyle )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPen_setMiterLimit)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMiterLimit( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPen_setStyle)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStyle( (Qt::PenStyle )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPen_setWidth)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWidth( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPen_setWidthF)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWidthF( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPen_style)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	RING_API_RETNUMBER(pObject->style());
}


RING_FUNC(ring_QPen_swap)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	pObject->swap(* (QPen *) RING_API_GETCPOINTER(2,"QPen"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPen"));
}


RING_FUNC(ring_QPen_width)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	RING_API_RETNUMBER(pObject->width());
}


RING_FUNC(ring_QPen_widthF)
{
	QPen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
	RING_API_RETNUMBER(pObject->widthF());
}


RING_FUNC(ring_QColor_alpha)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->alpha());
}


RING_FUNC(ring_QColor_alphaF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->alphaF());
}


RING_FUNC(ring_QColor_black)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->black());
}


RING_FUNC(ring_QColor_blackF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->blackF());
}


RING_FUNC(ring_QColor_blue)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->blue());
}


RING_FUNC(ring_QColor_blueF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->blueF());
}


RING_FUNC(ring_QColor_convertTo)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->convertTo( (QColor::Spec )  (int) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QColor");
	}
}


RING_FUNC(ring_QColor_cyan)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->cyan());
}


RING_FUNC(ring_QColor_cyanF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->cyanF());
}


RING_FUNC(ring_QColor_darker)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->darker( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QColor");
	}
}


RING_FUNC(ring_QColor_getCmyk)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->getCmyk(RING_API_GETINTPOINTER(2),RING_API_GETINTPOINTER(3),RING_API_GETINTPOINTER(4),RING_API_GETINTPOINTER(5),RING_API_GETINTPOINTER(6));
	RING_API_ACCEPTINTVALUE(1) ;
	RING_API_ACCEPTINTVALUE(2) ;
	RING_API_ACCEPTINTVALUE(3) ;
	RING_API_ACCEPTINTVALUE(4) ;
	RING_API_ACCEPTINTVALUE(5) ;
}


RING_FUNC(ring_QColor_getCmykF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->getCmykF((qreal *) RING_API_GETCPOINTER(2,"qreal"),(qreal *) RING_API_GETCPOINTER(3,"qreal"),(qreal *) RING_API_GETCPOINTER(4,"qreal"),(qreal *) RING_API_GETCPOINTER(5,"qreal"),(qreal *) RING_API_GETCPOINTER(6,"qreal"));
}


RING_FUNC(ring_QColor_getHsl)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->getHsl(RING_API_GETINTPOINTER(2),RING_API_GETINTPOINTER(3),RING_API_GETINTPOINTER(4),RING_API_GETINTPOINTER(5));
	RING_API_ACCEPTINTVALUE(1) ;
	RING_API_ACCEPTINTVALUE(2) ;
	RING_API_ACCEPTINTVALUE(3) ;
	RING_API_ACCEPTINTVALUE(4) ;
}


RING_FUNC(ring_QColor_getHslF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->getHslF((qreal *) RING_API_GETCPOINTER(2,"qreal"),(qreal *) RING_API_GETCPOINTER(3,"qreal"),(qreal *) RING_API_GETCPOINTER(4,"qreal"),(qreal *) RING_API_GETCPOINTER(5,"qreal"));
}


RING_FUNC(ring_QColor_getHsv)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->getHsv(RING_API_GETINTPOINTER(2),RING_API_GETINTPOINTER(3),RING_API_GETINTPOINTER(4),RING_API_GETINTPOINTER(5));
	RING_API_ACCEPTINTVALUE(1) ;
	RING_API_ACCEPTINTVALUE(2) ;
	RING_API_ACCEPTINTVALUE(3) ;
	RING_API_ACCEPTINTVALUE(4) ;
}


RING_FUNC(ring_QColor_getHsvF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->getHsvF((qreal *) RING_API_GETCPOINTER(2,"qreal"),(qreal *) RING_API_GETCPOINTER(3,"qreal"),(qreal *) RING_API_GETCPOINTER(4,"qreal"),(qreal *) RING_API_GETCPOINTER(5,"qreal"));
}


RING_FUNC(ring_QColor_getRgb)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->getRgb(RING_API_GETINTPOINTER(2),RING_API_GETINTPOINTER(3),RING_API_GETINTPOINTER(4),RING_API_GETINTPOINTER(5));
	RING_API_ACCEPTINTVALUE(1) ;
	RING_API_ACCEPTINTVALUE(2) ;
	RING_API_ACCEPTINTVALUE(3) ;
	RING_API_ACCEPTINTVALUE(4) ;
}


RING_FUNC(ring_QColor_getRgbF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->getRgbF((qreal *) RING_API_GETCPOINTER(2,"qreal"),(qreal *) RING_API_GETCPOINTER(3,"qreal"),(qreal *) RING_API_GETCPOINTER(4,"qreal"),(qreal *) RING_API_GETCPOINTER(5,"qreal"));
}


RING_FUNC(ring_QColor_green)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->green());
}


RING_FUNC(ring_QColor_greenF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->greenF());
}


RING_FUNC(ring_QColor_hslHue)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->hslHue());
}


RING_FUNC(ring_QColor_hslHueF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->hslHueF());
}


RING_FUNC(ring_QColor_hslSaturation)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->hslSaturation());
}


RING_FUNC(ring_QColor_hslSaturationF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->hslSaturationF());
}


RING_FUNC(ring_QColor_hsvHue)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->hsvHue());
}


RING_FUNC(ring_QColor_hsvHueF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->hsvHueF());
}


RING_FUNC(ring_QColor_hsvSaturation)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->hsvSaturation());
}


RING_FUNC(ring_QColor_hsvSaturationF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->hsvSaturationF());
}


RING_FUNC(ring_QColor_hue)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->hue());
}


RING_FUNC(ring_QColor_hueF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->hueF());
}


RING_FUNC(ring_QColor_isValid)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->isValid());
}


RING_FUNC(ring_QColor_lighter)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->lighter( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QColor");
	}
}


RING_FUNC(ring_QColor_lightness)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->lightness());
}


RING_FUNC(ring_QColor_lightnessF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->lightnessF());
}


RING_FUNC(ring_QColor_magenta)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->magenta());
}


RING_FUNC(ring_QColor_magentaF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->magentaF());
}


RING_FUNC(ring_QColor_name)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETSTRING(pObject->name().toStdString().c_str());
}


RING_FUNC(ring_QColor_red)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->red());
}


RING_FUNC(ring_QColor_redF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->redF());
}


RING_FUNC(ring_QColor_rgb)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	{
		QRgb *pValue ; 
		pValue = (QRgb *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QRgb)) ;
		*pValue = pObject->rgb();
		RING_API_RETCPOINTER(pValue,"QRgb");
	}
}


RING_FUNC(ring_QColor_rgba)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	{
		QRgb *pValue ; 
		pValue = (QRgb *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QRgb)) ;
		*pValue = pObject->rgba();
		RING_API_RETCPOINTER(pValue,"QRgb");
	}
}


RING_FUNC(ring_QColor_saturation)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->saturation());
}


RING_FUNC(ring_QColor_saturationF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->saturationF());
}


RING_FUNC(ring_QColor_setAlpha)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAlpha( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QColor_setAlphaF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAlphaF( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QColor_setBlue)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setBlue( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QColor_setBlueF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setBlueF( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QColor_setCmyk)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCmyk( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5), (int ) RING_API_GETNUMBER(6));
}


RING_FUNC(ring_QColor_setCmykF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCmykF( (double ) RING_API_GETNUMBER(2), (double ) RING_API_GETNUMBER(3), (double ) RING_API_GETNUMBER(4), (double ) RING_API_GETNUMBER(5), (double ) RING_API_GETNUMBER(6));
}


RING_FUNC(ring_QColor_setGreen)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setGreen( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QColor_setGreenF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setGreenF( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QColor_setHsl)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHsl( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QColor_setHslF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHslF( (double ) RING_API_GETNUMBER(2), (double ) RING_API_GETNUMBER(3), (double ) RING_API_GETNUMBER(4), (double ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QColor_setHsv)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHsv( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QColor_setHsvF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHsvF( (double ) RING_API_GETNUMBER(2), (double ) RING_API_GETNUMBER(3), (double ) RING_API_GETNUMBER(4), (double ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QColor_setNamedColor)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNamedColor(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QColor_setRed)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRed( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QColor_setRedF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRedF( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QColor_setRgb)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRgb( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QColor_setRgbF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRgbF( (double ) RING_API_GETNUMBER(2), (double ) RING_API_GETNUMBER(3), (double ) RING_API_GETNUMBER(4), (double ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QColor_setRgba)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	pObject->setRgba(* (QRgb  *) RING_API_GETCPOINTER(2,"QRgb"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QRgb"));
}


RING_FUNC(ring_QColor_spec)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->spec());
}


RING_FUNC(ring_QColor_toCmyk)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->toCmyk();
		RING_API_RETCPOINTER(pValue,"QColor");
	}
}


RING_FUNC(ring_QColor_toHsl)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->toHsl();
		RING_API_RETCPOINTER(pValue,"QColor");
	}
}


RING_FUNC(ring_QColor_toHsv)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->toHsv();
		RING_API_RETCPOINTER(pValue,"QColor");
	}
}


RING_FUNC(ring_QColor_toRgb)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->toRgb();
		RING_API_RETCPOINTER(pValue,"QColor");
	}
}


RING_FUNC(ring_QColor_value)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->value());
}


RING_FUNC(ring_QColor_valueF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->valueF());
}


RING_FUNC(ring_QColor_yellow)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->yellow());
}


RING_FUNC(ring_QColor_yellowF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	RING_API_RETNUMBER(pObject->yellowF());
}


RING_FUNC(ring_QColor_colorNames)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->colorNames();
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QColor_fromCmyk)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->fromCmyk( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5), (int ) RING_API_GETNUMBER(6));
		RING_API_RETCPOINTER(pValue,"QColor");
	}
}


RING_FUNC(ring_QColor_fromCmykF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->fromCmykF( (double ) RING_API_GETNUMBER(2), (double ) RING_API_GETNUMBER(3), (double ) RING_API_GETNUMBER(4), (double ) RING_API_GETNUMBER(5), (double ) RING_API_GETNUMBER(6));
		RING_API_RETCPOINTER(pValue,"QColor");
	}
}


RING_FUNC(ring_QColor_fromHsl)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->fromHsl( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
		RING_API_RETCPOINTER(pValue,"QColor");
	}
}


RING_FUNC(ring_QColor_fromHslF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->fromHslF( (double ) RING_API_GETNUMBER(2), (double ) RING_API_GETNUMBER(3), (double ) RING_API_GETNUMBER(4), (double ) RING_API_GETNUMBER(5));
		RING_API_RETCPOINTER(pValue,"QColor");
	}
}


RING_FUNC(ring_QColor_fromHsv)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->fromHsv( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
		RING_API_RETCPOINTER(pValue,"QColor");
	}
}


RING_FUNC(ring_QColor_fromHsvF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->fromHsvF( (double ) RING_API_GETNUMBER(2), (double ) RING_API_GETNUMBER(3), (double ) RING_API_GETNUMBER(4), (double ) RING_API_GETNUMBER(5));
		RING_API_RETCPOINTER(pValue,"QColor");
	}
}


RING_FUNC(ring_QColor_fromRgb)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->fromRgb( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
		RING_API_RETCPOINTER(pValue,"QColor");
	}
}


RING_FUNC(ring_QColor_fromRgbF)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->fromRgbF( (double ) RING_API_GETNUMBER(2), (double ) RING_API_GETNUMBER(3), (double ) RING_API_GETNUMBER(4), (double ) RING_API_GETNUMBER(5));
		RING_API_RETCPOINTER(pValue,"QColor");
	}
}


RING_FUNC(ring_QColor_fromRgba)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->fromRgba(* (QRgb  *) RING_API_GETCPOINTER(2,"QRgb"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QRgb"));
		RING_API_RETCPOINTER(pValue,"QColor");
	}
}


RING_FUNC(ring_QColor_isValidColor)
{
	QColor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isValidColor(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QPrinter_abort)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	RING_API_RETNUMBER(pObject->abort());
}


RING_FUNC(ring_QPrinter_collateCopies)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	RING_API_RETNUMBER(pObject->collateCopies());
}


RING_FUNC(ring_QPrinter_colorMode)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	RING_API_RETNUMBER(pObject->colorMode());
}


RING_FUNC(ring_QPrinter_copyCount)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	RING_API_RETNUMBER(pObject->copyCount());
}


RING_FUNC(ring_QPrinter_creator)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	RING_API_RETSTRING(pObject->creator().toStdString().c_str());
}


RING_FUNC(ring_QPrinter_docName)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	RING_API_RETSTRING(pObject->docName().toStdString().c_str());
}


RING_FUNC(ring_QPrinter_duplex)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	RING_API_RETNUMBER(pObject->duplex());
}


RING_FUNC(ring_QPrinter_fontEmbeddingEnabled)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	RING_API_RETNUMBER(pObject->fontEmbeddingEnabled());
}


RING_FUNC(ring_QPrinter_fromPage)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	RING_API_RETNUMBER(pObject->fromPage());
}


RING_FUNC(ring_QPrinter_fullPage)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	RING_API_RETNUMBER(pObject->fullPage());
}


RING_FUNC(ring_QPrinter_isValid)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	RING_API_RETNUMBER(pObject->isValid());
}


RING_FUNC(ring_QPrinter_outputFileName)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	RING_API_RETSTRING(pObject->outputFileName().toStdString().c_str());
}


RING_FUNC(ring_QPrinter_outputFormat)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	RING_API_RETNUMBER(pObject->outputFormat());
}


RING_FUNC(ring_QPrinter_pageOrder)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	RING_API_RETNUMBER(pObject->pageOrder());
}


RING_FUNC(ring_QPrinter_pageRect)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRectF *pValue ; 
		pValue = (QRectF *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QRectF)) ;
		*pValue = pObject->pageRect( (QPrinter::Unit )  (int) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QRectF");
	}
}


RING_FUNC(ring_QPrinter_paperRect)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRectF *pValue ; 
		pValue = (QRectF *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QRectF)) ;
		*pValue = pObject->paperRect( (QPrinter::Unit )  (int) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QRectF");
	}
}


RING_FUNC(ring_QPrinter_paperSource)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	RING_API_RETNUMBER(pObject->paperSource());
}


RING_FUNC(ring_QPrinter_printEngine)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	RING_API_RETCPOINTER(pObject->printEngine(),"QPrintEngine");
}


RING_FUNC(ring_QPrinter_printProgram)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	RING_API_RETSTRING(pObject->printProgram().toStdString().c_str());
}


RING_FUNC(ring_QPrinter_printRange)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	RING_API_RETNUMBER(pObject->printRange());
}


RING_FUNC(ring_QPrinter_printerName)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	RING_API_RETSTRING(pObject->printerName().toStdString().c_str());
}


RING_FUNC(ring_QPrinter_printerSelectionOption)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	RING_API_RETSTRING(pObject->printerSelectionOption().toStdString().c_str());
}


RING_FUNC(ring_QPrinter_printerState)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	RING_API_RETNUMBER(pObject->printerState());
}


RING_FUNC(ring_QPrinter_resolution)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	RING_API_RETNUMBER(pObject->resolution());
}


RING_FUNC(ring_QPrinter_setCollateCopies)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCollateCopies( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPrinter_setColorMode)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setColorMode( (QPrinter::ColorMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPrinter_setCopyCount)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCopyCount( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPrinter_setCreator)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCreator(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPrinter_setDocName)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDocName(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPrinter_setDuplex)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDuplex( (QPrinter::DuplexMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPrinter_setFontEmbeddingEnabled)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontEmbeddingEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPrinter_setFromTo)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFromTo( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QPrinter_setFullPage)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFullPage( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPrinter_setOutputFileName)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOutputFileName(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPrinter_setOutputFormat)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOutputFormat( (QPrinter::OutputFormat )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPrinter_setPageOrder)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPageOrder( (QPrinter::PageOrder )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPrinter_setPaperSource)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPaperSource( (QPrinter::PaperSource )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPrinter_setPrintProgram)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPrintProgram(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPrinter_setPrintRange)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPrintRange( (QPrinter::PrintRange)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPrinter_setPrinterName)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPrinterName(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPrinter_setPrinterSelectionOption)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPrinterSelectionOption(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPrinter_setResolution)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setResolution( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPrinter_supportsMultipleCopies)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	RING_API_RETNUMBER(pObject->supportsMultipleCopies());
}


RING_FUNC(ring_QPrinter_toPage)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	RING_API_RETNUMBER(pObject->toPage());
}


RING_FUNC(ring_QPrinter_newPage)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	RING_API_RETNUMBER(pObject->newPage());
}


RING_FUNC(ring_QPrinter_paintEngine)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	RING_API_RETCPOINTER(pObject->paintEngine(),"QPaintEngine");
}


RING_FUNC(ring_QPrinter_setPageSizeMM)
{
	QPrinter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
	pObject->setPageSizeMM(* (QSizeF *) RING_API_GETCPOINTER(2,"QSizeF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QSizeF"));
}


RING_FUNC(ring_QFont_bold)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->bold());
}


RING_FUNC(ring_QFont_capitalization)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->capitalization());
}


RING_FUNC(ring_QFont_defaultFamily)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETSTRING(pObject->defaultFamily().toStdString().c_str());
}


RING_FUNC(ring_QFont_exactMatch)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->exactMatch());
}


RING_FUNC(ring_QFont_family)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETSTRING(pObject->family().toStdString().c_str());
}


RING_FUNC(ring_QFont_fixedPitch)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->fixedPitch());
}


RING_FUNC(ring_QFont_fromString)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->fromString(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QFont_hintingPreference)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->hintingPreference());
}


RING_FUNC(ring_QFont_isCopyOf)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->isCopyOf(* (QFont *) RING_API_GETCPOINTER(2,"QFont")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QFont"));
}


RING_FUNC(ring_QFont_italic)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->italic());
}


RING_FUNC(ring_QFont_kerning)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->kerning());
}


RING_FUNC(ring_QFont_key)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETSTRING(pObject->key().toStdString().c_str());
}


RING_FUNC(ring_QFont_lastResortFamily)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETSTRING(pObject->lastResortFamily().toStdString().c_str());
}


RING_FUNC(ring_QFont_lastResortFont)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETSTRING(pObject->lastResortFont().toStdString().c_str());
}


RING_FUNC(ring_QFont_letterSpacing)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->letterSpacing());
}


RING_FUNC(ring_QFont_letterSpacingType)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->letterSpacingType());
}


RING_FUNC(ring_QFont_overline)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->overline());
}


RING_FUNC(ring_QFont_pixelSize)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->pixelSize());
}


RING_FUNC(ring_QFont_pointSize)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->pointSize());
}


RING_FUNC(ring_QFont_pointSizeF)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->pointSizeF());
}


RING_FUNC(ring_QFont_rawMode)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->rawMode());
}


RING_FUNC(ring_QFont_rawName)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETSTRING(pObject->rawName().toStdString().c_str());
}


RING_FUNC(ring_QFont_resolve)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	{
		QFont *pValue ; 
		pValue = new QFont() ;
		*pValue = pObject->resolve(* (QFont *) RING_API_GETCPOINTER(2,"QFont"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QFont"));
		RING_API_RETCPOINTER(pValue,"QFont");
	}
}


RING_FUNC(ring_QFont_setBold)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setBold( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setCapitalization)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCapitalization( (QFont::Capitalization )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setFamily)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFamily(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QFont_setFixedPitch)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFixedPitch( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setHintingPreference)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHintingPreference( (QFont::HintingPreference )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setItalic)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setItalic( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setKerning)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setKerning( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setLetterSpacing)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLetterSpacing( (QFont::SpacingType )  (int) RING_API_GETNUMBER(2), (double ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QFont_setOverline)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOverline( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setPixelSize)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPixelSize( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setPointSize)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPointSize( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setPointSizeF)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPointSizeF( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setRawMode)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRawMode( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setRawName)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRawName(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QFont_setStretch)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStretch( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setStrikeOut)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStrikeOut( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setStyle)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStyle( (QFont::Style )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setStyleHint)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStyleHint( (QFont::StyleHint )  (int) RING_API_GETNUMBER(2), (QFont::StyleStrategy )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QFont_setStyleName)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStyleName(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QFont_setStyleStrategy)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStyleStrategy( (QFont::StyleStrategy )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setUnderline)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUnderline( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setWeight)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWeight( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_setWordSpacing)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWordSpacing( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFont_stretch)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->stretch());
}


RING_FUNC(ring_QFont_strikeOut)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->strikeOut());
}


RING_FUNC(ring_QFont_style)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->style());
}


RING_FUNC(ring_QFont_styleHint)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->styleHint());
}


RING_FUNC(ring_QFont_styleName)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETSTRING(pObject->styleName().toStdString().c_str());
}


RING_FUNC(ring_QFont_styleStrategy)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->styleStrategy());
}


RING_FUNC(ring_QFont_toString)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETSTRING(pObject->toString().toStdString().c_str());
}


RING_FUNC(ring_QFont_underline)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->underline());
}


RING_FUNC(ring_QFont_weight)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->weight());
}


RING_FUNC(ring_QFont_wordSpacing)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	RING_API_RETNUMBER(pObject->wordSpacing());
}


RING_FUNC(ring_QFont_insertSubstitution)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertSubstitution(RING_API_GETSTRING(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QFont_insertSubstitutions)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertSubstitutions(RING_API_GETSTRING(2),* (QStringList *) RING_API_GETCPOINTER(3,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QStringList"));
}


RING_FUNC(ring_QFont_substitute)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->substitute(RING_API_GETSTRING(2)).toStdString().c_str());
}


RING_FUNC(ring_QFont_substitutes)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->substitutes(RING_API_GETSTRING(2));
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QFont_substitutions)
{
	QFont *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->substitutions();
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QBrush_color)
{
	QBrush *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBrush *) RING_API_GETCPOINTER(1,"QBrush");
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->color();
		RING_API_RETCPOINTER(pValue,"QColor");
	}
}


RING_FUNC(ring_QBrush_gradient)
{
	QBrush *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBrush *) RING_API_GETCPOINTER(1,"QBrush");
	RING_API_RETCPOINTER(pObject->gradient(),"QGradient");
}


RING_FUNC(ring_QBrush_isOpaque)
{
	QBrush *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBrush *) RING_API_GETCPOINTER(1,"QBrush");
	RING_API_RETNUMBER(pObject->isOpaque());
}


RING_FUNC(ring_QBrush_matrix)
{
	QBrush *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBrush *) RING_API_GETCPOINTER(1,"QBrush");
	{
		QMatrix *pValue ; 
		pValue = (QMatrix *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QMatrix)) ;
		*pValue = pObject->matrix();
		RING_API_RETCPOINTER(pValue,"QMatrix");
	}
}


RING_FUNC(ring_QBrush_setColor)
{
	QBrush *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBrush *) RING_API_GETCPOINTER(1,"QBrush");
	pObject->setColor(* (QColor *) RING_API_GETCPOINTER(2,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QColor"));
}


RING_FUNC(ring_QBrush_setMatrix)
{
	QBrush *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBrush *) RING_API_GETCPOINTER(1,"QBrush");
	pObject->setMatrix(* (QMatrix *) RING_API_GETCPOINTER(2,"QMatrix"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QMatrix"));
}


RING_FUNC(ring_QBrush_setStyle)
{
	QBrush *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBrush *) RING_API_GETCPOINTER(1,"QBrush");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStyle( (Qt::BrushStyle )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QBrush_setTexture)
{
	QBrush *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBrush *) RING_API_GETCPOINTER(1,"QBrush");
	pObject->setTexture(* (QPixmap *) RING_API_GETCPOINTER(2,"QPixmap"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPixmap"));
}


RING_FUNC(ring_QBrush_setTextureImage)
{
	QBrush *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBrush *) RING_API_GETCPOINTER(1,"QBrush");
	pObject->setTextureImage(* (QImage *) RING_API_GETCPOINTER(2,"QImage"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QImage"));
}


RING_FUNC(ring_QBrush_setTransform)
{
	QBrush *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBrush *) RING_API_GETCPOINTER(1,"QBrush");
	pObject->setTransform(* (QTransform *) RING_API_GETCPOINTER(2,"QTransform"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTransform"));
}


RING_FUNC(ring_QBrush_style)
{
	QBrush *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBrush *) RING_API_GETCPOINTER(1,"QBrush");
	RING_API_RETNUMBER(pObject->style());
}


RING_FUNC(ring_QBrush_swap)
{
	QBrush *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBrush *) RING_API_GETCPOINTER(1,"QBrush");
	pObject->swap(* (QBrush *) RING_API_GETCPOINTER(2,"QBrush"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QBrush"));
}


RING_FUNC(ring_QBrush_texture)
{
	QBrush *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBrush *) RING_API_GETCPOINTER(1,"QBrush");
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->texture();
		RING_API_RETCPOINTER(pValue,"QPixmap");
	}
}


RING_FUNC(ring_QBrush_textureImage)
{
	QBrush *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBrush *) RING_API_GETCPOINTER(1,"QBrush");
	{
		QImage *pValue ; 
		pValue = new QImage() ;
		*pValue = pObject->textureImage();
		RING_API_RETCPOINTER(pValue,"QImage");
	}
}


RING_FUNC(ring_QBrush_transform)
{
	QBrush *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBrush *) RING_API_GETCPOINTER(1,"QBrush");
	{
		QTransform *pValue ; 
		pValue = (QTransform *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QTransform)) ;
		*pValue = pObject->transform();
		RING_API_RETCPOINTER(pValue,"QTransform");
	}
}


RING_FUNC(ring_QByteArray_append)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->append(RING_API_GETSTRING(2));
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QByteArray_at)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		char *pValue ; 
		pValue = (char *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(char)) ;
		*pValue = pObject->at( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"char");
	}
}


RING_FUNC(ring_QByteArray_capacity)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	RING_API_RETNUMBER(pObject->capacity());
}


RING_FUNC(ring_QByteArray_chop)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->chop( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QByteArray_clear)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	pObject->clear();
}


RING_FUNC(ring_QByteArray_constData)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	RING_API_RETSTRING(pObject->constData());
}


RING_FUNC(ring_QByteArray_contains)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->contains(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QByteArray_count)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->count(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QByteArray_data)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	RING_API_RETSTRING(pObject->data());
}


RING_FUNC(ring_QByteArray_endsWith)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->endsWith(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QByteArray_fill)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->fill(* (char  *) RING_API_GETCPOINTER(2,"char"), (int ) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"char"));
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QByteArray_indexOf)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->indexOf(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QByteArray_insert)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->insert( (int ) RING_API_GETNUMBER(2),RING_API_GETSTRING(3), (int ) RING_API_GETNUMBER(4));
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QByteArray_isEmpty)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	RING_API_RETNUMBER(pObject->isEmpty());
}


RING_FUNC(ring_QByteArray_isNull)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QByteArray_lastIndexOf)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->lastIndexOf(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QByteArray_left)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->left( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QByteArray_leftJustified)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->leftJustified( (int ) RING_API_GETNUMBER(2),* (char  *) RING_API_GETCPOINTER(3,"char"), (bool ) RING_API_GETNUMBER(4));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"char"));
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QByteArray_length)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	RING_API_RETNUMBER(pObject->length());
}


RING_FUNC(ring_QByteArray_mid)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->mid( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QByteArray_prepend)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->prepend(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3));
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QByteArray_push_back)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->push_back(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QByteArray_push_front)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->push_front(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QByteArray_remove)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->remove( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QByteArray_repeated)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->repeated( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QByteArray_replace)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray  *pValue ; 
		pValue = (QByteArray  *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QByteArray )) ;
		*pValue = pObject->replace( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3),RING_API_GETSTRING(4), (int ) RING_API_GETNUMBER(5));
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QByteArray_reserve)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->reserve( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QByteArray_resize)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->resize( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QByteArray_right)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->right( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QByteArray_rightJustified)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->rightJustified( (int ) RING_API_GETNUMBER(2),* (char  *) RING_API_GETCPOINTER(3,"char"), (bool ) RING_API_GETNUMBER(4));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"char"));
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QByteArray_setNum)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->setNum( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QByteArray_setRawData)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->setRawData(RING_API_GETSTRING(2),* (uint  *) RING_API_GETCPOINTER(3,"uint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"uint"));
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QByteArray_simplified)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->simplified();
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QByteArray_size)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	RING_API_RETNUMBER(pObject->size());
}


RING_FUNC(ring_QByteArray_squeeze)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	pObject->squeeze();
}


RING_FUNC(ring_QByteArray_startsWith)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->startsWith(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QByteArray_swap)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	pObject->swap(* (QByteArray  *) RING_API_GETCPOINTER(2,"QByteArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QByteArray"));
}


RING_FUNC(ring_QByteArray_toBase64)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->toBase64();
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QByteArray_toDouble)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toDouble((bool *) RING_API_GETCPOINTER(2,"bool")));
}


RING_FUNC(ring_QByteArray_toFloat)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toFloat((bool *) RING_API_GETCPOINTER(2,"bool")));
}


RING_FUNC(ring_QByteArray_toHex)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->toHex();
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QByteArray_toInt)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toInt((bool *) RING_API_GETCPOINTER(2,"bool"), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QByteArray_toLong)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		long *pValue ; 
		pValue = (long *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(long)) ;
		*pValue = pObject->toLong((bool *) RING_API_GETCPOINTER(2,"bool"), (int ) RING_API_GETNUMBER(3));
		RING_API_RETCPOINTER(pValue,"long");
	}
}


RING_FUNC(ring_QByteArray_toLongLong)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		qlonglong *pValue ; 
		pValue = (qlonglong *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(qlonglong)) ;
		*pValue = pObject->toLongLong((bool *) RING_API_GETCPOINTER(2,"bool"), (int ) RING_API_GETNUMBER(3));
		RING_API_RETCPOINTER(pValue,"qlonglong");
	}
}


RING_FUNC(ring_QByteArray_toLower)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->toLower();
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QByteArray_toPercentEncoding)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->toPercentEncoding(* (QByteArray *) RING_API_GETCPOINTER(2,"QByteArray"),* (QByteArray *) RING_API_GETCPOINTER(3,"QByteArray"),* (char  *) RING_API_GETCPOINTER(4,"char"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QByteArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QByteArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"char"));
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QByteArray_toShort)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		short *pValue ; 
		pValue = (short *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(short)) ;
		*pValue = pObject->toShort((bool *) RING_API_GETCPOINTER(2,"bool"), (int ) RING_API_GETNUMBER(3));
		RING_API_RETCPOINTER(pValue,"short");
	}
}


RING_FUNC(ring_QByteArray_toUInt)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toUInt((bool *) RING_API_GETCPOINTER(2,"bool"), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QByteArray_toULong)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toULong((bool *) RING_API_GETCPOINTER(2,"bool"), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QByteArray_toULongLong)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toULongLong((bool *) RING_API_GETCPOINTER(2,"bool"), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QByteArray_toUShort)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toUShort((bool *) RING_API_GETCPOINTER(2,"bool"), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QByteArray_toUpper)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->toUpper();
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QByteArray_trimmed)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->trimmed();
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QByteArray_truncate)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->truncate( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QByteArray_fromBase64)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->fromBase64(* (QByteArray *) RING_API_GETCPOINTER(2,"QByteArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QByteArray"));
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QByteArray_fromHex)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->fromHex(* (QByteArray *) RING_API_GETCPOINTER(2,"QByteArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QByteArray"));
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QByteArray_fromPercentEncoding)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->fromPercentEncoding(* (QByteArray *) RING_API_GETCPOINTER(2,"QByteArray"),* (char  *) RING_API_GETCPOINTER(3,"char"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QByteArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"char"));
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QByteArray_fromRawData)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->fromRawData(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3));
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QByteArray_number)
{
	QByteArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->number( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QIODevice_errorString)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	RING_API_RETSTRING(pObject->errorString().toStdString().c_str());
}


RING_FUNC(ring_QIODevice_getChar)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->getChar(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QIODevice_isOpen)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	RING_API_RETNUMBER(pObject->isOpen());
}


RING_FUNC(ring_QIODevice_isReadable)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	RING_API_RETNUMBER(pObject->isReadable());
}


RING_FUNC(ring_QIODevice_isTextModeEnabled)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	RING_API_RETNUMBER(pObject->isTextModeEnabled());
}


RING_FUNC(ring_QIODevice_isWritable)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	RING_API_RETNUMBER(pObject->isWritable());
}


RING_FUNC(ring_QIODevice_openMode)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	RING_API_RETNUMBER(pObject->openMode());
}


RING_FUNC(ring_QIODevice_peek)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->peek(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QIODevice_putChar)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	RING_API_RETNUMBER(pObject->putChar(* (char  *) RING_API_GETCPOINTER(2,"char")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"char"));
}


RING_FUNC(ring_QIODevice_read)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->read(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QIODevice_readAll)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->readAll();
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QIODevice_readLine)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->readLine(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QIODevice_setTextModeEnabled)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTextModeEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QIODevice_ungetChar)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	pObject->ungetChar(* (char  *) RING_API_GETCPOINTER(2,"char"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"char"));
}


RING_FUNC(ring_QIODevice_write)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->write(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QIODevice_atEnd)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	RING_API_RETNUMBER(pObject->atEnd());
}


RING_FUNC(ring_QIODevice_canReadLine)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	RING_API_RETNUMBER(pObject->canReadLine());
}


RING_FUNC(ring_QIODevice_close)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	pObject->close();
}


RING_FUNC(ring_QIODevice_open)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->open( (QIODevice::OpenMode )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QIODevice_pos)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	RING_API_RETNUMBER(pObject->pos());
}


RING_FUNC(ring_QIODevice_seek)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->seek( (qint64 ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QIODevice_size)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	RING_API_RETNUMBER(pObject->size());
}


RING_FUNC(ring_QIODevice_setaboutToCloseEvent)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setaboutToCloseEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QIODevice_setbytesWrittenEvent)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setbytesWrittenEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QIODevice_setreadChannelFinishedEvent)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setreadChannelFinishedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QIODevice_setreadyReadEvent)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setreadyReadEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QIODevice_getaboutToCloseEvent)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	RING_API_RETSTRING(pObject->getaboutToCloseEvent());
}


RING_FUNC(ring_QIODevice_getbytesWrittenEvent)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	RING_API_RETSTRING(pObject->getbytesWrittenEvent());
}


RING_FUNC(ring_QIODevice_getreadChannelFinishedEvent)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	RING_API_RETSTRING(pObject->getreadChannelFinishedEvent());
}


RING_FUNC(ring_QIODevice_getreadyReadEvent)
{
	GIODevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GIODevice *) RING_API_GETCPOINTER(1,"QIODevice");
	RING_API_RETSTRING(pObject->getreadyReadEvent());
}


RING_FUNC(ring_QAbstractSocket_abort)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	pObject->abort();
}


RING_FUNC(ring_QAbstractSocket_bind)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->bind(* (QHostAddress  *) RING_API_GETCPOINTER(2,"QHostAddress"), (int ) RING_API_GETNUMBER(3), (QAbstractSocket::BindFlag )  (int) RING_API_GETNUMBER(4)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QHostAddress"));
}


RING_FUNC(ring_QAbstractSocket_connectToHost)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->connectToHost(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3), (QIODevice::OpenModeFlag )  (int) RING_API_GETNUMBER(4), (QAbstractSocket::NetworkLayerProtocol )  (int) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QAbstractSocket_disconnectFromHost)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	pObject->disconnectFromHost();
}


RING_FUNC(ring_QAbstractSocket_error)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	RING_API_RETNUMBER(pObject->error());
}


RING_FUNC(ring_QAbstractSocket_flush)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	RING_API_RETNUMBER(pObject->flush());
}


RING_FUNC(ring_QAbstractSocket_isValid)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	RING_API_RETNUMBER(pObject->isValid());
}


RING_FUNC(ring_QAbstractSocket_localAddress)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	{
		QHostAddress *pValue ; 
		pValue = new QHostAddress() ;
		*pValue = pObject->localAddress();
		RING_API_RETCPOINTER(pValue,"QHostAddress");
	}
}


RING_FUNC(ring_QAbstractSocket_localPort)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	RING_API_RETNUMBER(pObject->localPort());
}


RING_FUNC(ring_QAbstractSocket_pauseMode)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	RING_API_RETNUMBER(pObject->pauseMode());
}


RING_FUNC(ring_QAbstractSocket_peerAddress)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	{
		QHostAddress *pValue ; 
		pValue = new QHostAddress() ;
		*pValue = pObject->peerAddress();
		RING_API_RETCPOINTER(pValue,"QHostAddress");
	}
}


RING_FUNC(ring_QAbstractSocket_peerName)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	RING_API_RETSTRING(pObject->peerName().toStdString().c_str());
}


RING_FUNC(ring_QAbstractSocket_peerPort)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	RING_API_RETNUMBER(pObject->peerPort());
}


RING_FUNC(ring_QAbstractSocket_proxy)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	{
		QNetworkProxy *pValue ; 
		pValue = new QNetworkProxy() ;
		*pValue = pObject->proxy();
		RING_API_RETCPOINTER(pValue,"QNetworkProxy");
	}
}


RING_FUNC(ring_QAbstractSocket_readBufferSize)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	RING_API_RETNUMBER(pObject->readBufferSize());
}


RING_FUNC(ring_QAbstractSocket_resume)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	pObject->resume();
}


RING_FUNC(ring_QAbstractSocket_setPauseMode)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPauseMode( (QAbstractSocket::PauseMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSocket_setProxy)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	pObject->setProxy(* (QNetworkProxy   *) RING_API_GETCPOINTER(2,"QNetworkProxy"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QNetworkProxy"));
}


RING_FUNC(ring_QAbstractSocket_setReadBufferSize)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setReadBufferSize( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAbstractSocket_setSocketDescriptor)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setSocketDescriptor(* (qintptr  *) RING_API_GETCPOINTER(2,"qintptr"), (QAbstractSocket::SocketState )  (int) RING_API_GETNUMBER(3), (QIODevice::OpenModeFlag )  (int) RING_API_GETNUMBER(4)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"qintptr"));
}


RING_FUNC(ring_QAbstractSocket_setSocketOption)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSocketOption( (QAbstractSocket::SocketOption )  (int) RING_API_GETNUMBER(2),* (QVariant   *) RING_API_GETCPOINTER(3,"QVariant"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QVariant"));
}


RING_FUNC(ring_QAbstractSocket_socketDescriptor)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	RING_API_RETCPOINTER(pObject->socketDescriptor(),"int");
}


RING_FUNC(ring_QAbstractSocket_socketOption)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->socketOption( (QAbstractSocket::SocketOption )  (int) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QVariant");
	}
}


RING_FUNC(ring_QAbstractSocket_socketType)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	RING_API_RETNUMBER(pObject->socketType());
}


RING_FUNC(ring_QAbstractSocket_state)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	RING_API_RETNUMBER(pObject->state());
}


RING_FUNC(ring_QAbstractSocket_waitForConnected)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->waitForConnected( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QAbstractSocket_waitForDisconnected)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->waitForDisconnected( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QAbstractSocket_atEnd)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	RING_API_RETNUMBER(pObject->atEnd());
}


RING_FUNC(ring_QAbstractSocket_bytesAvailable)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	RING_API_RETNUMBER(pObject->bytesAvailable());
}


RING_FUNC(ring_QAbstractSocket_bytesToWrite)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	RING_API_RETNUMBER(pObject->bytesToWrite());
}


RING_FUNC(ring_QAbstractSocket_canReadLine)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	RING_API_RETNUMBER(pObject->canReadLine());
}


RING_FUNC(ring_QAbstractSocket_close)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	pObject->close();
}


RING_FUNC(ring_QAbstractSocket_isSequential)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	RING_API_RETNUMBER(pObject->isSequential());
}


RING_FUNC(ring_QAbstractSocket_waitForBytesWritten)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->waitForBytesWritten( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QAbstractSocket_waitForReadyRead)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->waitForReadyRead( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QAbstractSocket_setconnectedEvent)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setconnectedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAbstractSocket_setdisconnectedEvent)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setdisconnectedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAbstractSocket_seterrorEvent)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->seterrorEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAbstractSocket_sethostFoundEvent)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->sethostFoundEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAbstractSocket_setproxyAuthenticationRequiredEvent)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setproxyAuthenticationRequiredEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAbstractSocket_setstateChangedEvent)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setstateChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAbstractSocket_getconnectedEvent)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	RING_API_RETSTRING(pObject->getconnectedEvent());
}


RING_FUNC(ring_QAbstractSocket_getdisconnectedEvent)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	RING_API_RETSTRING(pObject->getdisconnectedEvent());
}


RING_FUNC(ring_QAbstractSocket_geterrorEvent)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	RING_API_RETSTRING(pObject->geterrorEvent());
}


RING_FUNC(ring_QAbstractSocket_gethostFoundEvent)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	RING_API_RETSTRING(pObject->gethostFoundEvent());
}


RING_FUNC(ring_QAbstractSocket_getproxyAuthenticationRequiredEvent)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	RING_API_RETSTRING(pObject->getproxyAuthenticationRequiredEvent());
}


RING_FUNC(ring_QAbstractSocket_getstateChangedEvent)
{
	GAbstractSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAbstractSocket *) RING_API_GETCPOINTER(1,"QAbstractSocket");
	RING_API_RETSTRING(pObject->getstateChangedEvent());
}


RING_FUNC(ring_QNetworkProxy_capabilities)
{
	QNetworkProxy *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkProxy *) RING_API_GETCPOINTER(1,"QNetworkProxy");
	RING_API_RETNUMBER(pObject->capabilities());
}


RING_FUNC(ring_QNetworkProxy_hasRawHeader)
{
	QNetworkProxy *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkProxy *) RING_API_GETCPOINTER(1,"QNetworkProxy");
	RING_API_RETNUMBER(pObject->hasRawHeader(* (QByteArray  *) RING_API_GETCPOINTER(2,"QByteArray")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QByteArray"));
}


RING_FUNC(ring_QNetworkProxy_header)
{
	QNetworkProxy *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkProxy *) RING_API_GETCPOINTER(1,"QNetworkProxy");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->header( (QNetworkRequest::KnownHeaders )  (int) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QVariant");
	}
}


RING_FUNC(ring_QNetworkProxy_hostName)
{
	QNetworkProxy *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkProxy *) RING_API_GETCPOINTER(1,"QNetworkProxy");
	RING_API_RETSTRING(pObject->hostName().toStdString().c_str());
}


RING_FUNC(ring_QNetworkProxy_isCachingProxy)
{
	QNetworkProxy *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkProxy *) RING_API_GETCPOINTER(1,"QNetworkProxy");
	RING_API_RETNUMBER(pObject->isCachingProxy());
}


RING_FUNC(ring_QNetworkProxy_isTransparentProxy)
{
	QNetworkProxy *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkProxy *) RING_API_GETCPOINTER(1,"QNetworkProxy");
	RING_API_RETNUMBER(pObject->isTransparentProxy());
}


RING_FUNC(ring_QNetworkProxy_password)
{
	QNetworkProxy *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkProxy *) RING_API_GETCPOINTER(1,"QNetworkProxy");
	RING_API_RETSTRING(pObject->password().toStdString().c_str());
}


RING_FUNC(ring_QNetworkProxy_port)
{
	QNetworkProxy *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkProxy *) RING_API_GETCPOINTER(1,"QNetworkProxy");
	RING_API_RETNUMBER(pObject->port());
}


RING_FUNC(ring_QNetworkProxy_rawHeader)
{
	QNetworkProxy *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkProxy *) RING_API_GETCPOINTER(1,"QNetworkProxy");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->rawHeader(* (QByteArray  *) RING_API_GETCPOINTER(2,"QByteArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QByteArray"));
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QNetworkProxy_setCapabilities)
{
	QNetworkProxy *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkProxy *) RING_API_GETCPOINTER(1,"QNetworkProxy");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCapabilities( (QNetworkProxy::Capability )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QNetworkProxy_setHeader)
{
	QNetworkProxy *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkProxy *) RING_API_GETCPOINTER(1,"QNetworkProxy");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHeader( (QNetworkRequest::KnownHeaders )  (int) RING_API_GETNUMBER(2),* (QVariant  *) RING_API_GETCPOINTER(3,"QVariant"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QVariant"));
}


RING_FUNC(ring_QNetworkProxy_setHostName)
{
	QNetworkProxy *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkProxy *) RING_API_GETCPOINTER(1,"QNetworkProxy");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHostName(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QNetworkProxy_setPassword)
{
	QNetworkProxy *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkProxy *) RING_API_GETCPOINTER(1,"QNetworkProxy");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPassword(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QNetworkProxy_setPort)
{
	QNetworkProxy *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkProxy *) RING_API_GETCPOINTER(1,"QNetworkProxy");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPort( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QNetworkProxy_setRawHeader)
{
	QNetworkProxy *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkProxy *) RING_API_GETCPOINTER(1,"QNetworkProxy");
	pObject->setRawHeader(* (QByteArray  *) RING_API_GETCPOINTER(2,"QByteArray"),* (QByteArray  *) RING_API_GETCPOINTER(3,"QByteArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QByteArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QByteArray"));
}


RING_FUNC(ring_QNetworkProxy_setType)
{
	QNetworkProxy *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkProxy *) RING_API_GETCPOINTER(1,"QNetworkProxy");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setType( (QNetworkProxy::ProxyType )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QNetworkProxy_setUser)
{
	QNetworkProxy *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkProxy *) RING_API_GETCPOINTER(1,"QNetworkProxy");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUser(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QNetworkProxy_swap)
{
	QNetworkProxy *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkProxy *) RING_API_GETCPOINTER(1,"QNetworkProxy");
	pObject->swap(* (QNetworkProxy   *) RING_API_GETCPOINTER(2,"QNetworkProxy"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QNetworkProxy"));
}


RING_FUNC(ring_QNetworkProxy_type)
{
	QNetworkProxy *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkProxy *) RING_API_GETCPOINTER(1,"QNetworkProxy");
	RING_API_RETNUMBER(pObject->type());
}


RING_FUNC(ring_QNetworkProxy_user)
{
	QNetworkProxy *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkProxy *) RING_API_GETCPOINTER(1,"QNetworkProxy");
	RING_API_RETSTRING(pObject->user().toStdString().c_str());
}


RING_FUNC(ring_QNetworkProxy_applicationProxy)
{
	QNetworkProxy *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkProxy *) RING_API_GETCPOINTER(1,"QNetworkProxy");
	{
		QNetworkProxy *pValue ; 
		pValue = new QNetworkProxy() ;
		*pValue = pObject->applicationProxy();
		RING_API_RETCPOINTER(pValue,"QNetworkProxy");
	}
}


RING_FUNC(ring_QNetworkProxy_setApplicationProxy)
{
	QNetworkProxy *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkProxy *) RING_API_GETCPOINTER(1,"QNetworkProxy");
	pObject->setApplicationProxy(* (QNetworkProxy   *) RING_API_GETCPOINTER(2,"QNetworkProxy"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QNetworkProxy"));
}


RING_FUNC(ring_QTcpSocket_setconnectedEvent)
{
	GTcpSocket *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpSocket *) RING_API_GETCPOINTER(1,"QTcpSocket");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setconnectedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTcpSocket_setdisconnectedEvent)
{
	GTcpSocket *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpSocket *) RING_API_GETCPOINTER(1,"QTcpSocket");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setdisconnectedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTcpSocket_seterrorEvent)
{
	GTcpSocket *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpSocket *) RING_API_GETCPOINTER(1,"QTcpSocket");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->seterrorEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTcpSocket_sethostFoundEvent)
{
	GTcpSocket *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpSocket *) RING_API_GETCPOINTER(1,"QTcpSocket");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->sethostFoundEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTcpSocket_setproxyAuthenticationRequiredEvent)
{
	GTcpSocket *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpSocket *) RING_API_GETCPOINTER(1,"QTcpSocket");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setproxyAuthenticationRequiredEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTcpSocket_setstateChangedEvent)
{
	GTcpSocket *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpSocket *) RING_API_GETCPOINTER(1,"QTcpSocket");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setstateChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTcpSocket_setaboutToCloseEvent)
{
	GTcpSocket *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpSocket *) RING_API_GETCPOINTER(1,"QTcpSocket");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setaboutToCloseEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTcpSocket_setbytesWrittenEvent)
{
	GTcpSocket *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpSocket *) RING_API_GETCPOINTER(1,"QTcpSocket");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setbytesWrittenEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTcpSocket_setreadChannelFinishedEvent)
{
	GTcpSocket *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpSocket *) RING_API_GETCPOINTER(1,"QTcpSocket");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setreadChannelFinishedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTcpSocket_setreadyReadEvent)
{
	GTcpSocket *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpSocket *) RING_API_GETCPOINTER(1,"QTcpSocket");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setreadyReadEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTcpSocket_getconnectedEvent)
{
	GTcpSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpSocket *) RING_API_GETCPOINTER(1,"QTcpSocket");
	RING_API_RETSTRING(pObject->getconnectedEvent());
}


RING_FUNC(ring_QTcpSocket_getdisconnectedEvent)
{
	GTcpSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpSocket *) RING_API_GETCPOINTER(1,"QTcpSocket");
	RING_API_RETSTRING(pObject->getdisconnectedEvent());
}


RING_FUNC(ring_QTcpSocket_geterrorEvent)
{
	GTcpSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpSocket *) RING_API_GETCPOINTER(1,"QTcpSocket");
	RING_API_RETSTRING(pObject->geterrorEvent());
}


RING_FUNC(ring_QTcpSocket_gethostFoundEvent)
{
	GTcpSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpSocket *) RING_API_GETCPOINTER(1,"QTcpSocket");
	RING_API_RETSTRING(pObject->gethostFoundEvent());
}


RING_FUNC(ring_QTcpSocket_getproxyAuthenticationRequiredEvent)
{
	GTcpSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpSocket *) RING_API_GETCPOINTER(1,"QTcpSocket");
	RING_API_RETSTRING(pObject->getproxyAuthenticationRequiredEvent());
}


RING_FUNC(ring_QTcpSocket_getstateChangedEvent)
{
	GTcpSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpSocket *) RING_API_GETCPOINTER(1,"QTcpSocket");
	RING_API_RETSTRING(pObject->getstateChangedEvent());
}


RING_FUNC(ring_QTcpSocket_getaboutToCloseEvent)
{
	GTcpSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpSocket *) RING_API_GETCPOINTER(1,"QTcpSocket");
	RING_API_RETSTRING(pObject->getaboutToCloseEvent());
}


RING_FUNC(ring_QTcpSocket_getbytesWrittenEvent)
{
	GTcpSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpSocket *) RING_API_GETCPOINTER(1,"QTcpSocket");
	RING_API_RETSTRING(pObject->getbytesWrittenEvent());
}


RING_FUNC(ring_QTcpSocket_getreadChannelFinishedEvent)
{
	GTcpSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpSocket *) RING_API_GETCPOINTER(1,"QTcpSocket");
	RING_API_RETSTRING(pObject->getreadChannelFinishedEvent());
}


RING_FUNC(ring_QTcpSocket_getreadyReadEvent)
{
	GTcpSocket *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpSocket *) RING_API_GETCPOINTER(1,"QTcpSocket");
	RING_API_RETSTRING(pObject->getreadyReadEvent());
}


RING_FUNC(ring_QTcpServer_close)
{
	GTcpServer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpServer *) RING_API_GETCPOINTER(1,"QTcpServer");
	pObject->close();
}


RING_FUNC(ring_QTcpServer_errorString)
{
	GTcpServer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpServer *) RING_API_GETCPOINTER(1,"QTcpServer");
	RING_API_RETSTRING(pObject->errorString().toStdString().c_str());
}


RING_FUNC(ring_QTcpServer_hasPendingConnections)
{
	GTcpServer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpServer *) RING_API_GETCPOINTER(1,"QTcpServer");
	RING_API_RETNUMBER(pObject->hasPendingConnections());
}


RING_FUNC(ring_QTcpServer_isListening)
{
	GTcpServer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpServer *) RING_API_GETCPOINTER(1,"QTcpServer");
	RING_API_RETNUMBER(pObject->isListening());
}


RING_FUNC(ring_QTcpServer_listen)
{
	GTcpServer *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpServer *) RING_API_GETCPOINTER(1,"QTcpServer");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->listen(* (QHostAddress *) RING_API_GETCPOINTER(2,"QHostAddress"), (int ) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QHostAddress"));
}


RING_FUNC(ring_QTcpServer_maxPendingConnections)
{
	GTcpServer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpServer *) RING_API_GETCPOINTER(1,"QTcpServer");
	RING_API_RETNUMBER(pObject->maxPendingConnections());
}


RING_FUNC(ring_QTcpServer_nextPendingConnection)
{
	GTcpServer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpServer *) RING_API_GETCPOINTER(1,"QTcpServer");
	RING_API_RETCPOINTER(pObject->nextPendingConnection(),"QTcpSocket");
}


RING_FUNC(ring_QTcpServer_pauseAccepting)
{
	GTcpServer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpServer *) RING_API_GETCPOINTER(1,"QTcpServer");
	pObject->pauseAccepting();
}


RING_FUNC(ring_QTcpServer_proxy)
{
	GTcpServer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpServer *) RING_API_GETCPOINTER(1,"QTcpServer");
	{
		QNetworkProxy *pValue ; 
		pValue = new QNetworkProxy() ;
		*pValue = pObject->proxy();
		RING_API_RETCPOINTER(pValue,"QNetworkProxy");
	}
}


RING_FUNC(ring_QTcpServer_resumeAccepting)
{
	GTcpServer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpServer *) RING_API_GETCPOINTER(1,"QTcpServer");
	pObject->resumeAccepting();
}


RING_FUNC(ring_QTcpServer_serverAddress)
{
	GTcpServer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpServer *) RING_API_GETCPOINTER(1,"QTcpServer");
	{
		QHostAddress *pValue ; 
		pValue = new QHostAddress() ;
		*pValue = pObject->serverAddress();
		RING_API_RETCPOINTER(pValue,"QHostAddress");
	}
}


RING_FUNC(ring_QTcpServer_serverError)
{
	GTcpServer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpServer *) RING_API_GETCPOINTER(1,"QTcpServer");
	RING_API_RETNUMBER(pObject->serverError());
}


RING_FUNC(ring_QTcpServer_serverPort)
{
	GTcpServer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpServer *) RING_API_GETCPOINTER(1,"QTcpServer");
	RING_API_RETNUMBER(pObject->serverPort());
}


RING_FUNC(ring_QTcpServer_setMaxPendingConnections)
{
	GTcpServer *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpServer *) RING_API_GETCPOINTER(1,"QTcpServer");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMaxPendingConnections( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTcpServer_setProxy)
{
	GTcpServer *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpServer *) RING_API_GETCPOINTER(1,"QTcpServer");
	pObject->setProxy(* (QNetworkProxy *) RING_API_GETCPOINTER(2,"QNetworkProxy"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QNetworkProxy"));
}


RING_FUNC(ring_QTcpServer_setSocketDescriptor)
{
	GTcpServer *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpServer *) RING_API_GETCPOINTER(1,"QTcpServer");
	RING_API_RETNUMBER(pObject->setSocketDescriptor(* (qintptr  *) RING_API_GETCPOINTER(2,"qintptr")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"qintptr"));
}


RING_FUNC(ring_QTcpServer_socketDescriptor)
{
	GTcpServer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpServer *) RING_API_GETCPOINTER(1,"QTcpServer");
	RING_API_RETCPOINTER(pObject->socketDescriptor(),"int");
}


RING_FUNC(ring_QTcpServer_waitForNewConnection)
{
	GTcpServer *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpServer *) RING_API_GETCPOINTER(1,"QTcpServer");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->waitForNewConnection( (int ) RING_API_GETNUMBER(2),(bool *) RING_API_GETCPOINTER(3,"bool")));
}


RING_FUNC(ring_QTcpServer_setacceptErrorEvent)
{
	GTcpServer *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpServer *) RING_API_GETCPOINTER(1,"QTcpServer");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setacceptErrorEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTcpServer_setnewConnectionEvent)
{
	GTcpServer *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpServer *) RING_API_GETCPOINTER(1,"QTcpServer");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setnewConnectionEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTcpServer_getacceptErrorEvent)
{
	GTcpServer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpServer *) RING_API_GETCPOINTER(1,"QTcpServer");
	RING_API_RETSTRING(pObject->getacceptErrorEvent());
}


RING_FUNC(ring_QTcpServer_getnewConnectionEvent)
{
	GTcpServer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTcpServer *) RING_API_GETCPOINTER(1,"QTcpServer");
	RING_API_RETSTRING(pObject->getnewConnectionEvent());
}


RING_FUNC(ring_QHostAddress_clear)
{
	QHostAddress *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QHostAddress *) RING_API_GETCPOINTER(1,"QHostAddress");
	pObject->clear();
}


RING_FUNC(ring_QHostAddress_isInSubnet)
{
	QHostAddress *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QHostAddress *) RING_API_GETCPOINTER(1,"QHostAddress");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isInSubnet(* (QHostAddress *) RING_API_GETCPOINTER(2,"QHostAddress"), (int ) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QHostAddress"));
}


RING_FUNC(ring_QHostAddress_isNull)
{
	QHostAddress *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QHostAddress *) RING_API_GETCPOINTER(1,"QHostAddress");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QHostAddress_protocol)
{
	QHostAddress *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QHostAddress *) RING_API_GETCPOINTER(1,"QHostAddress");
	RING_API_RETNUMBER(pObject->protocol());
}


RING_FUNC(ring_QHostAddress_scopeId)
{
	QHostAddress *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QHostAddress *) RING_API_GETCPOINTER(1,"QHostAddress");
	RING_API_RETSTRING(pObject->scopeId().toStdString().c_str());
}


RING_FUNC(ring_QHostAddress_setAddress)
{
	QHostAddress *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QHostAddress *) RING_API_GETCPOINTER(1,"QHostAddress");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setAddress(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QHostAddress_toIPv4Address)
{
	QHostAddress *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QHostAddress *) RING_API_GETCPOINTER(1,"QHostAddress");
	RING_API_RETNUMBER(pObject->toIPv4Address());
}


RING_FUNC(ring_QHostAddress_toIPv6Address)
{
	QHostAddress *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QHostAddress *) RING_API_GETCPOINTER(1,"QHostAddress");
	{
		Q_IPV6ADDR *pValue ; 
		pValue = (Q_IPV6ADDR *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(Q_IPV6ADDR)) ;
		*pValue = pObject->toIPv6Address();
		RING_API_RETCPOINTER(pValue,"Q_IPV6ADDR");
	}
}


RING_FUNC(ring_QHostAddress_toString)
{
	QHostAddress *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QHostAddress *) RING_API_GETCPOINTER(1,"QHostAddress");
	RING_API_RETSTRING(pObject->toString().toStdString().c_str());
}


RING_FUNC(ring_QHostInfo_error)
{
	QHostInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QHostInfo *) RING_API_GETCPOINTER(1,"QHostInfo");
	RING_API_RETNUMBER(pObject->error());
}


RING_FUNC(ring_QHostInfo_errorString)
{
	QHostInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QHostInfo *) RING_API_GETCPOINTER(1,"QHostInfo");
	RING_API_RETSTRING(pObject->errorString().toStdString().c_str());
}


RING_FUNC(ring_QHostInfo_hostName)
{
	QHostInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QHostInfo *) RING_API_GETCPOINTER(1,"QHostInfo");
	RING_API_RETSTRING(pObject->hostName().toStdString().c_str());
}


RING_FUNC(ring_QHostInfo_lookupId)
{
	QHostInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QHostInfo *) RING_API_GETCPOINTER(1,"QHostInfo");
	RING_API_RETNUMBER(pObject->lookupId());
}


RING_FUNC(ring_QHostInfo_setError)
{
	QHostInfo *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QHostInfo *) RING_API_GETCPOINTER(1,"QHostInfo");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setError( (QHostInfo::HostInfoError )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHostInfo_setErrorString)
{
	QHostInfo *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QHostInfo *) RING_API_GETCPOINTER(1,"QHostInfo");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setErrorString(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QHostInfo_setHostName)
{
	QHostInfo *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QHostInfo *) RING_API_GETCPOINTER(1,"QHostInfo");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHostName(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QHostInfo_setLookupId)
{
	QHostInfo *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QHostInfo *) RING_API_GETCPOINTER(1,"QHostInfo");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLookupId( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHostInfo_abortHostLookup)
{
	QHostInfo *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QHostInfo *) RING_API_GETCPOINTER(1,"QHostInfo");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->abortHostLookup( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHostInfo_fromName)
{
	QHostInfo *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QHostInfo *) RING_API_GETCPOINTER(1,"QHostInfo");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QHostInfo *pValue ; 
		pValue = new QHostInfo() ;
		*pValue = pObject->fromName(RING_API_GETSTRING(2));
		RING_API_RETCPOINTER(pValue,"QHostInfo");
	}
}


RING_FUNC(ring_QHostInfo_localDomainName)
{
	QHostInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QHostInfo *) RING_API_GETCPOINTER(1,"QHostInfo");
	RING_API_RETSTRING(pObject->localDomainName().toStdString().c_str());
}


RING_FUNC(ring_QHostInfo_localHostName)
{
	QHostInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QHostInfo *) RING_API_GETCPOINTER(1,"QHostInfo");
	RING_API_RETSTRING(pObject->localHostName().toStdString().c_str());
}


RING_FUNC(ring_QHostInfo_lookupHost)
{
	QHostInfo *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QHostInfo *) RING_API_GETCPOINTER(1,"QHostInfo");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->lookupHost(RING_API_GETSTRING(2),(QObject *) RING_API_GETCPOINTER(3,"QObject"),RING_API_GETSTRING(4)));
}


RING_FUNC(ring_QFileInfo_absoluteDir)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	{
		QDir *pValue ; 
		pValue = new QDir() ;
		*pValue = pObject->absoluteDir();
		RING_API_RETCPOINTER(pValue,"QDir");
	}
}


RING_FUNC(ring_QFileInfo_absoluteFilePath)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETSTRING(pObject->absoluteFilePath().toStdString().c_str());
}


RING_FUNC(ring_QFileInfo_absolutePath)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETSTRING(pObject->absolutePath().toStdString().c_str());
}


RING_FUNC(ring_QFileInfo_baseName)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETSTRING(pObject->baseName().toStdString().c_str());
}


RING_FUNC(ring_QFileInfo_bundleName)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETSTRING(pObject->bundleName().toStdString().c_str());
}


RING_FUNC(ring_QFileInfo_caching)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->caching());
}


RING_FUNC(ring_QFileInfo_canonicalFilePath)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETSTRING(pObject->canonicalFilePath().toStdString().c_str());
}


RING_FUNC(ring_QFileInfo_canonicalPath)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETSTRING(pObject->canonicalPath().toStdString().c_str());
}


RING_FUNC(ring_QFileInfo_completeBaseName)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETSTRING(pObject->completeBaseName().toStdString().c_str());
}


RING_FUNC(ring_QFileInfo_completeSuffix)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETSTRING(pObject->completeSuffix().toStdString().c_str());
}


RING_FUNC(ring_QFileInfo_created)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->created();
		RING_API_RETCPOINTER(pValue,"QDateTime");
	}
}


RING_FUNC(ring_QFileInfo_dir)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	{
		QDir *pValue ; 
		pValue = new QDir() ;
		*pValue = pObject->dir();
		RING_API_RETCPOINTER(pValue,"QDir");
	}
}


RING_FUNC(ring_QFileInfo_exists)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->exists());
}


RING_FUNC(ring_QFileInfo_fileName)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETSTRING(pObject->fileName().toStdString().c_str());
}


RING_FUNC(ring_QFileInfo_filePath)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETSTRING(pObject->filePath().toStdString().c_str());
}


RING_FUNC(ring_QFileInfo_group)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETSTRING(pObject->group().toStdString().c_str());
}


RING_FUNC(ring_QFileInfo_groupId)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->groupId());
}


RING_FUNC(ring_QFileInfo_isAbsolute)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->isAbsolute());
}


RING_FUNC(ring_QFileInfo_isBundle)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->isBundle());
}


RING_FUNC(ring_QFileInfo_isDir)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->isDir());
}


RING_FUNC(ring_QFileInfo_isExecutable)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->isExecutable());
}


RING_FUNC(ring_QFileInfo_isFile)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->isFile());
}


RING_FUNC(ring_QFileInfo_isHidden)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->isHidden());
}


RING_FUNC(ring_QFileInfo_isNativePath)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->isNativePath());
}


RING_FUNC(ring_QFileInfo_isReadable)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->isReadable());
}


RING_FUNC(ring_QFileInfo_isRelative)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->isRelative());
}


RING_FUNC(ring_QFileInfo_isRoot)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->isRoot());
}


RING_FUNC(ring_QFileInfo_isSymLink)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->isSymLink());
}


RING_FUNC(ring_QFileInfo_isWritable)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->isWritable());
}


RING_FUNC(ring_QFileInfo_lastModified)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->lastModified();
		RING_API_RETCPOINTER(pValue,"QDateTime");
	}
}


RING_FUNC(ring_QFileInfo_lastRead)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->lastRead();
		RING_API_RETCPOINTER(pValue,"QDateTime");
	}
}


RING_FUNC(ring_QFileInfo_makeAbsolute)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->makeAbsolute());
}


RING_FUNC(ring_QFileInfo_owner)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETSTRING(pObject->owner().toStdString().c_str());
}


RING_FUNC(ring_QFileInfo_ownerId)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	{
		uint *pValue ; 
		pValue = (uint *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(uint)) ;
		*pValue = pObject->ownerId();
		RING_API_RETCPOINTER(pValue,"uint");
	}
}


RING_FUNC(ring_QFileInfo_path)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETSTRING(pObject->path().toStdString().c_str());
}


RING_FUNC(ring_QFileInfo_permission)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->permission( (QFileDevice::Permission )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QFileInfo_permissions)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->permissions());
}


RING_FUNC(ring_QFileInfo_refresh)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	pObject->refresh();
}


RING_FUNC(ring_QFileInfo_setCaching)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCaching( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFileInfo_setFile)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFile(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QFileInfo_size)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETNUMBER(pObject->size());
}


RING_FUNC(ring_QFileInfo_suffix)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETSTRING(pObject->suffix().toStdString().c_str());
}


RING_FUNC(ring_QFileInfo_swap)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	pObject->swap(* (QFileInfo *) RING_API_GETCPOINTER(2,"QFileInfo"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QFileInfo"));
}


RING_FUNC(ring_QFileInfo_symLinkTarget)
{
	QFileInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
	RING_API_RETSTRING(pObject->symLinkTarget().toStdString().c_str());
}


RING_FUNC(ring_QDirModel_fileIcon)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	{
		QIcon *pValue ; 
		pValue = new QIcon() ;
		*pValue = pObject->fileIcon(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
		RING_API_RETCPOINTER(pValue,"QIcon");
	}
}


RING_FUNC(ring_QDirModel_fileInfo)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	{
		QFileInfo *pValue ; 
		pValue = new QFileInfo() ;
		*pValue = pObject->fileInfo(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
		RING_API_RETCPOINTER(pValue,"QFileInfo");
	}
}


RING_FUNC(ring_QDirModel_fileName)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	RING_API_RETSTRING(pObject->fileName(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex")).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QDirModel_filePath)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	RING_API_RETSTRING(pObject->filePath(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex")).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QDirModel_filter)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	RING_API_RETNUMBER(pObject->filter());
}


RING_FUNC(ring_QDirModel_iconProvider)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	RING_API_RETCPOINTER(pObject->iconProvider(),"QFileIconProvider");
}


RING_FUNC(ring_QDirModel_index)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QModelIndex *pValue ; 
		pValue = (QModelIndex *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QModelIndex)) ;
		*pValue = pObject->index(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3));
		RING_API_RETCPOINTER(pValue,"QModelIndex");
	}
}


RING_FUNC(ring_QDirModel_isDir)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	RING_API_RETNUMBER(pObject->isDir(* (QModelIndex *) RING_API_GETCPOINTER(2,"QModelIndex")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QDirModel_isReadOnly)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	RING_API_RETNUMBER(pObject->isReadOnly());
}


RING_FUNC(ring_QDirModel_lazyChildCount)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	RING_API_RETNUMBER(pObject->lazyChildCount());
}


RING_FUNC(ring_QDirModel_mkdir)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QModelIndex *pValue ; 
		pValue = (QModelIndex *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QModelIndex)) ;
		*pValue = pObject->mkdir(* (QModelIndex  *) RING_API_GETCPOINTER(2,"QModelIndex"),RING_API_GETSTRING(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
		RING_API_RETCPOINTER(pValue,"QModelIndex");
	}
}


RING_FUNC(ring_QDirModel_nameFilters)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->nameFilters();
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QDirModel_remove)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	RING_API_RETNUMBER(pObject->remove(* (QModelIndex  *) RING_API_GETCPOINTER(2,"QModelIndex")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QDirModel_resolveSymlinks)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	RING_API_RETNUMBER(pObject->resolveSymlinks());
}


RING_FUNC(ring_QDirModel_rmdir)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	RING_API_RETNUMBER(pObject->rmdir(* (QModelIndex  *) RING_API_GETCPOINTER(2,"QModelIndex")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QDirModel_setFilter)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFilter( (QDir::Filter )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDirModel_setIconProvider)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setIconProvider((QFileIconProvider *) RING_API_GETCPOINTER(2,"QFileIconProvider"));
}


RING_FUNC(ring_QDirModel_setLazyChildCount)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLazyChildCount( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDirModel_setNameFilters)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	pObject->setNameFilters(* (QStringList  *) RING_API_GETCPOINTER(2,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QStringList"));
}


RING_FUNC(ring_QDirModel_setReadOnly)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setReadOnly( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDirModel_setResolveSymlinks)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setResolveSymlinks( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDirModel_setSorting)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSorting( (QDir::SortFlag )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDirModel_sorting)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	RING_API_RETNUMBER(pObject->sorting());
}


RING_FUNC(ring_QDirModel_refresh)
{
	QDirModel *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
	pObject->refresh(* (QModelIndex  *) RING_API_GETCPOINTER(2,"QModelIndex"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QModelIndex"));
}


RING_FUNC(ring_QFontDialog_currentFont)
{
	QFontDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontDialog *) RING_API_GETCPOINTER(1,"QFontDialog");
	{
		QFont *pValue ; 
		pValue = new QFont() ;
		*pValue = pObject->currentFont();
		RING_API_RETCPOINTER(pValue,"QFont");
	}
}


RING_FUNC(ring_QFontDialog_open)
{
	QFontDialog *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontDialog *) RING_API_GETCPOINTER(1,"QFontDialog");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->open((QObject *) RING_API_GETCPOINTER(2,"QObject"),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QFontDialog_options)
{
	QFontDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontDialog *) RING_API_GETCPOINTER(1,"QFontDialog");
	RING_API_RETNUMBER(pObject->options());
}


RING_FUNC(ring_QFontDialog_selectedFont)
{
	QFontDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontDialog *) RING_API_GETCPOINTER(1,"QFontDialog");
	{
		QFont *pValue ; 
		pValue = new QFont() ;
		*pValue = pObject->selectedFont();
		RING_API_RETCPOINTER(pValue,"QFont");
	}
}


RING_FUNC(ring_QFontDialog_setCurrentFont)
{
	QFontDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontDialog *) RING_API_GETCPOINTER(1,"QFontDialog");
	pObject->setCurrentFont(* (QFont *) RING_API_GETCPOINTER(2,"QFont"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QFont"));
}


RING_FUNC(ring_QFontDialog_setOption)
{
	QFontDialog *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontDialog *) RING_API_GETCPOINTER(1,"QFontDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOption( (QFontDialog::FontDialogOption )  (int) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QFontDialog_setOptions)
{
	QFontDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontDialog *) RING_API_GETCPOINTER(1,"QFontDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOptions( (QFontDialog::FontDialogOption )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QFontDialog_testOption)
{
	QFontDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontDialog *) RING_API_GETCPOINTER(1,"QFontDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->testOption( (QFontDialog::FontDialogOption )  (int) RING_API_GETNUMBER(2)));
}

RING_FUNC(ring_QFontDialog_getfont)
{
	List *pList;
	pList = RING_API_NEWLIST ;
	bool lok ;
	QFont pFont ;
	QFont pValue = QFontDialog::getFont(&lok,pFont,NULL);		
	if (lok) {
		ring_list_addstring(pList,pValue.toString().toStdString().c_str());
		ring_list_adddouble(pList,pValue.pointSize());
	}
	else {
		ring_list_addstring(pList,"");
		ring_list_adddouble(pList,10);
	}
	RING_API_RETLIST(pList);
}


RING_FUNC(ring_QDialog_isSizeGripEnabled)
{
	QDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDialog *) RING_API_GETCPOINTER(1,"QDialog");
	RING_API_RETNUMBER(pObject->isSizeGripEnabled());
}


RING_FUNC(ring_QDialog_result)
{
	QDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDialog *) RING_API_GETCPOINTER(1,"QDialog");
	RING_API_RETNUMBER(pObject->result());
}


RING_FUNC(ring_QDialog_setModal)
{
	QDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDialog *) RING_API_GETCPOINTER(1,"QDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setModal( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDialog_setResult)
{
	QDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDialog *) RING_API_GETCPOINTER(1,"QDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setResult( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDialog_setSizeGripEnabled)
{
	QDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDialog *) RING_API_GETCPOINTER(1,"QDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSizeGripEnabled( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDialog_accept)
{
	QDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDialog *) RING_API_GETCPOINTER(1,"QDialog");
	pObject->accept();
}


RING_FUNC(ring_QDialog_done)
{
	QDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDialog *) RING_API_GETCPOINTER(1,"QDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->done( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDialog_exec)
{
	QDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDialog *) RING_API_GETCPOINTER(1,"QDialog");
	RING_API_RETNUMBER(pObject->exec());
}


RING_FUNC(ring_QDialog_open)
{
	QDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDialog *) RING_API_GETCPOINTER(1,"QDialog");
	pObject->open();
}


RING_FUNC(ring_QDialog_reject)
{
	QDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDialog *) RING_API_GETCPOINTER(1,"QDialog");
	pObject->reject();
}


RING_FUNC(ring_QTextCursor_anchor)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->anchor());
}


RING_FUNC(ring_QTextCursor_atBlockEnd)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->atBlockEnd());
}


RING_FUNC(ring_QTextCursor_atBlockStart)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->atBlockStart());
}


RING_FUNC(ring_QTextCursor_atEnd)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->atEnd());
}


RING_FUNC(ring_QTextCursor_atStart)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->atStart());
}


RING_FUNC(ring_QTextCursor_beginEditBlock)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	pObject->beginEditBlock();
}


RING_FUNC(ring_QTextCursor_block)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	{
		QTextBlock *pValue ; 
		pValue = new QTextBlock() ;
		*pValue = pObject->block();
		RING_API_RETCPOINTER(pValue,"QTextBlock");
	}
}


RING_FUNC(ring_QTextCursor_blockCharFormat)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	{
		QTextCharFormat *pValue ; 
		pValue = new QTextCharFormat() ;
		*pValue = pObject->blockCharFormat();
		RING_API_RETCPOINTER(pValue,"QTextCharFormat");
	}
}


RING_FUNC(ring_QTextCursor_blockFormat)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	{
		QTextBlockFormat *pValue ; 
		pValue = (QTextBlockFormat *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QTextBlockFormat)) ;
		*pValue = pObject->blockFormat();
		RING_API_RETCPOINTER(pValue,"QTextBlockFormat");
	}
}


RING_FUNC(ring_QTextCursor_blockNumber)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->blockNumber());
}


RING_FUNC(ring_QTextCursor_charFormat)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	{
		QTextCharFormat *pValue ; 
		pValue = new QTextCharFormat() ;
		*pValue = pObject->charFormat();
		RING_API_RETCPOINTER(pValue,"QTextCharFormat");
	}
}


RING_FUNC(ring_QTextCursor_clearSelection)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	pObject->clearSelection();
}


RING_FUNC(ring_QTextCursor_columnNumber)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->columnNumber());
}


RING_FUNC(ring_QTextCursor_createList)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETCPOINTER(pObject->createList(* (QTextListFormat *) RING_API_GETCPOINTER(2,"QTextListFormat")),"QTextList");
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTextListFormat"));
}


RING_FUNC(ring_QTextCursor_currentFrame)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETCPOINTER(pObject->currentFrame(),"QTextFrame");
}


RING_FUNC(ring_QTextCursor_currentList)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETCPOINTER(pObject->currentList(),"QTextList");
}


RING_FUNC(ring_QTextCursor_currentTable)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETCPOINTER(pObject->currentTable(),"QTextTable");
}


RING_FUNC(ring_QTextCursor_deleteChar)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	pObject->deleteChar();
}


RING_FUNC(ring_QTextCursor_deletePreviousChar)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	pObject->deletePreviousChar();
}


RING_FUNC(ring_QTextCursor_document)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETCPOINTER(pObject->document(),"QTextDocument");
}


RING_FUNC(ring_QTextCursor_endEditBlock)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	pObject->endEditBlock();
}


RING_FUNC(ring_QTextCursor_hasComplexSelection)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->hasComplexSelection());
}


RING_FUNC(ring_QTextCursor_hasSelection)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->hasSelection());
}


RING_FUNC(ring_QTextCursor_insertBlock)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	pObject->insertBlock();
}


RING_FUNC(ring_QTextCursor_insertFragment)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	pObject->insertFragment(* (QTextDocumentFragment *) RING_API_GETCPOINTER(2,"QTextDocumentFragment"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTextDocumentFragment"));
}


RING_FUNC(ring_QTextCursor_insertFrame)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETCPOINTER(pObject->insertFrame(* (QTextFrameFormat *) RING_API_GETCPOINTER(2,"QTextFrameFormat")),"QTextFrame");
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTextFrameFormat"));
}


RING_FUNC(ring_QTextCursor_insertHtml)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertHtml(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextCursor_insertImage)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	pObject->insertImage(* (QTextImageFormat *) RING_API_GETCPOINTER(2,"QTextImageFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTextImageFormat"));
}


RING_FUNC(ring_QTextCursor_insertList)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETCPOINTER(pObject->insertList(* (QTextListFormat *) RING_API_GETCPOINTER(2,"QTextListFormat")),"QTextList");
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTextListFormat"));
}


RING_FUNC(ring_QTextCursor_insertTable)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->insertTable( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3),* (QTextTableFormat *) RING_API_GETCPOINTER(4,"QTextTableFormat")),"QTextTable");
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"QTextTableFormat"));
}


RING_FUNC(ring_QTextCursor_insertText)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextCursor_insertText_2)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertText(RING_API_GETSTRING(2),* (QTextCharFormat *) RING_API_GETCPOINTER(3,"QTextCharFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QTextCharFormat"));
}


RING_FUNC(ring_QTextCursor_isCopyOf)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->isCopyOf(* (QTextCursor *) RING_API_GETCPOINTER(2,"QTextCursor")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTextCursor"));
}


RING_FUNC(ring_QTextCursor_isNull)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QTextCursor_joinPreviousEditBlock)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	pObject->joinPreviousEditBlock();
}


RING_FUNC(ring_QTextCursor_keepPositionOnInsert)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->keepPositionOnInsert());
}


RING_FUNC(ring_QTextCursor_mergeBlockCharFormat)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	pObject->mergeBlockCharFormat(* (QTextCharFormat *) RING_API_GETCPOINTER(2,"QTextCharFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTextCharFormat"));
}


RING_FUNC(ring_QTextCursor_mergeBlockFormat)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	pObject->mergeBlockFormat(* (QTextBlockFormat *) RING_API_GETCPOINTER(2,"QTextBlockFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTextBlockFormat"));
}


RING_FUNC(ring_QTextCursor_mergeCharFormat)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	pObject->mergeCharFormat(* (QTextCharFormat *) RING_API_GETCPOINTER(2,"QTextCharFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTextCharFormat"));
}


RING_FUNC(ring_QTextCursor_movePosition)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->movePosition( (QTextCursor::MoveOperation )  (int) RING_API_GETNUMBER(2), (QTextCursor::MoveMode )  (int) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4)));
}


RING_FUNC(ring_QTextCursor_position)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->position());
}


RING_FUNC(ring_QTextCursor_positionInBlock)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->positionInBlock());
}


RING_FUNC(ring_QTextCursor_removeSelectedText)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	pObject->removeSelectedText();
}


RING_FUNC(ring_QTextCursor_select)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->select( (QTextCursor::SelectionType )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCursor_selectedTableCells)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->selectedTableCells(RING_API_GETINTPOINTER(2),RING_API_GETINTPOINTER(3),RING_API_GETINTPOINTER(4),RING_API_GETINTPOINTER(5));
	RING_API_ACCEPTINTVALUE(1) ;
	RING_API_ACCEPTINTVALUE(2) ;
	RING_API_ACCEPTINTVALUE(3) ;
	RING_API_ACCEPTINTVALUE(4) ;
}


RING_FUNC(ring_QTextCursor_selectedText)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETSTRING(pObject->selectedText().toStdString().c_str());
}


RING_FUNC(ring_QTextCursor_selection)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	{
		QTextDocumentFragment *pValue ; 
		pValue = (QTextDocumentFragment *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QTextDocumentFragment)) ;
		*pValue = pObject->selection();
		RING_API_RETCPOINTER(pValue,"QTextDocumentFragment");
	}
}


RING_FUNC(ring_QTextCursor_selectionEnd)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->selectionEnd());
}


RING_FUNC(ring_QTextCursor_selectionStart)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->selectionStart());
}


RING_FUNC(ring_QTextCursor_setBlockCharFormat)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	pObject->setBlockCharFormat(* (QTextCharFormat *) RING_API_GETCPOINTER(2,"QTextCharFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTextCharFormat"));
}


RING_FUNC(ring_QTextCursor_setBlockFormat)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	pObject->setBlockFormat(* (QTextBlockFormat *) RING_API_GETCPOINTER(2,"QTextBlockFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTextBlockFormat"));
}


RING_FUNC(ring_QTextCursor_setCharFormat)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	pObject->setCharFormat(* (QTextCharFormat *) RING_API_GETCPOINTER(2,"QTextCharFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTextCharFormat"));
}


RING_FUNC(ring_QTextCursor_setKeepPositionOnInsert)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setKeepPositionOnInsert( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCursor_setPosition)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPosition( (int ) RING_API_GETNUMBER(2), (QTextCursor::MoveMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTextCursor_setVerticalMovementX)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setVerticalMovementX( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCursor_setVisualNavigation)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setVisualNavigation( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCursor_verticalMovementX)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->verticalMovementX());
}


RING_FUNC(ring_QTextCursor_visualNavigation)
{
	QTextCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
	RING_API_RETNUMBER(pObject->visualNavigation());
}


RING_FUNC(ring_QColorDialog_currentColor)
{
	QColorDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColorDialog *) RING_API_GETCPOINTER(1,"QColorDialog");
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->currentColor();
		RING_API_RETCPOINTER(pValue,"QColor");
	}
}


RING_FUNC(ring_QColorDialog_open)
{
	QColorDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColorDialog *) RING_API_GETCPOINTER(1,"QColorDialog");
	pObject->open();
}


RING_FUNC(ring_QColorDialog_options)
{
	QColorDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColorDialog *) RING_API_GETCPOINTER(1,"QColorDialog");
	RING_API_RETNUMBER(pObject->options());
}


RING_FUNC(ring_QColorDialog_selectedColor)
{
	QColorDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColorDialog *) RING_API_GETCPOINTER(1,"QColorDialog");
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->selectedColor();
		RING_API_RETCPOINTER(pValue,"QColor");
	}
}


RING_FUNC(ring_QColorDialog_setCurrentColor)
{
	QColorDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColorDialog *) RING_API_GETCPOINTER(1,"QColorDialog");
	pObject->setCurrentColor(* (QColor *) RING_API_GETCPOINTER(2,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QColor"));
}


RING_FUNC(ring_QColorDialog_setOption)
{
	QColorDialog *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColorDialog *) RING_API_GETCPOINTER(1,"QColorDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOption( (QColorDialog::ColorDialogOption )  (int) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QColorDialog_setOptions)
{
	QColorDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColorDialog *) RING_API_GETCPOINTER(1,"QColorDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOptions( (QColorDialog::ColorDialogOption )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QColorDialog_testOption)
{
	QColorDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColorDialog *) RING_API_GETCPOINTER(1,"QColorDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->testOption( (QColorDialog::ColorDialogOption )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QColorDialog_customColor)
{
	QColorDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColorDialog *) RING_API_GETCPOINTER(1,"QColorDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->customColor( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QColor");
	}
}


RING_FUNC(ring_QColorDialog_customCount)
{
	QColorDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColorDialog *) RING_API_GETCPOINTER(1,"QColorDialog");
	RING_API_RETNUMBER(pObject->customCount());
}


RING_FUNC(ring_QColorDialog_setCustomColor)
{
	QColorDialog *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColorDialog *) RING_API_GETCPOINTER(1,"QColorDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCustomColor( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QColorDialog_setStandardColor)
{
	QColorDialog *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QColorDialog *) RING_API_GETCPOINTER(1,"QColorDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStandardColor( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}

RING_FUNC(ring_QColorDialog_getcolor)
{
	List *pList;
	pList = RING_API_NEWLIST ;
	QColor pValue = QColorDialog::getColor();		
	ring_list_adddouble(pList,pValue.red());
	ring_list_adddouble(pList,pValue.green());
	ring_list_adddouble(pList,pValue.blue());
	RING_API_RETLIST(pList);
}

RING_FUNC(ring_QStringList_join)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->join(RING_API_GETSTRING(2)).toStdString().c_str());
}


RING_FUNC(ring_QStringList_sort)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	pObject->sort();
}


RING_FUNC(ring_QStringList_removeDuplicates)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	RING_API_RETNUMBER(pObject->removeDuplicates());
}


RING_FUNC(ring_QStringList_filter)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->filter(RING_API_GETSTRING(2), (Qt::CaseSensitivity)  (int) RING_API_GETNUMBER(3));
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QStringList_replaceInStrings)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->replaceInStrings(RING_API_GETSTRING(2),RING_API_GETSTRING(3), (Qt::CaseSensitivity)  (int) RING_API_GETNUMBER(4));
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QStringList_append)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->append(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QStringList_at)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->at( (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QStringList_back)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	RING_API_RETSTRING(pObject->back().toStdString().c_str());
}


RING_FUNC(ring_QStringList_clear)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	pObject->clear();
}


RING_FUNC(ring_QStringList_contains)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->contains(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QStringList_count)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	RING_API_RETNUMBER(pObject->count());
}


RING_FUNC(ring_QStringList_empty)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	RING_API_RETNUMBER(pObject->empty());
}


RING_FUNC(ring_QStringList_endsWith)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->endsWith(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QStringList_first)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	RING_API_RETSTRING(pObject->first().toStdString().c_str());
}


RING_FUNC(ring_QStringList_front)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	RING_API_RETSTRING(pObject->front().toStdString().c_str());
}


RING_FUNC(ring_QStringList_indexOf)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->indexOf(RING_API_GETSTRING(2), (int) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QStringList_insert)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insert( (int) RING_API_GETNUMBER(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QStringList_isEmpty)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	RING_API_RETNUMBER(pObject->isEmpty());
}


RING_FUNC(ring_QStringList_last)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	RING_API_RETSTRING(pObject->last().toStdString().c_str());
}


RING_FUNC(ring_QStringList_lastIndexOf)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->lastIndexOf(RING_API_GETSTRING(2), (int) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QStringList_length)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	RING_API_RETNUMBER(pObject->length());
}


RING_FUNC(ring_QStringList_move)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->move( (int) RING_API_GETNUMBER(2), (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QStringList_pop_back)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	pObject->pop_back();
}


RING_FUNC(ring_QStringList_pop_front)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	pObject->pop_front();
}


RING_FUNC(ring_QStringList_prepend)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->prepend(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QStringList_push_back)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->push_back(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QStringList_push_front)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->push_front(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QStringList_removeAll)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->removeAll(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QStringList_removeAt)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeAt( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QStringList_removeFirst)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	pObject->removeFirst();
}


RING_FUNC(ring_QStringList_removeLast)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	pObject->removeLast();
}


RING_FUNC(ring_QStringList_removeOne)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->removeOne(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QStringList_replace)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->replace( (int) RING_API_GETNUMBER(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QStringList_reserve)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->reserve( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QStringList_size)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	RING_API_RETNUMBER(pObject->size());
}


RING_FUNC(ring_QStringList_startsWith)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->startsWith(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QStringList_swap)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->swap( (int) RING_API_GETNUMBER(2), (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QStringList_takeAt)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->takeAt( (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QStringList_takeFirst)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	RING_API_RETSTRING(pObject->takeFirst().toStdString().c_str());
}


RING_FUNC(ring_QStringList_takeLast)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	RING_API_RETSTRING(pObject->takeLast().toStdString().c_str());
}


RING_FUNC(ring_QStringList_value)
{
	QStringList *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->value( (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QLCDNumber_checkOverflow)
{
	QLCDNumber *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->checkOverflow( (double ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QLCDNumber_digitCount)
{
	QLCDNumber *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
	RING_API_RETNUMBER(pObject->digitCount());
}


RING_FUNC(ring_QLCDNumber_intValue)
{
	QLCDNumber *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
	RING_API_RETNUMBER(pObject->intValue());
}


RING_FUNC(ring_QLCDNumber_mode)
{
	QLCDNumber *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
	RING_API_RETNUMBER(pObject->mode());
}


RING_FUNC(ring_QLCDNumber_segmentStyle)
{
	QLCDNumber *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
	RING_API_RETNUMBER(pObject->segmentStyle());
}


RING_FUNC(ring_QLCDNumber_setDigitCount)
{
	QLCDNumber *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDigitCount( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLCDNumber_setMode)
{
	QLCDNumber *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMode( (QLCDNumber::Mode)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLCDNumber_setSegmentStyle)
{
	QLCDNumber *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSegmentStyle( (QLCDNumber::SegmentStyle)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLCDNumber_smallDecimalPoint)
{
	QLCDNumber *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
	RING_API_RETNUMBER(pObject->smallDecimalPoint());
}


RING_FUNC(ring_QLCDNumber_value)
{
	QLCDNumber *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
	RING_API_RETNUMBER(pObject->value());
}


RING_FUNC(ring_QLCDNumber_display)
{
	QLCDNumber *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->display( (double) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLCDNumber_setBinMode)
{
	QLCDNumber *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
	pObject->setBinMode();
}


RING_FUNC(ring_QLCDNumber_setDecMode)
{
	QLCDNumber *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
	pObject->setDecMode();
}


RING_FUNC(ring_QLCDNumber_setHexMode)
{
	QLCDNumber *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
	pObject->setHexMode();
}


RING_FUNC(ring_QLCDNumber_setOctMode)
{
	QLCDNumber *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
	pObject->setOctMode();
}


RING_FUNC(ring_QLCDNumber_setSmallDecimalPoint)
{
	QLCDNumber *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSmallDecimalPoint( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QInputDialog_cancelButtonText)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	RING_API_RETSTRING(pObject->cancelButtonText().toStdString().c_str());
}


RING_FUNC(ring_QInputDialog_comboBoxItems)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->comboBoxItems();
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QInputDialog_doubleDecimals)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	RING_API_RETNUMBER(pObject->doubleDecimals());
}


RING_FUNC(ring_QInputDialog_doubleMaximum)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	RING_API_RETNUMBER(pObject->doubleMaximum());
}


RING_FUNC(ring_QInputDialog_doubleMinimum)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	RING_API_RETNUMBER(pObject->doubleMinimum());
}


RING_FUNC(ring_QInputDialog_doubleValue)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	RING_API_RETNUMBER(pObject->doubleValue());
}


RING_FUNC(ring_QInputDialog_inputMode)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	RING_API_RETNUMBER(pObject->inputMode());
}


RING_FUNC(ring_QInputDialog_intMaximum)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	RING_API_RETNUMBER(pObject->intMaximum());
}


RING_FUNC(ring_QInputDialog_intMinimum)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	RING_API_RETNUMBER(pObject->intMinimum());
}


RING_FUNC(ring_QInputDialog_intStep)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	RING_API_RETNUMBER(pObject->intStep());
}


RING_FUNC(ring_QInputDialog_intValue)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	RING_API_RETNUMBER(pObject->intValue());
}


RING_FUNC(ring_QInputDialog_isComboBoxEditable)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	RING_API_RETNUMBER(pObject->isComboBoxEditable());
}


RING_FUNC(ring_QInputDialog_labelText)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	RING_API_RETSTRING(pObject->labelText().toStdString().c_str());
}


RING_FUNC(ring_QInputDialog_okButtonText)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	RING_API_RETSTRING(pObject->okButtonText().toStdString().c_str());
}


RING_FUNC(ring_QInputDialog_open)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->open((QObject *) RING_API_GETCPOINTER(2,"QObject"),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QInputDialog_options)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	RING_API_RETNUMBER(pObject->options());
}


RING_FUNC(ring_QInputDialog_setCancelButtonText)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCancelButtonText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QInputDialog_setComboBoxEditable)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setComboBoxEditable( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QInputDialog_setComboBoxItems)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	pObject->setComboBoxItems(* (QStringList *) RING_API_GETCPOINTER(2,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QStringList"));
}


RING_FUNC(ring_QInputDialog_setDoubleDecimals)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDoubleDecimals( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QInputDialog_setDoubleMaximum)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDoubleMaximum( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QInputDialog_setDoubleMinimum)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDoubleMinimum( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QInputDialog_setDoubleRange)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDoubleRange( (double ) RING_API_GETNUMBER(2), (double ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QInputDialog_setDoubleValue)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDoubleValue( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QInputDialog_setInputMode)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setInputMode( (QInputDialog::InputMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QInputDialog_setIntMaximum)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setIntMaximum( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QInputDialog_setIntMinimum)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setIntMinimum( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QInputDialog_setIntRange)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setIntRange( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QInputDialog_setIntStep)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setIntStep( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QInputDialog_setIntValue)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setIntValue( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QInputDialog_setLabelText)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLabelText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QInputDialog_setOkButtonText)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOkButtonText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QInputDialog_setOption)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOption( (QInputDialog::InputDialogOption )  (int) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QInputDialog_setOptions)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOptions( (QInputDialog::InputDialogOption )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QInputDialog_setTextEchoMode)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTextEchoMode( (QLineEdit::EchoMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QInputDialog_setTextValue)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTextValue(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QInputDialog_testOption)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->testOption( (QInputDialog::InputDialogOption )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QInputDialog_textEchoMode)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	RING_API_RETNUMBER(pObject->textEchoMode());
}


RING_FUNC(ring_QInputDialog_textValue)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	RING_API_RETSTRING(pObject->textValue().toStdString().c_str());
}


RING_FUNC(ring_QInputDialog_getDouble)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 10 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(8) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(9) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(10) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->getDouble((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3),RING_API_GETSTRING(4), (double ) RING_API_GETNUMBER(5), (double ) RING_API_GETNUMBER(6), (double ) RING_API_GETNUMBER(7), (int ) RING_API_GETNUMBER(8),(bool *) RING_API_GETCPOINTER(9,"bool"), (Qt::WindowType )  (int) RING_API_GETNUMBER(10)));
}


RING_FUNC(ring_QInputDialog_getInt)
{
	QInputDialog *pObject ;
	if ( RING_API_PARACOUNT != 10 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(8) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(9) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(10) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->getInt((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),RING_API_GETSTRING(3),RING_API_GETSTRING(4), (int ) RING_API_GETNUMBER(5), (int ) RING_API_GETNUMBER(6), (int ) RING_API_GETNUMBER(7), (int ) RING_API_GETNUMBER(8),(bool *) RING_API_GETCPOINTER(9,"bool"), (Qt::WindowType )  (int) RING_API_GETNUMBER(10)));
}


RING_FUNC(ring_QAllEvents_accept)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	pObject->accept();
}


RING_FUNC(ring_QAllEvents_ignore)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	pObject->ignore();
}


RING_FUNC(ring_QAllEvents_getKeyCode)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETNUMBER(pObject->getKeyCode());
}


RING_FUNC(ring_QAllEvents_getKeyText)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getKeyText().toStdString().c_str());
}


RING_FUNC(ring_QAllEvents_getModifiers)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETNUMBER(pObject->getModifiers());
}


RING_FUNC(ring_QAllEvents_getx)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETNUMBER(pObject->getx());
}


RING_FUNC(ring_QAllEvents_gety)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETNUMBER(pObject->gety());
}


RING_FUNC(ring_QAllEvents_getglobalx)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETNUMBER(pObject->getglobalx());
}


RING_FUNC(ring_QAllEvents_getglobaly)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETNUMBER(pObject->getglobaly());
}


RING_FUNC(ring_QAllEvents_getbutton)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETNUMBER(pObject->getbutton());
}


RING_FUNC(ring_QAllEvents_getbuttons)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETNUMBER(pObject->getbuttons());
}


RING_FUNC(ring_QAllEvents_setKeyPressEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setKeyPressEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setMouseButtonPressEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMouseButtonPressEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setMouseButtonReleaseEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMouseButtonReleaseEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setMouseButtonDblClickEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMouseButtonDblClickEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setMouseMoveEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMouseMoveEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setCloseEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCloseEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setContextMenuEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setContextMenuEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setDragEnterEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDragEnterEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setDragLeaveEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDragLeaveEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setDragMoveEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDragMoveEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setDropEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDropEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setEnterEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setEnterEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setFocusInEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFocusInEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setFocusOutEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFocusOutEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setKeyReleaseEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setKeyReleaseEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setLeaveEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLeaveEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setNonClientAreaMouseButtonDblClickEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNonClientAreaMouseButtonDblClickEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setNonClientAreaMouseButtonPressEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNonClientAreaMouseButtonPressEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setNonClientAreaMouseButtonReleaseEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNonClientAreaMouseButtonReleaseEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setNonClientAreaMouseMoveEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNonClientAreaMouseMoveEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setMoveEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMoveEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setResizeEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setResizeEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setWindowActivateEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowActivateEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setWindowBlockedEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowBlockedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setWindowDeactivateEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowDeactivateEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setWindowStateChangeEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowStateChangeEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setWindowUnblockedEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowUnblockedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setPaintEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPaintEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_getKeyPressEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getKeyPressEvent());
}


RING_FUNC(ring_QAllEvents_getMouseButtonPressEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getMouseButtonPressEvent());
}


RING_FUNC(ring_QAllEvents_getMouseButtonReleaseEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getMouseButtonReleaseEvent());
}


RING_FUNC(ring_QAllEvents_getMouseButtonDblClickEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getMouseButtonDblClickEvent());
}


RING_FUNC(ring_QAllEvents_getMouseMoveEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getMouseMoveEvent());
}


RING_FUNC(ring_QAllEvents_getCloseEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getCloseEvent());
}


RING_FUNC(ring_QAllEvents_getContextMenuEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getContextMenuEvent());
}


RING_FUNC(ring_QAllEvents_getDragEnterEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getDragEnterEvent());
}


RING_FUNC(ring_QAllEvents_getDragLeaveEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getDragLeaveEvent());
}


RING_FUNC(ring_QAllEvents_getDragMoveEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getDragMoveEvent());
}


RING_FUNC(ring_QAllEvents_getDropEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getDropEvent());
}


RING_FUNC(ring_QAllEvents_getEnterEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getEnterEvent());
}


RING_FUNC(ring_QAllEvents_getFocusInEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getFocusInEvent());
}


RING_FUNC(ring_QAllEvents_getFocusOutEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getFocusOutEvent());
}


RING_FUNC(ring_QAllEvents_getKeyReleaseEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getKeyReleaseEvent());
}


RING_FUNC(ring_QAllEvents_getLeaveEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getLeaveEvent());
}


RING_FUNC(ring_QAllEvents_getNonClientAreaMouseButtonDblClickEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getNonClientAreaMouseButtonDblClickEvent());
}


RING_FUNC(ring_QAllEvents_getNonClientAreaMouseButtonPressEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getNonClientAreaMouseButtonPressEvent());
}


RING_FUNC(ring_QAllEvents_getNonClientAreaMouseButtonReleaseEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getNonClientAreaMouseButtonReleaseEvent());
}


RING_FUNC(ring_QAllEvents_getNonClientAreaMouseMoveEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getNonClientAreaMouseMoveEvent());
}


RING_FUNC(ring_QAllEvents_getMoveEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getMoveEvent());
}


RING_FUNC(ring_QAllEvents_getResizeEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getResizeEvent());
}


RING_FUNC(ring_QAllEvents_getWindowActivateEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getWindowActivateEvent());
}


RING_FUNC(ring_QAllEvents_getWindowBlockedEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getWindowBlockedEvent());
}


RING_FUNC(ring_QAllEvents_getWindowDeactivateEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getWindowDeactivateEvent());
}


RING_FUNC(ring_QAllEvents_getWindowStateChangeEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getWindowStateChangeEvent());
}


RING_FUNC(ring_QAllEvents_getWindowUnblockedEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getWindowUnblockedEvent());
}


RING_FUNC(ring_QAllEvents_getPaintEvent)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getPaintEvent());
}


RING_FUNC(ring_QAllEvents_setEventOutput)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setEventOutput( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QAllEvents_getParentObject)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETCPOINTER(pObject->getParentObject(),"QObject");
}


RING_FUNC(ring_QAllEvents_getParentWidget)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETCPOINTER(pObject->getParentWidget(),"QWidget");
}


RING_FUNC(ring_QAllEvents_setKeyPressFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setKeyPressFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setMouseButtonPressFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMouseButtonPressFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setMouseButtonReleaseFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMouseButtonReleaseFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setMouseButtonDblClickFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMouseButtonDblClickFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setMouseMoveFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMouseMoveFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setCloseFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCloseFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setContextMenuFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setContextMenuFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setDragEnterFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDragEnterFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setDragLeaveFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDragLeaveFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setDragMoveFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDragMoveFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setDropFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDropFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setEnterFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setEnterFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setFocusInFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFocusInFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setFocusOutFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFocusOutFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setKeyReleaseFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setKeyReleaseFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setLeaveFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLeaveFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setNonClientAreaMouseButtonDblClickFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNonClientAreaMouseButtonDblClickFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setNonClientAreaMouseButtonPressFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNonClientAreaMouseButtonPressFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setNonClientAreaMouseButtonReleaseFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNonClientAreaMouseButtonReleaseFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setNonClientAreaMouseMoveFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNonClientAreaMouseMoveFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setMoveFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMoveFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setResizeFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setResizeFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setWindowActivateFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowActivateFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setWindowBlockedFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowBlockedFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setWindowDeactivateFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowDeactivateFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setWindowStateChangeFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowStateChangeFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setWindowUnblockedFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowUnblockedFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_setPaintFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPaintFunc(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QAllEvents_getKeyPressFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getKeyPressFunc());
}


RING_FUNC(ring_QAllEvents_getMouseButtonPressFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getMouseButtonPressFunc());
}


RING_FUNC(ring_QAllEvents_getMouseButtonReleaseFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getMouseButtonReleaseFunc());
}


RING_FUNC(ring_QAllEvents_getMouseButtonDblClickFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getMouseButtonDblClickFunc());
}


RING_FUNC(ring_QAllEvents_getMouseMoveFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getMouseMoveFunc());
}


RING_FUNC(ring_QAllEvents_getCloseFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getCloseFunc());
}


RING_FUNC(ring_QAllEvents_getContextMenuFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getContextMenuFunc());
}


RING_FUNC(ring_QAllEvents_getDragEnterFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getDragEnterFunc());
}


RING_FUNC(ring_QAllEvents_getDragLeaveFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getDragLeaveFunc());
}


RING_FUNC(ring_QAllEvents_getDragMoveFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getDragMoveFunc());
}


RING_FUNC(ring_QAllEvents_getDropFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getDropFunc());
}


RING_FUNC(ring_QAllEvents_getEnterFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getEnterFunc());
}


RING_FUNC(ring_QAllEvents_getFocusInFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getFocusInFunc());
}


RING_FUNC(ring_QAllEvents_getFocusOutFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getFocusOutFunc());
}


RING_FUNC(ring_QAllEvents_getKeyReleaseFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getKeyReleaseFunc());
}


RING_FUNC(ring_QAllEvents_getLeaveFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getLeaveFunc());
}


RING_FUNC(ring_QAllEvents_getNonClientAreaMouseButtonDblClickFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getNonClientAreaMouseButtonDblClickFunc());
}


RING_FUNC(ring_QAllEvents_getNonClientAreaMouseButtonPressFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getNonClientAreaMouseButtonPressFunc());
}


RING_FUNC(ring_QAllEvents_getNonClientAreaMouseButtonReleaseFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getNonClientAreaMouseButtonReleaseFunc());
}


RING_FUNC(ring_QAllEvents_getNonClientAreaMouseMoveFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getNonClientAreaMouseMoveFunc());
}


RING_FUNC(ring_QAllEvents_getMoveFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getMoveFunc());
}


RING_FUNC(ring_QAllEvents_getResizeFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getResizeFunc());
}


RING_FUNC(ring_QAllEvents_getWindowActivateFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getWindowActivateFunc());
}


RING_FUNC(ring_QAllEvents_getWindowBlockedFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getWindowBlockedFunc());
}


RING_FUNC(ring_QAllEvents_getWindowDeactivateFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getWindowDeactivateFunc());
}


RING_FUNC(ring_QAllEvents_getWindowStateChangeFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getWindowStateChangeFunc());
}


RING_FUNC(ring_QAllEvents_getWindowUnblockedFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getWindowUnblockedFunc());
}


RING_FUNC(ring_QAllEvents_getPaintFunc)
{
	GAllEvents *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"QAllEvents");
	RING_API_RETSTRING(pObject->getPaintFunc());
}


RING_FUNC(ring_QDesktopWidget_availableGeometry)
{
	QDesktopWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDesktopWidget *) RING_API_GETCPOINTER(1,"QDesktopWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->availableGeometry( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QDesktopWidget_isVirtualDesktop)
{
	QDesktopWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDesktopWidget *) RING_API_GETCPOINTER(1,"QDesktopWidget");
	RING_API_RETNUMBER(pObject->isVirtualDesktop());
}


RING_FUNC(ring_QDesktopWidget_primaryScreen)
{
	QDesktopWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDesktopWidget *) RING_API_GETCPOINTER(1,"QDesktopWidget");
	RING_API_RETNUMBER(pObject->primaryScreen());
}


RING_FUNC(ring_QDesktopWidget_screen)
{
	QDesktopWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDesktopWidget *) RING_API_GETCPOINTER(1,"QDesktopWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->screen( (int ) RING_API_GETNUMBER(2)),"QWidget");
}


RING_FUNC(ring_QDesktopWidget_screenCount)
{
	QDesktopWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDesktopWidget *) RING_API_GETCPOINTER(1,"QDesktopWidget");
	RING_API_RETNUMBER(pObject->screenCount());
}


RING_FUNC(ring_QDesktopWidget_screenGeometry)
{
	QDesktopWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDesktopWidget *) RING_API_GETCPOINTER(1,"QDesktopWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->screenGeometry( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QDesktopWidget_screenNumber)
{
	QDesktopWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDesktopWidget *) RING_API_GETCPOINTER(1,"QDesktopWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->screenNumber((QWidget *) RING_API_GETCPOINTER(2,"QWidget")));
}


RING_FUNC(ring_QRect_adjust)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->adjust( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QRect_adjusted)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->adjusted( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QRect_bottom)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	RING_API_RETNUMBER(pObject->bottom());
}


RING_FUNC(ring_QRect_bottomLeft)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->bottomLeft();
		RING_API_RETCPOINTER(pValue,"QPoint");
	}
}


RING_FUNC(ring_QRect_bottomRight)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->bottomRight();
		RING_API_RETCPOINTER(pValue,"QPoint");
	}
}


RING_FUNC(ring_QRect_center)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->center();
		RING_API_RETCPOINTER(pValue,"QPoint");
	}
}


RING_FUNC(ring_QRect_contains)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->contains( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (bool ) RING_API_GETNUMBER(4)));
}


RING_FUNC(ring_QRect_getCoords)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->getCoords(RING_API_GETINTPOINTER(2),RING_API_GETINTPOINTER(3),RING_API_GETINTPOINTER(4),RING_API_GETINTPOINTER(5));
	RING_API_ACCEPTINTVALUE(1) ;
	RING_API_ACCEPTINTVALUE(2) ;
	RING_API_ACCEPTINTVALUE(3) ;
	RING_API_ACCEPTINTVALUE(4) ;
}


RING_FUNC(ring_QRect_getRect)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->getRect(RING_API_GETINTPOINTER(2),RING_API_GETINTPOINTER(3),RING_API_GETINTPOINTER(4),RING_API_GETINTPOINTER(5));
	RING_API_ACCEPTINTVALUE(1) ;
	RING_API_ACCEPTINTVALUE(2) ;
	RING_API_ACCEPTINTVALUE(3) ;
	RING_API_ACCEPTINTVALUE(4) ;
}


RING_FUNC(ring_QRect_height)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	RING_API_RETNUMBER(pObject->height());
}


RING_FUNC(ring_QRect_intersected)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->intersected(* (QRect *) RING_API_GETCPOINTER(2,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QRect"));
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QRect_intersects)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	RING_API_RETNUMBER(pObject->intersects(* (QRect *) RING_API_GETCPOINTER(2,"QRect")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QRect"));
}


RING_FUNC(ring_QRect_isEmpty)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	RING_API_RETNUMBER(pObject->isEmpty());
}


RING_FUNC(ring_QRect_isNull)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QRect_isValid)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	RING_API_RETNUMBER(pObject->isValid());
}


RING_FUNC(ring_QRect_left)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	RING_API_RETNUMBER(pObject->left());
}


RING_FUNC(ring_QRect_moveBottom)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->moveBottom( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QRect_moveBottomLeft)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	pObject->moveBottomLeft(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
}


RING_FUNC(ring_QRect_moveBottomRight)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	pObject->moveBottomRight(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
}


RING_FUNC(ring_QRect_moveCenter)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	pObject->moveCenter(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
}


RING_FUNC(ring_QRect_moveLeft)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->moveLeft( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QRect_moveRight)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->moveRight( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QRect_moveTo)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->moveTo( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QRect_moveTop)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->moveTop( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QRect_moveTopLeft)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	pObject->moveTopLeft(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
}


RING_FUNC(ring_QRect_moveTopRight)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	pObject->moveTopRight(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
}


RING_FUNC(ring_QRect_normalized)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->normalized();
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QRect_right)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	RING_API_RETNUMBER(pObject->right());
}


RING_FUNC(ring_QRect_setBottom)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setBottom( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QRect_setBottomLeft)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	pObject->setBottomLeft(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
}


RING_FUNC(ring_QRect_setBottomRight)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	pObject->setBottomRight(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
}


RING_FUNC(ring_QRect_setCoords)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCoords( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QRect_setHeight)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHeight( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QRect_setLeft)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLeft( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QRect_setRect)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRect( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QRect_setRight)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRight( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QRect_setSize)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	pObject->setSize(* (QSize *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QSize"));
}


RING_FUNC(ring_QRect_setTop)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTop( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QRect_setTopLeft)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	pObject->setTopLeft(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
}


RING_FUNC(ring_QRect_setTopRight)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	pObject->setTopRight(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
}


RING_FUNC(ring_QRect_setWidth)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWidth( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QRect_setX)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setX( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QRect_setY)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setY( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QRect_size)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->size();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QRect_top)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	RING_API_RETNUMBER(pObject->top());
}


RING_FUNC(ring_QRect_topLeft)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->topLeft();
		RING_API_RETCPOINTER(pValue,"QPoint");
	}
}


RING_FUNC(ring_QRect_topRight)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->topRight();
		RING_API_RETCPOINTER(pValue,"QPoint");
	}
}


RING_FUNC(ring_QRect_translate)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->translate( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QRect_translated)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->translated( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QRect_united)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->united(* (QRect *) RING_API_GETCPOINTER(2,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QRect"));
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QRect_width)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	RING_API_RETNUMBER(pObject->width());
}


RING_FUNC(ring_QRect_x)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	RING_API_RETNUMBER(pObject->x());
}


RING_FUNC(ring_QRect_y)
{
	QRect *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
	RING_API_RETNUMBER(pObject->y());
}


RING_FUNC(ring_QTextDocument_addResource)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addResource( (int ) RING_API_GETNUMBER(2),* (QUrl  *) RING_API_GETCPOINTER(3,"QUrl"),* (QVariant  *) RING_API_GETCPOINTER(4,"QVariant"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QUrl"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"QVariant"));
}


RING_FUNC(ring_QTextDocument_adjustSize)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	pObject->adjustSize();
}


RING_FUNC(ring_QTextDocument_allFormats)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	{
		QVector<QTextFormat> *pValue ; 
		pValue = (QVector<QTextFormat> *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QVector<QTextFormat>)) ;
		*pValue = pObject->allFormats();
		RING_API_RETCPOINTER(pValue,"QVector<QTextFormat>");
	}
}


RING_FUNC(ring_QTextDocument_availableRedoSteps)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->availableRedoSteps());
}


RING_FUNC(ring_QTextDocument_availableUndoSteps)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->availableUndoSteps());
}


RING_FUNC(ring_QTextDocument_begin)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	{
		QTextBlock *pValue ; 
		pValue = new QTextBlock() ;
		*pValue = pObject->begin();
		RING_API_RETCPOINTER(pValue,"QTextBlock");
	}
}


RING_FUNC(ring_QTextDocument_blockCount)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->blockCount());
}


RING_FUNC(ring_QTextDocument_characterAt)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QChar *pValue ; 
		pValue = (QChar *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QChar)) ;
		*pValue = pObject->characterAt( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QChar");
	}
}


RING_FUNC(ring_QTextDocument_characterCount)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->characterCount());
}


RING_FUNC(ring_QTextDocument_clearUndoRedoStacks)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->clearUndoRedoStacks( (QTextDocument::Stacks )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextDocument_clone)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->clone((QObject *) RING_API_GETCPOINTER(2,"QObject")),"QTextDocument");
}


RING_FUNC(ring_QTextDocument_defaultCursorMoveStyle)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->defaultCursorMoveStyle());
}


RING_FUNC(ring_QTextDocument_defaultFont)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	{
		QFont *pValue ; 
		pValue = new QFont() ;
		*pValue = pObject->defaultFont();
		RING_API_RETCPOINTER(pValue,"QFont");
	}
}


RING_FUNC(ring_QTextDocument_defaultStyleSheet)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETSTRING(pObject->defaultStyleSheet().toStdString().c_str());
}


RING_FUNC(ring_QTextDocument_defaultTextOption)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	{
		QTextOption *pValue ; 
		pValue = (QTextOption *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QTextOption)) ;
		*pValue = pObject->defaultTextOption();
		RING_API_RETCPOINTER(pValue,"QTextOption");
	}
}


RING_FUNC(ring_QTextDocument_documentLayout)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETCPOINTER(pObject->documentLayout(),"QAbstractTextDocumentLayout");
}


RING_FUNC(ring_QTextDocument_documentMargin)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->documentMargin());
}


RING_FUNC(ring_QTextDocument_drawContents)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->drawContents((QPainter *) RING_API_GETCPOINTER(2,"QPainter"),* (QRectF  *) RING_API_GETCPOINTER(3,"QRectF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QRectF"));
}


RING_FUNC(ring_QTextDocument_end)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	{
		QTextBlock *pValue ; 
		pValue = new QTextBlock() ;
		*pValue = pObject->end();
		RING_API_RETCPOINTER(pValue,"QTextBlock");
	}
}


RING_FUNC(ring_QTextDocument_find)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QTextCursor *pValue ; 
		pValue = new QTextCursor() ;
		*pValue = pObject->find(RING_API_GETSTRING(2),* (QTextCursor  *) RING_API_GETCPOINTER(3,"QTextCursor"), (QTextDocument::FindFlag )  (int) RING_API_GETNUMBER(4));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QTextCursor"));
		RING_API_RETCPOINTER(pValue,"QTextCursor");
	}
}


RING_FUNC(ring_QTextDocument_findBlock)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QTextBlock *pValue ; 
		pValue = new QTextBlock() ;
		*pValue = pObject->findBlock( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QTextBlock");
	}
}


RING_FUNC(ring_QTextDocument_findBlockByLineNumber)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QTextBlock *pValue ; 
		pValue = new QTextBlock() ;
		*pValue = pObject->findBlockByLineNumber( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QTextBlock");
	}
}


RING_FUNC(ring_QTextDocument_findBlockByNumber)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QTextBlock *pValue ; 
		pValue = new QTextBlock() ;
		*pValue = pObject->findBlockByNumber( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QTextBlock");
	}
}


RING_FUNC(ring_QTextDocument_firstBlock)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	{
		QTextBlock *pValue ; 
		pValue = new QTextBlock() ;
		*pValue = pObject->firstBlock();
		RING_API_RETCPOINTER(pValue,"QTextBlock");
	}
}


RING_FUNC(ring_QTextDocument_idealWidth)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->idealWidth());
}


RING_FUNC(ring_QTextDocument_indentWidth)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->indentWidth());
}


RING_FUNC(ring_QTextDocument_isEmpty)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->isEmpty());
}


RING_FUNC(ring_QTextDocument_isModified)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->isModified());
}


RING_FUNC(ring_QTextDocument_isRedoAvailable)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->isRedoAvailable());
}


RING_FUNC(ring_QTextDocument_isUndoAvailable)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->isUndoAvailable());
}


RING_FUNC(ring_QTextDocument_isUndoRedoEnabled)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->isUndoRedoEnabled());
}


RING_FUNC(ring_QTextDocument_lastBlock)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	{
		QTextBlock *pValue ; 
		pValue = new QTextBlock() ;
		*pValue = pObject->lastBlock();
		RING_API_RETCPOINTER(pValue,"QTextBlock");
	}
}


RING_FUNC(ring_QTextDocument_lineCount)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->lineCount());
}


RING_FUNC(ring_QTextDocument_markContentsDirty)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->markContentsDirty( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTextDocument_maximumBlockCount)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->maximumBlockCount());
}


RING_FUNC(ring_QTextDocument_metaInformation)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->metaInformation( (QTextDocument::MetaInformation )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QTextDocument_object)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->object( (int ) RING_API_GETNUMBER(2)),"QTextObject");
}


RING_FUNC(ring_QTextDocument_objectForFormat)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETCPOINTER(pObject->objectForFormat(* (QTextFormat  *) RING_API_GETCPOINTER(2,"QTextFormat")),"QTextObject");
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTextFormat"));
}


RING_FUNC(ring_QTextDocument_pageCount)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->pageCount());
}


RING_FUNC(ring_QTextDocument_pageSize)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	{
		QSizeF *pValue ; 
		pValue = (QSizeF *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QSizeF)) ;
		*pValue = pObject->pageSize();
		RING_API_RETCPOINTER(pValue,"QSizeF");
	}
}


RING_FUNC(ring_QTextDocument_print)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->print((QPrinter *) RING_API_GETCPOINTER(2,"QPrinter"));
}


RING_FUNC(ring_QTextDocument_redo)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->redo((QTextCursor *) RING_API_GETCPOINTER(2,"QTextCursor"));
}


RING_FUNC(ring_QTextDocument_resource)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->resource( (int ) RING_API_GETNUMBER(2),* (QUrl  *) RING_API_GETCPOINTER(3,"QUrl"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QUrl"));
		RING_API_RETCPOINTER(pValue,"QVariant");
	}
}


RING_FUNC(ring_QTextDocument_revision)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->revision());
}


RING_FUNC(ring_QTextDocument_rootFrame)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETCPOINTER(pObject->rootFrame(),"QTextFrame");
}


RING_FUNC(ring_QTextDocument_setDefaultCursorMoveStyle)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDefaultCursorMoveStyle( (Qt::CursorMoveStyle )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextDocument_setDefaultFont)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	pObject->setDefaultFont(* (QFont  *) RING_API_GETCPOINTER(2,"QFont"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QFont"));
}


RING_FUNC(ring_QTextDocument_setDefaultStyleSheet)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDefaultStyleSheet(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextDocument_setDefaultTextOption)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	pObject->setDefaultTextOption(* (QTextOption  *) RING_API_GETCPOINTER(2,"QTextOption"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTextOption"));
}


RING_FUNC(ring_QTextDocument_setDocumentLayout)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDocumentLayout((QAbstractTextDocumentLayout *) RING_API_GETCPOINTER(2,"QAbstractTextDocumentLayout"));
}


RING_FUNC(ring_QTextDocument_setDocumentMargin)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDocumentMargin( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextDocument_setHtml)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHtml(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextDocument_setIndentWidth)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setIndentWidth( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextDocument_setMaximumBlockCount)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMaximumBlockCount( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextDocument_setMetaInformation)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMetaInformation( (QTextDocument::MetaInformation )  (int) RING_API_GETNUMBER(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QTextDocument_setPageSize)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	pObject->setPageSize(* (QSizeF  *) RING_API_GETCPOINTER(2,"QSizeF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QSizeF"));
}


RING_FUNC(ring_QTextDocument_setPlainText)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPlainText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextDocument_setTextWidth)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTextWidth( (double ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextDocument_setUndoRedoEnabled)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUndoRedoEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextDocument_setUseDesignMetrics)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUseDesignMetrics( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextDocument_size)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	{
		QSizeF *pValue ; 
		pValue = (QSizeF *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QSizeF)) ;
		*pValue = pObject->size();
		RING_API_RETCPOINTER(pValue,"QSizeF");
	}
}


RING_FUNC(ring_QTextDocument_textWidth)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->textWidth());
}


RING_FUNC(ring_QTextDocument_toHtml)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETSTRING(pObject->toHtml(* (QByteArray  *) RING_API_GETCPOINTER(2,"QByteArray")).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QByteArray"));
}


RING_FUNC(ring_QTextDocument_toPlainText)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETSTRING(pObject->toPlainText().toStdString().c_str());
}


RING_FUNC(ring_QTextDocument_undo)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->undo((QTextCursor *) RING_API_GETCPOINTER(2,"QTextCursor"));
}


RING_FUNC(ring_QTextDocument_useDesignMetrics)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	RING_API_RETNUMBER(pObject->useDesignMetrics());
}


RING_FUNC(ring_QTextDocument_setModified)
{
	QTextDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setModified( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextBlock_blockFormat)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	{
		QTextBlockFormat *pValue ; 
		pValue = (QTextBlockFormat *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QTextBlockFormat)) ;
		*pValue = pObject->blockFormat();
		RING_API_RETCPOINTER(pValue,"QTextBlockFormat");
	}
}


RING_FUNC(ring_QTextBlock_blockFormatIndex)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETNUMBER(pObject->blockFormatIndex());
}


RING_FUNC(ring_QTextBlock_blockNumber)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETNUMBER(pObject->blockNumber());
}


RING_FUNC(ring_QTextBlock_charFormat)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	{
		QTextCharFormat *pValue ; 
		pValue = new QTextCharFormat() ;
		*pValue = pObject->charFormat();
		RING_API_RETCPOINTER(pValue,"QTextCharFormat");
	}
}


RING_FUNC(ring_QTextBlock_charFormatIndex)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETNUMBER(pObject->charFormatIndex());
}


RING_FUNC(ring_QTextBlock_clearLayout)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	pObject->clearLayout();
}


RING_FUNC(ring_QTextBlock_contains)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->contains( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QTextBlock_document)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETCPOINTER(pObject->document(),"QTextDocument");
}


RING_FUNC(ring_QTextBlock_firstLineNumber)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETNUMBER(pObject->firstLineNumber());
}


RING_FUNC(ring_QTextBlock_isValid)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETNUMBER(pObject->isValid());
}


RING_FUNC(ring_QTextBlock_isVisible)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETNUMBER(pObject->isVisible());
}


RING_FUNC(ring_QTextBlock_layout)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETCPOINTER(pObject->layout(),"QTextLayout");
}


RING_FUNC(ring_QTextBlock_length)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETNUMBER(pObject->length());
}


RING_FUNC(ring_QTextBlock_lineCount)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETNUMBER(pObject->lineCount());
}


RING_FUNC(ring_QTextBlock_next)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	{
		QTextBlock *pValue ; 
		pValue = new QTextBlock() ;
		*pValue = pObject->next();
		RING_API_RETCPOINTER(pValue,"QTextBlock");
	}
}


RING_FUNC(ring_QTextBlock_position)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETNUMBER(pObject->position());
}


RING_FUNC(ring_QTextBlock_previous)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	{
		QTextBlock *pValue ; 
		pValue = new QTextBlock() ;
		*pValue = pObject->previous();
		RING_API_RETCPOINTER(pValue,"QTextBlock");
	}
}


RING_FUNC(ring_QTextBlock_revision)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETNUMBER(pObject->revision());
}


RING_FUNC(ring_QTextBlock_setLineCount)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLineCount( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextBlock_setRevision)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRevision( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextBlock_setUserData)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUserData((QTextBlockUserData *) RING_API_GETCPOINTER(2,"QTextBlockUserData"));
}


RING_FUNC(ring_QTextBlock_setUserState)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUserState( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextBlock_setVisible)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setVisible( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextBlock_text)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETSTRING(pObject->text().toStdString().c_str());
}


RING_FUNC(ring_QTextBlock_textDirection)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETNUMBER(pObject->textDirection());
}


RING_FUNC(ring_QTextBlock_textList)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETCPOINTER(pObject->textList(),"QTextList");
}


RING_FUNC(ring_QTextBlock_userData)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETCPOINTER(pObject->userData(),"QTextBlockUserData");
}


RING_FUNC(ring_QTextBlock_userState)
{
	QTextBlock *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
	RING_API_RETNUMBER(pObject->userState());
}


RING_FUNC(ring_QTime_addMSecs)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QTime *pValue ; 
		pValue = new QTime() ;
		*pValue = pObject->addMSecs( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QTime");
	}
}


RING_FUNC(ring_QTime_addSecs)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QTime *pValue ; 
		pValue = new QTime() ;
		*pValue = pObject->addSecs( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QTime");
	}
}


RING_FUNC(ring_QTime_elapsed)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	RING_API_RETNUMBER(pObject->elapsed());
}


RING_FUNC(ring_QTime_hour)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	RING_API_RETNUMBER(pObject->hour());
}


RING_FUNC(ring_QTime_isNull)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QTime_isValid)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	RING_API_RETNUMBER(pObject->isValid());
}


RING_FUNC(ring_QTime_minute)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	RING_API_RETNUMBER(pObject->minute());
}


RING_FUNC(ring_QTime_msec)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	RING_API_RETNUMBER(pObject->msec());
}


RING_FUNC(ring_QTime_msecsSinceStartOfDay)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	RING_API_RETNUMBER(pObject->msecsSinceStartOfDay());
}


RING_FUNC(ring_QTime_msecsTo)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	RING_API_RETNUMBER(pObject->msecsTo(* (QTime *) RING_API_GETCPOINTER(2,"QTime")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTime"));
}


RING_FUNC(ring_QTime_restart)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	RING_API_RETNUMBER(pObject->restart());
}


RING_FUNC(ring_QTime_second)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	RING_API_RETNUMBER(pObject->second());
}


RING_FUNC(ring_QTime_secsTo)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	RING_API_RETNUMBER(pObject->secsTo(* (QTime *) RING_API_GETCPOINTER(2,"QTime")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTime"));
}


RING_FUNC(ring_QTime_setHMS)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setHMS( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5)));
}


RING_FUNC(ring_QTime_start)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	pObject->start();
}


RING_FUNC(ring_QTime_toString)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->toString(RING_API_GETSTRING(2)).toStdString().c_str());
}


RING_FUNC(ring_QTime_currentTime)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	{
		QTime *pValue ; 
		pValue = new QTime() ;
		*pValue = pObject->currentTime();
		RING_API_RETCPOINTER(pValue,"QTime");
	}
}


RING_FUNC(ring_QTime_fromMSecsSinceStartOfDay)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QTime *pValue ; 
		pValue = new QTime() ;
		*pValue = pObject->fromMSecsSinceStartOfDay( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QTime");
	}
}


RING_FUNC(ring_QTime_fromString)
{
	QTime *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QTime *pValue ; 
		pValue = new QTime() ;
		*pValue = pObject->fromString(RING_API_GETSTRING(2),RING_API_GETSTRING(3));
		RING_API_RETCPOINTER(pValue,"QTime");
	}
}


RING_FUNC(ring_QListWidgetItem_background)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	{
		QBrush *pValue ; 
		pValue = new QBrush() ;
		*pValue = pObject->background();
		RING_API_RETCPOINTER(pValue,"QBrush");
	}
}


RING_FUNC(ring_QListWidgetItem_checkState)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	RING_API_RETNUMBER(pObject->checkState());
}


RING_FUNC(ring_QListWidgetItem_flags)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	RING_API_RETNUMBER(pObject->flags());
}


RING_FUNC(ring_QListWidgetItem_font)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	{
		QFont *pValue ; 
		pValue = new QFont() ;
		*pValue = pObject->font();
		RING_API_RETCPOINTER(pValue,"QFont");
	}
}


RING_FUNC(ring_QListWidgetItem_foreground)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	{
		QBrush *pValue ; 
		pValue = new QBrush() ;
		*pValue = pObject->foreground();
		RING_API_RETCPOINTER(pValue,"QBrush");
	}
}


RING_FUNC(ring_QListWidgetItem_icon)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	{
		QIcon *pValue ; 
		pValue = new QIcon() ;
		*pValue = pObject->icon();
		RING_API_RETCPOINTER(pValue,"QIcon");
	}
}


RING_FUNC(ring_QListWidgetItem_isHidden)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	RING_API_RETNUMBER(pObject->isHidden());
}


RING_FUNC(ring_QListWidgetItem_isSelected)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	RING_API_RETNUMBER(pObject->isSelected());
}


RING_FUNC(ring_QListWidgetItem_listWidget)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	RING_API_RETCPOINTER(pObject->listWidget(),"QListWidget");
}


RING_FUNC(ring_QListWidgetItem_setBackground)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	pObject->setBackground(* (QBrush  *) RING_API_GETCPOINTER(2,"QBrush"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QBrush"));
}


RING_FUNC(ring_QListWidgetItem_setCheckState)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCheckState( (Qt::CheckState )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListWidgetItem_setFlags)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFlags( (Qt::ItemFlags )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListWidgetItem_setFont)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	pObject->setFont(* (QFont  *) RING_API_GETCPOINTER(2,"QFont"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QFont"));
}


RING_FUNC(ring_QListWidgetItem_setForeground)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	pObject->setForeground(* (QBrush  *) RING_API_GETCPOINTER(2,"QBrush"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QBrush"));
}


RING_FUNC(ring_QListWidgetItem_setHidden)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHidden( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListWidgetItem_setIcon)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	pObject->setIcon(* (QIcon  *) RING_API_GETCPOINTER(2,"QIcon"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QIcon"));
}


RING_FUNC(ring_QListWidgetItem_setSelected)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSelected( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListWidgetItem_setSizeHint)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	pObject->setSizeHint(* (QSize  *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QSize"));
}


RING_FUNC(ring_QListWidgetItem_setStatusTip)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStatusTip(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QListWidgetItem_setText)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QListWidgetItem_setTextAlignment)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTextAlignment( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListWidgetItem_setToolTip)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setToolTip(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QListWidgetItem_setWhatsThis)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWhatsThis(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QListWidgetItem_sizeHint)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->sizeHint();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QListWidgetItem_statusTip)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	RING_API_RETSTRING(pObject->statusTip().toStdString().c_str());
}


RING_FUNC(ring_QListWidgetItem_text)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	RING_API_RETSTRING(pObject->text().toStdString().c_str());
}


RING_FUNC(ring_QListWidgetItem_textAlignment)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	RING_API_RETNUMBER(pObject->textAlignment());
}


RING_FUNC(ring_QListWidgetItem_toolTip)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	RING_API_RETSTRING(pObject->toolTip().toStdString().c_str());
}


RING_FUNC(ring_QListWidgetItem_type)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	RING_API_RETNUMBER(pObject->type());
}


RING_FUNC(ring_QListWidgetItem_whatsThis)
{
	QListWidgetItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
	RING_API_RETSTRING(pObject->whatsThis().toStdString().c_str());
}


RING_FUNC(ring_QSystemTrayIcon_contextMenu)
{
	QSystemTrayIcon *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSystemTrayIcon *) RING_API_GETCPOINTER(1,"QSystemTrayIcon");
	RING_API_RETCPOINTER(pObject->contextMenu(),"QMenu");
}


RING_FUNC(ring_QSystemTrayIcon_geometry)
{
	QSystemTrayIcon *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSystemTrayIcon *) RING_API_GETCPOINTER(1,"QSystemTrayIcon");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->geometry();
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QSystemTrayIcon_icon)
{
	QSystemTrayIcon *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSystemTrayIcon *) RING_API_GETCPOINTER(1,"QSystemTrayIcon");
	{
		QIcon *pValue ; 
		pValue = new QIcon() ;
		*pValue = pObject->icon();
		RING_API_RETCPOINTER(pValue,"QIcon");
	}
}


RING_FUNC(ring_QSystemTrayIcon_isVisible)
{
	QSystemTrayIcon *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSystemTrayIcon *) RING_API_GETCPOINTER(1,"QSystemTrayIcon");
	RING_API_RETNUMBER(pObject->isVisible());
}


RING_FUNC(ring_QSystemTrayIcon_setContextMenu)
{
	QSystemTrayIcon *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSystemTrayIcon *) RING_API_GETCPOINTER(1,"QSystemTrayIcon");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setContextMenu((QMenu *) RING_API_GETCPOINTER(2,"QMenu"));
}


RING_FUNC(ring_QSystemTrayIcon_setIcon)
{
	QSystemTrayIcon *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSystemTrayIcon *) RING_API_GETCPOINTER(1,"QSystemTrayIcon");
	pObject->setIcon(* (QIcon *) RING_API_GETCPOINTER(2,"QIcon"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QIcon"));
}


RING_FUNC(ring_QSystemTrayIcon_setToolTip)
{
	QSystemTrayIcon *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSystemTrayIcon *) RING_API_GETCPOINTER(1,"QSystemTrayIcon");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setToolTip(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSystemTrayIcon_toolTip)
{
	QSystemTrayIcon *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSystemTrayIcon *) RING_API_GETCPOINTER(1,"QSystemTrayIcon");
	RING_API_RETSTRING(pObject->toolTip().toStdString().c_str());
}


RING_FUNC(ring_QSystemTrayIcon_hide)
{
	QSystemTrayIcon *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSystemTrayIcon *) RING_API_GETCPOINTER(1,"QSystemTrayIcon");
	pObject->hide();
}


RING_FUNC(ring_QSystemTrayIcon_setVisible)
{
	QSystemTrayIcon *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSystemTrayIcon *) RING_API_GETCPOINTER(1,"QSystemTrayIcon");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setVisible( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSystemTrayIcon_show)
{
	QSystemTrayIcon *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSystemTrayIcon *) RING_API_GETCPOINTER(1,"QSystemTrayIcon");
	pObject->show();
}


RING_FUNC(ring_QSystemTrayIcon_showMessage)
{
	QSystemTrayIcon *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSystemTrayIcon *) RING_API_GETCPOINTER(1,"QSystemTrayIcon");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->showMessage(RING_API_GETSTRING(2),RING_API_GETSTRING(3), (QSystemTrayIcon::MessageIcon)  (int) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QSystemTrayIcon_isSystemTrayAvailable)
{
	QSystemTrayIcon *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSystemTrayIcon *) RING_API_GETCPOINTER(1,"QSystemTrayIcon");
	RING_API_RETNUMBER(pObject->isSystemTrayAvailable());
}


RING_FUNC(ring_QSystemTrayIcon_supportsMessages)
{
	QSystemTrayIcon *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSystemTrayIcon *) RING_API_GETCPOINTER(1,"QSystemTrayIcon");
	RING_API_RETNUMBER(pObject->supportsMessages());
}


RING_FUNC(ring_QDate_addDays)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QDate *pValue ; 
		pValue = new QDate() ;
		*pValue = pObject->addDays( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QDate");
	}
}


RING_FUNC(ring_QDate_addMonths)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QDate *pValue ; 
		pValue = new QDate() ;
		*pValue = pObject->addMonths( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QDate");
	}
}


RING_FUNC(ring_QDate_addYears)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QDate *pValue ; 
		pValue = new QDate() ;
		*pValue = pObject->addYears( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QDate");
	}
}


RING_FUNC(ring_QDate_day)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	RING_API_RETNUMBER(pObject->day());
}


RING_FUNC(ring_QDate_dayOfWeek)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	RING_API_RETNUMBER(pObject->dayOfWeek());
}


RING_FUNC(ring_QDate_dayOfYear)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	RING_API_RETNUMBER(pObject->dayOfYear());
}


RING_FUNC(ring_QDate_daysInMonth)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	RING_API_RETNUMBER(pObject->daysInMonth());
}


RING_FUNC(ring_QDate_daysInYear)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	RING_API_RETNUMBER(pObject->daysInYear());
}


RING_FUNC(ring_QDate_daysTo)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	RING_API_RETNUMBER(pObject->daysTo(* (QDate *) RING_API_GETCPOINTER(2,"QDate")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QDate"));
}


RING_FUNC(ring_QDate_getDate)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->getDate(RING_API_GETINTPOINTER(2),RING_API_GETINTPOINTER(3),RING_API_GETINTPOINTER(4));
	RING_API_ACCEPTINTVALUE(1) ;
	RING_API_ACCEPTINTVALUE(2) ;
	RING_API_ACCEPTINTVALUE(3) ;
}


RING_FUNC(ring_QDate_isNull)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QDate_isValid)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	RING_API_RETNUMBER(pObject->isValid());
}


RING_FUNC(ring_QDate_month)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	RING_API_RETNUMBER(pObject->month());
}


RING_FUNC(ring_QDate_setDate)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setDate( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4)));
}


RING_FUNC(ring_QDate_toJulianDay)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	RING_API_RETNUMBER(pObject->toJulianDay());
}


RING_FUNC(ring_QDate_toString)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->toString(RING_API_GETSTRING(2)).toStdString().c_str());
}


RING_FUNC(ring_QDate_weekNumber)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->weekNumber(RING_API_GETINTPOINTER(2)));
	RING_API_ACCEPTINTVALUE(1) ;
}


RING_FUNC(ring_QDate_year)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	RING_API_RETNUMBER(pObject->year());
}


RING_FUNC(ring_QDate_currentDate)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	{
		QDate *pValue ; 
		pValue = new QDate() ;
		*pValue = pObject->currentDate();
		RING_API_RETCPOINTER(pValue,"QDate");
	}
}


RING_FUNC(ring_QDate_fromJulianDay)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QDate *pValue ; 
		pValue = new QDate() ;
		*pValue = pObject->fromJulianDay( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QDate");
	}
}


RING_FUNC(ring_QDate_fromString)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QDate *pValue ; 
		pValue = new QDate() ;
		*pValue = pObject->fromString(RING_API_GETSTRING(2),RING_API_GETSTRING(3));
		RING_API_RETCPOINTER(pValue,"QDate");
	}
}


RING_FUNC(ring_QDate_isLeapYear)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isLeapYear( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QDate_longDayName)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->longDayName( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QDate_longMonthName)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->longMonthName( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QDate_shortDayName)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->shortDayName( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QDate_shortMonthName)
{
	QDate *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->shortMonthName( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QTextCodec_codecForName)
{
	RING_API_RETCPOINTER( QTextCodec::codecForName(RING_API_GETSTRING(1)) , "QTextCodec");
}

RING_FUNC(ring_QTextCodec_setCodecForLocale)
{
	 QTextCodec::setCodecForLocale( (QTextCodec *) RING_API_GETCPOINTER(1,"QTextCodec"));
}


RING_FUNC(ring_QSqlDatabase_close)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	pObject->close();
}


RING_FUNC(ring_QSqlDatabase_commit)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	RING_API_RETNUMBER(pObject->commit());
}


RING_FUNC(ring_QSqlDatabase_connectOptions)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	RING_API_RETSTRING(pObject->connectOptions().toStdString().c_str());
}


RING_FUNC(ring_QSqlDatabase_connectionName)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	RING_API_RETSTRING(pObject->connectionName().toStdString().c_str());
}


RING_FUNC(ring_QSqlDatabase_databaseName)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	RING_API_RETSTRING(pObject->databaseName().toStdString().c_str());
}


RING_FUNC(ring_QSqlDatabase_driver)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	RING_API_RETCPOINTER(pObject->driver(),"QSqlDriver");
}


RING_FUNC(ring_QSqlDatabase_driverName)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	RING_API_RETSTRING(pObject->driverName().toStdString().c_str());
}


RING_FUNC(ring_QSqlDatabase_exec)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QSqlQuery *pValue ; 
		pValue = new QSqlQuery() ;
		*pValue = pObject->exec(RING_API_GETSTRING(2));
		RING_API_RETCPOINTER(pValue,"QSqlQuery");
	}
}


RING_FUNC(ring_QSqlDatabase_hostName)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	RING_API_RETSTRING(pObject->hostName().toStdString().c_str());
}


RING_FUNC(ring_QSqlDatabase_isOpen)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	RING_API_RETNUMBER(pObject->isOpen());
}


RING_FUNC(ring_QSqlDatabase_isOpenError)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	RING_API_RETNUMBER(pObject->isOpenError());
}


RING_FUNC(ring_QSqlDatabase_isValid)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	RING_API_RETNUMBER(pObject->isValid());
}


RING_FUNC(ring_QSqlDatabase_lastError)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	{
		QSqlError *pValue ; 
		pValue = new QSqlError() ;
		*pValue = pObject->lastError();
		RING_API_RETCPOINTER(pValue,"QSqlError");
	}
}


RING_FUNC(ring_QSqlDatabase_numericalPrecisionPolicy)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	RING_API_RETNUMBER(pObject->numericalPrecisionPolicy());
}


RING_FUNC(ring_QSqlDatabase_open)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	RING_API_RETNUMBER(pObject->open());
}


RING_FUNC(ring_QSqlDatabase_password)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	RING_API_RETSTRING(pObject->password().toStdString().c_str());
}


RING_FUNC(ring_QSqlDatabase_port)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	RING_API_RETNUMBER(pObject->port());
}


RING_FUNC(ring_QSqlDatabase_primaryIndex)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QSqlIndex *pValue ; 
		pValue = new QSqlIndex() ;
		*pValue = pObject->primaryIndex(RING_API_GETSTRING(2));
		RING_API_RETCPOINTER(pValue,"QSqlIndex");
	}
}


RING_FUNC(ring_QSqlDatabase_record)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QSqlRecord *pValue ; 
		pValue = new QSqlRecord() ;
		*pValue = pObject->record(RING_API_GETSTRING(2));
		RING_API_RETCPOINTER(pValue,"QSqlRecord");
	}
}


RING_FUNC(ring_QSqlDatabase_rollback)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	RING_API_RETNUMBER(pObject->rollback());
}


RING_FUNC(ring_QSqlDatabase_setConnectOptions)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setConnectOptions(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSqlDatabase_setDatabaseName)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDatabaseName(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSqlDatabase_setHostName)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHostName(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSqlDatabase_setNumericalPrecisionPolicy)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNumericalPrecisionPolicy( (QSql::NumericalPrecisionPolicy )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSqlDatabase_setPassword)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPassword(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSqlDatabase_setPort)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPort( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSqlDatabase_setUserName)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUserName(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSqlDatabase_tables)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->tables(* (QSql::TableType  *) RING_API_GETCPOINTER(2,"QSql::TableType"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QSql::TableType"));
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QSqlDatabase_transaction)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	RING_API_RETNUMBER(pObject->transaction());
}


RING_FUNC(ring_QSqlDatabase_userName)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	RING_API_RETSTRING(pObject->userName().toStdString().c_str());
}


RING_FUNC(ring_QSqlDatabase_addDatabase)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QSqlDatabase *pValue ; 
		pValue = new QSqlDatabase() ;
		*pValue = pObject->addDatabase(RING_API_GETSTRING(2));
		RING_API_RETCPOINTER(pValue,"QSqlDatabase");
	}
}


RING_FUNC(ring_QSqlDatabase_cloneDatabase)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QSqlDatabase *pValue ; 
		pValue = new QSqlDatabase() ;
		*pValue = pObject->cloneDatabase(* (QSqlDatabase *) RING_API_GETCPOINTER(2,"QSqlDatabase"),RING_API_GETSTRING(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QSqlDatabase"));
		RING_API_RETCPOINTER(pValue,"QSqlDatabase");
	}
}


RING_FUNC(ring_QSqlDatabase_connectionNames)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->connectionNames();
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QSqlDatabase_contains)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->contains(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QSqlDatabase_database)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QSqlDatabase *pValue ; 
		pValue = new QSqlDatabase() ;
		*pValue = pObject->database(RING_API_GETSTRING(2), (bool) RING_API_GETNUMBER(3));
		RING_API_RETCPOINTER(pValue,"QSqlDatabase");
	}
}


RING_FUNC(ring_QSqlDatabase_drivers)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->drivers();
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QSqlDatabase_isDriverAvailable)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isDriverAvailable(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QSqlDatabase_registerSqlDriver)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->registerSqlDriver(RING_API_GETSTRING(2),(QSqlDriverCreatorBase *) RING_API_GETCPOINTER(3,"QSqlDriverCreatorBase"));
}


RING_FUNC(ring_QSqlDatabase_removeDatabase)
{
	QSqlDatabase *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeDatabase(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSqlDriver_isOpenError)
{
	QSqlDriver *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDriver *) RING_API_GETCPOINTER(1,"QSqlDriver");
	RING_API_RETNUMBER(pObject->isOpenError());
}


RING_FUNC(ring_QSqlDriver_lastError)
{
	QSqlDriver *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDriver *) RING_API_GETCPOINTER(1,"QSqlDriver");
	{
		QSqlError *pValue ; 
		pValue = new QSqlError() ;
		*pValue = pObject->lastError();
		RING_API_RETCPOINTER(pValue,"QSqlError");
	}
}


RING_FUNC(ring_QSqlDriver_numericalPrecisionPolicy)
{
	QSqlDriver *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDriver *) RING_API_GETCPOINTER(1,"QSqlDriver");
	RING_API_RETNUMBER(pObject->numericalPrecisionPolicy());
}


RING_FUNC(ring_QSqlDriver_setNumericalPrecisionPolicy)
{
	QSqlDriver *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlDriver *) RING_API_GETCPOINTER(1,"QSqlDriver");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNumericalPrecisionPolicy( (QSql::NumericalPrecisionPolicy)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSqlQuery_addBindValue)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addBindValue(* (QVariant *) RING_API_GETCPOINTER(2,"QVariant"), (QSql::ParamType )  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QVariant"));
}


RING_FUNC(ring_QSqlQuery_at)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	RING_API_RETNUMBER(pObject->at());
}


RING_FUNC(ring_QSqlQuery_bindValue)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->bindValue(RING_API_GETSTRING(2),* (QVariant *) RING_API_GETCPOINTER(3,"QVariant"), (QSql::ParamType )  (int) RING_API_GETNUMBER(4));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QVariant"));
}


RING_FUNC(ring_QSqlQuery_boundValue)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->boundValue(RING_API_GETSTRING(2));
		RING_API_RETCPOINTER(pValue,"QVariant");
	}
}


RING_FUNC(ring_QSqlQuery_clear)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	pObject->clear();
}


RING_FUNC(ring_QSqlQuery_driver)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	RING_API_RETCPOINTER(pObject->driver(),"QSqlDriver");
}


RING_FUNC(ring_QSqlQuery_exec)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->exec(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QSqlQuery_exec_2)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	RING_API_RETNUMBER(pObject->exec());
}


RING_FUNC(ring_QSqlQuery_execBatch)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->execBatch( (QSqlQuery::BatchExecutionMode )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QSqlQuery_executedQuery)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	RING_API_RETSTRING(pObject->executedQuery().toStdString().c_str());
}


RING_FUNC(ring_QSqlQuery_finish)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	pObject->finish();
}


RING_FUNC(ring_QSqlQuery_first)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	RING_API_RETNUMBER(pObject->first());
}


RING_FUNC(ring_QSqlQuery_isActive)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	RING_API_RETNUMBER(pObject->isActive());
}


RING_FUNC(ring_QSqlQuery_isForwardOnly)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	RING_API_RETNUMBER(pObject->isForwardOnly());
}


RING_FUNC(ring_QSqlQuery_isNull)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isNull( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QSqlQuery_isSelect)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	RING_API_RETNUMBER(pObject->isSelect());
}


RING_FUNC(ring_QSqlQuery_isValid)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	RING_API_RETNUMBER(pObject->isValid());
}


RING_FUNC(ring_QSqlQuery_last)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	RING_API_RETNUMBER(pObject->last());
}


RING_FUNC(ring_QSqlQuery_lastError)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	{
		QSqlError *pValue ; 
		pValue = new QSqlError() ;
		*pValue = pObject->lastError();
		RING_API_RETCPOINTER(pValue,"QSqlError");
	}
}


RING_FUNC(ring_QSqlQuery_lastInsertId)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->lastInsertId();
		RING_API_RETCPOINTER(pValue,"QVariant");
	}
}


RING_FUNC(ring_QSqlQuery_lastQuery)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	RING_API_RETSTRING(pObject->lastQuery().toStdString().c_str());
}


RING_FUNC(ring_QSqlQuery_next)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	RING_API_RETNUMBER(pObject->next());
}


RING_FUNC(ring_QSqlQuery_nextResult)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	RING_API_RETNUMBER(pObject->nextResult());
}


RING_FUNC(ring_QSqlQuery_numRowsAffected)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	RING_API_RETNUMBER(pObject->numRowsAffected());
}


RING_FUNC(ring_QSqlQuery_numericalPrecisionPolicy)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	RING_API_RETNUMBER(pObject->numericalPrecisionPolicy());
}


RING_FUNC(ring_QSqlQuery_prepare)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->prepare(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QSqlQuery_previous)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	RING_API_RETNUMBER(pObject->previous());
}


RING_FUNC(ring_QSqlQuery_record)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	{
		QSqlRecord *pValue ; 
		pValue = new QSqlRecord() ;
		*pValue = pObject->record();
		RING_API_RETCPOINTER(pValue,"QSqlRecord");
	}
}


RING_FUNC(ring_QSqlQuery_result)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	RING_API_RETCPOINTER(pObject->result(),"QSqlResult");
}


RING_FUNC(ring_QSqlQuery_seek)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->seek( (int ) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QSqlQuery_setForwardOnly)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setForwardOnly( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSqlQuery_setNumericalPrecisionPolicy)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNumericalPrecisionPolicy( (QSql::NumericalPrecisionPolicy )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSqlQuery_size)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	RING_API_RETNUMBER(pObject->size());
}


RING_FUNC(ring_QSqlQuery_value)
{
	QSqlQuery *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->value( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QVariant");
	}
}


RING_FUNC(ring_QSqlError_databaseText)
{
	QSqlError *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlError *) RING_API_GETCPOINTER(1,"QSqlError");
	RING_API_RETSTRING(pObject->databaseText().toStdString().c_str());
}


RING_FUNC(ring_QSqlError_driverText)
{
	QSqlError *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlError *) RING_API_GETCPOINTER(1,"QSqlError");
	RING_API_RETSTRING(pObject->driverText().toStdString().c_str());
}


RING_FUNC(ring_QSqlError_isValid)
{
	QSqlError *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlError *) RING_API_GETCPOINTER(1,"QSqlError");
	RING_API_RETNUMBER(pObject->isValid());
}


RING_FUNC(ring_QSqlError_number)
{
	QSqlError *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlError *) RING_API_GETCPOINTER(1,"QSqlError");
	RING_API_RETNUMBER(pObject->number());
}


RING_FUNC(ring_QSqlError_setDatabaseText)
{
	QSqlError *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlError *) RING_API_GETCPOINTER(1,"QSqlError");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDatabaseText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSqlError_setDriverText)
{
	QSqlError *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlError *) RING_API_GETCPOINTER(1,"QSqlError");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDriverText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSqlError_setNumber)
{
	QSqlError *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlError *) RING_API_GETCPOINTER(1,"QSqlError");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNumber( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSqlError_setType)
{
	QSqlError *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlError *) RING_API_GETCPOINTER(1,"QSqlError");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setType( (QSqlError::ErrorType )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSqlError_text)
{
	QSqlError *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlError *) RING_API_GETCPOINTER(1,"QSqlError");
	RING_API_RETSTRING(pObject->text().toStdString().c_str());
}


RING_FUNC(ring_QSqlError_type)
{
	QSqlError *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlError *) RING_API_GETCPOINTER(1,"QSqlError");
	RING_API_RETNUMBER(pObject->type());
}


RING_FUNC(ring_QSqlIndex_append)
{
	QSqlIndex *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlIndex *) RING_API_GETCPOINTER(1,"QSqlIndex");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->append(* (QSqlField *) RING_API_GETCPOINTER(2,"QSqlField"), (bool) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QSqlField"));
}


RING_FUNC(ring_QSqlIndex_cursorName)
{
	QSqlIndex *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlIndex *) RING_API_GETCPOINTER(1,"QSqlIndex");
	RING_API_RETSTRING(pObject->cursorName().toStdString().c_str());
}


RING_FUNC(ring_QSqlIndex_isDescending)
{
	QSqlIndex *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlIndex *) RING_API_GETCPOINTER(1,"QSqlIndex");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isDescending( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QSqlIndex_name)
{
	QSqlIndex *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlIndex *) RING_API_GETCPOINTER(1,"QSqlIndex");
	RING_API_RETSTRING(pObject->name().toStdString().c_str());
}


RING_FUNC(ring_QSqlIndex_setCursorName)
{
	QSqlIndex *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlIndex *) RING_API_GETCPOINTER(1,"QSqlIndex");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCursorName(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSqlIndex_setDescending)
{
	QSqlIndex *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlIndex *) RING_API_GETCPOINTER(1,"QSqlIndex");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDescending( (int ) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QSqlIndex_setName)
{
	QSqlIndex *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlIndex *) RING_API_GETCPOINTER(1,"QSqlIndex");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setName(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSqlRecord_append)
{
	QSqlRecord *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlRecord *) RING_API_GETCPOINTER(1,"QSqlRecord");
	pObject->append(* (QSqlField *) RING_API_GETCPOINTER(2,"QSqlField"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QSqlField"));
}


RING_FUNC(ring_QSqlRecord_clear)
{
	QSqlRecord *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlRecord *) RING_API_GETCPOINTER(1,"QSqlRecord");
	pObject->clear();
}


RING_FUNC(ring_QSqlRecord_clearValues)
{
	QSqlRecord *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlRecord *) RING_API_GETCPOINTER(1,"QSqlRecord");
	pObject->clearValues();
}


RING_FUNC(ring_QSqlRecord_contains)
{
	QSqlRecord *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlRecord *) RING_API_GETCPOINTER(1,"QSqlRecord");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->contains(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QSqlRecord_count)
{
	QSqlRecord *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlRecord *) RING_API_GETCPOINTER(1,"QSqlRecord");
	RING_API_RETNUMBER(pObject->count());
}


RING_FUNC(ring_QSqlRecord_field)
{
	QSqlRecord *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlRecord *) RING_API_GETCPOINTER(1,"QSqlRecord");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QSqlField *pValue ; 
		pValue = new QSqlField() ;
		*pValue = pObject->field( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QSqlField");
	}
}


RING_FUNC(ring_QSqlRecord_fieldName)
{
	QSqlRecord *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlRecord *) RING_API_GETCPOINTER(1,"QSqlRecord");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->fieldName( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QSqlRecord_indexOf)
{
	QSqlRecord *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlRecord *) RING_API_GETCPOINTER(1,"QSqlRecord");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->indexOf(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QSqlRecord_insert)
{
	QSqlRecord *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlRecord *) RING_API_GETCPOINTER(1,"QSqlRecord");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insert( (int ) RING_API_GETNUMBER(2),* (QSqlField *) RING_API_GETCPOINTER(3,"QSqlField"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QSqlField"));
}


RING_FUNC(ring_QSqlRecord_isEmpty)
{
	QSqlRecord *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlRecord *) RING_API_GETCPOINTER(1,"QSqlRecord");
	RING_API_RETNUMBER(pObject->isEmpty());
}


RING_FUNC(ring_QSqlRecord_isGenerated)
{
	QSqlRecord *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlRecord *) RING_API_GETCPOINTER(1,"QSqlRecord");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isGenerated(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QSqlRecord_isNull)
{
	QSqlRecord *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlRecord *) RING_API_GETCPOINTER(1,"QSqlRecord");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isNull(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QSqlRecord_remove)
{
	QSqlRecord *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlRecord *) RING_API_GETCPOINTER(1,"QSqlRecord");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->remove( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSqlRecord_replace)
{
	QSqlRecord *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlRecord *) RING_API_GETCPOINTER(1,"QSqlRecord");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->replace( (int ) RING_API_GETNUMBER(2),* (QSqlField *) RING_API_GETCPOINTER(3,"QSqlField"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QSqlField"));
}


RING_FUNC(ring_QSqlRecord_setGenerated)
{
	QSqlRecord *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlRecord *) RING_API_GETCPOINTER(1,"QSqlRecord");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setGenerated(RING_API_GETSTRING(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QSqlRecord_setNull)
{
	QSqlRecord *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlRecord *) RING_API_GETCPOINTER(1,"QSqlRecord");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNull( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSqlRecord_setValue)
{
	QSqlRecord *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlRecord *) RING_API_GETCPOINTER(1,"QSqlRecord");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setValue( (int ) RING_API_GETNUMBER(2),* (QVariant *) RING_API_GETCPOINTER(3,"QVariant"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QVariant"));
}


RING_FUNC(ring_QSqlRecord_value)
{
	QSqlRecord *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlRecord *) RING_API_GETCPOINTER(1,"QSqlRecord");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->value( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QVariant");
	}
}


RING_FUNC(ring_QSqlField_clear)
{
	QSqlField *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlField *) RING_API_GETCPOINTER(1,"QSqlField");
	pObject->clear();
}


RING_FUNC(ring_QSqlField_defaultValue)
{
	QSqlField *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlField *) RING_API_GETCPOINTER(1,"QSqlField");
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->defaultValue();
		RING_API_RETCPOINTER(pValue,"QVariant");
	}
}


RING_FUNC(ring_QSqlField_isAutoValue)
{
	QSqlField *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlField *) RING_API_GETCPOINTER(1,"QSqlField");
	RING_API_RETNUMBER(pObject->isAutoValue());
}


RING_FUNC(ring_QSqlField_isGenerated)
{
	QSqlField *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlField *) RING_API_GETCPOINTER(1,"QSqlField");
	RING_API_RETNUMBER(pObject->isGenerated());
}


RING_FUNC(ring_QSqlField_isNull)
{
	QSqlField *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlField *) RING_API_GETCPOINTER(1,"QSqlField");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QSqlField_isReadOnly)
{
	QSqlField *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlField *) RING_API_GETCPOINTER(1,"QSqlField");
	RING_API_RETNUMBER(pObject->isReadOnly());
}


RING_FUNC(ring_QSqlField_isValid)
{
	QSqlField *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlField *) RING_API_GETCPOINTER(1,"QSqlField");
	RING_API_RETNUMBER(pObject->isValid());
}


RING_FUNC(ring_QSqlField_length)
{
	QSqlField *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlField *) RING_API_GETCPOINTER(1,"QSqlField");
	RING_API_RETNUMBER(pObject->length());
}


RING_FUNC(ring_QSqlField_name)
{
	QSqlField *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlField *) RING_API_GETCPOINTER(1,"QSqlField");
	RING_API_RETSTRING(pObject->name().toStdString().c_str());
}


RING_FUNC(ring_QSqlField_precision)
{
	QSqlField *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlField *) RING_API_GETCPOINTER(1,"QSqlField");
	RING_API_RETNUMBER(pObject->precision());
}


RING_FUNC(ring_QSqlField_requiredStatus)
{
	QSqlField *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlField *) RING_API_GETCPOINTER(1,"QSqlField");
	RING_API_RETNUMBER(pObject->requiredStatus());
}


RING_FUNC(ring_QSqlField_setAutoValue)
{
	QSqlField *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlField *) RING_API_GETCPOINTER(1,"QSqlField");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAutoValue( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSqlField_setDefaultValue)
{
	QSqlField *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlField *) RING_API_GETCPOINTER(1,"QSqlField");
	pObject->setDefaultValue(* (QVariant *) RING_API_GETCPOINTER(2,"QVariant"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QVariant"));
}


RING_FUNC(ring_QSqlField_setGenerated)
{
	QSqlField *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlField *) RING_API_GETCPOINTER(1,"QSqlField");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setGenerated( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSqlField_setLength)
{
	QSqlField *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlField *) RING_API_GETCPOINTER(1,"QSqlField");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLength( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSqlField_setName)
{
	QSqlField *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlField *) RING_API_GETCPOINTER(1,"QSqlField");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setName(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSqlField_setPrecision)
{
	QSqlField *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlField *) RING_API_GETCPOINTER(1,"QSqlField");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPrecision( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSqlField_setReadOnly)
{
	QSqlField *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlField *) RING_API_GETCPOINTER(1,"QSqlField");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setReadOnly( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSqlField_setRequired)
{
	QSqlField *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlField *) RING_API_GETCPOINTER(1,"QSqlField");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRequired( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSqlField_setRequiredStatus)
{
	QSqlField *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlField *) RING_API_GETCPOINTER(1,"QSqlField");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRequiredStatus( (QSqlField::RequiredStatus )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSqlField_setType)
{
	QSqlField *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlField *) RING_API_GETCPOINTER(1,"QSqlField");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setType( (QVariant::Type )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSqlField_setValue)
{
	QSqlField *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlField *) RING_API_GETCPOINTER(1,"QSqlField");
	pObject->setValue(* (QVariant *) RING_API_GETCPOINTER(2,"QVariant"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QVariant"));
}


RING_FUNC(ring_QSqlField_type)
{
	QSqlField *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlField *) RING_API_GETCPOINTER(1,"QSqlField");
	RING_API_RETNUMBER(pObject->type());
}


RING_FUNC(ring_QSqlField_value)
{
	QSqlField *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSqlField *) RING_API_GETCPOINTER(1,"QSqlField");
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->value();
		RING_API_RETCPOINTER(pValue,"QVariant");
	}
}


RING_FUNC(ring_QVariant_canConvert)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->canConvert( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QVariant_clear)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	pObject->clear();
}


RING_FUNC(ring_QVariant_convert)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->convert( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QVariant_isNull)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QVariant_isValid)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	RING_API_RETNUMBER(pObject->isValid());
}


RING_FUNC(ring_QVariant_swap)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	pObject->swap(* (QVariant *) RING_API_GETCPOINTER(2,"QVariant"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QVariant"));
}


RING_FUNC(ring_QVariant_toBitArray)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QBitArray *pValue ; 
		pValue = (QBitArray *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QBitArray)) ;
		*pValue = pObject->toBitArray();
		RING_API_RETCPOINTER(pValue,"QBitArray");
	}
}


RING_FUNC(ring_QVariant_toBool)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	RING_API_RETNUMBER(pObject->toBool());
}


RING_FUNC(ring_QVariant_toByteArray)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->toByteArray();
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QVariant_toChar)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QChar *pValue ; 
		pValue = (QChar *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QChar)) ;
		*pValue = pObject->toChar();
		RING_API_RETCPOINTER(pValue,"QChar");
	}
}


RING_FUNC(ring_QVariant_toDate)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QDate *pValue ; 
		pValue = new QDate() ;
		*pValue = pObject->toDate();
		RING_API_RETCPOINTER(pValue,"QDate");
	}
}


RING_FUNC(ring_QVariant_toDateTime)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->toDateTime();
		RING_API_RETCPOINTER(pValue,"QDateTime");
	}
}


RING_FUNC(ring_QVariant_toDouble)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toDouble((bool *) RING_API_GETCPOINTER(2,"bool")));
}


RING_FUNC(ring_QVariant_toEasingCurve)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QEasingCurve *pValue ; 
		pValue = (QEasingCurve *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QEasingCurve)) ;
		*pValue = pObject->toEasingCurve();
		RING_API_RETCPOINTER(pValue,"QEasingCurve");
	}
}


RING_FUNC(ring_QVariant_toFloat)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toFloat((bool *) RING_API_GETCPOINTER(2,"bool")));
}


RING_FUNC(ring_QVariant_toInt)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toInt((bool *) RING_API_GETCPOINTER(2,"bool")));
}


RING_FUNC(ring_QVariant_toJsonArray)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QJsonArray *pValue ; 
		pValue = new QJsonArray() ;
		*pValue = pObject->toJsonArray();
		RING_API_RETCPOINTER(pValue,"QJsonArray");
	}
}


RING_FUNC(ring_QVariant_toJsonDocument)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QJsonDocument *pValue ; 
		pValue = new QJsonDocument() ;
		*pValue = pObject->toJsonDocument();
		RING_API_RETCPOINTER(pValue,"QJsonDocument");
	}
}


RING_FUNC(ring_QVariant_toJsonObject)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QJsonObject *pValue ; 
		pValue = new QJsonObject() ;
		*pValue = pObject->toJsonObject();
		RING_API_RETCPOINTER(pValue,"QJsonObject");
	}
}


RING_FUNC(ring_QVariant_toJsonValue)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QJsonValue *pValue ; 
		pValue = new QJsonValue() ;
		*pValue = pObject->toJsonValue();
		RING_API_RETCPOINTER(pValue,"QJsonValue");
	}
}


RING_FUNC(ring_QVariant_toLine)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QLine *pValue ; 
		pValue = (QLine *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QLine)) ;
		*pValue = pObject->toLine();
		RING_API_RETCPOINTER(pValue,"QLine");
	}
}


RING_FUNC(ring_QVariant_toLineF)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QLineF *pValue ; 
		pValue = (QLineF *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QLineF)) ;
		*pValue = pObject->toLineF();
		RING_API_RETCPOINTER(pValue,"QLineF");
	}
}


RING_FUNC(ring_QVariant_toLocale)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QLocale *pValue ; 
		pValue = (QLocale *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QLocale)) ;
		*pValue = pObject->toLocale();
		RING_API_RETCPOINTER(pValue,"QLocale");
	}
}


RING_FUNC(ring_QVariant_toLongLong)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		qlonglong *pValue ; 
		pValue = (qlonglong *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(qlonglong)) ;
		*pValue = pObject->toLongLong((bool *) RING_API_GETCPOINTER(2,"bool"));
		RING_API_RETCPOINTER(pValue,"qlonglong");
	}
}


RING_FUNC(ring_QVariant_toModelIndex)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QModelIndex *pValue ; 
		pValue = (QModelIndex *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QModelIndex)) ;
		*pValue = pObject->toModelIndex();
		RING_API_RETCPOINTER(pValue,"QModelIndex");
	}
}


RING_FUNC(ring_QVariant_toPoint)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->toPoint();
		RING_API_RETCPOINTER(pValue,"QPoint");
	}
}


RING_FUNC(ring_QVariant_toPointF)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QPointF *pValue ; 
		pValue = new QPointF() ;
		*pValue = pObject->toPointF();
		RING_API_RETCPOINTER(pValue,"QPointF");
	}
}


RING_FUNC(ring_QVariant_toReal)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toReal((bool *) RING_API_GETCPOINTER(2,"bool")));
}


RING_FUNC(ring_QVariant_toRect)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->toRect();
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QVariant_toRectF)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QRectF *pValue ; 
		pValue = (QRectF *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QRectF)) ;
		*pValue = pObject->toRectF();
		RING_API_RETCPOINTER(pValue,"QRectF");
	}
}


RING_FUNC(ring_QVariant_toRegExp)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QRegExp *pValue ; 
		pValue = (QRegExp *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QRegExp)) ;
		*pValue = pObject->toRegExp();
		RING_API_RETCPOINTER(pValue,"QRegExp");
	}
}


RING_FUNC(ring_QVariant_toRegularExpression)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QRegularExpression *pValue ; 
		pValue = new QRegularExpression() ;
		*pValue = pObject->toRegularExpression();
		RING_API_RETCPOINTER(pValue,"QRegularExpression");
	}
}


RING_FUNC(ring_QVariant_toSize)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->toSize();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QVariant_toSizeF)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QSizeF *pValue ; 
		pValue = (QSizeF *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QSizeF)) ;
		*pValue = pObject->toSizeF();
		RING_API_RETCPOINTER(pValue,"QSizeF");
	}
}


RING_FUNC(ring_QVariant_toStringList)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->toStringList();
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QVariant_toTime)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QTime *pValue ; 
		pValue = new QTime() ;
		*pValue = pObject->toTime();
		RING_API_RETCPOINTER(pValue,"QTime");
	}
}


RING_FUNC(ring_QVariant_toUInt)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		uint *pValue ; 
		pValue = (uint *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(uint)) ;
		*pValue = pObject->toUInt((bool *) RING_API_GETCPOINTER(2,"bool"));
		RING_API_RETCPOINTER(pValue,"uint");
	}
}


RING_FUNC(ring_QVariant_toULongLong)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		qulonglong *pValue ; 
		pValue = (qulonglong *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(qulonglong)) ;
		*pValue = pObject->toULongLong((bool *) RING_API_GETCPOINTER(2,"bool"));
		RING_API_RETCPOINTER(pValue,"qulonglong");
	}
}


RING_FUNC(ring_QVariant_toUrl)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QUrl *pValue ; 
		pValue = new QUrl() ;
		*pValue = pObject->toUrl();
		RING_API_RETCPOINTER(pValue,"QUrl");
	}
}


RING_FUNC(ring_QVariant_toUuid)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	{
		QUuid *pValue ; 
		pValue = new QUuid() ;
		*pValue = pObject->toUuid();
		RING_API_RETCPOINTER(pValue,"QUuid");
	}
}


RING_FUNC(ring_QVariant_type)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	RING_API_RETNUMBER(pObject->type());
}


RING_FUNC(ring_QVariant_typeName)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	RING_API_RETSTRING(pObject->typeName());
}


RING_FUNC(ring_QVariant_userType)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	RING_API_RETNUMBER(pObject->userType());
}


RING_FUNC(ring_QVariant_toString)
{
	QVariant *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
	RING_API_RETSTRING(pObject->toString().toStdString().c_str());
}


RING_FUNC(ring_QNetworkRequest_attribute)
{
	QNetworkRequest *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkRequest *) RING_API_GETCPOINTER(1,"QNetworkRequest");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->attribute( (QNetworkRequest::Attribute)  (int) RING_API_GETNUMBER(2),* (QVariant *) RING_API_GETCPOINTER(3,"QVariant"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QVariant"));
		RING_API_RETCPOINTER(pValue,"QVariant");
	}
}


RING_FUNC(ring_QNetworkRequest_hasRawHeader)
{
	QNetworkRequest *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkRequest *) RING_API_GETCPOINTER(1,"QNetworkRequest");
	RING_API_RETNUMBER(pObject->hasRawHeader(* (QByteArray *) RING_API_GETCPOINTER(2,"QByteArray")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QByteArray"));
}


RING_FUNC(ring_QNetworkRequest_header)
{
	QNetworkRequest *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkRequest *) RING_API_GETCPOINTER(1,"QNetworkRequest");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->header( (QNetworkRequest::KnownHeaders)  (int) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QVariant");
	}
}


RING_FUNC(ring_QNetworkRequest_originatingObject)
{
	QNetworkRequest *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkRequest *) RING_API_GETCPOINTER(1,"QNetworkRequest");
	RING_API_RETCPOINTER(pObject->originatingObject(),"QObject");
}


RING_FUNC(ring_QNetworkRequest_priority)
{
	QNetworkRequest *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkRequest *) RING_API_GETCPOINTER(1,"QNetworkRequest");
	RING_API_RETNUMBER(pObject->priority());
}


RING_FUNC(ring_QNetworkRequest_rawHeader)
{
	QNetworkRequest *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkRequest *) RING_API_GETCPOINTER(1,"QNetworkRequest");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->rawHeader(* (QByteArray *) RING_API_GETCPOINTER(2,"QByteArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QByteArray"));
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QNetworkRequest_setAttribute)
{
	QNetworkRequest *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkRequest *) RING_API_GETCPOINTER(1,"QNetworkRequest");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAttribute( (QNetworkRequest::Attribute)  (int) RING_API_GETNUMBER(2),* (QVariant *) RING_API_GETCPOINTER(3,"QVariant"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QVariant"));
}


RING_FUNC(ring_QNetworkRequest_setHeader)
{
	QNetworkRequest *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkRequest *) RING_API_GETCPOINTER(1,"QNetworkRequest");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHeader( (QNetworkRequest::KnownHeaders)  (int) RING_API_GETNUMBER(2),* (QVariant *) RING_API_GETCPOINTER(3,"QVariant"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QVariant"));
}


RING_FUNC(ring_QNetworkRequest_setOriginatingObject)
{
	QNetworkRequest *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkRequest *) RING_API_GETCPOINTER(1,"QNetworkRequest");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOriginatingObject((QObject *) RING_API_GETCPOINTER(2,"QObject"));
}


RING_FUNC(ring_QNetworkRequest_setPriority)
{
	QNetworkRequest *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkRequest *) RING_API_GETCPOINTER(1,"QNetworkRequest");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPriority( (QNetworkRequest::Priority )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QNetworkRequest_setRawHeader)
{
	QNetworkRequest *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkRequest *) RING_API_GETCPOINTER(1,"QNetworkRequest");
	pObject->setRawHeader(* (QByteArray *) RING_API_GETCPOINTER(2,"QByteArray"),* (QByteArray *) RING_API_GETCPOINTER(3,"QByteArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QByteArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QByteArray"));
}


RING_FUNC(ring_QNetworkRequest_setUrl)
{
	QNetworkRequest *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkRequest *) RING_API_GETCPOINTER(1,"QNetworkRequest");
	pObject->setUrl(* (QUrl *) RING_API_GETCPOINTER(2,"QUrl"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QUrl"));
}


RING_FUNC(ring_QNetworkRequest_swap)
{
	QNetworkRequest *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkRequest *) RING_API_GETCPOINTER(1,"QNetworkRequest");
	pObject->swap(* (QNetworkRequest *) RING_API_GETCPOINTER(2,"QNetworkRequest"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QNetworkRequest"));
}


RING_FUNC(ring_QNetworkRequest_url)
{
	QNetworkRequest *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkRequest *) RING_API_GETCPOINTER(1,"QNetworkRequest");
	{
		QUrl *pValue ; 
		pValue = new QUrl() ;
		*pValue = pObject->url();
		RING_API_RETCPOINTER(pValue,"QUrl");
	}
}


RING_FUNC(ring_QNetworkAccessManager_setfinishedEvent)
{
	GNetworkAccessManager *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GNetworkAccessManager *) RING_API_GETCPOINTER(1,"QNetworkAccessManager");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setfinishedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QNetworkAccessManager_getfinishedEvent)
{
	GNetworkAccessManager *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GNetworkAccessManager *) RING_API_GETCPOINTER(1,"QNetworkAccessManager");
	RING_API_RETSTRING(pObject->getfinishedEvent());
}


RING_FUNC(ring_QNetworkAccessManager_activeConfiguration)
{
	GNetworkAccessManager *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GNetworkAccessManager *) RING_API_GETCPOINTER(1,"QNetworkAccessManager");
	{
		QNetworkConfiguration *pValue ; 
		pValue = (QNetworkConfiguration *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QNetworkConfiguration)) ;
		*pValue = pObject->activeConfiguration();
		RING_API_RETCPOINTER(pValue,"QNetworkConfiguration");
	}
}


RING_FUNC(ring_QNetworkAccessManager_cache)
{
	GNetworkAccessManager *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GNetworkAccessManager *) RING_API_GETCPOINTER(1,"QNetworkAccessManager");
	RING_API_RETCPOINTER(pObject->cache(),"QAbstractNetworkCache");
}


RING_FUNC(ring_QNetworkAccessManager_clearAccessCache)
{
	GNetworkAccessManager *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GNetworkAccessManager *) RING_API_GETCPOINTER(1,"QNetworkAccessManager");
	pObject->clearAccessCache();
}


RING_FUNC(ring_QNetworkAccessManager_configuration)
{
	GNetworkAccessManager *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GNetworkAccessManager *) RING_API_GETCPOINTER(1,"QNetworkAccessManager");
	{
		QNetworkConfiguration *pValue ; 
		pValue = (QNetworkConfiguration *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QNetworkConfiguration)) ;
		*pValue = pObject->configuration();
		RING_API_RETCPOINTER(pValue,"QNetworkConfiguration");
	}
}


RING_FUNC(ring_QNetworkAccessManager_connectToHost)
{
	GNetworkAccessManager *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GNetworkAccessManager *) RING_API_GETCPOINTER(1,"QNetworkAccessManager");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->connectToHost(RING_API_GETSTRING(2),* (quint16 *) RING_API_GETCPOINTER(3,"quint16"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"quint16"));
}


RING_FUNC(ring_QNetworkAccessManager_cookieJar)
{
	GNetworkAccessManager *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GNetworkAccessManager *) RING_API_GETCPOINTER(1,"QNetworkAccessManager");
	RING_API_RETCPOINTER(pObject->cookieJar(),"QNetworkCookieJar");
}


RING_FUNC(ring_QNetworkAccessManager_deleteResource)
{
	GNetworkAccessManager *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GNetworkAccessManager *) RING_API_GETCPOINTER(1,"QNetworkAccessManager");
	RING_API_RETCPOINTER(pObject->deleteResource(* (QNetworkRequest *) RING_API_GETCPOINTER(2,"QNetworkRequest")),"QNetworkReply");
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QNetworkRequest"));
}


RING_FUNC(ring_QNetworkAccessManager_get)
{
	GNetworkAccessManager *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GNetworkAccessManager *) RING_API_GETCPOINTER(1,"QNetworkAccessManager");
	RING_API_RETCPOINTER(pObject->get(* (QNetworkRequest *) RING_API_GETCPOINTER(2,"QNetworkRequest")),"QNetworkReply");
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QNetworkRequest"));
}


RING_FUNC(ring_QNetworkAccessManager_head)
{
	GNetworkAccessManager *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GNetworkAccessManager *) RING_API_GETCPOINTER(1,"QNetworkAccessManager");
	RING_API_RETCPOINTER(pObject->head(* (QNetworkRequest *) RING_API_GETCPOINTER(2,"QNetworkRequest")),"QNetworkReply");
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QNetworkRequest"));
}


RING_FUNC(ring_QNetworkAccessManager_networkAccessible)
{
	GNetworkAccessManager *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GNetworkAccessManager *) RING_API_GETCPOINTER(1,"QNetworkAccessManager");
	RING_API_RETNUMBER(pObject->networkAccessible());
}


RING_FUNC(ring_QNetworkAccessManager_post)
{
	GNetworkAccessManager *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GNetworkAccessManager *) RING_API_GETCPOINTER(1,"QNetworkAccessManager");
	RING_API_RETCPOINTER(pObject->post(* (QNetworkRequest *) RING_API_GETCPOINTER(2,"QNetworkRequest"),* (QByteArray *) RING_API_GETCPOINTER(3,"QByteArray")),"QNetworkReply");
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QNetworkRequest"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QByteArray"));
}


RING_FUNC(ring_QNetworkAccessManager_proxy)
{
	GNetworkAccessManager *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GNetworkAccessManager *) RING_API_GETCPOINTER(1,"QNetworkAccessManager");
	{
		QNetworkProxy *pValue ; 
		pValue = new QNetworkProxy() ;
		*pValue = pObject->proxy();
		RING_API_RETCPOINTER(pValue,"QNetworkProxy");
	}
}


RING_FUNC(ring_QNetworkAccessManager_proxyFactory)
{
	GNetworkAccessManager *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GNetworkAccessManager *) RING_API_GETCPOINTER(1,"QNetworkAccessManager");
	RING_API_RETCPOINTER(pObject->proxyFactory(),"QNetworkProxyFactory");
}


RING_FUNC(ring_QNetworkAccessManager_put)
{
	GNetworkAccessManager *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GNetworkAccessManager *) RING_API_GETCPOINTER(1,"QNetworkAccessManager");
	RING_API_RETCPOINTER(pObject->put(* (QNetworkRequest *) RING_API_GETCPOINTER(2,"QNetworkRequest"),* (QByteArray *) RING_API_GETCPOINTER(3,"QByteArray")),"QNetworkReply");
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QNetworkRequest"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QByteArray"));
}


RING_FUNC(ring_QNetworkAccessManager_sendCustomRequest)
{
	GNetworkAccessManager *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GNetworkAccessManager *) RING_API_GETCPOINTER(1,"QNetworkAccessManager");
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->sendCustomRequest(* (QNetworkRequest *) RING_API_GETCPOINTER(2,"QNetworkRequest"),* (QByteArray *) RING_API_GETCPOINTER(3,"QByteArray"),(QIODevice *) RING_API_GETCPOINTER(4,"QIODevice")),"QNetworkReply");
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QNetworkRequest"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QByteArray"));
}


RING_FUNC(ring_QNetworkAccessManager_setCache)
{
	GNetworkAccessManager *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GNetworkAccessManager *) RING_API_GETCPOINTER(1,"QNetworkAccessManager");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCache((QAbstractNetworkCache *) RING_API_GETCPOINTER(2,"QAbstractNetworkCache"));
}


RING_FUNC(ring_QNetworkAccessManager_setConfiguration)
{
	GNetworkAccessManager *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GNetworkAccessManager *) RING_API_GETCPOINTER(1,"QNetworkAccessManager");
	pObject->setConfiguration(* (QNetworkConfiguration *) RING_API_GETCPOINTER(2,"QNetworkConfiguration"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QNetworkConfiguration"));
}


RING_FUNC(ring_QNetworkAccessManager_setCookieJar)
{
	GNetworkAccessManager *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GNetworkAccessManager *) RING_API_GETCPOINTER(1,"QNetworkAccessManager");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCookieJar((QNetworkCookieJar *) RING_API_GETCPOINTER(2,"QNetworkCookieJar"));
}


RING_FUNC(ring_QNetworkAccessManager_setNetworkAccessible)
{
	GNetworkAccessManager *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GNetworkAccessManager *) RING_API_GETCPOINTER(1,"QNetworkAccessManager");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNetworkAccessible( (QNetworkAccessManager::NetworkAccessibility )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QNetworkAccessManager_setProxy)
{
	GNetworkAccessManager *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GNetworkAccessManager *) RING_API_GETCPOINTER(1,"QNetworkAccessManager");
	pObject->setProxy(* (QNetworkProxy *) RING_API_GETCPOINTER(2,"QNetworkProxy"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QNetworkProxy"));
}


RING_FUNC(ring_QNetworkAccessManager_setProxyFactory)
{
	GNetworkAccessManager *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GNetworkAccessManager *) RING_API_GETCPOINTER(1,"QNetworkAccessManager");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setProxyFactory((QNetworkProxyFactory *) RING_API_GETCPOINTER(2,"QNetworkProxyFactory"));
}


RING_FUNC(ring_QNetworkAccessManager_supportedSchemes)
{
	GNetworkAccessManager *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GNetworkAccessManager *) RING_API_GETCPOINTER(1,"QNetworkAccessManager");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->supportedSchemes();
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QNetworkAccessManager_geteventparameters)
{
	GNetworkAccessManager *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GNetworkAccessManager *) RING_API_GETCPOINTER(1,"QNetworkAccessManager");
	pObject->geteventparameters();
}


RING_FUNC(ring_QNetworkReply_attribute)
{
	QNetworkReply *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkReply *) RING_API_GETCPOINTER(1,"QNetworkReply");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->attribute( (QNetworkRequest::Attribute )  (int) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QVariant");
	}
}


RING_FUNC(ring_QNetworkReply_error)
{
	QNetworkReply *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkReply *) RING_API_GETCPOINTER(1,"QNetworkReply");
	RING_API_RETNUMBER(pObject->error());
}


RING_FUNC(ring_QNetworkReply_hasRawHeader)
{
	QNetworkReply *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkReply *) RING_API_GETCPOINTER(1,"QNetworkReply");
	RING_API_RETNUMBER(pObject->hasRawHeader(* (QByteArray *) RING_API_GETCPOINTER(2,"QByteArray")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QByteArray"));
}


RING_FUNC(ring_QNetworkReply_header)
{
	QNetworkReply *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkReply *) RING_API_GETCPOINTER(1,"QNetworkReply");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->header( (QNetworkRequest::KnownHeaders )  (int) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QVariant");
	}
}


RING_FUNC(ring_QNetworkReply_isFinished)
{
	QNetworkReply *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkReply *) RING_API_GETCPOINTER(1,"QNetworkReply");
	RING_API_RETNUMBER(pObject->isFinished());
}


RING_FUNC(ring_QNetworkReply_isRunning)
{
	QNetworkReply *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkReply *) RING_API_GETCPOINTER(1,"QNetworkReply");
	RING_API_RETNUMBER(pObject->isRunning());
}


RING_FUNC(ring_QNetworkReply_manager)
{
	QNetworkReply *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkReply *) RING_API_GETCPOINTER(1,"QNetworkReply");
	RING_API_RETCPOINTER(pObject->manager(),"QNetworkAccessManager");
}


RING_FUNC(ring_QNetworkReply_operation)
{
	QNetworkReply *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkReply *) RING_API_GETCPOINTER(1,"QNetworkReply");
	{
		QNetworkAccessManager::Operation *pValue ; 
		pValue = (QNetworkAccessManager::Operation *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QNetworkAccessManager::Operation)) ;
		*pValue = pObject->operation();
		RING_API_RETCPOINTER(pValue,"QNetworkAccessManager::Operation");
	}
}


RING_FUNC(ring_QNetworkReply_rawHeader)
{
	QNetworkReply *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkReply *) RING_API_GETCPOINTER(1,"QNetworkReply");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->rawHeader(* (QByteArray *) RING_API_GETCPOINTER(2,"QByteArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QByteArray"));
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QNetworkReply_readBufferSize)
{
	QNetworkReply *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkReply *) RING_API_GETCPOINTER(1,"QNetworkReply");
	RING_API_RETNUMBER(pObject->readBufferSize());
}


RING_FUNC(ring_QNetworkReply_request)
{
	QNetworkReply *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkReply *) RING_API_GETCPOINTER(1,"QNetworkReply");
	{
		QNetworkRequest *pValue ; 
		pValue = new QNetworkRequest() ;
		*pValue = pObject->request();
		RING_API_RETCPOINTER(pValue,"QNetworkRequest");
	}
}


RING_FUNC(ring_QNetworkReply_url)
{
	QNetworkReply *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QNetworkReply *) RING_API_GETCPOINTER(1,"QNetworkReply");
	{
		QUrl *pValue ; 
		pValue = new QUrl() ;
		*pValue = pObject->url();
		RING_API_RETCPOINTER(pValue,"QUrl");
	}
}


RING_FUNC(ring_QPainterPath_addEllipse)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addEllipse( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3), (qreal ) RING_API_GETNUMBER(4), (qreal ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QPainterPath_addPath)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	pObject->addPath(* (QPainterPath *) RING_API_GETCPOINTER(2,"QPainterPath"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPainterPath"));
}


RING_FUNC(ring_QPainterPath_addPolygon)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	pObject->addPolygon(* (QPolygonF *) RING_API_GETCPOINTER(2,"QPolygonF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPolygonF"));
}


RING_FUNC(ring_QPainterPath_addRect)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addRect( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3), (qreal ) RING_API_GETNUMBER(4), (qreal ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QPainterPath_addRegion)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	pObject->addRegion(* (QRegion *) RING_API_GETCPOINTER(2,"QRegion"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QRegion"));
}


RING_FUNC(ring_QPainterPath_addRoundedRect)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 8 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(8) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addRoundedRect( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3), (qreal ) RING_API_GETNUMBER(4), (qreal ) RING_API_GETNUMBER(5), (qreal ) RING_API_GETNUMBER(6), (qreal ) RING_API_GETNUMBER(7), (Qt::SizeMode )  (int) RING_API_GETNUMBER(8));
}


RING_FUNC(ring_QPainterPath_addText)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addText( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3),* (QFont *) RING_API_GETCPOINTER(4,"QFont"),RING_API_GETSTRING(5));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"QFont"));
}


RING_FUNC(ring_QPainterPath_angleAtPercent)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->angleAtPercent( (qreal ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QPainterPath_arcMoveTo)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->arcMoveTo( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3), (qreal ) RING_API_GETNUMBER(4), (qreal ) RING_API_GETNUMBER(5), (qreal ) RING_API_GETNUMBER(6));
}


RING_FUNC(ring_QPainterPath_arcTo)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 7 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->arcTo( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3), (qreal ) RING_API_GETNUMBER(4), (qreal ) RING_API_GETNUMBER(5), (qreal ) RING_API_GETNUMBER(6), (qreal ) RING_API_GETNUMBER(7));
}


RING_FUNC(ring_QPainterPath_boundingRect)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	{
		QRectF *pValue ; 
		pValue = (QRectF *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QRectF)) ;
		*pValue = pObject->boundingRect();
		RING_API_RETCPOINTER(pValue,"QRectF");
	}
}


RING_FUNC(ring_QPainterPath_closeSubpath)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	pObject->closeSubpath();
}


RING_FUNC(ring_QPainterPath_connectPath)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	pObject->connectPath(* (QPainterPath *) RING_API_GETCPOINTER(2,"QPainterPath"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPainterPath"));
}


RING_FUNC(ring_QPainterPath_contains)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	RING_API_RETNUMBER(pObject->contains(* (QPointF *) RING_API_GETCPOINTER(2,"QPointF")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPointF"));
}


RING_FUNC(ring_QPainterPath_controlPointRect)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	{
		QRectF *pValue ; 
		pValue = (QRectF *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QRectF)) ;
		*pValue = pObject->controlPointRect();
		RING_API_RETCPOINTER(pValue,"QRectF");
	}
}


RING_FUNC(ring_QPainterPath_cubicTo)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 7 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->cubicTo( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3), (qreal ) RING_API_GETNUMBER(4), (qreal ) RING_API_GETNUMBER(5), (qreal ) RING_API_GETNUMBER(6), (qreal ) RING_API_GETNUMBER(7));
}


RING_FUNC(ring_QPainterPath_currentPosition)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	{
		QPointF *pValue ; 
		pValue = new QPointF() ;
		*pValue = pObject->currentPosition();
		RING_API_RETCPOINTER(pValue,"QPointF");
	}
}


RING_FUNC(ring_QPainterPath_elementAt)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPainterPath::Element *pValue ; 
		pValue = (QPainterPath::Element *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QPainterPath::Element)) ;
		*pValue = pObject->elementAt( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QPainterPath::Element");
	}
}


RING_FUNC(ring_QPainterPath_elementCount)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	RING_API_RETNUMBER(pObject->elementCount());
}


RING_FUNC(ring_QPainterPath_fillRule)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	RING_API_RETNUMBER(pObject->fillRule());
}


RING_FUNC(ring_QPainterPath_intersected)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	{
		QPainterPath *pValue ; 
		pValue = new QPainterPath() ;
		*pValue = pObject->intersected(* (QPainterPath *) RING_API_GETCPOINTER(2,"QPainterPath"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPainterPath"));
		RING_API_RETCPOINTER(pValue,"QPainterPath");
	}
}


RING_FUNC(ring_QPainterPath_intersects)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	RING_API_RETNUMBER(pObject->intersects(* (QRectF *) RING_API_GETCPOINTER(2,"QRectF")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QRectF"));
}


RING_FUNC(ring_QPainterPath_isEmpty)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	RING_API_RETNUMBER(pObject->isEmpty());
}


RING_FUNC(ring_QPainterPath_length)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	RING_API_RETNUMBER(pObject->length());
}


RING_FUNC(ring_QPainterPath_lineTo)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->lineTo( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QPainterPath_moveTo)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->moveTo( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QPainterPath_percentAtLength)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->percentAtLength( (qreal ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QPainterPath_pointAtPercent)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPointF *pValue ; 
		pValue = new QPointF() ;
		*pValue = pObject->pointAtPercent( (qreal ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QPointF");
	}
}


RING_FUNC(ring_QPainterPath_quadTo)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->quadTo( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3), (qreal ) RING_API_GETNUMBER(4), (qreal ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QPainterPath_setElementPositionAt)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setElementPositionAt( (int ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3), (qreal ) RING_API_GETNUMBER(4));
}


RING_FUNC(ring_QPainterPath_setFillRule)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFillRule( (Qt::FillRule )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPainterPath_simplified)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	{
		QPainterPath *pValue ; 
		pValue = new QPainterPath() ;
		*pValue = pObject->simplified();
		RING_API_RETCPOINTER(pValue,"QPainterPath");
	}
}


RING_FUNC(ring_QPainterPath_slopeAtPercent)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->slopeAtPercent( (qreal ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QPainterPath_subtracted)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	{
		QPainterPath *pValue ; 
		pValue = new QPainterPath() ;
		*pValue = pObject->subtracted(* (QPainterPath *) RING_API_GETCPOINTER(2,"QPainterPath"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPainterPath"));
		RING_API_RETCPOINTER(pValue,"QPainterPath");
	}
}


RING_FUNC(ring_QPainterPath_swap)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	pObject->swap(* (QPainterPath *) RING_API_GETCPOINTER(2,"QPainterPath"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPainterPath"));
}


RING_FUNC(ring_QPainterPath_toFillPolygon)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	{
		QPolygonF *pValue ; 
		pValue = (QPolygonF *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QPolygonF)) ;
		*pValue = pObject->toFillPolygon(* (QTransform *) RING_API_GETCPOINTER(2,"QTransform"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTransform"));
		RING_API_RETCPOINTER(pValue,"QPolygonF");
	}
}


RING_FUNC(ring_QPainterPath_toReversed)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	{
		QPainterPath *pValue ; 
		pValue = new QPainterPath() ;
		*pValue = pObject->toReversed();
		RING_API_RETCPOINTER(pValue,"QPainterPath");
	}
}


RING_FUNC(ring_QPainterPath_translate)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->translate( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QPainterPath_translated)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPainterPath *pValue ; 
		pValue = new QPainterPath() ;
		*pValue = pObject->translated( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3));
		RING_API_RETCPOINTER(pValue,"QPainterPath");
	}
}


RING_FUNC(ring_QPainterPath_united)
{
	QPainterPath *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
	{
		QPainterPath *pValue ; 
		pValue = new QPainterPath() ;
		*pValue = pObject->united(* (QPainterPath *) RING_API_GETCPOINTER(2,"QPainterPath"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPainterPath"));
		RING_API_RETCPOINTER(pValue,"QPainterPath");
	}
}


RING_FUNC(ring_QImage_allGray)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETNUMBER(pObject->allGray());
}


RING_FUNC(ring_QImage_bitPlaneCount)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETNUMBER(pObject->bitPlaneCount());
}


RING_FUNC(ring_QImage_bits)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETCPOINTER(pObject->bits(),"uchar");
}


RING_FUNC(ring_QImage_byteCount)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETNUMBER(pObject->byteCount());
}


RING_FUNC(ring_QImage_bytesPerLine)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETNUMBER(pObject->bytesPerLine());
}


RING_FUNC(ring_QImage_cacheKey)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETNUMBER(pObject->cacheKey());
}


RING_FUNC(ring_QImage_color)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRgb *pValue ; 
		pValue = (QRgb *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QRgb)) ;
		*pValue = pObject->color( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QRgb");
	}
}


RING_FUNC(ring_QImage_colorCount)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETNUMBER(pObject->colorCount());
}


RING_FUNC(ring_QImage_constBits)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETCPOINTER(pObject->constBits(),"uchar");
}


RING_FUNC(ring_QImage_constScanLine)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->constScanLine( (int ) RING_API_GETNUMBER(2)),"uchar");
}


RING_FUNC(ring_QImage_convertToFormat)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QImage *pValue ; 
		pValue = new QImage() ;
		*pValue = pObject->convertToFormat( (QImage::Format )  (int) RING_API_GETNUMBER(2), (Qt::ImageConversionFlags )  (int) RING_API_GETNUMBER(3));
		RING_API_RETCPOINTER(pValue,"QImage");
	}
}


RING_FUNC(ring_QImage_copy)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QImage *pValue ; 
		pValue = new QImage() ;
		*pValue = pObject->copy( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
		RING_API_RETCPOINTER(pValue,"QImage");
	}
}


RING_FUNC(ring_QImage_createAlphaMask)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QImage *pValue ; 
		pValue = new QImage() ;
		*pValue = pObject->createAlphaMask( (Qt::ImageConversionFlags )  (int) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QImage");
	}
}


RING_FUNC(ring_QImage_createHeuristicMask)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QImage *pValue ; 
		pValue = new QImage() ;
		*pValue = pObject->createHeuristicMask( (bool ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QImage");
	}
}


RING_FUNC(ring_QImage_createMaskFromColor)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QImage *pValue ; 
		pValue = new QImage() ;
		*pValue = pObject->createMaskFromColor(* (QRgb  *) RING_API_GETCPOINTER(2,"QRgb"), (Qt::MaskMode )  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QRgb"));
		RING_API_RETCPOINTER(pValue,"QImage");
	}
}


RING_FUNC(ring_QImage_depth)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETNUMBER(pObject->depth());
}


RING_FUNC(ring_QImage_dotsPerMeterX)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETNUMBER(pObject->dotsPerMeterX());
}


RING_FUNC(ring_QImage_dotsPerMeterY)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETNUMBER(pObject->dotsPerMeterY());
}


RING_FUNC(ring_QImage_fill)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	pObject->fill(* (QColor *) RING_API_GETCPOINTER(2,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QColor"));
}


RING_FUNC(ring_QImage_format)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETNUMBER(pObject->format());
}


RING_FUNC(ring_QImage_hasAlphaChannel)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETNUMBER(pObject->hasAlphaChannel());
}


RING_FUNC(ring_QImage_height)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETNUMBER(pObject->height());
}


RING_FUNC(ring_QImage_invertPixels)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->invertPixels( (QImage::InvertMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QImage_isGrayscale)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETNUMBER(pObject->isGrayscale());
}


RING_FUNC(ring_QImage_isNull)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QImage_load)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->load(RING_API_GETSTRING(2),RING_API_GETSTRING(3)));
}


RING_FUNC(ring_QImage_loadFromData)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->loadFromData(* (QByteArray *) RING_API_GETCPOINTER(2,"QByteArray"),RING_API_GETSTRING(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QByteArray"));
}


RING_FUNC(ring_QImage_mirrored)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QImage *pValue ; 
		pValue = new QImage() ;
		*pValue = pObject->mirrored( (bool ) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
		RING_API_RETCPOINTER(pValue,"QImage");
	}
}


RING_FUNC(ring_QImage_offset)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->offset();
		RING_API_RETCPOINTER(pValue,"QPoint");
	}
}


RING_FUNC(ring_QImage_pixel)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRgb *pValue ; 
		pValue = (QRgb *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QRgb)) ;
		*pValue = pObject->pixel( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
		RING_API_RETCPOINTER(pValue,"QRgb");
	}
}


RING_FUNC(ring_QImage_pixelIndex)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->pixelIndex( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QImage_rect)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->rect();
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QImage_rgbSwapped)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	{
		QImage *pValue ; 
		pValue = new QImage() ;
		*pValue = pObject->rgbSwapped();
		RING_API_RETCPOINTER(pValue,"QImage");
	}
}


RING_FUNC(ring_QImage_save)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->save(RING_API_GETSTRING(2),RING_API_GETSTRING(3), (int ) RING_API_GETNUMBER(4)));
}


RING_FUNC(ring_QImage_scaled)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QImage *pValue ; 
		pValue = new QImage() ;
		*pValue = pObject->scaled( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (Qt::AspectRatioMode )  (int) RING_API_GETNUMBER(4), (Qt::TransformationMode )  (int) RING_API_GETNUMBER(5));
		RING_API_RETCPOINTER(pValue,"QImage");
	}
}


RING_FUNC(ring_QImage_scaledToHeight)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QImage *pValue ; 
		pValue = new QImage() ;
		*pValue = pObject->scaledToHeight( (int ) RING_API_GETNUMBER(2), (Qt::TransformationMode )  (int) RING_API_GETNUMBER(3));
		RING_API_RETCPOINTER(pValue,"QImage");
	}
}


RING_FUNC(ring_QImage_scaledToWidth)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QImage *pValue ; 
		pValue = new QImage() ;
		*pValue = pObject->scaledToWidth( (int ) RING_API_GETNUMBER(2), (Qt::TransformationMode )  (int) RING_API_GETNUMBER(3));
		RING_API_RETCPOINTER(pValue,"QImage");
	}
}


RING_FUNC(ring_QImage_scanLine)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->scanLine( (int ) RING_API_GETNUMBER(2)),"uchar");
}


RING_FUNC(ring_QImage_setColor)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setColor( (int ) RING_API_GETNUMBER(2),* (QRgb  *) RING_API_GETCPOINTER(3,"QRgb"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QRgb"));
}


RING_FUNC(ring_QImage_setColorCount)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setColorCount( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QImage_setDotsPerMeterX)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDotsPerMeterX( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QImage_setDotsPerMeterY)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDotsPerMeterY( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QImage_setOffset)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	pObject->setOffset(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
}


RING_FUNC(ring_QImage_setPixel)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPixel( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3),* (uint  *) RING_API_GETCPOINTER(4,"uint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"uint"));
}


RING_FUNC(ring_QImage_setText)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setText(RING_API_GETSTRING(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QImage_size)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->size();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QImage_swap)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	pObject->swap(* (QImage *) RING_API_GETCPOINTER(2,"QImage"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QImage"));
}


RING_FUNC(ring_QImage_text)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->text(RING_API_GETSTRING(2)).toStdString().c_str());
}


RING_FUNC(ring_QImage_textKeys)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->textKeys();
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QImage_transformed)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QImage *pValue ; 
		pValue = new QImage() ;
		*pValue = pObject->transformed(* (QMatrix *) RING_API_GETCPOINTER(2,"QMatrix"), (Qt::TransformationMode )  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QMatrix"));
		RING_API_RETCPOINTER(pValue,"QImage");
	}
}


RING_FUNC(ring_QImage_valid)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->valid( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QImage_width)
{
	QImage *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
	RING_API_RETNUMBER(pObject->width());
}


RING_FUNC(ring_RingCodeHighlighter_setColors)
{
	Highlighter *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (Highlighter *) RING_API_GETCPOINTER(1,"RingCodeHighlighter");
	pObject->setColors(* (QColor  *) RING_API_GETCPOINTER(2,"QColor"),* (QColor  *) RING_API_GETCPOINTER(3,"QColor"),* (QColor  *) RING_API_GETCPOINTER(4,"QColor"),* (QColor  *) RING_API_GETCPOINTER(5,"QColor"),* (QColor  *) RING_API_GETCPOINTER(6,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(4,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(5))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(5,"QColor"));
}


RING_FUNC(ring_RingCodeHighlighter_setKeywordsBold)
{
	Highlighter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (Highlighter *) RING_API_GETCPOINTER(1,"RingCodeHighlighter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setKeywordsBold( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QXmlStreamReader_addData)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	pObject->addData(* (QByteArray *) RING_API_GETCPOINTER(2,"QByteArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QByteArray"));
}


RING_FUNC(ring_QXmlStreamReader_addData_2)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addData(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QXmlStreamReader_addData_3)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addData(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QXmlStreamReader_addExtraNamespaceDeclaration)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	pObject->addExtraNamespaceDeclaration(* (QXmlStreamNamespaceDeclaration *) RING_API_GETCPOINTER(2,"QXmlStreamNamespaceDeclaration"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QXmlStreamNamespaceDeclaration"));
}


RING_FUNC(ring_QXmlStreamReader_addExtraNamespaceDeclarations)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	pObject->addExtraNamespaceDeclarations(* (QXmlStreamNamespaceDeclarations *) RING_API_GETCPOINTER(2,"QXmlStreamNamespaceDeclarations"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QXmlStreamNamespaceDeclarations"));
}


RING_FUNC(ring_QXmlStreamReader_atEnd)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->atEnd());
}


RING_FUNC(ring_QXmlStreamReader_attributes)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	{
		QXmlStreamAttributes *pValue ; 
		pValue = new QXmlStreamAttributes() ;
		*pValue = pObject->attributes();
		RING_API_RETCPOINTER(pValue,"QXmlStreamAttributes");
	}
}


RING_FUNC(ring_QXmlStreamReader_characterOffset)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->characterOffset());
}


RING_FUNC(ring_QXmlStreamReader_clear)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	pObject->clear();
}


RING_FUNC(ring_QXmlStreamReader_columnNumber)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->columnNumber());
}


RING_FUNC(ring_QXmlStreamReader_device)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETCPOINTER(pObject->device(),"QIODevice");
}


RING_FUNC(ring_QXmlStreamReader_documentEncoding)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->documentEncoding();
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QXmlStreamReader_documentVersion)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->documentVersion();
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QXmlStreamReader_dtdName)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->dtdName();
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QXmlStreamReader_dtdPublicId)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->dtdPublicId();
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QXmlStreamReader_dtdSystemId)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->dtdSystemId();
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QXmlStreamReader_entityDeclarations)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	{
		QXmlStreamEntityDeclarations *pValue ; 
		pValue = (QXmlStreamEntityDeclarations *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QXmlStreamEntityDeclarations)) ;
		*pValue = pObject->entityDeclarations();
		RING_API_RETCPOINTER(pValue,"QXmlStreamEntityDeclarations");
	}
}


RING_FUNC(ring_QXmlStreamReader_entityResolver)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETCPOINTER(pObject->entityResolver(),"QXmlStreamEntityResolver");
}


RING_FUNC(ring_QXmlStreamReader_error)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->error());
}


RING_FUNC(ring_QXmlStreamReader_errorString)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETSTRING(pObject->errorString().toStdString().c_str());
}


RING_FUNC(ring_QXmlStreamReader_hasError)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->hasError());
}


RING_FUNC(ring_QXmlStreamReader_isCDATA)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->isCDATA());
}


RING_FUNC(ring_QXmlStreamReader_isCharacters)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->isCharacters());
}


RING_FUNC(ring_QXmlStreamReader_isComment)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->isComment());
}


RING_FUNC(ring_QXmlStreamReader_isDTD)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->isDTD());
}


RING_FUNC(ring_QXmlStreamReader_isEndDocument)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->isEndDocument());
}


RING_FUNC(ring_QXmlStreamReader_isEndElement)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->isEndElement());
}


RING_FUNC(ring_QXmlStreamReader_isEntityReference)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->isEntityReference());
}


RING_FUNC(ring_QXmlStreamReader_isProcessingInstruction)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->isProcessingInstruction());
}


RING_FUNC(ring_QXmlStreamReader_isStandaloneDocument)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->isStandaloneDocument());
}


RING_FUNC(ring_QXmlStreamReader_isStartDocument)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->isStartDocument());
}


RING_FUNC(ring_QXmlStreamReader_isStartElement)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->isStartElement());
}


RING_FUNC(ring_QXmlStreamReader_isWhitespace)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->isWhitespace());
}


RING_FUNC(ring_QXmlStreamReader_lineNumber)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->lineNumber());
}


RING_FUNC(ring_QXmlStreamReader_name)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->name();
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QXmlStreamReader_namespaceDeclarations)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	{
		QXmlStreamNamespaceDeclarations *pValue ; 
		pValue = (QXmlStreamNamespaceDeclarations *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QXmlStreamNamespaceDeclarations)) ;
		*pValue = pObject->namespaceDeclarations();
		RING_API_RETCPOINTER(pValue,"QXmlStreamNamespaceDeclarations");
	}
}


RING_FUNC(ring_QXmlStreamReader_namespaceProcessing)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->namespaceProcessing());
}


RING_FUNC(ring_QXmlStreamReader_namespaceUri)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->namespaceUri();
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QXmlStreamReader_notationDeclarations)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	{
		QXmlStreamNotationDeclarations *pValue ; 
		pValue = (QXmlStreamNotationDeclarations *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QXmlStreamNotationDeclarations)) ;
		*pValue = pObject->notationDeclarations();
		RING_API_RETCPOINTER(pValue,"QXmlStreamNotationDeclarations");
	}
}


RING_FUNC(ring_QXmlStreamReader_prefix)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->prefix();
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QXmlStreamReader_processingInstructionData)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->processingInstructionData();
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QXmlStreamReader_processingInstructionTarget)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->processingInstructionTarget();
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QXmlStreamReader_qualifiedName)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->qualifiedName();
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QXmlStreamReader_raiseError)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->raiseError(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QXmlStreamReader_readElementText)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->readElementText( (QXmlStreamReader::ReadElementTextBehaviour)  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QXmlStreamReader_readNext)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->readNext());
}


RING_FUNC(ring_QXmlStreamReader_readNextStartElement)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->readNextStartElement());
}


RING_FUNC(ring_QXmlStreamReader_setDevice)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDevice((QIODevice *) RING_API_GETCPOINTER(2,"QIODevice"));
}


RING_FUNC(ring_QXmlStreamReader_setEntityResolver)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setEntityResolver((QXmlStreamEntityResolver *) RING_API_GETCPOINTER(2,"QXmlStreamEntityResolver"));
}


RING_FUNC(ring_QXmlStreamReader_setNamespaceProcessing)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNamespaceProcessing( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QXmlStreamReader_skipCurrentElement)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	pObject->skipCurrentElement();
}


RING_FUNC(ring_QXmlStreamReader_text)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->text();
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QXmlStreamReader_tokenString)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETSTRING(pObject->tokenString().toStdString().c_str());
}


RING_FUNC(ring_QXmlStreamReader_tokenType)
{
	QXmlStreamReader *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
	RING_API_RETNUMBER(pObject->tokenType());
}


RING_FUNC(ring_QXmlStreamWriter_autoFormatting)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	RING_API_RETNUMBER(pObject->autoFormatting());
}


RING_FUNC(ring_QXmlStreamWriter_autoFormattingIndent)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	RING_API_RETNUMBER(pObject->autoFormattingIndent());
}


RING_FUNC(ring_QXmlStreamWriter_codec)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	RING_API_RETCPOINTER(pObject->codec(),"QTextCodec");
}


RING_FUNC(ring_QXmlStreamWriter_device)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	RING_API_RETCPOINTER(pObject->device(),"QIODevice");
}


RING_FUNC(ring_QXmlStreamWriter_hasError)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	RING_API_RETNUMBER(pObject->hasError());
}


RING_FUNC(ring_QXmlStreamWriter_setAutoFormatting)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAutoFormatting( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QXmlStreamWriter_setAutoFormattingIndent)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAutoFormattingIndent( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QXmlStreamWriter_setCodec)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCodec((QTextCodec *) RING_API_GETCPOINTER(2,"QTextCodec"));
}


RING_FUNC(ring_QXmlStreamWriter_setCodec_2)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCodec(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QXmlStreamWriter_setDevice)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDevice((QIODevice *) RING_API_GETCPOINTER(2,"QIODevice"));
}


RING_FUNC(ring_QXmlStreamWriter_writeAttribute)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeAttribute(RING_API_GETSTRING(2),RING_API_GETSTRING(3),RING_API_GETSTRING(4));
}


RING_FUNC(ring_QXmlStreamWriter_writeAttribute_2)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeAttribute(RING_API_GETSTRING(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QXmlStreamWriter_writeAttribute_3)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	pObject->writeAttribute(* (QXmlStreamAttribute *) RING_API_GETCPOINTER(2,"QXmlStreamAttribute"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QXmlStreamAttribute"));
}


RING_FUNC(ring_QXmlStreamWriter_writeAttributes)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	pObject->writeAttributes(* (QXmlStreamAttributes *) RING_API_GETCPOINTER(2,"QXmlStreamAttributes"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QXmlStreamAttributes"));
}


RING_FUNC(ring_QXmlStreamWriter_writeCDATA)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeCDATA(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QXmlStreamWriter_writeCharacters)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeCharacters(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QXmlStreamWriter_writeComment)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeComment(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QXmlStreamWriter_writeCurrentToken)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	pObject->writeCurrentToken(* (QXmlStreamReader  *) RING_API_GETCPOINTER(2,"QXmlStreamReader"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QXmlStreamReader"));
}


RING_FUNC(ring_QXmlStreamWriter_writeDTD)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeDTD(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QXmlStreamWriter_writeDefaultNamespace)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeDefaultNamespace(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QXmlStreamWriter_writeEmptyElement)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeEmptyElement(RING_API_GETSTRING(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QXmlStreamWriter_writeEmptyElement_2)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeEmptyElement(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QXmlStreamWriter_writeEndDocument)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	pObject->writeEndDocument();
}


RING_FUNC(ring_QXmlStreamWriter_writeEndElement)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	pObject->writeEndElement();
}


RING_FUNC(ring_QXmlStreamWriter_writeEntityReference)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeEntityReference(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QXmlStreamWriter_writeNamespace)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeNamespace(RING_API_GETSTRING(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QXmlStreamWriter_writeProcessingInstruction)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeProcessingInstruction(RING_API_GETSTRING(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QXmlStreamWriter_writeStartDocument)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeStartDocument(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QXmlStreamWriter_writeStartDocument_2)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeStartDocument(RING_API_GETSTRING(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QXmlStreamWriter_writeStartDocument_3)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	pObject->writeStartDocument();
}


RING_FUNC(ring_QXmlStreamWriter_writeStartElement)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeStartElement(RING_API_GETSTRING(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QXmlStreamWriter_writeStartElement_2)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeStartElement(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QXmlStreamWriter_writeTextElement)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeTextElement(RING_API_GETSTRING(2),RING_API_GETSTRING(3),RING_API_GETSTRING(4));
}


RING_FUNC(ring_QXmlStreamWriter_writeTextElement_2)
{
	QXmlStreamWriter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->writeTextElement(RING_API_GETSTRING(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QXmlStreamNotationDeclaration_name)
{
	QXmlStreamNotationDeclaration *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamNotationDeclaration *) RING_API_GETCPOINTER(1,"QXmlStreamNotationDeclaration");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->name();
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QXmlStreamNotationDeclaration_publicId)
{
	QXmlStreamNotationDeclaration *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamNotationDeclaration *) RING_API_GETCPOINTER(1,"QXmlStreamNotationDeclaration");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->publicId();
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QXmlStreamNotationDeclaration_systemId)
{
	QXmlStreamNotationDeclaration *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamNotationDeclaration *) RING_API_GETCPOINTER(1,"QXmlStreamNotationDeclaration");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->systemId();
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QXmlStreamNamespaceDeclaration_namespaceUri)
{
	QXmlStreamNamespaceDeclaration *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamNamespaceDeclaration *) RING_API_GETCPOINTER(1,"QXmlStreamNamespaceDeclaration");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->namespaceUri();
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QXmlStreamNamespaceDeclaration_prefix)
{
	QXmlStreamNamespaceDeclaration *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamNamespaceDeclaration *) RING_API_GETCPOINTER(1,"QXmlStreamNamespaceDeclaration");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->prefix();
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QXmlStreamEntityDeclaration_name)
{
	QXmlStreamEntityDeclaration *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamEntityDeclaration *) RING_API_GETCPOINTER(1,"QXmlStreamEntityDeclaration");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->name();
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QXmlStreamEntityDeclaration_notationName)
{
	QXmlStreamEntityDeclaration *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamEntityDeclaration *) RING_API_GETCPOINTER(1,"QXmlStreamEntityDeclaration");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->notationName();
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QXmlStreamEntityDeclaration_publicId)
{
	QXmlStreamEntityDeclaration *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamEntityDeclaration *) RING_API_GETCPOINTER(1,"QXmlStreamEntityDeclaration");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->publicId();
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QXmlStreamEntityDeclaration_systemId)
{
	QXmlStreamEntityDeclaration *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamEntityDeclaration *) RING_API_GETCPOINTER(1,"QXmlStreamEntityDeclaration");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->systemId();
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QXmlStreamEntityDeclaration_value)
{
	QXmlStreamEntityDeclaration *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamEntityDeclaration *) RING_API_GETCPOINTER(1,"QXmlStreamEntityDeclaration");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->value();
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QXmlStreamAttributes_append)
{
	QXmlStreamAttributes *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamAttributes *) RING_API_GETCPOINTER(1,"QXmlStreamAttributes");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->append(RING_API_GETSTRING(2),RING_API_GETSTRING(3),RING_API_GETSTRING(4));
}


RING_FUNC(ring_QXmlStreamAttributes_append_2)
{
	QXmlStreamAttributes *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamAttributes *) RING_API_GETCPOINTER(1,"QXmlStreamAttributes");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->append(RING_API_GETSTRING(2),RING_API_GETSTRING(3));
}


RING_FUNC(ring_QXmlStreamAttributes_hasAttribute)
{
	QXmlStreamAttributes *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamAttributes *) RING_API_GETCPOINTER(1,"QXmlStreamAttributes");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->hasAttribute(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QXmlStreamAttributes_hasAttribute_2)
{
	QXmlStreamAttributes *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamAttributes *) RING_API_GETCPOINTER(1,"QXmlStreamAttributes");
	RING_API_RETNUMBER(pObject->hasAttribute(* (QLatin1String  *) RING_API_GETCPOINTER(2,"QLatin1String")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QLatin1String"));
}


RING_FUNC(ring_QXmlStreamAttributes_hasAttribute_3)
{
	QXmlStreamAttributes *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamAttributes *) RING_API_GETCPOINTER(1,"QXmlStreamAttributes");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->hasAttribute(RING_API_GETSTRING(2),RING_API_GETSTRING(3)));
}


RING_FUNC(ring_QXmlStreamAttributes_value)
{
	QXmlStreamAttributes *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamAttributes *) RING_API_GETCPOINTER(1,"QXmlStreamAttributes");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->value(RING_API_GETSTRING(2),RING_API_GETSTRING(3));
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QXmlStreamAttributes_value_2)
{
	QXmlStreamAttributes *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamAttributes *) RING_API_GETCPOINTER(1,"QXmlStreamAttributes");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->value(RING_API_GETSTRING(2),* (QLatin1String  *) RING_API_GETCPOINTER(3,"QLatin1String"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QLatin1String"));
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QXmlStreamAttributes_value_3)
{
	QXmlStreamAttributes *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamAttributes *) RING_API_GETCPOINTER(1,"QXmlStreamAttributes");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->value(* (QLatin1String  *) RING_API_GETCPOINTER(2,"QLatin1String"),* (QLatin1String  *) RING_API_GETCPOINTER(3,"QLatin1String"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QLatin1String"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QLatin1String"));
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QXmlStreamAttributes_value_4)
{
	QXmlStreamAttributes *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamAttributes *) RING_API_GETCPOINTER(1,"QXmlStreamAttributes");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->value(RING_API_GETSTRING(2));
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QXmlStreamAttributes_value_5)
{
	QXmlStreamAttributes *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamAttributes *) RING_API_GETCPOINTER(1,"QXmlStreamAttributes");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->value(* (QLatin1String  *) RING_API_GETCPOINTER(2,"QLatin1String"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QLatin1String"));
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QXmlStreamAttribute_isDefault)
{
	QXmlStreamAttribute *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamAttribute *) RING_API_GETCPOINTER(1,"QXmlStreamAttribute");
	RING_API_RETNUMBER(pObject->isDefault());
}


RING_FUNC(ring_QXmlStreamAttribute_name)
{
	QXmlStreamAttribute *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamAttribute *) RING_API_GETCPOINTER(1,"QXmlStreamAttribute");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->name();
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QXmlStreamAttribute_namespaceUri)
{
	QXmlStreamAttribute *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamAttribute *) RING_API_GETCPOINTER(1,"QXmlStreamAttribute");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->namespaceUri();
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QXmlStreamAttribute_prefix)
{
	QXmlStreamAttribute *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamAttribute *) RING_API_GETCPOINTER(1,"QXmlStreamAttribute");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->prefix();
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QXmlStreamAttribute_qualifiedName)
{
	QXmlStreamAttribute *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamAttribute *) RING_API_GETCPOINTER(1,"QXmlStreamAttribute");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->qualifiedName();
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QXmlStreamAttribute_value)
{
	QXmlStreamAttribute *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QXmlStreamAttribute *) RING_API_GETCPOINTER(1,"QXmlStreamAttribute");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->value();
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QThread_eventDispatcher)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	RING_API_RETCPOINTER(pObject->eventDispatcher(),"QAbstractEventDispatcher");
}


RING_FUNC(ring_QThread_exit)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->exit( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QThread_isFinished)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	RING_API_RETNUMBER(pObject->isFinished());
}


RING_FUNC(ring_QThread_isInterruptionRequested)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	RING_API_RETNUMBER(pObject->isInterruptionRequested());
}


RING_FUNC(ring_QThread_isRunning)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	RING_API_RETNUMBER(pObject->isRunning());
}


RING_FUNC(ring_QThread_priority)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	RING_API_RETNUMBER(pObject->priority());
}


RING_FUNC(ring_QThread_requestInterruption)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	pObject->requestInterruption();
}


RING_FUNC(ring_QThread_setEventDispatcher)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setEventDispatcher((QAbstractEventDispatcher *) RING_API_GETCPOINTER(2,"QAbstractEventDispatcher"));
}


RING_FUNC(ring_QThread_setPriority)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPriority( (QThread::Priority )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QThread_setStackSize)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	pObject->setStackSize(* (uint  *) RING_API_GETCPOINTER(2,"uint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"uint"));
}


RING_FUNC(ring_QThread_stackSize)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	{
		uint *pValue ; 
		pValue = (uint *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(uint)) ;
		*pValue = pObject->stackSize();
		RING_API_RETCPOINTER(pValue,"uint");
	}
}


RING_FUNC(ring_QThread_wait)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	RING_API_RETNUMBER(pObject->wait(* (unsigned long  *) RING_API_GETCPOINTER(2,"unsigned long")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"unsigned long"));
}


RING_FUNC(ring_QThread_quit)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	pObject->quit();
}


RING_FUNC(ring_QThread_start)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->start( (QThread::Priority )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QThread_terminate)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	pObject->terminate();
}


RING_FUNC(ring_QThread_currentThread)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	RING_API_RETCPOINTER(pObject->currentThread(),"QThread");
}


RING_FUNC(ring_QThread_currentThreadId)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	{
		Qt::HANDLE *pValue ; 
		pValue = (Qt::HANDLE *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(Qt::HANDLE)) ;
		*pValue = pObject->currentThreadId();
		RING_API_RETCPOINTER(pValue,"Qt::HANDLE");
	}
}


RING_FUNC(ring_QThread_idealThreadCount)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	RING_API_RETNUMBER(pObject->idealThreadCount());
}


RING_FUNC(ring_QThread_msleep)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	pObject->msleep(* (unsigned long  *) RING_API_GETCPOINTER(2,"unsigned long"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"unsigned long"));
}


RING_FUNC(ring_QThread_sleep)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	pObject->sleep(* (unsigned long  *) RING_API_GETCPOINTER(2,"unsigned long"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"unsigned long"));
}


RING_FUNC(ring_QThread_usleep)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	pObject->usleep(* (unsigned long  *) RING_API_GETCPOINTER(2,"unsigned long"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"unsigned long"));
}


RING_FUNC(ring_QThread_yieldCurrentThread)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	pObject->yieldCurrentThread();
}


RING_FUNC(ring_QThread_setStartedEvent)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStartedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QThread_setFinishedEvent)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFinishedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QThread_getStartedEvent)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	RING_API_RETSTRING(pObject->getStartedEvent());
}


RING_FUNC(ring_QThread_getFinishedEvent)
{
	GThread *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GThread *) RING_API_GETCPOINTER(1,"QThread");
	RING_API_RETSTRING(pObject->getFinishedEvent());
}


RING_FUNC(ring_QThreadPool_activeThreadCount)
{
	QThreadPool *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QThreadPool *) RING_API_GETCPOINTER(1,"QThreadPool");
	RING_API_RETNUMBER(pObject->activeThreadCount());
}


RING_FUNC(ring_QThreadPool_clear)
{
	QThreadPool *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QThreadPool *) RING_API_GETCPOINTER(1,"QThreadPool");
	pObject->clear();
}


RING_FUNC(ring_QThreadPool_expiryTimeout)
{
	QThreadPool *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QThreadPool *) RING_API_GETCPOINTER(1,"QThreadPool");
	RING_API_RETNUMBER(pObject->expiryTimeout());
}


RING_FUNC(ring_QThreadPool_maxThreadCount)
{
	QThreadPool *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QThreadPool *) RING_API_GETCPOINTER(1,"QThreadPool");
	RING_API_RETNUMBER(pObject->maxThreadCount());
}


RING_FUNC(ring_QThreadPool_releaseThread)
{
	QThreadPool *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QThreadPool *) RING_API_GETCPOINTER(1,"QThreadPool");
	pObject->releaseThread();
}


RING_FUNC(ring_QThreadPool_reserveThread)
{
	QThreadPool *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QThreadPool *) RING_API_GETCPOINTER(1,"QThreadPool");
	pObject->reserveThread();
}


RING_FUNC(ring_QThreadPool_setExpiryTimeout)
{
	QThreadPool *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QThreadPool *) RING_API_GETCPOINTER(1,"QThreadPool");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setExpiryTimeout( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QThreadPool_setMaxThreadCount)
{
	QThreadPool *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QThreadPool *) RING_API_GETCPOINTER(1,"QThreadPool");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMaxThreadCount( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QThreadPool_start)
{
	QThreadPool *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QThreadPool *) RING_API_GETCPOINTER(1,"QThreadPool");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->start((QRunnable *) RING_API_GETCPOINTER(2,"QRunnable"), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QThreadPool_tryStart)
{
	QThreadPool *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QThreadPool *) RING_API_GETCPOINTER(1,"QThreadPool");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->tryStart((QRunnable *) RING_API_GETCPOINTER(2,"QRunnable")));
}


RING_FUNC(ring_QThreadPool_waitForDone)
{
	QThreadPool *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QThreadPool *) RING_API_GETCPOINTER(1,"QThreadPool");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->waitForDone( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QThreadPool_globalInstance)
{
	QThreadPool *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QThreadPool *) RING_API_GETCPOINTER(1,"QThreadPool");
	RING_API_RETCPOINTER(pObject->globalInstance(),"QThreadPool");
}


RING_FUNC(ring_QRegularExpression_captureCount)
{
	QRegularExpression *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpression *) RING_API_GETCPOINTER(1,"QRegularExpression");
	RING_API_RETNUMBER(pObject->captureCount());
}


RING_FUNC(ring_QRegularExpression_errorString)
{
	QRegularExpression *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpression *) RING_API_GETCPOINTER(1,"QRegularExpression");
	RING_API_RETSTRING(pObject->errorString().toStdString().c_str());
}


RING_FUNC(ring_QRegularExpression_globalMatch)
{
	QRegularExpression *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpression *) RING_API_GETCPOINTER(1,"QRegularExpression");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRegularExpressionMatchIterator *pValue ; 
		pValue = new QRegularExpressionMatchIterator() ;
		*pValue = pObject->globalMatch(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3), (QRegularExpression::MatchType )  (int) RING_API_GETNUMBER(4), (QRegularExpression::MatchOptions )  (int) RING_API_GETNUMBER(5));
		RING_API_RETCPOINTER(pValue,"QRegularExpressionMatchIterator");
	}
}


RING_FUNC(ring_QRegularExpression_isValid)
{
	QRegularExpression *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpression *) RING_API_GETCPOINTER(1,"QRegularExpression");
	RING_API_RETNUMBER(pObject->isValid());
}


RING_FUNC(ring_QRegularExpression_match)
{
	QRegularExpression *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpression *) RING_API_GETCPOINTER(1,"QRegularExpression");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRegularExpressionMatch *pValue ; 
		pValue = new QRegularExpressionMatch() ;
		*pValue = pObject->match(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3), (QRegularExpression::MatchType )  (int) RING_API_GETNUMBER(4), (QRegularExpression::MatchOptions )  (int) RING_API_GETNUMBER(5));
		RING_API_RETCPOINTER(pValue,"QRegularExpressionMatch");
	}
}


RING_FUNC(ring_QRegularExpression_namedCaptureGroups)
{
	QRegularExpression *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpression *) RING_API_GETCPOINTER(1,"QRegularExpression");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->namedCaptureGroups();
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QRegularExpression_pattern)
{
	QRegularExpression *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpression *) RING_API_GETCPOINTER(1,"QRegularExpression");
	RING_API_RETSTRING(pObject->pattern().toStdString().c_str());
}


RING_FUNC(ring_QRegularExpression_patternErrorOffset)
{
	QRegularExpression *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpression *) RING_API_GETCPOINTER(1,"QRegularExpression");
	RING_API_RETNUMBER(pObject->patternErrorOffset());
}


RING_FUNC(ring_QRegularExpression_patternOptions)
{
	QRegularExpression *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpression *) RING_API_GETCPOINTER(1,"QRegularExpression");
	RING_API_RETNUMBER(pObject->patternOptions());
}


RING_FUNC(ring_QRegularExpression_setPattern)
{
	QRegularExpression *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpression *) RING_API_GETCPOINTER(1,"QRegularExpression");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPattern(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QRegularExpression_setPatternOptions)
{
	QRegularExpression *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpression *) RING_API_GETCPOINTER(1,"QRegularExpression");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPatternOptions( (QRegularExpression::PatternOptions )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QRegularExpression_swap)
{
	QRegularExpression *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpression *) RING_API_GETCPOINTER(1,"QRegularExpression");
	pObject->swap(* (QRegularExpression   *) RING_API_GETCPOINTER(2,"QRegularExpression"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QRegularExpression"));
}


RING_FUNC(ring_QRegularExpressionMatch_captured)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->captured( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QRegularExpressionMatch_captured_2)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	RING_API_RETSTRING(pObject->captured(* (const QString   *) RING_API_GETCPOINTER(2,"const QString")).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QString"));
}


RING_FUNC(ring_QRegularExpressionMatch_capturedEnd)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->capturedEnd( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QRegularExpressionMatch_capturedEnd_2)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	RING_API_RETNUMBER(pObject->capturedEnd(* (const QString   *) RING_API_GETCPOINTER(2,"const QString")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QString"));
}


RING_FUNC(ring_QRegularExpressionMatch_capturedLength)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->capturedLength( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QRegularExpressionMatch_capturedLength_2)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	RING_API_RETNUMBER(pObject->capturedLength(* (const QString   *) RING_API_GETCPOINTER(2,"const QString")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QString"));
}


RING_FUNC(ring_QRegularExpressionMatch_capturedRef)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->capturedRef( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QRegularExpressionMatch_capturedRef_2)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->capturedRef(* (const QString   *) RING_API_GETCPOINTER(2,"const QString"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QString"));
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QRegularExpressionMatch_capturedStart)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->capturedStart( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QRegularExpressionMatch_capturedStart_2)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	RING_API_RETNUMBER(pObject->capturedStart(* (const QString   *) RING_API_GETCPOINTER(2,"const QString")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QString"));
}


RING_FUNC(ring_QRegularExpressionMatch_capturedTexts)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->capturedTexts();
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QRegularExpressionMatch_hasMatch)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	RING_API_RETNUMBER(pObject->hasMatch());
}


RING_FUNC(ring_QRegularExpressionMatch_hasPartialMatch)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	RING_API_RETNUMBER(pObject->hasPartialMatch());
}


RING_FUNC(ring_QRegularExpressionMatch_isValid)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	RING_API_RETNUMBER(pObject->isValid());
}


RING_FUNC(ring_QRegularExpressionMatch_lastCapturedIndex)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	RING_API_RETNUMBER(pObject->lastCapturedIndex());
}


RING_FUNC(ring_QRegularExpressionMatch_matchOptions)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	RING_API_RETNUMBER(pObject->matchOptions());
}


RING_FUNC(ring_QRegularExpressionMatch_matchType)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	RING_API_RETNUMBER(pObject->matchType());
}


RING_FUNC(ring_QRegularExpressionMatch_regularExpression)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	{
		QRegularExpression *pValue ; 
		pValue = new QRegularExpression() ;
		*pValue = pObject->regularExpression();
		RING_API_RETCPOINTER(pValue,"QRegularExpression");
	}
}


RING_FUNC(ring_QRegularExpressionMatch_swap)
{
	QRegularExpressionMatch *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
	pObject->swap(* (QRegularExpressionMatch   *) RING_API_GETCPOINTER(2,"QRegularExpressionMatch"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QRegularExpressionMatch"));
}


RING_FUNC(ring_QRegularExpressionMatchIterator_hasNext)
{
	QRegularExpressionMatchIterator *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatchIterator *) RING_API_GETCPOINTER(1,"QRegularExpressionMatchIterator");
	RING_API_RETNUMBER(pObject->hasNext());
}


RING_FUNC(ring_QRegularExpressionMatchIterator_isValid)
{
	QRegularExpressionMatchIterator *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatchIterator *) RING_API_GETCPOINTER(1,"QRegularExpressionMatchIterator");
	RING_API_RETNUMBER(pObject->isValid());
}


RING_FUNC(ring_QRegularExpressionMatchIterator_matchOptions)
{
	QRegularExpressionMatchIterator *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatchIterator *) RING_API_GETCPOINTER(1,"QRegularExpressionMatchIterator");
	RING_API_RETNUMBER(pObject->matchOptions());
}


RING_FUNC(ring_QRegularExpressionMatchIterator_matchType)
{
	QRegularExpressionMatchIterator *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatchIterator *) RING_API_GETCPOINTER(1,"QRegularExpressionMatchIterator");
	RING_API_RETNUMBER(pObject->matchType());
}


RING_FUNC(ring_QRegularExpressionMatchIterator_next)
{
	QRegularExpressionMatchIterator *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatchIterator *) RING_API_GETCPOINTER(1,"QRegularExpressionMatchIterator");
	{
		QRegularExpressionMatch *pValue ; 
		pValue = new QRegularExpressionMatch() ;
		*pValue = pObject->next();
		RING_API_RETCPOINTER(pValue,"QRegularExpressionMatch");
	}
}


RING_FUNC(ring_QRegularExpressionMatchIterator_peekNext)
{
	QRegularExpressionMatchIterator *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatchIterator *) RING_API_GETCPOINTER(1,"QRegularExpressionMatchIterator");
	{
		QRegularExpressionMatch *pValue ; 
		pValue = new QRegularExpressionMatch() ;
		*pValue = pObject->peekNext();
		RING_API_RETCPOINTER(pValue,"QRegularExpressionMatch");
	}
}


RING_FUNC(ring_QRegularExpressionMatchIterator_regularExpression)
{
	QRegularExpressionMatchIterator *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatchIterator *) RING_API_GETCPOINTER(1,"QRegularExpressionMatchIterator");
	{
		QRegularExpression *pValue ; 
		pValue = new QRegularExpression() ;
		*pValue = pObject->regularExpression();
		RING_API_RETCPOINTER(pValue,"QRegularExpression");
	}
}


RING_FUNC(ring_QRegularExpressionMatchIterator_swap)
{
	QRegularExpressionMatchIterator *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegularExpressionMatchIterator *) RING_API_GETCPOINTER(1,"QRegularExpressionMatchIterator");
	pObject->swap(* (QRegularExpressionMatchIterator  *) RING_API_GETCPOINTER(2,"QRegularExpressionMatchIterator"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QRegularExpressionMatchIterator"));
}


RING_FUNC(ring_QJsonArray_append)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	pObject->append(* (QJsonValue   *) RING_API_GETCPOINTER(2,"QJsonValue"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QJsonValue"));
}


RING_FUNC(ring_QJsonArray_at)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QJsonValue *pValue ; 
		pValue = new QJsonValue() ;
		*pValue = pObject->at( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QJsonValue");
	}
}


RING_FUNC(ring_QJsonArray_contains)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	RING_API_RETNUMBER(pObject->contains(* (QJsonValue   *) RING_API_GETCPOINTER(2,"QJsonValue")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QJsonValue"));
}


RING_FUNC(ring_QJsonArray_count)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	RING_API_RETNUMBER(pObject->count());
}


RING_FUNC(ring_QJsonArray_empty)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	RING_API_RETNUMBER(pObject->empty());
}


RING_FUNC(ring_QJsonArray_first)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	{
		QJsonValue *pValue ; 
		pValue = new QJsonValue() ;
		*pValue = pObject->first();
		RING_API_RETCPOINTER(pValue,"QJsonValue");
	}
}


RING_FUNC(ring_QJsonArray_insert)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insert( (int ) RING_API_GETNUMBER(2),* (QJsonValue   *) RING_API_GETCPOINTER(3,"QJsonValue"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QJsonValue"));
}


RING_FUNC(ring_QJsonArray_isEmpty)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	RING_API_RETNUMBER(pObject->isEmpty());
}


RING_FUNC(ring_QJsonArray_last)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	{
		QJsonValue *pValue ; 
		pValue = new QJsonValue() ;
		*pValue = pObject->last();
		RING_API_RETCPOINTER(pValue,"QJsonValue");
	}
}


RING_FUNC(ring_QJsonArray_pop_back)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	pObject->pop_back();
}


RING_FUNC(ring_QJsonArray_pop_front)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	pObject->pop_front();
}


RING_FUNC(ring_QJsonArray_prepend)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	pObject->prepend(* (QJsonValue   *) RING_API_GETCPOINTER(2,"QJsonValue"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QJsonValue"));
}


RING_FUNC(ring_QJsonArray_push_back)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	pObject->push_back(* (QJsonValue   *) RING_API_GETCPOINTER(2,"QJsonValue"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QJsonValue"));
}


RING_FUNC(ring_QJsonArray_push_front)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	pObject->push_front(* (QJsonValue   *) RING_API_GETCPOINTER(2,"QJsonValue"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QJsonValue"));
}


RING_FUNC(ring_QJsonArray_removeAt)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeAt( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QJsonArray_removeFirst)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	pObject->removeFirst();
}


RING_FUNC(ring_QJsonArray_removeLast)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	pObject->removeLast();
}


RING_FUNC(ring_QJsonArray_replace)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->replace( (int ) RING_API_GETNUMBER(2),* (QJsonValue   *) RING_API_GETCPOINTER(3,"QJsonValue"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QJsonValue"));
}


RING_FUNC(ring_QJsonArray_size)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	RING_API_RETNUMBER(pObject->size());
}


RING_FUNC(ring_QJsonArray_takeAt)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QJsonValue *pValue ; 
		pValue = new QJsonValue() ;
		*pValue = pObject->takeAt( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QJsonValue");
	}
}


RING_FUNC(ring_QJsonArray_toVariantList)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	{
		QVariantList *pValue ; 
		pValue = (QVariantList *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QVariantList)) ;
		*pValue = pObject->toVariantList();
		RING_API_RETCPOINTER(pValue,"QVariantList");
	}
}


RING_FUNC(ring_QJsonArray_fromStringList)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	{
		QJsonArray *pValue ; 
		pValue = new QJsonArray() ;
		*pValue = pObject->fromStringList(* (QStringList   *) RING_API_GETCPOINTER(2,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QStringList"));
		RING_API_RETCPOINTER(pValue,"QJsonArray");
	}
}


RING_FUNC(ring_QJsonArray_fromVariantList)
{
	QJsonArray *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
	{
		QJsonArray *pValue ; 
		pValue = new QJsonArray() ;
		*pValue = pObject->fromVariantList(* (QVariantList   *) RING_API_GETCPOINTER(2,"QVariantList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QVariantList"));
		RING_API_RETCPOINTER(pValue,"QJsonArray");
	}
}


RING_FUNC(ring_QJsonDocument_array)
{
	QJsonDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
	{
		QJsonArray *pValue ; 
		pValue = new QJsonArray() ;
		*pValue = pObject->array();
		RING_API_RETCPOINTER(pValue,"QJsonArray");
	}
}


RING_FUNC(ring_QJsonDocument_isArray)
{
	QJsonDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
	RING_API_RETNUMBER(pObject->isArray());
}


RING_FUNC(ring_QJsonDocument_isEmpty)
{
	QJsonDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
	RING_API_RETNUMBER(pObject->isEmpty());
}


RING_FUNC(ring_QJsonDocument_isNull)
{
	QJsonDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QJsonDocument_isObject)
{
	QJsonDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
	RING_API_RETNUMBER(pObject->isObject());
}


RING_FUNC(ring_QJsonDocument_object)
{
	QJsonDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
	{
		QJsonObject *pValue ; 
		pValue = new QJsonObject() ;
		*pValue = pObject->object();
		RING_API_RETCPOINTER(pValue,"QJsonObject");
	}
}


RING_FUNC(ring_QJsonDocument_rawData)
{
	QJsonDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->rawData(RING_API_GETINTPOINTER(2)));
	RING_API_ACCEPTINTVALUE(1) ;
}


RING_FUNC(ring_QJsonDocument_setArray)
{
	QJsonDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
	pObject->setArray(* (QJsonArray   *) RING_API_GETCPOINTER(2,"QJsonArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QJsonArray"));
}


RING_FUNC(ring_QJsonDocument_setObject)
{
	QJsonDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
	pObject->setObject(* (QJsonObject   *) RING_API_GETCPOINTER(2,"QJsonObject"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QJsonObject"));
}


RING_FUNC(ring_QJsonDocument_toBinaryData)
{
	QJsonDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->toBinaryData();
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QJsonDocument_toJson)
{
	QJsonDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->toJson( (QJsonDocument::JsonFormat )  (int) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QJsonDocument_toVariant)
{
	QJsonDocument *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->toVariant();
		RING_API_RETCPOINTER(pValue,"QVariant");
	}
}


RING_FUNC(ring_QJsonDocument_fromBinaryData)
{
	QJsonDocument *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QJsonDocument *pValue ; 
		pValue = new QJsonDocument() ;
		*pValue = pObject->fromBinaryData(* (QByteArray   *) RING_API_GETCPOINTER(2,"QByteArray"), (QJsonDocument::DataValidation )  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QByteArray"));
		RING_API_RETCPOINTER(pValue,"QJsonDocument");
	}
}


RING_FUNC(ring_QJsonDocument_fromJson)
{
	QJsonDocument *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QJsonDocument *pValue ; 
		pValue = new QJsonDocument() ;
		*pValue = pObject->fromJson(* (QByteArray   *) RING_API_GETCPOINTER(2,"QByteArray"),(QJsonParseError *) RING_API_GETCPOINTER(3,"QJsonParseError"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QByteArray"));
		RING_API_RETCPOINTER(pValue,"QJsonDocument");
	}
}


RING_FUNC(ring_QJsonDocument_fromRawData)
{
	QJsonDocument *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QJsonDocument *pValue ; 
		pValue = new QJsonDocument() ;
		*pValue = pObject->fromRawData(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3), (QJsonDocument::DataValidation )  (int) RING_API_GETNUMBER(4));
		RING_API_RETCPOINTER(pValue,"QJsonDocument");
	}
}


RING_FUNC(ring_QJsonDocument_fromVariant)
{
	QJsonDocument *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
	{
		QJsonDocument *pValue ; 
		pValue = new QJsonDocument() ;
		*pValue = pObject->fromVariant(* (QVariant   *) RING_API_GETCPOINTER(2,"QVariant"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QVariant"));
		RING_API_RETCPOINTER(pValue,"QJsonDocument");
	}
}


RING_FUNC(ring_QJsonObject_contains)
{
	QJsonObject *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonObject *) RING_API_GETCPOINTER(1,"QJsonObject");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->contains(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QJsonObject_count)
{
	QJsonObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonObject *) RING_API_GETCPOINTER(1,"QJsonObject");
	RING_API_RETNUMBER(pObject->count());
}


RING_FUNC(ring_QJsonObject_empty)
{
	QJsonObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonObject *) RING_API_GETCPOINTER(1,"QJsonObject");
	RING_API_RETNUMBER(pObject->empty());
}


RING_FUNC(ring_QJsonObject_isEmpty)
{
	QJsonObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonObject *) RING_API_GETCPOINTER(1,"QJsonObject");
	RING_API_RETNUMBER(pObject->isEmpty());
}


RING_FUNC(ring_QJsonObject_keys)
{
	QJsonObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonObject *) RING_API_GETCPOINTER(1,"QJsonObject");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->keys();
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QJsonObject_length)
{
	QJsonObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonObject *) RING_API_GETCPOINTER(1,"QJsonObject");
	RING_API_RETNUMBER(pObject->length());
}


RING_FUNC(ring_QJsonObject_remove)
{
	QJsonObject *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonObject *) RING_API_GETCPOINTER(1,"QJsonObject");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->remove(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QJsonObject_size)
{
	QJsonObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonObject *) RING_API_GETCPOINTER(1,"QJsonObject");
	RING_API_RETNUMBER(pObject->size());
}


RING_FUNC(ring_QJsonObject_take)
{
	QJsonObject *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonObject *) RING_API_GETCPOINTER(1,"QJsonObject");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QJsonValue *pValue ; 
		pValue = new QJsonValue() ;
		*pValue = pObject->take(RING_API_GETSTRING(2));
		RING_API_RETCPOINTER(pValue,"QJsonValue");
	}
}


RING_FUNC(ring_QJsonObject_toVariantMap)
{
	QJsonObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonObject *) RING_API_GETCPOINTER(1,"QJsonObject");
	{
		QVariantMap *pValue ; 
		pValue = (QVariantMap *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QVariantMap)) ;
		*pValue = pObject->toVariantMap();
		RING_API_RETCPOINTER(pValue,"QVariantMap");
	}
}


RING_FUNC(ring_QJsonObject_value)
{
	QJsonObject *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonObject *) RING_API_GETCPOINTER(1,"QJsonObject");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QJsonValue *pValue ; 
		pValue = new QJsonValue() ;
		*pValue = pObject->value(RING_API_GETSTRING(2));
		RING_API_RETCPOINTER(pValue,"QJsonValue");
	}
}


RING_FUNC(ring_QJsonObject_fromVariantMap)
{
	QJsonObject *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonObject *) RING_API_GETCPOINTER(1,"QJsonObject");
	{
		QJsonObject *pValue ; 
		pValue = new QJsonObject() ;
		*pValue = pObject->fromVariantMap(* (QVariantMap   *) RING_API_GETCPOINTER(2,"QVariantMap"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QVariantMap"));
		RING_API_RETCPOINTER(pValue,"QJsonObject");
	}
}


RING_FUNC(ring_QJsonParseError_errorString)
{
	QJsonParseError *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonParseError *) RING_API_GETCPOINTER(1,"QJsonParseError");
	RING_API_RETSTRING(pObject->errorString().toStdString().c_str());
}


RING_FUNC(ring_QJsonValue_isArray)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	RING_API_RETNUMBER(pObject->isArray());
}


RING_FUNC(ring_QJsonValue_isBool)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	RING_API_RETNUMBER(pObject->isBool());
}


RING_FUNC(ring_QJsonValue_isDouble)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	RING_API_RETNUMBER(pObject->isDouble());
}


RING_FUNC(ring_QJsonValue_isNull)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QJsonValue_isObject)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	RING_API_RETNUMBER(pObject->isObject());
}


RING_FUNC(ring_QJsonValue_isString)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	RING_API_RETNUMBER(pObject->isString());
}


RING_FUNC(ring_QJsonValue_isUndefined)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	RING_API_RETNUMBER(pObject->isUndefined());
}


RING_FUNC(ring_QJsonValue_toArray)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	{
		QJsonArray *pValue ; 
		pValue = new QJsonArray() ;
		*pValue = pObject->toArray(* (QJsonArray   *) RING_API_GETCPOINTER(2,"QJsonArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QJsonArray"));
		RING_API_RETCPOINTER(pValue,"QJsonArray");
	}
}


RING_FUNC(ring_QJsonValue_toArray_2)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	{
		QJsonArray *pValue ; 
		pValue = new QJsonArray() ;
		*pValue = pObject->toArray();
		RING_API_RETCPOINTER(pValue,"QJsonArray");
	}
}


RING_FUNC(ring_QJsonValue_toBool)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toBool( (bool ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QJsonValue_toDouble)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toDouble( (double ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QJsonValue_toInt)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->toInt( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QJsonValue_toObject)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	{
		QJsonObject *pValue ; 
		pValue = new QJsonObject() ;
		*pValue = pObject->toObject(* (QJsonObject   *) RING_API_GETCPOINTER(2,"QJsonObject"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QJsonObject"));
		RING_API_RETCPOINTER(pValue,"QJsonObject");
	}
}


RING_FUNC(ring_QJsonValue_toObject_2)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	{
		QJsonObject *pValue ; 
		pValue = new QJsonObject() ;
		*pValue = pObject->toObject();
		RING_API_RETCPOINTER(pValue,"QJsonObject");
	}
}


RING_FUNC(ring_QJsonValue_toString)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->toString(RING_API_GETSTRING(2)).toStdString().c_str());
}


RING_FUNC(ring_QJsonValue_toVariant)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->toVariant();
		RING_API_RETCPOINTER(pValue,"QVariant");
	}
}


RING_FUNC(ring_QJsonValue_type)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	{
		QJsonValue::Type *pValue ; 
		pValue = (QJsonValue::Type *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QJsonValue::Type)) ;
		*pValue = pObject->type();
		RING_API_RETCPOINTER(pValue,"QJsonValue::Type");
	}
}


RING_FUNC(ring_QJsonValue_fromVariant)
{
	QJsonValue *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
	{
		QJsonValue *pValue ; 
		pValue = new QJsonValue() ;
		*pValue = pObject->fromVariant(* (QVariant   *) RING_API_GETCPOINTER(2,"QVariant"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QVariant"));
		RING_API_RETCPOINTER(pValue,"QJsonValue");
	}
}


RING_FUNC(ring_QPlainTextEdit_anchorAt)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETSTRING(pObject->anchorAt(* (QPoint  *) RING_API_GETCPOINTER(2,"QPoint")).toStdString().c_str());
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
}


RING_FUNC(ring_QPlainTextEdit_backgroundVisible)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETNUMBER(pObject->backgroundVisible());
}


RING_FUNC(ring_QPlainTextEdit_blockCount)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETNUMBER(pObject->blockCount());
}


RING_FUNC(ring_QPlainTextEdit_canPaste)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETNUMBER(pObject->canPaste());
}


RING_FUNC(ring_QPlainTextEdit_centerOnScroll)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETNUMBER(pObject->centerOnScroll());
}


RING_FUNC(ring_QPlainTextEdit_createStandardContextMenu)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETCPOINTER(pObject->createStandardContextMenu(),"QMenu");
}


RING_FUNC(ring_QPlainTextEdit_currentCharFormat)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	{
		QTextCharFormat *pValue ; 
		pValue = new QTextCharFormat() ;
		*pValue = pObject->currentCharFormat();
		RING_API_RETCPOINTER(pValue,"QTextCharFormat");
	}
}


RING_FUNC(ring_QPlainTextEdit_cursorForPosition)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	{
		QTextCursor *pValue ; 
		pValue = new QTextCursor() ;
		*pValue = pObject->cursorForPosition(* (QPoint  *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
		RING_API_RETCPOINTER(pValue,"QTextCursor");
	}
}


RING_FUNC(ring_QPlainTextEdit_cursorRect)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->cursorRect(* (QTextCursor  *) RING_API_GETCPOINTER(2,"QTextCursor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTextCursor"));
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QPlainTextEdit_cursorRect_2)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->cursorRect();
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QPlainTextEdit_cursorWidth)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETNUMBER(pObject->cursorWidth());
}


RING_FUNC(ring_QPlainTextEdit_document)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETCPOINTER(pObject->document(),"QTextDocument");
}


RING_FUNC(ring_QPlainTextEdit_documentTitle)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETSTRING(pObject->documentTitle().toStdString().c_str());
}


RING_FUNC(ring_QPlainTextEdit_ensureCursorVisible)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	pObject->ensureCursorVisible();
}


RING_FUNC(ring_QPlainTextEdit_extraSelections)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	{
		QList<QTextEdit::ExtraSelection> *pValue ; 
		pValue = (QList<QTextEdit::ExtraSelection> *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QList<QTextEdit::ExtraSelection>)) ;
		*pValue = pObject->extraSelections();
		RING_API_RETCPOINTER(pValue,"QList<QTextEdit::ExtraSelection>");
	}
}


RING_FUNC(ring_QPlainTextEdit_find)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->find(RING_API_GETSTRING(2),* (QTextDocument::FindFlags  *) RING_API_GETCPOINTER(3,"QTextDocument::FindFlags")));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QTextDocument::FindFlags"));
}


RING_FUNC(ring_QPlainTextEdit_isReadOnly)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETNUMBER(pObject->isReadOnly());
}


RING_FUNC(ring_QPlainTextEdit_isUndoRedoEnabled)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETNUMBER(pObject->isUndoRedoEnabled());
}


RING_FUNC(ring_QPlainTextEdit_lineWrapMode)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETNUMBER(pObject->lineWrapMode());
}


RING_FUNC(ring_QPlainTextEdit_maximumBlockCount)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETNUMBER(pObject->maximumBlockCount());
}


RING_FUNC(ring_QPlainTextEdit_mergeCurrentCharFormat)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	pObject->mergeCurrentCharFormat(* (QTextCharFormat  *) RING_API_GETCPOINTER(2,"QTextCharFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTextCharFormat"));
}


RING_FUNC(ring_QPlainTextEdit_moveCursor)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->moveCursor( (QTextCursor::MoveOperation )  (int) RING_API_GETNUMBER(2), (QTextCursor::MoveMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QPlainTextEdit_overwriteMode)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETNUMBER(pObject->overwriteMode());
}


RING_FUNC(ring_QPlainTextEdit_print)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->print((QPagedPaintDevice *) RING_API_GETCPOINTER(2,"QPagedPaintDevice"));
}


RING_FUNC(ring_QPlainTextEdit_setBackgroundVisible)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setBackgroundVisible( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPlainTextEdit_setCenterOnScroll)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCenterOnScroll( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPlainTextEdit_setCurrentCharFormat)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	pObject->setCurrentCharFormat(* (QTextCharFormat  *) RING_API_GETCPOINTER(2,"QTextCharFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTextCharFormat"));
}


RING_FUNC(ring_QPlainTextEdit_setCursorWidth)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCursorWidth( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPlainTextEdit_setDocument)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDocument((QTextDocument *) RING_API_GETCPOINTER(2,"QTextDocument"));
}


RING_FUNC(ring_QPlainTextEdit_setDocumentTitle)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDocumentTitle(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPlainTextEdit_setExtraSelections)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	pObject->setExtraSelections(* (QList<QTextEdit::ExtraSelection>  *) RING_API_GETCPOINTER(2,"QList<QTextEdit::ExtraSelection>"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QList<QTextEdit::ExtraSelection>"));
}


RING_FUNC(ring_QPlainTextEdit_setLineWrapMode)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLineWrapMode( (QPlainTextEdit::LineWrapMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPlainTextEdit_setMaximumBlockCount)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMaximumBlockCount( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPlainTextEdit_setOverwriteMode)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOverwriteMode( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPlainTextEdit_setReadOnly)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setReadOnly( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPlainTextEdit_setTabChangesFocus)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabChangesFocus( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPlainTextEdit_setTabStopWidth)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabStopWidth( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPlainTextEdit_setTextCursor)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	pObject->setTextCursor(* (QTextCursor  *) RING_API_GETCPOINTER(2,"QTextCursor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTextCursor"));
}


RING_FUNC(ring_QPlainTextEdit_setTextInteractionFlags)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	pObject->setTextInteractionFlags(* (Qt::TextInteractionFlags  *) RING_API_GETCPOINTER(2,"Qt::TextInteractionFlags"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"Qt::TextInteractionFlags"));
}


RING_FUNC(ring_QPlainTextEdit_setUndoRedoEnabled)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUndoRedoEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPlainTextEdit_setWordWrapMode)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWordWrapMode( (QTextOption::WrapMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPlainTextEdit_tabChangesFocus)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETNUMBER(pObject->tabChangesFocus());
}


RING_FUNC(ring_QPlainTextEdit_tabStopWidth)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETNUMBER(pObject->tabStopWidth());
}


RING_FUNC(ring_QPlainTextEdit_textCursor)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	{
		QTextCursor *pValue ; 
		pValue = new QTextCursor() ;
		*pValue = pObject->textCursor();
		RING_API_RETCPOINTER(pValue,"QTextCursor");
	}
}


RING_FUNC(ring_QPlainTextEdit_textInteractionFlags)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	{
		Qt::TextInteractionFlags *pValue ; 
		pValue = (Qt::TextInteractionFlags *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(Qt::TextInteractionFlags)) ;
		*pValue = pObject->textInteractionFlags();
		RING_API_RETCPOINTER(pValue,"Qt::TextInteractionFlags");
	}
}


RING_FUNC(ring_QPlainTextEdit_toPlainText)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETSTRING(pObject->toPlainText().toStdString().c_str());
}


RING_FUNC(ring_QPlainTextEdit_wordWrapMode)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETNUMBER(pObject->wordWrapMode());
}


RING_FUNC(ring_QPlainTextEdit_appendHtml)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->appendHtml(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPlainTextEdit_appendPlainText)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->appendPlainText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPlainTextEdit_centerCursor)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	pObject->centerCursor();
}


RING_FUNC(ring_QPlainTextEdit_clear)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	pObject->clear();
}


RING_FUNC(ring_QPlainTextEdit_copy)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	pObject->copy();
}


RING_FUNC(ring_QPlainTextEdit_cut)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	pObject->cut();
}


RING_FUNC(ring_QPlainTextEdit_insertPlainText)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertPlainText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPlainTextEdit_paste)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	pObject->paste();
}


RING_FUNC(ring_QPlainTextEdit_redo)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	pObject->redo();
}


RING_FUNC(ring_QPlainTextEdit_selectAll)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	pObject->selectAll();
}


RING_FUNC(ring_QPlainTextEdit_setPlainText)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPlainText(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPlainTextEdit_undo)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	pObject->undo();
}


RING_FUNC(ring_QPlainTextEdit_zoomIn)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->zoomIn( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPlainTextEdit_zoomOut)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->zoomOut( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPlainTextEdit_setblockCountChangedEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setblockCountChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPlainTextEdit_setcopyAvailableEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcopyAvailableEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPlainTextEdit_setcursorPositionChangedEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcursorPositionChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPlainTextEdit_setmodificationChangedEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setmodificationChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPlainTextEdit_setredoAvailableEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setredoAvailableEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPlainTextEdit_setselectionChangedEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setselectionChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPlainTextEdit_settextChangedEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->settextChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPlainTextEdit_setundoAvailableEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setundoAvailableEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPlainTextEdit_setupdateRequestEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setupdateRequestEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QPlainTextEdit_getblockCountChangedEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETSTRING(pObject->getblockCountChangedEvent());
}


RING_FUNC(ring_QPlainTextEdit_getcopyAvailableEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETSTRING(pObject->getcopyAvailableEvent());
}


RING_FUNC(ring_QPlainTextEdit_getcursorPositionChangedEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETSTRING(pObject->getcursorPositionChangedEvent());
}


RING_FUNC(ring_QPlainTextEdit_getmodificationChangedEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETSTRING(pObject->getmodificationChangedEvent());
}


RING_FUNC(ring_QPlainTextEdit_getredoAvailableEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETSTRING(pObject->getredoAvailableEvent());
}


RING_FUNC(ring_QPlainTextEdit_getselectionChangedEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETSTRING(pObject->getselectionChangedEvent());
}


RING_FUNC(ring_QPlainTextEdit_gettextChangedEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETSTRING(pObject->gettextChangedEvent());
}


RING_FUNC(ring_QPlainTextEdit_getundoAvailableEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETSTRING(pObject->getundoAvailableEvent());
}


RING_FUNC(ring_QPlainTextEdit_getupdateRequestEvent)
{
	GPlainTextEdit *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"QPlainTextEdit");
	RING_API_RETSTRING(pObject->getupdateRequestEvent());
}

RING_FUNC(ring_QPlainTextEdit_cyanline)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}

	QPlainTextEdit *editor;
	editor = (QPlainTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit *");

	QTextEdit::ExtraSelection highlight;
	highlight.cursor = editor->textCursor();
	highlight.format.setProperty(QTextFormat::FullWidthSelection, true);
	highlight.format.setBackground( Qt::cyan );

	QList<QTextEdit::ExtraSelection> extras;
	extras << highlight;
	editor->setExtraSelections( extras );
}
RING_FUNC(ring_QPlainTextEdit_setactivelinecolor)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}

	QPlainTextEdit *editor;
	editor = (QPlainTextEdit *) RING_API_GETCPOINTER(1,"QTextEdit *");

	QTextEdit::ExtraSelection highlight;
	highlight.cursor = editor->textCursor();
	highlight.format.setProperty(QTextFormat::FullWidthSelection, true);
	highlight.format.setBackground( * (QColor *) RING_API_GETCPOINTER(2,"QColor") );

	QList<QTextEdit::ExtraSelection> extras;
	extras << highlight;
	editor->setExtraSelections( extras );
}

RING_FUNC(ring_CodeEditor_setCompleter)
{
	CodeEditor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (CodeEditor *) RING_API_GETCPOINTER(1,"CodeEditor");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCompleter((QCompleter *) RING_API_GETCPOINTER(2,"QCompleter"));
}


RING_FUNC(ring_CodeEditor_completer)
{
	CodeEditor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (CodeEditor *) RING_API_GETCPOINTER(1,"CodeEditor");
	RING_API_RETCPOINTER(pObject->completer(),"QCompleter");
}


RING_FUNC(ring_CodeEditor_setLineNumbersAreaColor)
{
	CodeEditor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (CodeEditor *) RING_API_GETCPOINTER(1,"CodeEditor");
	pObject->setLineNumbersAreaColor(* (QColor  *) RING_API_GETCPOINTER(2,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QColor"));
}


RING_FUNC(ring_CodeEditor_setLineNumbersAreaBackColor)
{
	CodeEditor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (CodeEditor *) RING_API_GETCPOINTER(1,"CodeEditor");
	pObject->setLineNumbersAreaBackColor(* (QColor  *) RING_API_GETCPOINTER(2,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QColor"));
}


RING_FUNC(ring_QGridLayout_addItem)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 7 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addItem((QLayoutItem *) RING_API_GETCPOINTER(2,"QLayoutItem"), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5), (int ) RING_API_GETNUMBER(6), (Qt::Alignment )  (int) RING_API_GETNUMBER(7));
}


RING_FUNC(ring_QGridLayout_addLayout)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addLayout((QLayout *) RING_API_GETCPOINTER(2,"QLayout"), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (Qt::Alignment )  (int) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QGridLayout_addLayout_2)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 7 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addLayout((QLayout *) RING_API_GETCPOINTER(2,"QLayout"), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5), (int ) RING_API_GETNUMBER(6), (Qt::Alignment )  (int) RING_API_GETNUMBER(7));
}


RING_FUNC(ring_QGridLayout_addWidget)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (Qt::Alignment )  (int) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QGridLayout_addWidget_2)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 7 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5), (int ) RING_API_GETNUMBER(6), (Qt::Alignment )  (int) RING_API_GETNUMBER(7));
}


RING_FUNC(ring_QGridLayout_cellRect)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->cellRect( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QGridLayout_columnCount)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	RING_API_RETNUMBER(pObject->columnCount());
}


RING_FUNC(ring_QGridLayout_columnMinimumWidth)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->columnMinimumWidth( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QGridLayout_columnStretch)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->columnStretch( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QGridLayout_getItemPosition)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->getItemPosition( (int ) RING_API_GETNUMBER(2),RING_API_GETINTPOINTER(3),RING_API_GETINTPOINTER(4),RING_API_GETINTPOINTER(5),RING_API_GETINTPOINTER(6));
	RING_API_ACCEPTINTVALUE(2) ;
	RING_API_ACCEPTINTVALUE(3) ;
	RING_API_ACCEPTINTVALUE(4) ;
	RING_API_ACCEPTINTVALUE(5) ;
}


RING_FUNC(ring_QGridLayout_horizontalSpacing)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	RING_API_RETNUMBER(pObject->horizontalSpacing());
}


RING_FUNC(ring_QGridLayout_itemAtPosition)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->itemAtPosition( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3)),"QLayoutItem");
}


RING_FUNC(ring_QGridLayout_originCorner)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	RING_API_RETNUMBER(pObject->originCorner());
}


RING_FUNC(ring_QGridLayout_rowCount)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	RING_API_RETNUMBER(pObject->rowCount());
}


RING_FUNC(ring_QGridLayout_rowMinimumHeight)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->rowMinimumHeight( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QGridLayout_rowStretch)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->rowStretch( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QGridLayout_setColumnMinimumWidth)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setColumnMinimumWidth( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QGridLayout_setColumnStretch)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setColumnStretch( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QGridLayout_setHorizontalSpacing)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHorizontalSpacing( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QGridLayout_setOriginCorner)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOriginCorner( (Qt::Corner )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QGridLayout_setRowMinimumHeight)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRowMinimumHeight( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QGridLayout_setRowStretch)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRowStretch( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QGridLayout_setSpacing)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSpacing( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QGridLayout_setVerticalSpacing)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setVerticalSpacing( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QGridLayout_spacing)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	RING_API_RETNUMBER(pObject->spacing());
}


RING_FUNC(ring_QGridLayout_verticalSpacing)
{
	QGridLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
	RING_API_RETNUMBER(pObject->verticalSpacing());
}


RING_FUNC(ring_QTextCharFormat_anchorHref)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETSTRING(pObject->anchorHref().toStdString().c_str());
}


RING_FUNC(ring_QTextCharFormat_anchorNames)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->anchorNames();
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QTextCharFormat_font)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	{
		QFont *pValue ; 
		pValue = new QFont() ;
		*pValue = pObject->font();
		RING_API_RETCPOINTER(pValue,"QFont");
	}
}


RING_FUNC(ring_QTextCharFormat_fontCapitalization)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->fontCapitalization());
}


RING_FUNC(ring_QTextCharFormat_fontFamily)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETSTRING(pObject->fontFamily().toStdString().c_str());
}


RING_FUNC(ring_QTextCharFormat_fontFixedPitch)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->fontFixedPitch());
}


RING_FUNC(ring_QTextCharFormat_fontHintingPreference)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->fontHintingPreference());
}


RING_FUNC(ring_QTextCharFormat_fontItalic)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->fontItalic());
}


RING_FUNC(ring_QTextCharFormat_fontKerning)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->fontKerning());
}


RING_FUNC(ring_QTextCharFormat_fontLetterSpacing)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->fontLetterSpacing());
}


RING_FUNC(ring_QTextCharFormat_fontLetterSpacingType)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->fontLetterSpacingType());
}


RING_FUNC(ring_QTextCharFormat_fontOverline)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->fontOverline());
}


RING_FUNC(ring_QTextCharFormat_fontPointSize)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->fontPointSize());
}


RING_FUNC(ring_QTextCharFormat_fontStretch)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->fontStretch());
}


RING_FUNC(ring_QTextCharFormat_fontStrikeOut)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->fontStrikeOut());
}


RING_FUNC(ring_QTextCharFormat_fontStyleHint)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->fontStyleHint());
}


RING_FUNC(ring_QTextCharFormat_fontStyleStrategy)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->fontStyleStrategy());
}


RING_FUNC(ring_QTextCharFormat_fontUnderline)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->fontUnderline());
}


RING_FUNC(ring_QTextCharFormat_fontWeight)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->fontWeight());
}


RING_FUNC(ring_QTextCharFormat_fontWordSpacing)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->fontWordSpacing());
}


RING_FUNC(ring_QTextCharFormat_isAnchor)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->isAnchor());
}


RING_FUNC(ring_QTextCharFormat_isValid)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->isValid());
}


RING_FUNC(ring_QTextCharFormat_setAnchor)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAnchor( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setAnchorHref)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAnchorHref(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextCharFormat_setAnchorNames)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	pObject->setAnchorNames(* (QStringList    *) RING_API_GETCPOINTER(2,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QStringList"));
}


RING_FUNC(ring_QTextCharFormat_setFont_2)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	pObject->setFont(* (QFont    *) RING_API_GETCPOINTER(2,"QFont"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QFont"));
}


RING_FUNC(ring_QTextCharFormat_setFontCapitalization)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontCapitalization( (QFont::Capitalization )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setFontFamily)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontFamily(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextCharFormat_setFontFixedPitch)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontFixedPitch( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setFontHintingPreference)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontHintingPreference( (QFont::HintingPreference )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setFontItalic)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontItalic( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setFontKerning)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontKerning( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setFontLetterSpacing)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontLetterSpacing( (qreal ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setFontLetterSpacingType)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontLetterSpacingType( (QFont::SpacingType )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setFontOverline)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontOverline( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setFontPointSize)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontPointSize( (qreal ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setFontStretch)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontStretch( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setFontStrikeOut)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontStrikeOut( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setFontStyleHint)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontStyleHint( (QFont::StyleHint )  (int) RING_API_GETNUMBER(2), (QFont::StyleStrategy )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QTextCharFormat_setFontStyleStrategy)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontStyleStrategy( (QFont::StyleStrategy )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setFontUnderline)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontUnderline( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setFontWeight)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontWeight( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setFontWordSpacing)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFontWordSpacing( (qreal ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setTextOutline)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	pObject->setTextOutline(* (QPen    *) RING_API_GETCPOINTER(2,"QPen"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPen"));
}


RING_FUNC(ring_QTextCharFormat_setToolTip)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setToolTip(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextCharFormat_setUnderlineColor)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	pObject->setUnderlineColor(* (QColor    *) RING_API_GETCPOINTER(2,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QColor"));
}


RING_FUNC(ring_QTextCharFormat_setUnderlineStyle)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUnderlineStyle( (QTextCharFormat::UnderlineStyle )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_setVerticalAlignment)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setVerticalAlignment( (QTextCharFormat::VerticalAlignment )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextCharFormat_textOutline)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	{
		QPen *pValue ; 
		pValue = new QPen() ;
		*pValue = pObject->textOutline();
		RING_API_RETCPOINTER(pValue,"QPen");
	}
}


RING_FUNC(ring_QTextCharFormat_toolTip)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETSTRING(pObject->toolTip().toStdString().c_str());
}


RING_FUNC(ring_QTextCharFormat_underlineColor)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	{
		QColor *pValue ; 
		pValue = new QColor() ;
		*pValue = pObject->underlineColor();
		RING_API_RETCPOINTER(pValue,"QColor");
	}
}


RING_FUNC(ring_QTextCharFormat_underlineStyle)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->underlineStyle());
}


RING_FUNC(ring_QTextCharFormat_verticalAlignment)
{
	QTextCharFormat *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
	RING_API_RETNUMBER(pObject->verticalAlignment());
}


RING_FUNC(ring_QGraphicsVideoItem_aspectRatioMode)
{
	QGraphicsVideoItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsVideoItem *) RING_API_GETCPOINTER(1,"QGraphicsVideoItem");
	RING_API_RETNUMBER(pObject->aspectRatioMode());
}


RING_FUNC(ring_QGraphicsVideoItem_nativeSize)
{
	QGraphicsVideoItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsVideoItem *) RING_API_GETCPOINTER(1,"QGraphicsVideoItem");
	{
		QSizeF *pValue ; 
		pValue = (QSizeF *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QSizeF)) ;
		*pValue = pObject->nativeSize();
		RING_API_RETCPOINTER(pValue,"QSizeF");
	}
}


RING_FUNC(ring_QGraphicsVideoItem_offset)
{
	QGraphicsVideoItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsVideoItem *) RING_API_GETCPOINTER(1,"QGraphicsVideoItem");
	{
		QPointF *pValue ; 
		pValue = new QPointF() ;
		*pValue = pObject->offset();
		RING_API_RETCPOINTER(pValue,"QPointF");
	}
}


RING_FUNC(ring_QGraphicsVideoItem_setAspectRatioMode)
{
	QGraphicsVideoItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsVideoItem *) RING_API_GETCPOINTER(1,"QGraphicsVideoItem");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAspectRatioMode( (Qt::AspectRatioMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QGraphicsVideoItem_setOffset)
{
	QGraphicsVideoItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsVideoItem *) RING_API_GETCPOINTER(1,"QGraphicsVideoItem");
	pObject->setOffset(* (QPointF  *) RING_API_GETCPOINTER(2,"QPointF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPointF"));
}


RING_FUNC(ring_QGraphicsVideoItem_setSize)
{
	QGraphicsVideoItem *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsVideoItem *) RING_API_GETCPOINTER(1,"QGraphicsVideoItem");
	pObject->setSize(* (QSizeF  *) RING_API_GETCPOINTER(2,"QSizeF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QSizeF"));
}


RING_FUNC(ring_QGraphicsVideoItem_size)
{
	QGraphicsVideoItem *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGraphicsVideoItem *) RING_API_GETCPOINTER(1,"QGraphicsVideoItem");
	{
		QSizeF *pValue ; 
		pValue = (QSizeF *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QSizeF)) ;
		*pValue = pObject->size();
		RING_API_RETCPOINTER(pValue,"QSizeF");
	}
}


RING_FUNC(ring_QCamera_captureMode)
{
	QCamera *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCamera *) RING_API_GETCPOINTER(1,"QCamera");
	RING_API_RETNUMBER(pObject->captureMode());
}


RING_FUNC(ring_QCamera_error)
{
	QCamera *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCamera *) RING_API_GETCPOINTER(1,"QCamera");
	RING_API_RETNUMBER(pObject->error());
}


RING_FUNC(ring_QCamera_errorString)
{
	QCamera *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCamera *) RING_API_GETCPOINTER(1,"QCamera");
	RING_API_RETSTRING(pObject->errorString().toStdString().c_str());
}


RING_FUNC(ring_QCamera_exposure)
{
	QCamera *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCamera *) RING_API_GETCPOINTER(1,"QCamera");
	RING_API_RETCPOINTER(pObject->exposure(),"QCameraExposure");
}


RING_FUNC(ring_QCamera_focus)
{
	QCamera *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCamera *) RING_API_GETCPOINTER(1,"QCamera");
	RING_API_RETCPOINTER(pObject->focus(),"QCameraFocus");
}


RING_FUNC(ring_QCamera_imageProcessing)
{
	QCamera *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCamera *) RING_API_GETCPOINTER(1,"QCamera");
	RING_API_RETCPOINTER(pObject->imageProcessing(),"QCameraImageProcessing");
}


RING_FUNC(ring_QCamera_isCaptureModeSupported)
{
	QCamera *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCamera *) RING_API_GETCPOINTER(1,"QCamera");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isCaptureModeSupported( (QCamera::CaptureModes )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QCamera_lockStatus)
{
	QCamera *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCamera *) RING_API_GETCPOINTER(1,"QCamera");
	{
		QCamera::LockStatus *pValue ; 
		pValue = (QCamera::LockStatus *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QCamera::LockStatus)) ;
		*pValue = pObject->lockStatus();
		RING_API_RETCPOINTER(pValue,"QCamera::LockStatus");
	}
}


RING_FUNC(ring_QCamera_lockStatus_2)
{
	QCamera *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCamera *) RING_API_GETCPOINTER(1,"QCamera");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QCamera::LockStatus *pValue ; 
		pValue = (QCamera::LockStatus *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QCamera::LockStatus)) ;
		*pValue = pObject->lockStatus( (QCamera::LockType )  (int) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QCamera::LockStatus");
	}
}


RING_FUNC(ring_QCamera_requestedLocks)
{
	QCamera *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCamera *) RING_API_GETCPOINTER(1,"QCamera");
	RING_API_RETNUMBER(pObject->requestedLocks());
}


RING_FUNC(ring_QCamera_setViewfinder)
{
	QCamera *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCamera *) RING_API_GETCPOINTER(1,"QCamera");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setViewfinder((QVideoWidget *) RING_API_GETCPOINTER(2,"QVideoWidget"));
}


RING_FUNC(ring_QCamera_setViewfinder_2)
{
	QCamera *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCamera *) RING_API_GETCPOINTER(1,"QCamera");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setViewfinder((QGraphicsVideoItem *) RING_API_GETCPOINTER(2,"QGraphicsVideoItem"));
}


RING_FUNC(ring_QCamera_setViewfinder_3)
{
	QCamera *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCamera *) RING_API_GETCPOINTER(1,"QCamera");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setViewfinder((QAbstractVideoSurface *) RING_API_GETCPOINTER(2,"QAbstractVideoSurface"));
}


RING_FUNC(ring_QCamera_state)
{
	QCamera *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCamera *) RING_API_GETCPOINTER(1,"QCamera");
	RING_API_RETNUMBER(pObject->state());
}


RING_FUNC(ring_QCamera_status)
{
	QCamera *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCamera *) RING_API_GETCPOINTER(1,"QCamera");
	RING_API_RETNUMBER(pObject->status());
}


RING_FUNC(ring_QCamera_supportedLocks)
{
	QCamera *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCamera *) RING_API_GETCPOINTER(1,"QCamera");
	RING_API_RETNUMBER(pObject->supportedLocks());
}


RING_FUNC(ring_QCamera_load)
{
	QCamera *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCamera *) RING_API_GETCPOINTER(1,"QCamera");
	pObject->load();
}


RING_FUNC(ring_QCamera_searchAndLock)
{
	QCamera *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCamera *) RING_API_GETCPOINTER(1,"QCamera");
	pObject->searchAndLock();
}


RING_FUNC(ring_QCamera_searchAndLock_2)
{
	QCamera *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCamera *) RING_API_GETCPOINTER(1,"QCamera");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->searchAndLock( (QCamera::LockTypes )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCamera_setCaptureMode)
{
	QCamera *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCamera *) RING_API_GETCPOINTER(1,"QCamera");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCaptureMode( (QCamera::CaptureModes )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCamera_start)
{
	QCamera *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCamera *) RING_API_GETCPOINTER(1,"QCamera");
	pObject->start();
}


RING_FUNC(ring_QCamera_stop)
{
	QCamera *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCamera *) RING_API_GETCPOINTER(1,"QCamera");
	pObject->stop();
}


RING_FUNC(ring_QCamera_unload)
{
	QCamera *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCamera *) RING_API_GETCPOINTER(1,"QCamera");
	pObject->unload();
}


RING_FUNC(ring_QCamera_unlock)
{
	QCamera *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCamera *) RING_API_GETCPOINTER(1,"QCamera");
	pObject->unlock();
}


RING_FUNC(ring_QCamera_unlock_2)
{
	QCamera *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCamera *) RING_API_GETCPOINTER(1,"QCamera");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->unlock( (QCamera::LockTypes )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCameraImageCapture_availability)
{
	QCameraImageCapture *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCameraImageCapture *) RING_API_GETCPOINTER(1,"QCameraImageCapture");
	{
		QMultimedia::AvailabilityStatus *pValue ; 
		pValue = (QMultimedia::AvailabilityStatus *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QMultimedia::AvailabilityStatus)) ;
		*pValue = pObject->availability();
		RING_API_RETCPOINTER(pValue,"QMultimedia::AvailabilityStatus");
	}
}


RING_FUNC(ring_QCameraImageCapture_bufferFormat)
{
	QCameraImageCapture *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCameraImageCapture *) RING_API_GETCPOINTER(1,"QCameraImageCapture");
	{
		QVideoFrame::PixelFormat *pValue ; 
		pValue = (QVideoFrame::PixelFormat *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QVideoFrame::PixelFormat)) ;
		*pValue = pObject->bufferFormat();
		RING_API_RETCPOINTER(pValue,"QVideoFrame::PixelFormat");
	}
}


RING_FUNC(ring_QCameraImageCapture_captureDestination)
{
	QCameraImageCapture *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCameraImageCapture *) RING_API_GETCPOINTER(1,"QCameraImageCapture");
	RING_API_RETNUMBER(pObject->captureDestination());
}


RING_FUNC(ring_QCameraImageCapture_encodingSettings)
{
	QCameraImageCapture *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCameraImageCapture *) RING_API_GETCPOINTER(1,"QCameraImageCapture");
	{
		QImageEncoderSettings *pValue ; 
		pValue = (QImageEncoderSettings *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QImageEncoderSettings)) ;
		*pValue = pObject->encodingSettings();
		RING_API_RETCPOINTER(pValue,"QImageEncoderSettings");
	}
}


RING_FUNC(ring_QCameraImageCapture_error)
{
	QCameraImageCapture *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCameraImageCapture *) RING_API_GETCPOINTER(1,"QCameraImageCapture");
	RING_API_RETNUMBER(pObject->error());
}


RING_FUNC(ring_QCameraImageCapture_errorString)
{
	QCameraImageCapture *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCameraImageCapture *) RING_API_GETCPOINTER(1,"QCameraImageCapture");
	RING_API_RETSTRING(pObject->errorString().toStdString().c_str());
}


RING_FUNC(ring_QCameraImageCapture_imageCodecDescription)
{
	QCameraImageCapture *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCameraImageCapture *) RING_API_GETCPOINTER(1,"QCameraImageCapture");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->imageCodecDescription(RING_API_GETSTRING(2)).toStdString().c_str());
}


RING_FUNC(ring_QCameraImageCapture_isAvailable)
{
	QCameraImageCapture *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCameraImageCapture *) RING_API_GETCPOINTER(1,"QCameraImageCapture");
	RING_API_RETNUMBER(pObject->isAvailable());
}


RING_FUNC(ring_QCameraImageCapture_isCaptureDestinationSupported)
{
	QCameraImageCapture *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCameraImageCapture *) RING_API_GETCPOINTER(1,"QCameraImageCapture");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isCaptureDestinationSupported( (QCameraImageCapture::CaptureDestinations )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QCameraImageCapture_isReadyForCapture)
{
	QCameraImageCapture *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCameraImageCapture *) RING_API_GETCPOINTER(1,"QCameraImageCapture");
	RING_API_RETNUMBER(pObject->isReadyForCapture());
}


RING_FUNC(ring_QCameraImageCapture_setBufferFormat)
{
	QCameraImageCapture *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCameraImageCapture *) RING_API_GETCPOINTER(1,"QCameraImageCapture");
	pObject->setBufferFormat(* (QVideoFrame::PixelFormat  *) RING_API_GETCPOINTER(2,"QVideoFrame::PixelFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QVideoFrame::PixelFormat"));
}


RING_FUNC(ring_QCameraImageCapture_setCaptureDestination)
{
	QCameraImageCapture *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCameraImageCapture *) RING_API_GETCPOINTER(1,"QCameraImageCapture");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCaptureDestination( (QCameraImageCapture::CaptureDestinations )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCameraImageCapture_setEncodingSettings)
{
	QCameraImageCapture *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCameraImageCapture *) RING_API_GETCPOINTER(1,"QCameraImageCapture");
	pObject->setEncodingSettings(* (QImageEncoderSettings    *) RING_API_GETCPOINTER(2,"QImageEncoderSettings"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QImageEncoderSettings"));
}


RING_FUNC(ring_QCameraImageCapture_supportedBufferFormats)
{
	QCameraImageCapture *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCameraImageCapture *) RING_API_GETCPOINTER(1,"QCameraImageCapture");
	{
		QList<QVideoFrame::PixelFormat> *pValue ; 
		pValue = (QList<QVideoFrame::PixelFormat> *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QList<QVideoFrame::PixelFormat>)) ;
		*pValue = pObject->supportedBufferFormats();
		RING_API_RETCPOINTER(pValue,"QList<QVideoFrame::PixelFormat>");
	}
}


RING_FUNC(ring_QCameraImageCapture_supportedImageCodecs)
{
	QCameraImageCapture *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCameraImageCapture *) RING_API_GETCPOINTER(1,"QCameraImageCapture");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->supportedImageCodecs();
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QCameraImageCapture_supportedResolutions)
{
	QCameraImageCapture *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCameraImageCapture *) RING_API_GETCPOINTER(1,"QCameraImageCapture");
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QList<QSize> *pValue ; 
		pValue = (QList<QSize> *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QList<QSize>)) ;
		*pValue = pObject->supportedResolutions(* (QImageEncoderSettings    *) RING_API_GETCPOINTER(2,"QImageEncoderSettings"),(bool *) RING_API_GETCPOINTER(3,"bool"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QImageEncoderSettings"));
		RING_API_RETCPOINTER(pValue,"QList<QSize>");
	}
}


RING_FUNC(ring_QCameraImageCapture_cancelCapture)
{
	QCameraImageCapture *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCameraImageCapture *) RING_API_GETCPOINTER(1,"QCameraImageCapture");
	pObject->cancelCapture();
}


RING_FUNC(ring_QCameraImageCapture_capture)
{
	QCameraImageCapture *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCameraImageCapture *) RING_API_GETCPOINTER(1,"QCameraImageCapture");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->capture(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QMediaObject_availableMetaData)
{
	QMediaObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaObject *) RING_API_GETCPOINTER(1,"QMediaObject");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->availableMetaData();
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QMediaObject_isMetaDataAvailable)
{
	QMediaObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaObject *) RING_API_GETCPOINTER(1,"QMediaObject");
	RING_API_RETNUMBER(pObject->isMetaDataAvailable());
}


RING_FUNC(ring_QMediaObject_metaData)
{
	QMediaObject *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaObject *) RING_API_GETCPOINTER(1,"QMediaObject");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->metaData(RING_API_GETSTRING(2));
		RING_API_RETCPOINTER(pValue,"QVariant");
	}
}


RING_FUNC(ring_QMediaObject_notifyInterval)
{
	QMediaObject *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaObject *) RING_API_GETCPOINTER(1,"QMediaObject");
	RING_API_RETNUMBER(pObject->notifyInterval());
}


RING_FUNC(ring_QMediaObject_setNotifyInterval)
{
	QMediaObject *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMediaObject *) RING_API_GETCPOINTER(1,"QMediaObject");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNotifyInterval( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_cascadingSectionResizes)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->cascadingSectionResizes());
}


RING_FUNC(ring_QHeaderView_count)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->count());
}


RING_FUNC(ring_QHeaderView_defaultAlignment)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->defaultAlignment());
}


RING_FUNC(ring_QHeaderView_defaultSectionSize)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->defaultSectionSize());
}


RING_FUNC(ring_QHeaderView_hiddenSectionCount)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->hiddenSectionCount());
}


RING_FUNC(ring_QHeaderView_hideSection)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->hideSection( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_highlightSections)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->highlightSections());
}


RING_FUNC(ring_QHeaderView_isSectionHidden)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isSectionHidden( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QHeaderView_isSortIndicatorShown)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->isSortIndicatorShown());
}


RING_FUNC(ring_QHeaderView_length)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->length());
}


RING_FUNC(ring_QHeaderView_logicalIndex)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->logicalIndex( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QHeaderView_logicalIndexAt)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->logicalIndexAt( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QHeaderView_logicalIndexAt_2)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->logicalIndexAt( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QHeaderView_logicalIndexAt_3)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->logicalIndexAt(* (QPoint    *) RING_API_GETCPOINTER(2,"QPoint")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
}


RING_FUNC(ring_QHeaderView_maximumSectionSize)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->maximumSectionSize());
}


RING_FUNC(ring_QHeaderView_minimumSectionSize_2)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->minimumSectionSize());
}


RING_FUNC(ring_QHeaderView_moveSection)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->moveSection( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QHeaderView_offset)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->offset());
}


RING_FUNC(ring_QHeaderView_orientation)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->orientation());
}


RING_FUNC(ring_QHeaderView_resizeContentsPrecision)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->resizeContentsPrecision());
}


RING_FUNC(ring_QHeaderView_resizeSection)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->resizeSection( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QHeaderView_resizeSections)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->resizeSections( (QHeaderView::ResizeMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_restoreState)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->restoreState(* (QByteArray    *) RING_API_GETCPOINTER(2,"QByteArray")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QByteArray"));
}


RING_FUNC(ring_QHeaderView_saveState)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->saveState();
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QHeaderView_sectionPosition)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->sectionPosition( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QHeaderView_sectionResizeMode)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->sectionResizeMode( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QHeaderView_sectionSize)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->sectionSize( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QHeaderView_sectionSizeHint)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->sectionSizeHint( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QHeaderView_sectionViewportPosition)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->sectionViewportPosition( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QHeaderView_sectionsClickable)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->sectionsClickable());
}


RING_FUNC(ring_QHeaderView_sectionsHidden)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->sectionsHidden());
}


RING_FUNC(ring_QHeaderView_sectionsMovable)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->sectionsMovable());
}


RING_FUNC(ring_QHeaderView_sectionsMoved)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->sectionsMoved());
}


RING_FUNC(ring_QHeaderView_setCascadingSectionResizes)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCascadingSectionResizes( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_setDefaultAlignment)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDefaultAlignment( (Qt::Alignment )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_setDefaultSectionSize)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDefaultSectionSize( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_setHighlightSections)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHighlightSections( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_setMaximumSectionSize)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMaximumSectionSize( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_setMinimumSectionSize)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMinimumSectionSize( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_setResizeContentsPrecision)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setResizeContentsPrecision( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_setSectionHidden)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSectionHidden( (int ) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QHeaderView_setSectionResizeMode)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSectionResizeMode( (QHeaderView::ResizeMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_setSectionResizeMode_2)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSectionResizeMode( (int ) RING_API_GETNUMBER(2), (QHeaderView::ResizeMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QHeaderView_setSectionsClickable)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSectionsClickable( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_setSectionsMovable)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSectionsMovable( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_setSortIndicator)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSortIndicator( (int ) RING_API_GETNUMBER(2), (Qt::SortOrder )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QHeaderView_setSortIndicatorShown)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSortIndicatorShown( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_setStretchLastSection)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStretchLastSection( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_showSection)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->showSection( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_sortIndicatorOrder)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->sortIndicatorOrder());
}


RING_FUNC(ring_QHeaderView_sortIndicatorSection)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->sortIndicatorSection());
}


RING_FUNC(ring_QHeaderView_stretchLastSection)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->stretchLastSection());
}


RING_FUNC(ring_QHeaderView_stretchSectionCount)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETNUMBER(pObject->stretchSectionCount());
}


RING_FUNC(ring_QHeaderView_swapSections)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->swapSections( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QHeaderView_visualIndex)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->visualIndex( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QHeaderView_visualIndexAt)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->visualIndexAt( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QHeaderView_headerDataChanged)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->headerDataChanged( (Qt::Orientation )  (int) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4));
}


RING_FUNC(ring_QHeaderView_setOffset)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOffset( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_setOffsetToLastSection)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	pObject->setOffsetToLastSection();
}


RING_FUNC(ring_QHeaderView_setOffsetToSectionPosition)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOffsetToSectionPosition( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QHeaderView_setgeometriesChangedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setgeometriesChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QHeaderView_setsectionClickedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsectionClickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QHeaderView_setsectionCountChangedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsectionCountChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QHeaderView_setsectionDoubleClickedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsectionDoubleClickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QHeaderView_setsectionEnteredEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsectionEnteredEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QHeaderView_setsectionHandleDoubleClickedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsectionHandleDoubleClickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QHeaderView_setsectionMovedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsectionMovedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QHeaderView_setsectionPressedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsectionPressedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QHeaderView_setsectionResizedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsectionResizedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QHeaderView_setsortIndicatorChangedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsortIndicatorChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QHeaderView_getgeometriesChangedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETSTRING(pObject->getgeometriesChangedEvent());
}


RING_FUNC(ring_QHeaderView_getsectionClickedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETSTRING(pObject->getsectionClickedEvent());
}


RING_FUNC(ring_QHeaderView_getsectionCountChangedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETSTRING(pObject->getsectionCountChangedEvent());
}


RING_FUNC(ring_QHeaderView_getsectionDoubleClickedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETSTRING(pObject->getsectionDoubleClickedEvent());
}


RING_FUNC(ring_QHeaderView_getsectionEnteredEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETSTRING(pObject->getsectionEnteredEvent());
}


RING_FUNC(ring_QHeaderView_getsectionHandleDoubleClickedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETSTRING(pObject->getsectionHandleDoubleClickedEvent());
}


RING_FUNC(ring_QHeaderView_getsectionMovedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETSTRING(pObject->getsectionMovedEvent());
}


RING_FUNC(ring_QHeaderView_getsectionPressedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETSTRING(pObject->getsectionPressedEvent());
}


RING_FUNC(ring_QHeaderView_getsectionResizedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETSTRING(pObject->getsectionResizedEvent());
}


RING_FUNC(ring_QHeaderView_getsortIndicatorChangedEvent)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	RING_API_RETSTRING(pObject->getsortIndicatorChangedEvent());
}


RING_FUNC(ring_QHeaderView_geteventparameters)
{
	GHeaderView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"QHeaderView");
	pObject->geteventparameters();
}


RING_FUNC(ring_QFontMetrics_ascent)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->ascent());
}


RING_FUNC(ring_QFontMetrics_averageCharWidth)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->averageCharWidth());
}


RING_FUNC(ring_QFontMetrics_boundingRect)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->boundingRect(* (QChar  *) RING_API_GETCPOINTER(2,"QChar"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QChar"));
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QFontMetrics_boundingRect_2)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->boundingRect(RING_API_GETSTRING(2));
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QFontMetrics_boundingRect_3)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 9 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(8) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(9) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->boundingRect( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5), (int ) RING_API_GETNUMBER(6),RING_API_GETSTRING(7), (int ) RING_API_GETNUMBER(8),RING_API_GETINTPOINTER(9));
		RING_API_RETCPOINTER(pValue,"QRect");
	}
	RING_API_ACCEPTINTVALUE(8) ;
}


RING_FUNC(ring_QFontMetrics_boundingRect_4)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->boundingRect(* (QRect    *) RING_API_GETCPOINTER(2,"QRect"), (int ) RING_API_GETNUMBER(3),RING_API_GETSTRING(4), (int ) RING_API_GETNUMBER(5),RING_API_GETINTPOINTER(6));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QRect"));
		RING_API_RETCPOINTER(pValue,"QRect");
	}
	RING_API_ACCEPTINTVALUE(5) ;
}


RING_FUNC(ring_QFontMetrics_descent)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->descent());
}


RING_FUNC(ring_QFontMetrics_elidedText)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->elidedText(RING_API_GETSTRING(2), (Qt::TextElideMode )  (int) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5)).toStdString().c_str());
}


RING_FUNC(ring_QFontMetrics_height)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->height());
}


RING_FUNC(ring_QFontMetrics_inFont)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->inFont(* (QChar  *) RING_API_GETCPOINTER(2,"QChar")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QChar"));
}


RING_FUNC(ring_QFontMetrics_inFontUcs4)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->inFontUcs4(* (uint  *) RING_API_GETCPOINTER(2,"uint")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"uint"));
}


RING_FUNC(ring_QFontMetrics_leading)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->leading());
}


RING_FUNC(ring_QFontMetrics_leftBearing)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->leftBearing(* (QChar  *) RING_API_GETCPOINTER(2,"QChar")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QChar"));
}


RING_FUNC(ring_QFontMetrics_lineSpacing)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->lineSpacing());
}


RING_FUNC(ring_QFontMetrics_lineWidth)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->lineWidth());
}


RING_FUNC(ring_QFontMetrics_maxWidth)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->maxWidth());
}


RING_FUNC(ring_QFontMetrics_minLeftBearing)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->minLeftBearing());
}


RING_FUNC(ring_QFontMetrics_minRightBearing)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->minRightBearing());
}


RING_FUNC(ring_QFontMetrics_overlinePos)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->overlinePos());
}


RING_FUNC(ring_QFontMetrics_rightBearing)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->rightBearing(* (QChar  *) RING_API_GETCPOINTER(2,"QChar")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QChar"));
}


RING_FUNC(ring_QFontMetrics_size)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->size( (int ) RING_API_GETNUMBER(2),RING_API_GETSTRING(3), (int ) RING_API_GETNUMBER(4),RING_API_GETINTPOINTER(5));
		RING_API_RETCPOINTER(pValue,"QSize");
	}
	RING_API_ACCEPTINTVALUE(4) ;
}


RING_FUNC(ring_QFontMetrics_strikeOutPos)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->strikeOutPos());
}


RING_FUNC(ring_QFontMetrics_tightBoundingRect)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->tightBoundingRect(RING_API_GETSTRING(2));
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QFontMetrics_underlinePos)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->underlinePos());
}


RING_FUNC(ring_QFontMetrics_width)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->width(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QFontMetrics_width_2)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->width(* (QChar  *) RING_API_GETCPOINTER(2,"QChar")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QChar"));
}


RING_FUNC(ring_QFontMetrics_xHeight)
{
	QFontMetrics *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
	RING_API_RETNUMBER(pObject->xHeight());
}


RING_FUNC(ring_QSplashScreen_finish)
{
	QSplashScreen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplashScreen *) RING_API_GETCPOINTER(1,"QSplashScreen");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->finish((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QSplashScreen_pixmap)
{
	QSplashScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplashScreen *) RING_API_GETCPOINTER(1,"QSplashScreen");
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->pixmap();
		RING_API_RETCPOINTER(pValue,"QPixmap");
	}
}


RING_FUNC(ring_QSplashScreen_repaint)
{
	QSplashScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplashScreen *) RING_API_GETCPOINTER(1,"QSplashScreen");
	pObject->repaint();
}


RING_FUNC(ring_QSplashScreen_setPixmap)
{
	QSplashScreen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplashScreen *) RING_API_GETCPOINTER(1,"QSplashScreen");
	pObject->setPixmap(* (QPixmap  *) RING_API_GETCPOINTER(2,"QPixmap"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPixmap"));
}


RING_FUNC(ring_QSplashScreen_clearMessage)
{
	QSplashScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplashScreen *) RING_API_GETCPOINTER(1,"QSplashScreen");
	pObject->clearMessage();
}


RING_FUNC(ring_QSplashScreen_showMessage)
{
	QSplashScreen *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplashScreen *) RING_API_GETCPOINTER(1,"QSplashScreen");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->showMessage(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3),* (QColor  *) RING_API_GETCPOINTER(4,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"QColor"));
}


RING_FUNC(ring_QBoxLayout_addLayout)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addLayout((QLayout *) RING_API_GETCPOINTER(2,"QLayout"), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QBoxLayout_addSpacerItem)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addSpacerItem((QSpacerItem *) RING_API_GETCPOINTER(2,"QSpacerItem"));
}


RING_FUNC(ring_QBoxLayout_addSpacing)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addSpacing( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QBoxLayout_addStretch)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addStretch( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QBoxLayout_addStrut)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addStrut( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QBoxLayout_addWidget)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"), (int ) RING_API_GETNUMBER(3), (Qt::Alignment )  (int) RING_API_GETNUMBER(4));
}


RING_FUNC(ring_QBoxLayout_direction)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	{
		QBoxLayout::Direction  *pValue ; 
		pValue = (QBoxLayout::Direction  *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QBoxLayout::Direction )) ;
		*pValue = pObject->direction();
		RING_API_RETCPOINTER(pValue,"QBoxLayout::Direction");
	}
}


RING_FUNC(ring_QBoxLayout_insertLayout)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertLayout( (int ) RING_API_GETNUMBER(2),(QLayout *) RING_API_GETCPOINTER(3,"QLayout"), (int ) RING_API_GETNUMBER(4));
}


RING_FUNC(ring_QBoxLayout_insertSpacerItem)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertSpacerItem( (int ) RING_API_GETNUMBER(2),(QSpacerItem *) RING_API_GETCPOINTER(3,"QSpacerItem"));
}


RING_FUNC(ring_QBoxLayout_insertSpacing)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertSpacing( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QBoxLayout_insertStretch)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertStretch( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QBoxLayout_insertWidget)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertWidget( (int ) RING_API_GETNUMBER(2),(QWidget *) RING_API_GETCPOINTER(3,"QWidget"), (int ) RING_API_GETNUMBER(4), (Qt::Alignment )  (int) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QBoxLayout_setDirection)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	pObject->setDirection(* (QBoxLayout::Direction  *) RING_API_GETCPOINTER(2,"QBoxLayout::Direction"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QBoxLayout::Direction"));
}


RING_FUNC(ring_QBoxLayout_setSpacing)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSpacing( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QBoxLayout_setStretch)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStretch( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QBoxLayout_setStretchFactor)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setStretchFactor((QWidget *) RING_API_GETCPOINTER(2,"QWidget"), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QBoxLayout_setStretchFactor_2)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setStretchFactor((QLayout *) RING_API_GETCPOINTER(2,"QLayout"), (int ) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QBoxLayout_spacing)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	RING_API_RETNUMBER(pObject->spacing());
}


RING_FUNC(ring_QBoxLayout_stretch)
{
	QBoxLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->stretch( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QLayout_activate)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	RING_API_RETNUMBER(pObject->activate());
}


RING_FUNC(ring_QLayout_addWidget)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QLayout_contentsMargins)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	{
		QMargins *pValue ; 
		pValue = (QMargins *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QMargins)) ;
		*pValue = pObject->contentsMargins();
		RING_API_RETCPOINTER(pValue,"QMargins");
	}
}


RING_FUNC(ring_QLayout_contentsRect)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->contentsRect();
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QLayout_getContentsMargins)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->getContentsMargins(RING_API_GETINTPOINTER(2),RING_API_GETINTPOINTER(3),RING_API_GETINTPOINTER(4),RING_API_GETINTPOINTER(5));
	RING_API_ACCEPTINTVALUE(1) ;
	RING_API_ACCEPTINTVALUE(2) ;
	RING_API_ACCEPTINTVALUE(3) ;
	RING_API_ACCEPTINTVALUE(4) ;
}


RING_FUNC(ring_QLayout_isEnabled)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	RING_API_RETNUMBER(pObject->isEnabled());
}


RING_FUNC(ring_QLayout_menuBar)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	RING_API_RETCPOINTER(pObject->menuBar(),"QWidget");
}


RING_FUNC(ring_QLayout_parentWidget)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	RING_API_RETCPOINTER(pObject->parentWidget(),"QWidget");
}


RING_FUNC(ring_QLayout_removeItem)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeItem((QLayoutItem *) RING_API_GETCPOINTER(2,"QLayoutItem"));
}


RING_FUNC(ring_QLayout_removeWidget)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QLayout_setAlignment)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setAlignment((QWidget *) RING_API_GETCPOINTER(2,"QWidget"), (Qt::Alignment )  (int) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QLayout_setAlignment_2)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAlignment( (Qt::Alignment )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLayout_setAlignment_3)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setAlignment((QLayout *) RING_API_GETCPOINTER(2,"QLayout"), (Qt::Alignment )  (int) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QLayout_setContentsMargins)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setContentsMargins( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QLayout_setContentsMargins_2)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	pObject->setContentsMargins(* (QMargins  *) RING_API_GETCPOINTER(2,"QMargins"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QMargins"));
}


RING_FUNC(ring_QLayout_setEnabled)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLayout_setMenuBar)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMenuBar((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QLayout_setSizeConstraint)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSizeConstraint( (QLayout::SizeConstraint)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLayout_setSpacing)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSpacing( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QLayout_sizeConstraint)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	RING_API_RETNUMBER(pObject->sizeConstraint());
}


RING_FUNC(ring_QLayout_spacing)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	RING_API_RETNUMBER(pObject->spacing());
}


RING_FUNC(ring_QLayout_update)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	pObject->update();
}


RING_FUNC(ring_QLayout_closestAcceptableSize)
{
	QLayout *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLayout *) RING_API_GETCPOINTER(1,"QLayout");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QSize  *pValue ; 
		pValue = (QSize  *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QSize )) ;
		*pValue = pObject->closestAcceptableSize((QWidget *) RING_API_GETCPOINTER(2,"QWidget"),* (QSize    *) RING_API_GETCPOINTER(3,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QSize"));
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QLinearGradient_finalStop)
{
	QLinearGradient *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLinearGradient *) RING_API_GETCPOINTER(1,"QLinearGradient");
	{
		QPointF *pValue ; 
		pValue = new QPointF() ;
		*pValue = pObject->finalStop();
		RING_API_RETCPOINTER(pValue,"QPointF");
	}
}


RING_FUNC(ring_QLinearGradient_setFinalStop)
{
	QLinearGradient *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLinearGradient *) RING_API_GETCPOINTER(1,"QLinearGradient");
	pObject->setFinalStop(* (QPointF  *) RING_API_GETCPOINTER(2,"QPointF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPointF"));
}


RING_FUNC(ring_QLinearGradient_setFinalStop_2)
{
	QLinearGradient *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLinearGradient *) RING_API_GETCPOINTER(1,"QLinearGradient");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFinalStop( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QLinearGradient_setStart)
{
	QLinearGradient *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLinearGradient *) RING_API_GETCPOINTER(1,"QLinearGradient");
	pObject->setStart(* (QPointF  *) RING_API_GETCPOINTER(2,"QPointF"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPointF"));
}


RING_FUNC(ring_QLinearGradient_setStart_2)
{
	QLinearGradient *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLinearGradient *) RING_API_GETCPOINTER(1,"QLinearGradient");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStart( (qreal ) RING_API_GETNUMBER(2), (qreal ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QLinearGradient_start)
{
	QLinearGradient *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QLinearGradient *) RING_API_GETCPOINTER(1,"QLinearGradient");
	{
		QPointF *pValue ; 
		pValue = new QPointF() ;
		*pValue = pObject->start();
		RING_API_RETCPOINTER(pValue,"QPointF");
	}
}


RING_FUNC(ring_QGradient_coordinateMode)
{
	QGradient *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGradient *) RING_API_GETCPOINTER(1,"QGradient");
	RING_API_RETNUMBER(pObject->coordinateMode());
}


RING_FUNC(ring_QGradient_setColorAt)
{
	QGradient *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGradient *) RING_API_GETCPOINTER(1,"QGradient");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setColorAt( (qreal ) RING_API_GETNUMBER(2),* (QColor    *) RING_API_GETCPOINTER(3,"QColor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QColor"));
}


RING_FUNC(ring_QGradient_setCoordinateMode)
{
	QGradient *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGradient *) RING_API_GETCPOINTER(1,"QGradient");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCoordinateMode( (QGradient::CoordinateMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QGradient_setSpread)
{
	QGradient *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGradient *) RING_API_GETCPOINTER(1,"QGradient");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSpread( (QGradient::Spread )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QGradient_setStops)
{
	QGradient *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGradient *) RING_API_GETCPOINTER(1,"QGradient");
	pObject->setStops(* (QGradientStops  *) RING_API_GETCPOINTER(2,"QGradientStops"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QGradientStops"));
}


RING_FUNC(ring_QGradient_spread)
{
	QGradient *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGradient *) RING_API_GETCPOINTER(1,"QGradient");
	RING_API_RETNUMBER(pObject->spread());
}


RING_FUNC(ring_QGradient_stops)
{
	QGradient *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGradient *) RING_API_GETCPOINTER(1,"QGradient");
	{
		QGradientStops *pValue ; 
		pValue = (QGradientStops *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QGradientStops)) ;
		*pValue = pObject->stops();
		RING_API_RETCPOINTER(pValue,"QGradientStops");
	}
}


RING_FUNC(ring_QGradient_type)
{
	QGradient *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QGradient *) RING_API_GETCPOINTER(1,"QGradient");
	RING_API_RETNUMBER(pObject->type());
}


RING_FUNC(ring_QPointF_isNull)
{
	QPointF *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPointF *) RING_API_GETCPOINTER(1,"QPointF");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QPointF_manhattanLength)
{
	QPointF *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPointF *) RING_API_GETCPOINTER(1,"QPointF");
	RING_API_RETNUMBER(pObject->manhattanLength());
}


RING_FUNC(ring_QPointF_rx)
{
	QPointF *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPointF *) RING_API_GETCPOINTER(1,"QPointF");
	RING_API_RETNUMBER(pObject->rx());
}


RING_FUNC(ring_QPointF_ry)
{
	QPointF *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPointF *) RING_API_GETCPOINTER(1,"QPointF");
	RING_API_RETNUMBER(pObject->ry());
}


RING_FUNC(ring_QPointF_setX)
{
	QPointF *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPointF *) RING_API_GETCPOINTER(1,"QPointF");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setX( (qreal ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPointF_setY)
{
	QPointF *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPointF *) RING_API_GETCPOINTER(1,"QPointF");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setY( (qreal ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPointF_toPoint)
{
	QPointF *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPointF *) RING_API_GETCPOINTER(1,"QPointF");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->toPoint();
		RING_API_RETCPOINTER(pValue,"QPoint");
	}
}


RING_FUNC(ring_QPointF_x)
{
	QPointF *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPointF *) RING_API_GETCPOINTER(1,"QPointF");
	RING_API_RETNUMBER(pObject->x());
}


RING_FUNC(ring_QPointF_y)
{
	QPointF *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPointF *) RING_API_GETCPOINTER(1,"QPointF");
	RING_API_RETNUMBER(pObject->y());
}


RING_FUNC(ring_QPoint_isNull)
{
	QPoint *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPoint *) RING_API_GETCPOINTER(1,"QPoint");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QPoint_manhattanLength)
{
	QPoint *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPoint *) RING_API_GETCPOINTER(1,"QPoint");
	RING_API_RETNUMBER(pObject->manhattanLength());
}


RING_FUNC(ring_QPoint_rx)
{
	QPoint *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPoint *) RING_API_GETCPOINTER(1,"QPoint");
	RING_API_RETNUMBER(pObject->rx());
}


RING_FUNC(ring_QPoint_ry)
{
	QPoint *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPoint *) RING_API_GETCPOINTER(1,"QPoint");
	RING_API_RETNUMBER(pObject->ry());
}


RING_FUNC(ring_QPoint_setX)
{
	QPoint *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPoint *) RING_API_GETCPOINTER(1,"QPoint");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setX( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPoint_setY)
{
	QPoint *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPoint *) RING_API_GETCPOINTER(1,"QPoint");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setY( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QPoint_x)
{
	QPoint *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPoint *) RING_API_GETCPOINTER(1,"QPoint");
	RING_API_RETNUMBER(pObject->x());
}


RING_FUNC(ring_QPoint_y)
{
	QPoint *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QPoint *) RING_API_GETCPOINTER(1,"QPoint");
	RING_API_RETNUMBER(pObject->y());
}


RING_FUNC(ring_QScrollArea_alignment)
{
	QScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScrollArea *) RING_API_GETCPOINTER(1,"QScrollArea");
	RING_API_RETNUMBER(pObject->alignment());
}


RING_FUNC(ring_QScrollArea_ensureVisible)
{
	QScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScrollArea *) RING_API_GETCPOINTER(1,"QScrollArea");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->ensureVisible( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QScrollArea_ensureWidgetVisible)
{
	QScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScrollArea *) RING_API_GETCPOINTER(1,"QScrollArea");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->ensureWidgetVisible((QWidget *) RING_API_GETCPOINTER(2,"QWidget"), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4));
}


RING_FUNC(ring_QScrollArea_setAlignment)
{
	QScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScrollArea *) RING_API_GETCPOINTER(1,"QScrollArea");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAlignment( (Qt::Alignment)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QScrollArea_setWidget)
{
	QScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScrollArea *) RING_API_GETCPOINTER(1,"QScrollArea");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QScrollArea_setWidgetResizable)
{
	QScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScrollArea *) RING_API_GETCPOINTER(1,"QScrollArea");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWidgetResizable( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QScrollArea_takeWidget)
{
	QScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScrollArea *) RING_API_GETCPOINTER(1,"QScrollArea");
	RING_API_RETCPOINTER(pObject->takeWidget(),"QWidget");
}


RING_FUNC(ring_QScrollArea_widget)
{
	QScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScrollArea *) RING_API_GETCPOINTER(1,"QScrollArea");
	RING_API_RETCPOINTER(pObject->widget(),"QWidget");
}


RING_FUNC(ring_QScrollArea_widgetResizable)
{
	QScrollArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScrollArea *) RING_API_GETCPOINTER(1,"QScrollArea");
	RING_API_RETNUMBER(pObject->widgetResizable());
}


RING_FUNC(ring_QSplitter_addWidget)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QSplitter_childrenCollapsible)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	RING_API_RETNUMBER(pObject->childrenCollapsible());
}


RING_FUNC(ring_QSplitter_count)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	RING_API_RETNUMBER(pObject->count());
}


RING_FUNC(ring_QSplitter_getRange)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->getRange( (int ) RING_API_GETNUMBER(2),RING_API_GETINTPOINTER(3),RING_API_GETINTPOINTER(4));
	RING_API_ACCEPTINTVALUE(2) ;
	RING_API_ACCEPTINTVALUE(3) ;
}


RING_FUNC(ring_QSplitter_handle)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->handle( (int ) RING_API_GETNUMBER(2)),"QSplitterHandle");
}


RING_FUNC(ring_QSplitter_handleWidth)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	RING_API_RETNUMBER(pObject->handleWidth());
}


RING_FUNC(ring_QSplitter_indexOf)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->indexOf((QWidget *) RING_API_GETCPOINTER(2,"QWidget")));
}


RING_FUNC(ring_QSplitter_insertWidget)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->insertWidget( (int ) RING_API_GETNUMBER(2),(QWidget *) RING_API_GETCPOINTER(3,"QWidget"));
}


RING_FUNC(ring_QSplitter_isCollapsible)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isCollapsible( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QSplitter_opaqueResize)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	RING_API_RETNUMBER(pObject->opaqueResize());
}


RING_FUNC(ring_QSplitter_orientation)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	RING_API_RETNUMBER(pObject->orientation());
}


RING_FUNC(ring_QSplitter_refresh)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	pObject->refresh();
}


RING_FUNC(ring_QSplitter_restoreState)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	RING_API_RETNUMBER(pObject->restoreState(* (QByteArray   *) RING_API_GETCPOINTER(2,"QByteArray")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QByteArray"));
}


RING_FUNC(ring_QSplitter_saveState)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->saveState();
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QSplitter_setChildrenCollapsible)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setChildrenCollapsible( (bool) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSplitter_setCollapsible)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCollapsible( (int ) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QSplitter_setHandleWidth)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHandleWidth( (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSplitter_setOpaqueResize)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOpaqueResize( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSplitter_setOrientation)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOrientation( (Qt::Orientation)  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSplitter_setSizes)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	pObject->setSizes(* (QList<int>   *) RING_API_GETCPOINTER(2,"QList<int>"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QList<int>"));
}


RING_FUNC(ring_QSplitter_setStretchFactor)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStretchFactor( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QSplitter_sizes)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	{
		QList<int> *pValue ; 
		pValue = (QList<int> *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QList<int>)) ;
		*pValue = pObject->sizes();
		RING_API_RETCPOINTER(pValue,"QList<int>");
	}
}


RING_FUNC(ring_QSplitter_widget)
{
	QSplitter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->widget( (int ) RING_API_GETNUMBER(2)),"QWidget");
}


RING_FUNC(ring_QCompleter_caseSensitivity)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	RING_API_RETNUMBER(pObject->caseSensitivity());
}


RING_FUNC(ring_QCompleter_completionColumn)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	RING_API_RETNUMBER(pObject->completionColumn());
}


RING_FUNC(ring_QCompleter_completionCount)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	RING_API_RETNUMBER(pObject->completionCount());
}


RING_FUNC(ring_QCompleter_completionMode)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	RING_API_RETNUMBER(pObject->completionMode());
}


RING_FUNC(ring_QCompleter_completionModel)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	RING_API_RETCPOINTER(pObject->completionModel(),"QAbstractItemModel");
}


RING_FUNC(ring_QCompleter_completionPrefix)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	RING_API_RETSTRING(pObject->completionPrefix().toStdString().c_str());
}


RING_FUNC(ring_QCompleter_completionRole)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	RING_API_RETNUMBER(pObject->completionRole());
}


RING_FUNC(ring_QCompleter_currentCompletion)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	RING_API_RETSTRING(pObject->currentCompletion().toStdString().c_str());
}


RING_FUNC(ring_QCompleter_currentIndex)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	{
		QModelIndex *pValue ; 
		pValue = (QModelIndex *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QModelIndex)) ;
		*pValue = pObject->currentIndex();
		RING_API_RETCPOINTER(pValue,"QModelIndex");
	}
}


RING_FUNC(ring_QCompleter_currentRow)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	RING_API_RETNUMBER(pObject->currentRow());
}


RING_FUNC(ring_QCompleter_filterMode)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	RING_API_RETNUMBER(pObject->filterMode());
}


RING_FUNC(ring_QCompleter_maxVisibleItems)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	RING_API_RETNUMBER(pObject->maxVisibleItems());
}


RING_FUNC(ring_QCompleter_model)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	RING_API_RETCPOINTER(pObject->model(),"QAbstractItemModel");
}


RING_FUNC(ring_QCompleter_modelSorting)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	RING_API_RETNUMBER(pObject->modelSorting());
}


RING_FUNC(ring_QCompleter_popup)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	RING_API_RETCPOINTER(pObject->popup(),"QAbstractItemView");
}


RING_FUNC(ring_QCompleter_setCaseSensitivity)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCaseSensitivity( (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCompleter_setCompletionColumn)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCompletionColumn( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCompleter_setCompletionMode)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCompletionMode( (QCompleter::CompletionMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCompleter_setCompletionRole)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCompletionRole( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCompleter_setCurrentRow)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setCurrentRow( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QCompleter_setFilterMode)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFilterMode( (Qt::MatchFlags )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCompleter_setMaxVisibleItems)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMaxVisibleItems( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCompleter_setModel)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setModel((QAbstractItemModel *) RING_API_GETCPOINTER(2,"QAbstractItemModel"));
}


RING_FUNC(ring_QCompleter_setModelSorting)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setModelSorting( (QCompleter::ModelSorting )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCompleter_setPopup)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPopup((QAbstractItemView *) RING_API_GETCPOINTER(2,"QAbstractItemView"));
}


RING_FUNC(ring_QCompleter_setWidget)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QCompleter_widget)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	RING_API_RETCPOINTER(pObject->widget(),"QWidget");
}


RING_FUNC(ring_QCompleter_wrapAround)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	RING_API_RETNUMBER(pObject->wrapAround());
}


RING_FUNC(ring_QCompleter_complete)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	pObject->complete(* (QRect   *) RING_API_GETCPOINTER(2,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QRect"));
}


RING_FUNC(ring_QCompleter_setCompletionPrefix)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCompletionPrefix(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QCompleter_setWrapAround)
{
	QCompleter *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWrapAround( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QString2_append)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->append(RING_API_GETSTRING(2)).toStdString().c_str());
}


RING_FUNC(ring_QString2_split)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->split(RING_API_GETSTRING(2), (QString::SplitBehavior )  (int) RING_API_GETNUMBER(3), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(4));
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QString2_split_2)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->split(* (QChar  *) RING_API_GETCPOINTER(2,"QChar"), (QString::SplitBehavior )  (int) RING_API_GETNUMBER(3), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(4));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QChar"));
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QString2_split_3)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->split(* (QRegExp   *) RING_API_GETCPOINTER(2,"QRegExp"), (QString::SplitBehavior )  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QRegExp"));
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QString2_split_4)
{
	QString *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QString *) RING_API_GETCPOINTER(1,"QString2");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->split(* (QRegularExpression   *) RING_API_GETCPOINTER(2,"QRegularExpression"), (QString::SplitBehavior )  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QRegularExpression"));
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QProcess_arguments)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->arguments();
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QProcess_closeReadChannel)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->closeReadChannel( (QProcess::ProcessChannel )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QProcess_closeWriteChannel)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	pObject->closeWriteChannel();
}


RING_FUNC(ring_QProcess_error)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	RING_API_RETNUMBER(pObject->error());
}


RING_FUNC(ring_QProcess_exitCode)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	RING_API_RETNUMBER(pObject->exitCode());
}


RING_FUNC(ring_QProcess_exitStatus)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	RING_API_RETNUMBER(pObject->exitStatus());
}


RING_FUNC(ring_QProcess_inputChannelMode)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	RING_API_RETNUMBER(pObject->inputChannelMode());
}


RING_FUNC(ring_QProcess_processChannelMode)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	RING_API_RETNUMBER(pObject->processChannelMode());
}


RING_FUNC(ring_QProcess_processEnvironment)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	{
		QProcessEnvironment *pValue ; 
		pValue = (QProcessEnvironment *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QProcessEnvironment)) ;
		*pValue = pObject->processEnvironment();
		RING_API_RETCPOINTER(pValue,"QProcessEnvironment");
	}
}


RING_FUNC(ring_QProcess_program)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	RING_API_RETSTRING(pObject->program().toStdString().c_str());
}


RING_FUNC(ring_QProcess_readAllStandardError)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->readAllStandardError();
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QProcess_readAllStandardOutput)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->readAllStandardOutput();
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QProcess_readChannel)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	RING_API_RETNUMBER(pObject->readChannel());
}


RING_FUNC(ring_QProcess_setArguments)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	pObject->setArguments(* (QStringList   *) RING_API_GETCPOINTER(2,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QStringList"));
}


RING_FUNC(ring_QProcess_setInputChannelMode)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setInputChannelMode( (QProcess::InputChannelMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QProcess_setProcessChannelMode)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setProcessChannelMode( (QProcess::ProcessChannelMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QProcess_setProcessEnvironment)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	pObject->setProcessEnvironment(* (QProcessEnvironment   *) RING_API_GETCPOINTER(2,"QProcessEnvironment"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QProcessEnvironment"));
}


RING_FUNC(ring_QProcess_setProgram)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setProgram(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QProcess_setReadChannel)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setReadChannel( (QProcess::ProcessChannel )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QProcess_setStandardErrorFile)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStandardErrorFile(RING_API_GETSTRING(2), (QIODevice::OpenMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QProcess_setStandardInputFile)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStandardInputFile(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QProcess_setStandardOutputFile)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStandardOutputFile(RING_API_GETSTRING(2), (QIODevice::OpenMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QProcess_setStandardOutputProcess)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setStandardOutputProcess((QProcess *) RING_API_GETCPOINTER(2,"QProcess"));
}


RING_FUNC(ring_QProcess_setWorkingDirectory)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWorkingDirectory(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QProcess_start)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->start(RING_API_GETSTRING(2),* (QStringList   *) RING_API_GETCPOINTER(3,"QStringList"), (QIODevice::OpenMode )  (int) RING_API_GETNUMBER(4));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QStringList"));
}


RING_FUNC(ring_QProcess_start_2)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->start(RING_API_GETSTRING(2), (QIODevice::OpenMode )  (int) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QProcess_start_3)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->start( (QIODevice::OpenMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QProcess_state)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	RING_API_RETNUMBER(pObject->state());
}


RING_FUNC(ring_QProcess_waitForFinished)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->waitForFinished( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QProcess_waitForStarted)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->waitForStarted( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QProcess_workingDirectory)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	RING_API_RETSTRING(pObject->workingDirectory().toStdString().c_str());
}


RING_FUNC(ring_QProcess_kill)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	pObject->kill();
}


RING_FUNC(ring_QProcess_terminate)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	pObject->terminate();
}


RING_FUNC(ring_QProcess_setreadyReadStandardErrorEvent)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setreadyReadStandardErrorEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QProcess_setreadyReadStandardOutputEvent)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setreadyReadStandardOutputEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QProcess_getreadyReadStandardErrorEvent)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	RING_API_RETSTRING(pObject->getreadyReadStandardErrorEvent());
}


RING_FUNC(ring_QProcess_getreadyReadStandardOutputEvent)
{
	GProcess *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GProcess *) RING_API_GETCPOINTER(1,"QProcess");
	RING_API_RETSTRING(pObject->getreadyReadStandardOutputEvent());
}


RING_FUNC(ring_QMdiArea_activationOrder)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	RING_API_RETNUMBER(pObject->activationOrder());
}


RING_FUNC(ring_QMdiArea_activeSubWindow)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	RING_API_RETCPOINTER(pObject->activeSubWindow(),"QMdiSubWindow");
}


RING_FUNC(ring_QMdiArea_addSubWindow)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->addSubWindow((QWidget *) RING_API_GETCPOINTER(2,"QWidget"), (Qt::WindowFlags )  (int) RING_API_GETNUMBER(3)),"QMdiSubWindow");
}


RING_FUNC(ring_QMdiArea_background)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	{
		QBrush *pValue ; 
		pValue = new QBrush() ;
		*pValue = pObject->background();
		RING_API_RETCPOINTER(pValue,"QBrush");
	}
}


RING_FUNC(ring_QMdiArea_currentSubWindow)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	RING_API_RETCPOINTER(pObject->currentSubWindow(),"QMdiSubWindow");
}


RING_FUNC(ring_QMdiArea_documentMode)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	RING_API_RETNUMBER(pObject->documentMode());
}


RING_FUNC(ring_QMdiArea_removeSubWindow)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeSubWindow((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QMdiArea_setActivationOrder)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setActivationOrder( (QMdiArea::WindowOrder )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMdiArea_setBackground)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	pObject->setBackground(* (QBrush    *) RING_API_GETCPOINTER(2,"QBrush"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QBrush"));
}


RING_FUNC(ring_QMdiArea_setDocumentMode)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDocumentMode( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMdiArea_setOption)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOption( (QMdiArea::AreaOption )  (int) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QMdiArea_setTabPosition)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabPosition( (QTabWidget::TabPosition )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMdiArea_setTabShape)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabShape( (QTabWidget::TabShape )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMdiArea_setTabsClosable)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabsClosable( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMdiArea_setTabsMovable)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTabsMovable( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMdiArea_setViewMode)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setViewMode( (QMdiArea::ViewMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMdiArea_subWindowList)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QList<QMdiSubWindow *> *pValue ; 
		pValue = (QList<QMdiSubWindow *> *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QList<QMdiSubWindow *>)) ;
		*pValue = pObject->subWindowList( (QMdiArea::WindowOrder )  (int) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QList<QMdiSubWindow *>");
	}
}


RING_FUNC(ring_QMdiArea_tabPosition)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	RING_API_RETNUMBER(pObject->tabPosition());
}


RING_FUNC(ring_QMdiArea_tabShape)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	RING_API_RETNUMBER(pObject->tabShape());
}


RING_FUNC(ring_QMdiArea_tabsClosable)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	RING_API_RETNUMBER(pObject->tabsClosable());
}


RING_FUNC(ring_QMdiArea_tabsMovable)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	RING_API_RETNUMBER(pObject->tabsMovable());
}


RING_FUNC(ring_QMdiArea_testOption)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->testOption( (QMdiArea::AreaOption )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QMdiArea_viewMode)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	RING_API_RETNUMBER(pObject->viewMode());
}


RING_FUNC(ring_QMdiArea_activateNextSubWindow)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	pObject->activateNextSubWindow();
}


RING_FUNC(ring_QMdiArea_activatePreviousSubWindow)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	pObject->activatePreviousSubWindow();
}


RING_FUNC(ring_QMdiArea_cascadeSubWindows)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	pObject->cascadeSubWindows();
}


RING_FUNC(ring_QMdiArea_closeActiveSubWindow)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	pObject->closeActiveSubWindow();
}


RING_FUNC(ring_QMdiArea_closeAllSubWindows)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	pObject->closeAllSubWindows();
}


RING_FUNC(ring_QMdiArea_setActiveSubWindow)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setActiveSubWindow((QMdiSubWindow *) RING_API_GETCPOINTER(2,"QMdiSubWindow"));
}


RING_FUNC(ring_QMdiArea_tileSubWindows)
{
	QMdiArea *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
	pObject->tileSubWindows();
}


RING_FUNC(ring_QMdiSubWindow_isShaded)
{
	QMdiSubWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiSubWindow *) RING_API_GETCPOINTER(1,"QMdiSubWindow");
	RING_API_RETNUMBER(pObject->isShaded());
}


RING_FUNC(ring_QMdiSubWindow_keyboardPageStep)
{
	QMdiSubWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiSubWindow *) RING_API_GETCPOINTER(1,"QMdiSubWindow");
	RING_API_RETNUMBER(pObject->keyboardPageStep());
}


RING_FUNC(ring_QMdiSubWindow_keyboardSingleStep)
{
	QMdiSubWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiSubWindow *) RING_API_GETCPOINTER(1,"QMdiSubWindow");
	RING_API_RETNUMBER(pObject->keyboardSingleStep());
}


RING_FUNC(ring_QMdiSubWindow_mdiArea)
{
	QMdiSubWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiSubWindow *) RING_API_GETCPOINTER(1,"QMdiSubWindow");
	RING_API_RETCPOINTER(pObject->mdiArea(),"QMdiArea");
}


RING_FUNC(ring_QMdiSubWindow_setKeyboardPageStep)
{
	QMdiSubWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiSubWindow *) RING_API_GETCPOINTER(1,"QMdiSubWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setKeyboardPageStep( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMdiSubWindow_setKeyboardSingleStep)
{
	QMdiSubWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiSubWindow *) RING_API_GETCPOINTER(1,"QMdiSubWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setKeyboardSingleStep( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QMdiSubWindow_setOption)
{
	QMdiSubWindow *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiSubWindow *) RING_API_GETCPOINTER(1,"QMdiSubWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOption( (QMdiSubWindow::SubWindowOption )  (int) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QMdiSubWindow_setSystemMenu)
{
	QMdiSubWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiSubWindow *) RING_API_GETCPOINTER(1,"QMdiSubWindow");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSystemMenu((QMenu *) RING_API_GETCPOINTER(2,"QMenu"));
}


RING_FUNC(ring_QMdiSubWindow_setWidget)
{
	QMdiSubWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiSubWindow *) RING_API_GETCPOINTER(1,"QMdiSubWindow");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QMdiSubWindow_systemMenu)
{
	QMdiSubWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiSubWindow *) RING_API_GETCPOINTER(1,"QMdiSubWindow");
	RING_API_RETCPOINTER(pObject->systemMenu(),"QMenu");
}


RING_FUNC(ring_QMdiSubWindow_testOption)
{
	QMdiSubWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiSubWindow *) RING_API_GETCPOINTER(1,"QMdiSubWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->testOption( (QMdiSubWindow::SubWindowOption )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QMdiSubWindow_widget)
{
	QMdiSubWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiSubWindow *) RING_API_GETCPOINTER(1,"QMdiSubWindow");
	RING_API_RETCPOINTER(pObject->widget(),"QWidget");
}


RING_FUNC(ring_QMdiSubWindow_showShaded)
{
	QMdiSubWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiSubWindow *) RING_API_GETCPOINTER(1,"QMdiSubWindow");
	pObject->showShaded();
}


RING_FUNC(ring_QMdiSubWindow_showSystemMenu)
{
	QMdiSubWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMdiSubWindow *) RING_API_GETCPOINTER(1,"QMdiSubWindow");
	pObject->showSystemMenu();
}


RING_FUNC(ring_QCursor_bitmap)
{
	QCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCursor *) RING_API_GETCPOINTER(1,"QCursor");
	RING_API_RETCPOINTER(pObject->bitmap(),"QBitmap");
}


RING_FUNC(ring_QCursor_hotSpot)
{
	QCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCursor *) RING_API_GETCPOINTER(1,"QCursor");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->hotSpot();
		RING_API_RETCPOINTER(pValue,"QPoint");
	}
}


RING_FUNC(ring_QCursor_mask)
{
	QCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCursor *) RING_API_GETCPOINTER(1,"QCursor");
	RING_API_RETCPOINTER(pObject->mask(),"QBitmap");
}


RING_FUNC(ring_QCursor_pixmap)
{
	QCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCursor *) RING_API_GETCPOINTER(1,"QCursor");
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->pixmap();
		RING_API_RETCPOINTER(pValue,"QPixmap");
	}
}


RING_FUNC(ring_QCursor_setShape)
{
	QCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCursor *) RING_API_GETCPOINTER(1,"QCursor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setShape( (Qt::CursorShape )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCursor_shape)
{
	QCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCursor *) RING_API_GETCPOINTER(1,"QCursor");
	RING_API_RETNUMBER(pObject->shape());
}


RING_FUNC(ring_QCursor_pos)
{
	QCursor *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCursor *) RING_API_GETCPOINTER(1,"QCursor");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->pos();
		RING_API_RETCPOINTER(pValue,"QPoint");
	}
}


RING_FUNC(ring_QCursor_pos_2)
{
	QCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCursor *) RING_API_GETCPOINTER(1,"QCursor");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->pos((QScreen *) RING_API_GETCPOINTER(2,"QScreen"));
		RING_API_RETCPOINTER(pValue,"QPoint");
	}
}


RING_FUNC(ring_QCursor_setPos)
{
	QCursor *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCursor *) RING_API_GETCPOINTER(1,"QCursor");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPos( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QCursor_setPos_2)
{
	QCursor *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCursor *) RING_API_GETCPOINTER(1,"QCursor");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPos((QScreen *) RING_API_GETCPOINTER(2,"QScreen"), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4));
}


RING_FUNC(ring_QCursor_setPos_3)
{
	QCursor *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCursor *) RING_API_GETCPOINTER(1,"QCursor");
	pObject->setPos(* (QPoint *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
}


RING_FUNC(ring_QCursor_setPos_4)
{
	QCursor *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCursor *) RING_API_GETCPOINTER(1,"QCursor");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPos((QScreen *) RING_API_GETCPOINTER(2,"QScreen"),* (QPoint *) RING_API_GETCPOINTER(3,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QPoint"));
}


RING_FUNC(ring_QListView_batchSize)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	RING_API_RETNUMBER(pObject->batchSize());
}


RING_FUNC(ring_QListView_clearPropertyFlags)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	pObject->clearPropertyFlags();
}


RING_FUNC(ring_QListView_flow)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	RING_API_RETNUMBER(pObject->flow());
}


RING_FUNC(ring_QListView_gridSize)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	{
		QSize  *pValue ; 
		pValue = (QSize  *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QSize )) ;
		*pValue = pObject->gridSize();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QListView_isRowHidden)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isRowHidden( (int ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QListView_isSelectionRectVisible)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	RING_API_RETNUMBER(pObject->isSelectionRectVisible());
}


RING_FUNC(ring_QListView_isWrapping)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	RING_API_RETNUMBER(pObject->isWrapping());
}


RING_FUNC(ring_QListView_layoutMode)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	RING_API_RETNUMBER(pObject->layoutMode());
}


RING_FUNC(ring_QListView_modelColumn)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	RING_API_RETNUMBER(pObject->modelColumn());
}


RING_FUNC(ring_QListView_movement)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	RING_API_RETNUMBER(pObject->movement());
}


RING_FUNC(ring_QListView_resizeMode)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	RING_API_RETNUMBER(pObject->resizeMode());
}


RING_FUNC(ring_QListView_setBatchSize)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setBatchSize( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListView_setFlow)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFlow( (QListView::Flow )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListView_setGridSize)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	pObject->setGridSize(* (QSize    *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QSize"));
}


RING_FUNC(ring_QListView_setLayoutMode)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLayoutMode( (QListView::LayoutMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListView_setModelColumn)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setModelColumn( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListView_setMovement)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMovement( (QListView::Movement )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListView_setResizeMode)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setResizeMode( (QListView::ResizeMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListView_setRowHidden)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRowHidden( (int ) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QListView_setSelectionRectVisible)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSelectionRectVisible( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListView_setSpacing)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSpacing( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListView_setUniformItemSizes)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setUniformItemSizes( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListView_setViewMode)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setViewMode( (QListView::ViewMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListView_setWordWrap)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWordWrap( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListView_setWrapping)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWrapping( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QListView_spacing)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	RING_API_RETNUMBER(pObject->spacing());
}


RING_FUNC(ring_QListView_uniformItemSizes)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	RING_API_RETNUMBER(pObject->uniformItemSizes());
}


RING_FUNC(ring_QListView_viewMode)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	RING_API_RETNUMBER(pObject->viewMode());
}


RING_FUNC(ring_QListView_wordWrap)
{
	QListView *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
	RING_API_RETNUMBER(pObject->wordWrap());
}


RING_FUNC(ring_QAxBase_asVariant)
{
	QAxBase *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAxBase *) RING_API_GETCPOINTER(1,"QAxBase");
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->asVariant();
		RING_API_RETCPOINTER(pValue,"QVariant");
	}
}


RING_FUNC(ring_QAxBase_control)
{
	QAxBase *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAxBase *) RING_API_GETCPOINTER(1,"QAxBase");
	RING_API_RETSTRING(pObject->control().toStdString().c_str());
}


RING_FUNC(ring_QAxBase_disableClassInfo)
{
	QAxBase *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAxBase *) RING_API_GETCPOINTER(1,"QAxBase");
	pObject->disableClassInfo();
}


RING_FUNC(ring_QAxBase_disableEventSink)
{
	QAxBase *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAxBase *) RING_API_GETCPOINTER(1,"QAxBase");
	pObject->disableEventSink();
}


RING_FUNC(ring_QAxBase_disableMetaObject)
{
	QAxBase *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAxBase *) RING_API_GETCPOINTER(1,"QAxBase");
	pObject->disableMetaObject();
}


RING_FUNC(ring_QAxBase_dynamicCall)
{
	QAxBase *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAxBase *) RING_API_GETCPOINTER(1,"QAxBase");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->dynamicCall(RING_API_GETSTRING(2));
		RING_API_RETCPOINTER(pValue,"QVariant");
	}
}


RING_FUNC(ring_QAxBase_dynamicCall_2)
{
	QAxBase *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAxBase *) RING_API_GETCPOINTER(1,"QAxBase");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->dynamicCall(RING_API_GETSTRING(2),RING_API_GETSTRING(3));
		RING_API_RETCPOINTER(pValue,"QVariant");
	}
}


RING_FUNC(ring_QAxBase_generateDocumentation)
{
	QAxBase *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAxBase *) RING_API_GETCPOINTER(1,"QAxBase");
	RING_API_RETSTRING(pObject->generateDocumentation().toStdString().c_str());
}


RING_FUNC(ring_QAxBase_isNull)
{
	QAxBase *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAxBase *) RING_API_GETCPOINTER(1,"QAxBase");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QAxBase_querySubObject)
{
	QAxBase *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAxBase *) RING_API_GETCPOINTER(1,"QAxBase");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->querySubObject(RING_API_GETSTRING(2)),"QAxObject");
}


RING_FUNC(ring_QAxBase_setControl)
{
	QAxBase *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAxBase *) RING_API_GETCPOINTER(1,"QAxBase");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setControl(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QAxBase_verbs)
{
	QAxBase *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QAxBase *) RING_API_GETCPOINTER(1,"QAxBase");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->verbs();
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QUuid_toString)
{
	QUuid *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QUuid *) RING_API_GETCPOINTER(1,"QUuid");
	RING_API_RETSTRING(pObject->toString().toStdString().c_str());
}


RING_FUNC(ring_QToolButton_arrowType)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	{
		Qt::ArrowType *pValue ; 
		pValue = (Qt::ArrowType *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(Qt::ArrowType)) ;
		*pValue = pObject->arrowType();
		RING_API_RETCPOINTER(pValue,"Qt::ArrowType");
	}
}


RING_FUNC(ring_QToolButton_autoRaise)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	RING_API_RETNUMBER(pObject->autoRaise());
}


RING_FUNC(ring_QToolButton_defaultAction)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	RING_API_RETCPOINTER(pObject->defaultAction(),"QAction");
}


RING_FUNC(ring_QToolButton_menu)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	RING_API_RETCPOINTER(pObject->menu(),"QMenu");
}


RING_FUNC(ring_QToolButton_popupMode)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	RING_API_RETNUMBER(pObject->popupMode());
}


RING_FUNC(ring_QToolButton_setArrowType)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	pObject->setArrowType(* (Qt::ArrowType  *) RING_API_GETCPOINTER(2,"Qt::ArrowType"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"Qt::ArrowType"));
}


RING_FUNC(ring_QToolButton_setAutoRaise)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAutoRaise( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QToolButton_setMenu)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMenu((QMenu *) RING_API_GETCPOINTER(2,"QMenu"));
}


RING_FUNC(ring_QToolButton_setPopupMode)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPopupMode( (QToolButton::ToolButtonPopupMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QToolButton_toolButtonStyle)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	RING_API_RETNUMBER(pObject->toolButtonStyle());
}


RING_FUNC(ring_QToolButton_setDefaultAction)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDefaultAction((QAction *) RING_API_GETCPOINTER(2,"QAction"));
}


RING_FUNC(ring_QToolButton_setToolButtonStyle)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setToolButtonStyle( (Qt::ToolButtonStyle )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QToolButton_showMenu)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	pObject->showMenu();
}


RING_FUNC(ring_QToolButton_settriggeredEvent)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->settriggeredEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QToolButton_gettriggeredEvent)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	RING_API_RETSTRING(pObject->gettriggeredEvent());
}


RING_FUNC(ring_QToolButton_setClickEvent)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setClickEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QToolButton_getClickEvent)
{
	GToolButton *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GToolButton *) RING_API_GETCPOINTER(1,"QToolButton");
	RING_API_RETSTRING(pObject->getClickEvent());
}


RING_FUNC(ring_QSerialPort_baudRate)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		qint32 *pValue ; 
		pValue = (qint32 *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(qint32)) ;
		*pValue = pObject->baudRate( (QSerialPort::Directions )  (int) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"qint32");
	}
}


RING_FUNC(ring_QSerialPort_clear)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->clear( (QSerialPort::Directions )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QSerialPort_clearError)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	pObject->clearError();
}


RING_FUNC(ring_QSerialPort_dataBits)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	RING_API_RETNUMBER(pObject->dataBits());
}


RING_FUNC(ring_QSerialPort_error)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	RING_API_RETNUMBER(pObject->error());
}


RING_FUNC(ring_QSerialPort_flowControl)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	RING_API_RETNUMBER(pObject->flowControl());
}


RING_FUNC(ring_QSerialPort_flush)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	RING_API_RETNUMBER(pObject->flush());
}


RING_FUNC(ring_QSerialPort_handle)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	RING_API_RETCPOINTER(pObject->handle(),"void");
}


RING_FUNC(ring_QSerialPort_isDataTerminalReady)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	RING_API_RETNUMBER(pObject->isDataTerminalReady());
}


RING_FUNC(ring_QSerialPort_isRequestToSend)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	RING_API_RETNUMBER(pObject->isRequestToSend());
}


RING_FUNC(ring_QSerialPort_parity)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	RING_API_RETNUMBER(pObject->parity());
}


RING_FUNC(ring_QSerialPort_pinoutSignals)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	RING_API_RETNUMBER(pObject->pinoutSignals());
}


RING_FUNC(ring_QSerialPort_portName)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	RING_API_RETSTRING(pObject->portName().toStdString().c_str());
}


RING_FUNC(ring_QSerialPort_readBufferSize)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	RING_API_RETNUMBER(pObject->readBufferSize());
}


RING_FUNC(ring_QSerialPort_setBaudRate)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setBaudRate(* (qint32  *) RING_API_GETCPOINTER(2,"qint32"), (QSerialPort::Directions )  (int) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"qint32"));
}


RING_FUNC(ring_QSerialPort_setBreakEnabled)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setBreakEnabled( (bool ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QSerialPort_setDataBits)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setDataBits( (QSerialPort::DataBits )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QSerialPort_setDataTerminalReady)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setDataTerminalReady( (bool ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QSerialPort_setFlowControl)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setFlowControl( (QSerialPort::FlowControl )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QSerialPort_setParity)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setParity( (QSerialPort::Parity )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QSerialPort_setPort)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	pObject->setPort(* (QSerialPortInfo  *) RING_API_GETCPOINTER(2,"QSerialPortInfo"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QSerialPortInfo"));
}


RING_FUNC(ring_QSerialPort_setPortName)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPortName(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSerialPort_setReadBufferSize)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setReadBufferSize( (qint64 ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QSerialPort_setRequestToSend)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setRequestToSend( (bool ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QSerialPort_setStopBits)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setStopBits( (QSerialPort::StopBits )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QSerialPort_stopBits)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	RING_API_RETNUMBER(pObject->stopBits());
}


RING_FUNC(ring_QSerialPort_setbaudRateChangedEvent)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setbaudRateChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSerialPort_setbreakEnabledChangedEvent)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setbreakEnabledChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSerialPort_setdataBitsChangedEvent)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setdataBitsChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSerialPort_setdataTerminalReadyChangedEvent)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setdataTerminalReadyChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSerialPort_seterrorEvent)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->seterrorEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSerialPort_setflowControlChangedEvent)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setflowControlChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSerialPort_setparityChangedEvent)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setparityChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSerialPort_setrequestToSendChangedEvent)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setrequestToSendChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSerialPort_setstopBitsChangedEvent)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setstopBitsChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QSerialPort_getbaudRateChangedEvent)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	RING_API_RETSTRING(pObject->getbaudRateChangedEvent());
}


RING_FUNC(ring_QSerialPort_getbreakEnabledChangedEvent)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	RING_API_RETSTRING(pObject->getbreakEnabledChangedEvent());
}


RING_FUNC(ring_QSerialPort_getdataBitsChangedEvent)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	RING_API_RETSTRING(pObject->getdataBitsChangedEvent());
}


RING_FUNC(ring_QSerialPort_getdataTerminalReadyChangedEvent)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	RING_API_RETSTRING(pObject->getdataTerminalReadyChangedEvent());
}


RING_FUNC(ring_QSerialPort_geterrorEvent)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	RING_API_RETSTRING(pObject->geterrorEvent());
}


RING_FUNC(ring_QSerialPort_getflowControlChangedEvent)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	RING_API_RETSTRING(pObject->getflowControlChangedEvent());
}


RING_FUNC(ring_QSerialPort_getparityChangedEvent)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	RING_API_RETSTRING(pObject->getparityChangedEvent());
}


RING_FUNC(ring_QSerialPort_getrequestToSendChangedEvent)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	RING_API_RETSTRING(pObject->getrequestToSendChangedEvent());
}


RING_FUNC(ring_QSerialPort_getstopBitsChangedEvent)
{
	GSerialPort *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"QSerialPort");
	RING_API_RETSTRING(pObject->getstopBitsChangedEvent());
}


RING_FUNC(ring_QSerialPortInfo_description)
{
	QSerialPortInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSerialPortInfo *) RING_API_GETCPOINTER(1,"QSerialPortInfo");
	RING_API_RETSTRING(pObject->description().toStdString().c_str());
}


RING_FUNC(ring_QSerialPortInfo_hasProductIdentifier)
{
	QSerialPortInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSerialPortInfo *) RING_API_GETCPOINTER(1,"QSerialPortInfo");
	RING_API_RETNUMBER(pObject->hasProductIdentifier());
}


RING_FUNC(ring_QSerialPortInfo_hasVendorIdentifier)
{
	QSerialPortInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSerialPortInfo *) RING_API_GETCPOINTER(1,"QSerialPortInfo");
	RING_API_RETNUMBER(pObject->hasVendorIdentifier());
}


RING_FUNC(ring_QSerialPortInfo_isBusy)
{
	QSerialPortInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSerialPortInfo *) RING_API_GETCPOINTER(1,"QSerialPortInfo");
	RING_API_RETNUMBER(pObject->isBusy());
}


RING_FUNC(ring_QSerialPortInfo_isNull)
{
	QSerialPortInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSerialPortInfo *) RING_API_GETCPOINTER(1,"QSerialPortInfo");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QSerialPortInfo_manufacturer)
{
	QSerialPortInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSerialPortInfo *) RING_API_GETCPOINTER(1,"QSerialPortInfo");
	RING_API_RETSTRING(pObject->manufacturer().toStdString().c_str());
}


RING_FUNC(ring_QSerialPortInfo_portName)
{
	QSerialPortInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSerialPortInfo *) RING_API_GETCPOINTER(1,"QSerialPortInfo");
	RING_API_RETSTRING(pObject->portName().toStdString().c_str());
}


RING_FUNC(ring_QSerialPortInfo_productIdentifier)
{
	QSerialPortInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSerialPortInfo *) RING_API_GETCPOINTER(1,"QSerialPortInfo");
	{
		quint16 *pValue ; 
		pValue = (quint16 *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(quint16)) ;
		*pValue = pObject->productIdentifier();
		RING_API_RETCPOINTER(pValue,"quint16");
	}
}


RING_FUNC(ring_QSerialPortInfo_swap)
{
	QSerialPortInfo *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSerialPortInfo *) RING_API_GETCPOINTER(1,"QSerialPortInfo");
	pObject->swap(* (QSerialPortInfo  *) RING_API_GETCPOINTER(2,"QSerialPortInfo"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QSerialPortInfo"));
}


RING_FUNC(ring_QSerialPortInfo_systemLocation)
{
	QSerialPortInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSerialPortInfo *) RING_API_GETCPOINTER(1,"QSerialPortInfo");
	RING_API_RETSTRING(pObject->systemLocation().toStdString().c_str());
}


RING_FUNC(ring_QSerialPortInfo_vendorIdentifier)
{
	QSerialPortInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QSerialPortInfo *) RING_API_GETCPOINTER(1,"QSerialPortInfo");
	{
		quint16 *pValue ; 
		pValue = (quint16 *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(quint16)) ;
		*pValue = pObject->vendorIdentifier();
		RING_API_RETCPOINTER(pValue,"quint16");
	}
}


RING_FUNC(ring_QStringRef_appendTo)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QStringRef *pValue ; 
		pValue = new QStringRef() ;
		*pValue = pObject->appendTo((QString *) RING_API_GETCPOINTER(2,"QString"));
		RING_API_RETCPOINTER(pValue,"QStringRef");
	}
}


RING_FUNC(ring_QStringRef_at)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QChar *pValue ; 
		pValue = (QChar *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QChar)) ;
		*pValue = pObject->at( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QChar");
	}
}


RING_FUNC(ring_QStringRef_clear)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	pObject->clear();
}


RING_FUNC(ring_QStringRef_compare)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->compare(RING_API_GETSTRING(2), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QStringRef_compare_2)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->compare(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef"), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QStringRef"));
}


RING_FUNC(ring_QStringRef_compare_3)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->compare(* (QLatin1String  *) RING_API_GETCPOINTER(2,"QLatin1String"), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QLatin1String"));
}


RING_FUNC(ring_QStringRef_constData)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	RING_API_RETCPOINTER(pObject->constData(),"QChar");
}


RING_FUNC(ring_QStringRef_contains)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->contains(RING_API_GETSTRING(2), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QStringRef_contains_2)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->contains(* (QChar  *) RING_API_GETCPOINTER(2,"QChar"), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QChar"));
}


RING_FUNC(ring_QStringRef_contains_3)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->contains(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef"), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QStringRef"));
}


RING_FUNC(ring_QStringRef_contains_4)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->contains(* (QLatin1String  *) RING_API_GETCPOINTER(2,"QLatin1String"), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QLatin1String"));
}


RING_FUNC(ring_QStringRef_count)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	RING_API_RETNUMBER(pObject->count());
}


RING_FUNC(ring_QStringRef_count_2)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->count(RING_API_GETSTRING(2), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QStringRef_count_3)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->count(* (QChar  *) RING_API_GETCPOINTER(2,"QChar"), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QChar"));
}


RING_FUNC(ring_QStringRef_count_4)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->count(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef"), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QStringRef"));
}


RING_FUNC(ring_QStringRef_data)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	RING_API_RETCPOINTER(pObject->data(),"QChar");
}


RING_FUNC(ring_QStringRef_endsWith)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->endsWith(RING_API_GETSTRING(2), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QStringRef_endsWith_2)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->endsWith(* (QChar  *) RING_API_GETCPOINTER(2,"QChar"), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QChar"));
}


RING_FUNC(ring_QStringRef_endsWith_3)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->endsWith(* (QLatin1String  *) RING_API_GETCPOINTER(2,"QLatin1String"), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QLatin1String"));
}


RING_FUNC(ring_QStringRef_endsWith_4)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->endsWith(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef"), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QStringRef"));
}


RING_FUNC(ring_QStringRef_indexOf)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->indexOf(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(4)));
}


RING_FUNC(ring_QStringRef_indexOf_2)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->indexOf(* (QLatin1String  *) RING_API_GETCPOINTER(2,"QLatin1String"), (int ) RING_API_GETNUMBER(3), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(4)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QLatin1String"));
}


RING_FUNC(ring_QStringRef_indexOf_3)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->indexOf(* (QChar  *) RING_API_GETCPOINTER(2,"QChar"), (int ) RING_API_GETNUMBER(3), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(4)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QChar"));
}


RING_FUNC(ring_QStringRef_indexOf_4)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->indexOf(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef"), (int ) RING_API_GETNUMBER(3), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(4)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QStringRef"));
}


RING_FUNC(ring_QStringRef_isEmpty)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	RING_API_RETNUMBER(pObject->isEmpty());
}


RING_FUNC(ring_QStringRef_isNull)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QStringRef_lastIndexOf)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->lastIndexOf(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(4)));
}


RING_FUNC(ring_QStringRef_lastIndexOf_2)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->lastIndexOf(* (QChar  *) RING_API_GETCPOINTER(2,"QChar"), (int ) RING_API_GETNUMBER(3), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(4)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QChar"));
}


RING_FUNC(ring_QStringRef_lastIndexOf_3)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->lastIndexOf(* (QLatin1String  *) RING_API_GETCPOINTER(2,"QLatin1String"), (int ) RING_API_GETNUMBER(3), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(4)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QLatin1String"));
}


RING_FUNC(ring_QStringRef_lastIndexOf_4)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->lastIndexOf(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef"), (int ) RING_API_GETNUMBER(3), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(4)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QStringRef"));
}


RING_FUNC(ring_QStringRef_length)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	RING_API_RETNUMBER(pObject->length());
}


RING_FUNC(ring_QStringRef_localeAwareCompare)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->localeAwareCompare(RING_API_GETSTRING(2)));
}


RING_FUNC(ring_QStringRef_localeAwareCompare_2)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	RING_API_RETNUMBER(pObject->localeAwareCompare(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QStringRef"));
}


RING_FUNC(ring_QStringRef_position)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	RING_API_RETNUMBER(pObject->position());
}


RING_FUNC(ring_QStringRef_size)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	RING_API_RETNUMBER(pObject->size());
}


RING_FUNC(ring_QStringRef_startsWith)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->startsWith(RING_API_GETSTRING(2), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QStringRef_startsWith_2)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->startsWith(* (QLatin1String  *) RING_API_GETCPOINTER(2,"QLatin1String"), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QLatin1String"));
}


RING_FUNC(ring_QStringRef_startsWith_3)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->startsWith(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef"), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QStringRef"));
}


RING_FUNC(ring_QStringRef_startsWith_4)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->startsWith(* (QChar  *) RING_API_GETCPOINTER(2,"QChar"), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QChar"));
}


RING_FUNC(ring_QStringRef_string)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	RING_API_RETCPOINTER(pObject->string(),"QString");
}


RING_FUNC(ring_QStringRef_toLatin1)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->toLatin1();
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QStringRef_toLocal8Bit)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->toLocal8Bit();
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QStringRef_toString)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	RING_API_RETSTRING(pObject->toString().toStdString().c_str());
}


RING_FUNC(ring_QStringRef_toUcs4)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	{
		QVector<uint> *pValue ; 
		pValue = (QVector<uint> *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QVector<uint>)) ;
		*pValue = pObject->toUcs4();
		RING_API_RETCPOINTER(pValue,"QVector<uint>");
	}
}


RING_FUNC(ring_QStringRef_toUtf8)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->toUtf8();
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QStringRef_unicode)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	RING_API_RETCPOINTER(pObject->unicode(),"QChar");
}


RING_FUNC(ring_QStringRef_compare_4)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->compare(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef"),RING_API_GETSTRING(3), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(4)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QStringRef"));
}


RING_FUNC(ring_QStringRef_compare_5)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->compare(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef"),* (QStringRef  *) RING_API_GETCPOINTER(3,"QStringRef"), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(4)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QStringRef"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QStringRef"));
}


RING_FUNC(ring_QStringRef_compare_6)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->compare(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef"),* (QLatin1String  *) RING_API_GETCPOINTER(3,"QLatin1String"), (Qt::CaseSensitivity )  (int) RING_API_GETNUMBER(4)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QStringRef"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QLatin1String"));
}


RING_FUNC(ring_QStringRef_localeAwareCompare_3)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->localeAwareCompare(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef"),RING_API_GETSTRING(3)));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QStringRef"));
}


RING_FUNC(ring_QStringRef_localeAwareCompare_4)
{
	QStringRef *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
	RING_API_RETNUMBER(pObject->localeAwareCompare(* (QStringRef  *) RING_API_GETCPOINTER(2,"QStringRef"),* (QStringRef  *) RING_API_GETCPOINTER(3,"QStringRef")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QStringRef"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QStringRef"));
}


RING_FUNC(ring_QMutex_isRecursive)
{
	QMutex *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMutex *) RING_API_GETCPOINTER(1,"QMutex");
	RING_API_RETNUMBER(pObject->isRecursive());
}


RING_FUNC(ring_QMutex_lock)
{
	QMutex *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMutex *) RING_API_GETCPOINTER(1,"QMutex");
	pObject->lock();
}


RING_FUNC(ring_QMutex_unlock)
{
	QMutex *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMutex *) RING_API_GETCPOINTER(1,"QMutex");
	pObject->unlock();
}


RING_FUNC(ring_QMutexLocker_mutex)
{
	QMutexLocker *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMutexLocker *) RING_API_GETCPOINTER(1,"QMutexLocker");
	RING_API_RETCPOINTER(pObject->mutex(),"QMutex");
}


RING_FUNC(ring_QMutexLocker_relock)
{
	QMutexLocker *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMutexLocker *) RING_API_GETCPOINTER(1,"QMutexLocker");
	pObject->relock();
}


RING_FUNC(ring_QMutexLocker_unlock)
{
	QMutexLocker *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QMutexLocker *) RING_API_GETCPOINTER(1,"QMutexLocker");
	pObject->unlock();
}


RING_FUNC(ring_QBuffer_buffer)
{
	QBuffer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBuffer *) RING_API_GETCPOINTER(1,"QBuffer");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->buffer();
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QBuffer_data)
{
	QBuffer *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBuffer *) RING_API_GETCPOINTER(1,"QBuffer");
	{
		QByteArray *pValue ; 
		pValue = new QByteArray() ;
		*pValue = pObject->data();
		RING_API_RETCPOINTER(pValue,"QByteArray");
	}
}


RING_FUNC(ring_QBuffer_setBuffer)
{
	QBuffer *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBuffer *) RING_API_GETCPOINTER(1,"QBuffer");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setBuffer((QByteArray *) RING_API_GETCPOINTER(2,"QByteArray"));
}


RING_FUNC(ring_QBuffer_setData)
{
	QBuffer *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBuffer *) RING_API_GETCPOINTER(1,"QBuffer");
	pObject->setData(* (QByteArray  *) RING_API_GETCPOINTER(2,"QByteArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QByteArray"));
}


RING_FUNC(ring_QBuffer_setData_2)
{
	QBuffer *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBuffer *) RING_API_GETCPOINTER(1,"QBuffer");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setData(RING_API_GETSTRING(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QBluetoothAddress_clear)
{
	QBluetoothAddress *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBluetoothAddress *) RING_API_GETCPOINTER(1,"QBluetoothAddress");
	pObject->clear();
}


RING_FUNC(ring_QBluetoothAddress_isNull)
{
	QBluetoothAddress *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBluetoothAddress *) RING_API_GETCPOINTER(1,"QBluetoothAddress");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QBluetoothAddress_toString)
{
	QBluetoothAddress *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBluetoothAddress *) RING_API_GETCPOINTER(1,"QBluetoothAddress");
	RING_API_RETSTRING(pObject->toString().toStdString().c_str());
}


RING_FUNC(ring_QBluetoothAddress_toUInt64)
{
	QBluetoothAddress *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBluetoothAddress *) RING_API_GETCPOINTER(1,"QBluetoothAddress");
	{
		quint64 *pValue ; 
		pValue = (quint64 *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(quint64)) ;
		*pValue = pObject->toUInt64();
		RING_API_RETCPOINTER(pValue,"quint64");
	}
}


RING_FUNC(ring_QBluetoothDeviceDiscoveryAgent_discoveredDevices)
{
	GBluetoothDeviceDiscoveryAgent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GBluetoothDeviceDiscoveryAgent *) RING_API_GETCPOINTER(1,"QBluetoothDeviceDiscoveryAgent");
	{
		QList<QBluetoothDeviceInfo> *pValue ; 
		pValue = (QList<QBluetoothDeviceInfo> *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QList<QBluetoothDeviceInfo>)) ;
		*pValue = pObject->discoveredDevices();
		RING_API_RETCPOINTER(pValue,"QList<QBluetoothDeviceInfo>");
	}
}


RING_FUNC(ring_QBluetoothDeviceDiscoveryAgent_error)
{
	GBluetoothDeviceDiscoveryAgent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GBluetoothDeviceDiscoveryAgent *) RING_API_GETCPOINTER(1,"QBluetoothDeviceDiscoveryAgent");
	RING_API_RETNUMBER(pObject->error());
}


RING_FUNC(ring_QBluetoothDeviceDiscoveryAgent_errorString)
{
	GBluetoothDeviceDiscoveryAgent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GBluetoothDeviceDiscoveryAgent *) RING_API_GETCPOINTER(1,"QBluetoothDeviceDiscoveryAgent");
	RING_API_RETSTRING(pObject->errorString().toStdString().c_str());
}


RING_FUNC(ring_QBluetoothDeviceDiscoveryAgent_inquiryType)
{
	GBluetoothDeviceDiscoveryAgent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GBluetoothDeviceDiscoveryAgent *) RING_API_GETCPOINTER(1,"QBluetoothDeviceDiscoveryAgent");
	RING_API_RETNUMBER(pObject->inquiryType());
}


RING_FUNC(ring_QBluetoothDeviceDiscoveryAgent_isActive)
{
	GBluetoothDeviceDiscoveryAgent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GBluetoothDeviceDiscoveryAgent *) RING_API_GETCPOINTER(1,"QBluetoothDeviceDiscoveryAgent");
	RING_API_RETNUMBER(pObject->isActive());
}


RING_FUNC(ring_QBluetoothDeviceDiscoveryAgent_setInquiryType)
{
	GBluetoothDeviceDiscoveryAgent *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GBluetoothDeviceDiscoveryAgent *) RING_API_GETCPOINTER(1,"QBluetoothDeviceDiscoveryAgent");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setInquiryType( (QBluetoothDeviceDiscoveryAgent::InquiryType )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QBluetoothDeviceDiscoveryAgent_start)
{
	GBluetoothDeviceDiscoveryAgent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GBluetoothDeviceDiscoveryAgent *) RING_API_GETCPOINTER(1,"QBluetoothDeviceDiscoveryAgent");
	pObject->start();
}


RING_FUNC(ring_QBluetoothDeviceDiscoveryAgent_stop)
{
	GBluetoothDeviceDiscoveryAgent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GBluetoothDeviceDiscoveryAgent *) RING_API_GETCPOINTER(1,"QBluetoothDeviceDiscoveryAgent");
	pObject->stop();
}


RING_FUNC(ring_QBluetoothDeviceDiscoveryAgent_setcanceledEvent)
{
	GBluetoothDeviceDiscoveryAgent *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GBluetoothDeviceDiscoveryAgent *) RING_API_GETCPOINTER(1,"QBluetoothDeviceDiscoveryAgent");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcanceledEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QBluetoothDeviceDiscoveryAgent_setdeviceDiscoveredEvent)
{
	GBluetoothDeviceDiscoveryAgent *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GBluetoothDeviceDiscoveryAgent *) RING_API_GETCPOINTER(1,"QBluetoothDeviceDiscoveryAgent");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setdeviceDiscoveredEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QBluetoothDeviceDiscoveryAgent_seterrorEvent)
{
	GBluetoothDeviceDiscoveryAgent *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GBluetoothDeviceDiscoveryAgent *) RING_API_GETCPOINTER(1,"QBluetoothDeviceDiscoveryAgent");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->seterrorEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QBluetoothDeviceDiscoveryAgent_setfinishedEvent)
{
	GBluetoothDeviceDiscoveryAgent *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GBluetoothDeviceDiscoveryAgent *) RING_API_GETCPOINTER(1,"QBluetoothDeviceDiscoveryAgent");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setfinishedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QBluetoothDeviceDiscoveryAgent_getcanceledEvent)
{
	GBluetoothDeviceDiscoveryAgent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GBluetoothDeviceDiscoveryAgent *) RING_API_GETCPOINTER(1,"QBluetoothDeviceDiscoveryAgent");
	RING_API_RETSTRING(pObject->getcanceledEvent());
}


RING_FUNC(ring_QBluetoothDeviceDiscoveryAgent_getdeviceDiscoveredEvent)
{
	GBluetoothDeviceDiscoveryAgent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GBluetoothDeviceDiscoveryAgent *) RING_API_GETCPOINTER(1,"QBluetoothDeviceDiscoveryAgent");
	RING_API_RETSTRING(pObject->getdeviceDiscoveredEvent());
}


RING_FUNC(ring_QBluetoothDeviceDiscoveryAgent_geterrorEvent)
{
	GBluetoothDeviceDiscoveryAgent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GBluetoothDeviceDiscoveryAgent *) RING_API_GETCPOINTER(1,"QBluetoothDeviceDiscoveryAgent");
	RING_API_RETSTRING(pObject->geterrorEvent());
}


RING_FUNC(ring_QBluetoothDeviceDiscoveryAgent_getfinishedEvent)
{
	GBluetoothDeviceDiscoveryAgent *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GBluetoothDeviceDiscoveryAgent *) RING_API_GETCPOINTER(1,"QBluetoothDeviceDiscoveryAgent");
	RING_API_RETSTRING(pObject->getfinishedEvent());
}


RING_FUNC(ring_QBluetoothDeviceInfo_address)
{
	QBluetoothDeviceInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBluetoothDeviceInfo *) RING_API_GETCPOINTER(1,"QBluetoothDeviceInfo");
	{
		QBluetoothAddress *pValue ; 
		pValue = new QBluetoothAddress() ;
		*pValue = pObject->address();
		RING_API_RETCPOINTER(pValue,"QBluetoothAddress");
	}
}


RING_FUNC(ring_QBluetoothDeviceInfo_isCached)
{
	QBluetoothDeviceInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBluetoothDeviceInfo *) RING_API_GETCPOINTER(1,"QBluetoothDeviceInfo");
	RING_API_RETNUMBER(pObject->isCached());
}


RING_FUNC(ring_QBluetoothDeviceInfo_isValid)
{
	QBluetoothDeviceInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBluetoothDeviceInfo *) RING_API_GETCPOINTER(1,"QBluetoothDeviceInfo");
	RING_API_RETNUMBER(pObject->isValid());
}


RING_FUNC(ring_QBluetoothDeviceInfo_majorDeviceClass)
{
	QBluetoothDeviceInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBluetoothDeviceInfo *) RING_API_GETCPOINTER(1,"QBluetoothDeviceInfo");
	RING_API_RETNUMBER(pObject->majorDeviceClass());
}


RING_FUNC(ring_QBluetoothDeviceInfo_minorDeviceClass)
{
	QBluetoothDeviceInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBluetoothDeviceInfo *) RING_API_GETCPOINTER(1,"QBluetoothDeviceInfo");
	{
		quint8 *pValue ; 
		pValue = (quint8 *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(quint8)) ;
		*pValue = pObject->minorDeviceClass();
		RING_API_RETCPOINTER(pValue,"quint8");
	}
}


RING_FUNC(ring_QBluetoothDeviceInfo_name)
{
	QBluetoothDeviceInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBluetoothDeviceInfo *) RING_API_GETCPOINTER(1,"QBluetoothDeviceInfo");
	RING_API_RETSTRING(pObject->name().toStdString().c_str());
}


RING_FUNC(ring_QBluetoothDeviceInfo_rssi)
{
	QBluetoothDeviceInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBluetoothDeviceInfo *) RING_API_GETCPOINTER(1,"QBluetoothDeviceInfo");
	{
		qint16 *pValue ; 
		pValue = (qint16 *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(qint16)) ;
		*pValue = pObject->rssi();
		RING_API_RETCPOINTER(pValue,"qint16");
	}
}


RING_FUNC(ring_QBluetoothDeviceInfo_serviceClasses)
{
	QBluetoothDeviceInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBluetoothDeviceInfo *) RING_API_GETCPOINTER(1,"QBluetoothDeviceInfo");
	RING_API_RETNUMBER(pObject->serviceClasses());
}


RING_FUNC(ring_QBluetoothDeviceInfo_serviceUuids)
{
	QBluetoothDeviceInfo *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBluetoothDeviceInfo *) RING_API_GETCPOINTER(1,"QBluetoothDeviceInfo");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QList<QBluetoothUuid> *pValue ; 
		pValue = (QList<QBluetoothUuid> *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QList<QBluetoothUuid>)) ;
		*pValue = pObject->serviceUuids((QBluetoothDeviceInfo::DataCompleteness *) RING_API_GETCPOINTER(2,"QBluetoothDeviceInfo::DataCompleteness"));
		RING_API_RETCPOINTER(pValue,"QList<QBluetoothUuid>");
	}
}


RING_FUNC(ring_QBluetoothDeviceInfo_serviceUuidsCompleteness)
{
	QBluetoothDeviceInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBluetoothDeviceInfo *) RING_API_GETCPOINTER(1,"QBluetoothDeviceInfo");
	RING_API_RETNUMBER(pObject->serviceUuidsCompleteness());
}


RING_FUNC(ring_QBluetoothDeviceInfo_setCached)
{
	QBluetoothDeviceInfo *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBluetoothDeviceInfo *) RING_API_GETCPOINTER(1,"QBluetoothDeviceInfo");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCached( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QBluetoothDeviceInfo_setRssi)
{
	QBluetoothDeviceInfo *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBluetoothDeviceInfo *) RING_API_GETCPOINTER(1,"QBluetoothDeviceInfo");
	pObject->setRssi(* (qint16  *) RING_API_GETCPOINTER(2,"qint16"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"qint16"));
}


RING_FUNC(ring_QBluetoothDeviceInfo_setServiceUuids)
{
	QBluetoothDeviceInfo *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBluetoothDeviceInfo *) RING_API_GETCPOINTER(1,"QBluetoothDeviceInfo");
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setServiceUuids(* (QList<QBluetoothUuid>  *) RING_API_GETCPOINTER(2,"QList<QBluetoothUuid>"), (QBluetoothDeviceInfo::DataCompleteness )  (int) RING_API_GETNUMBER(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QList<QBluetoothUuid>"));
}


RING_FUNC(ring_QBluetoothHostInfo_address)
{
	QBluetoothHostInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBluetoothHostInfo *) RING_API_GETCPOINTER(1,"QBluetoothHostInfo");
	{
		QBluetoothAddress *pValue ; 
		pValue = new QBluetoothAddress() ;
		*pValue = pObject->address();
		RING_API_RETCPOINTER(pValue,"QBluetoothAddress");
	}
}


RING_FUNC(ring_QBluetoothHostInfo_name)
{
	QBluetoothHostInfo *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBluetoothHostInfo *) RING_API_GETCPOINTER(1,"QBluetoothHostInfo");
	RING_API_RETSTRING(pObject->name().toStdString().c_str());
}


RING_FUNC(ring_QBluetoothHostInfo_setAddress)
{
	QBluetoothHostInfo *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBluetoothHostInfo *) RING_API_GETCPOINTER(1,"QBluetoothHostInfo");
	pObject->setAddress(* (QBluetoothAddress  *) RING_API_GETCPOINTER(2,"QBluetoothAddress"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QBluetoothAddress"));
}


RING_FUNC(ring_QBluetoothHostInfo_setName)
{
	QBluetoothHostInfo *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QBluetoothHostInfo *) RING_API_GETCPOINTER(1,"QBluetoothHostInfo");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setName(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QBluetoothLocalDevice_address)
{
	GBluetoothLocalDevice *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GBluetoothLocalDevice *) RING_API_GETCPOINTER(1,"QBluetoothLocalDevice");
	{
		QBluetoothAddress *pValue ; 
		pValue = new QBluetoothAddress() ;
		*pValue = pObject->address();
		RING_API_RETCPOINTER(pValue,"QBluetoothAddress");
	}
}


RING_FUNC(ring_QDateTime_addDays)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->addDays( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QDateTime");
	}
}


RING_FUNC(ring_QDateTime_addMSecs)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->addMSecs( (qint64 ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QDateTime");
	}
}


RING_FUNC(ring_QDateTime_addMonths)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->addMonths( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QDateTime");
	}
}


RING_FUNC(ring_QDateTime_addSecs)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->addSecs( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QDateTime");
	}
}


RING_FUNC(ring_QDateTime_addYears)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->addYears( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QDateTime");
	}
}


RING_FUNC(ring_QDateTime_date)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	{
		QDate *pValue ; 
		pValue = new QDate() ;
		*pValue = pObject->date();
		RING_API_RETCPOINTER(pValue,"QDate");
	}
}


RING_FUNC(ring_QDateTime_daysTo)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	RING_API_RETNUMBER(pObject->daysTo(* (QDateTime  *) RING_API_GETCPOINTER(2,"QDateTime")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QDateTime"));
}


RING_FUNC(ring_QDateTime_isNull)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QDateTime_isValid)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	RING_API_RETNUMBER(pObject->isValid());
}


RING_FUNC(ring_QDateTime_msecsTo)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	RING_API_RETNUMBER(pObject->msecsTo(* (QDateTime  *) RING_API_GETCPOINTER(2,"QDateTime")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QDateTime"));
}


RING_FUNC(ring_QDateTime_secsTo)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	RING_API_RETNUMBER(pObject->secsTo(* (QDateTime  *) RING_API_GETCPOINTER(2,"QDateTime")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QDateTime"));
}


RING_FUNC(ring_QDateTime_setDate)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	pObject->setDate(* (QDate  *) RING_API_GETCPOINTER(2,"QDate"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QDate"));
}


RING_FUNC(ring_QDateTime_setMSecsSinceEpoch)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMSecsSinceEpoch( (qint64 ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDateTime_setTime)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	pObject->setTime(* (QTime  *) RING_API_GETCPOINTER(2,"QTime"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTime"));
}


RING_FUNC(ring_QDateTime_setTimeSpec)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTimeSpec( (Qt::TimeSpec )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QDateTime_setTime_t)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	pObject->setTime_t(* (uint  *) RING_API_GETCPOINTER(2,"uint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"uint"));
}


RING_FUNC(ring_QDateTime_time)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	{
		QTime *pValue ; 
		pValue = new QTime() ;
		*pValue = pObject->time();
		RING_API_RETCPOINTER(pValue,"QTime");
	}
}


RING_FUNC(ring_QDateTime_timeSpec)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	RING_API_RETNUMBER(pObject->timeSpec());
}


RING_FUNC(ring_QDateTime_toLocalTime)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->toLocalTime();
		RING_API_RETCPOINTER(pValue,"QDateTime");
	}
}


RING_FUNC(ring_QDateTime_toMSecsSinceEpoch)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	RING_API_RETNUMBER(pObject->toMSecsSinceEpoch());
}


RING_FUNC(ring_QDateTime_toString)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->toString(RING_API_GETSTRING(2)).toStdString().c_str());
}


RING_FUNC(ring_QDateTime_toString_2)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->toString( (Qt::DateFormat )  (int) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QDateTime_toTimeSpec)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->toTimeSpec( (Qt::TimeSpec )  (int) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QDateTime");
	}
}


RING_FUNC(ring_QDateTime_toTime_t)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	{
		uint *pValue ; 
		pValue = (uint *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(uint)) ;
		*pValue = pObject->toTime_t();
		RING_API_RETCPOINTER(pValue,"uint");
	}
}


RING_FUNC(ring_QDateTime_toUTC)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->toUTC();
		RING_API_RETCPOINTER(pValue,"QDateTime");
	}
}


RING_FUNC(ring_QDateTime_currentDateTime)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->currentDateTime();
		RING_API_RETCPOINTER(pValue,"QDateTime");
	}
}


RING_FUNC(ring_QDateTime_currentDateTimeUtc)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->currentDateTimeUtc();
		RING_API_RETCPOINTER(pValue,"QDateTime");
	}
}


RING_FUNC(ring_QDateTime_currentMSecsSinceEpoch)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	RING_API_RETNUMBER(pObject->currentMSecsSinceEpoch());
}


RING_FUNC(ring_QDateTime_fromMSecsSinceEpoch)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->fromMSecsSinceEpoch( (qint64 ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QDateTime");
	}
}


RING_FUNC(ring_QDateTime_fromString)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->fromString(RING_API_GETSTRING(2), (Qt::DateFormat )  (int) RING_API_GETNUMBER(3));
		RING_API_RETCPOINTER(pValue,"QDateTime");
	}
}


RING_FUNC(ring_QDateTime_fromString_2)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->fromString(RING_API_GETSTRING(2),RING_API_GETSTRING(3));
		RING_API_RETCPOINTER(pValue,"QDateTime");
	}
}


RING_FUNC(ring_QDateTime_fromTime_t)
{
	QDateTime *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
	{
		QDateTime *pValue ; 
		pValue = new QDateTime() ;
		*pValue = pObject->fromTime_t(* (uint  *) RING_API_GETCPOINTER(2,"uint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"uint"));
		RING_API_RETCPOINTER(pValue,"QDateTime");
	}
}


RING_FUNC(ring_QScreen_angleBetween)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	RING_API_RETNUMBER(pObject->angleBetween(* (Qt::ScreenOrientation  *) RING_API_GETCPOINTER(2,"Qt::ScreenOrientation"),* (Qt::ScreenOrientation  *) RING_API_GETCPOINTER(3,"Qt::ScreenOrientation")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"Qt::ScreenOrientation"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"Qt::ScreenOrientation"));
}


RING_FUNC(ring_QScreen_availableGeometry)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->availableGeometry();
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QScreen_availableSize)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->availableSize();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QScreen_availableVirtualGeometry)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->availableVirtualGeometry();
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QScreen_availableVirtualSize)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->availableVirtualSize();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QScreen_depth)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	RING_API_RETNUMBER(pObject->depth());
}


RING_FUNC(ring_QScreen_devicePixelRatio)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	RING_API_RETNUMBER(pObject->devicePixelRatio());
}


RING_FUNC(ring_QScreen_geometry)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->geometry();
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QScreen_grabWindow)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->grabWindow( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5), (int ) RING_API_GETNUMBER(6));
		RING_API_RETCPOINTER(pValue,"QPixmap");
	}
}


RING_FUNC(ring_QScreen_grabWindow_2)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QPixmap *pValue ; 
		pValue = new QPixmap() ;
		*pValue = pObject->grabWindow( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QPixmap");
	}
}


RING_FUNC(ring_QScreen_handle)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	RING_API_RETCPOINTER(pObject->handle(),"QPlatformScreen");
}


RING_FUNC(ring_QScreen_isLandscape)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	RING_API_RETNUMBER(pObject->isLandscape(* (Qt::ScreenOrientation  *) RING_API_GETCPOINTER(2,"Qt::ScreenOrientation")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"Qt::ScreenOrientation"));
}


RING_FUNC(ring_QScreen_isPortrait)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	RING_API_RETNUMBER(pObject->isPortrait(* (Qt::ScreenOrientation  *) RING_API_GETCPOINTER(2,"Qt::ScreenOrientation")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"Qt::ScreenOrientation"));
}


RING_FUNC(ring_QScreen_logicalDotsPerInch)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	RING_API_RETNUMBER(pObject->logicalDotsPerInch());
}


RING_FUNC(ring_QScreen_logicalDotsPerInchX)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	RING_API_RETNUMBER(pObject->logicalDotsPerInchX());
}


RING_FUNC(ring_QScreen_logicalDotsPerInchY)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	RING_API_RETNUMBER(pObject->logicalDotsPerInchY());
}


RING_FUNC(ring_QScreen_mapBetween)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->mapBetween(* (Qt::ScreenOrientation  *) RING_API_GETCPOINTER(2,"Qt::ScreenOrientation"),* (Qt::ScreenOrientation  *) RING_API_GETCPOINTER(3,"Qt::ScreenOrientation"),* (QRect  *) RING_API_GETCPOINTER(4,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"Qt::ScreenOrientation"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"Qt::ScreenOrientation"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"QRect"));
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QScreen_name)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	RING_API_RETSTRING(pObject->name().toStdString().c_str());
}


RING_FUNC(ring_QScreen_nativeOrientation)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	{
		Qt::ScreenOrientation *pValue ; 
		pValue = (Qt::ScreenOrientation *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(Qt::ScreenOrientation)) ;
		*pValue = pObject->nativeOrientation();
		RING_API_RETCPOINTER(pValue,"Qt::ScreenOrientation");
	}
}


RING_FUNC(ring_QScreen_orientation)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	{
		Qt::ScreenOrientation *pValue ; 
		pValue = (Qt::ScreenOrientation *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(Qt::ScreenOrientation)) ;
		*pValue = pObject->orientation();
		RING_API_RETCPOINTER(pValue,"Qt::ScreenOrientation");
	}
}


RING_FUNC(ring_QScreen_orientationUpdateMask)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	{
		Qt::ScreenOrientations *pValue ; 
		pValue = (Qt::ScreenOrientations *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(Qt::ScreenOrientations)) ;
		*pValue = pObject->orientationUpdateMask();
		RING_API_RETCPOINTER(pValue,"Qt::ScreenOrientations");
	}
}


RING_FUNC(ring_QScreen_physicalDotsPerInch)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	RING_API_RETNUMBER(pObject->physicalDotsPerInch());
}


RING_FUNC(ring_QScreen_physicalDotsPerInchX)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	RING_API_RETNUMBER(pObject->physicalDotsPerInchX());
}


RING_FUNC(ring_QScreen_physicalDotsPerInchY)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	RING_API_RETNUMBER(pObject->physicalDotsPerInchY());
}


RING_FUNC(ring_QScreen_physicalSize)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	{
		QSizeF *pValue ; 
		pValue = (QSizeF *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QSizeF)) ;
		*pValue = pObject->physicalSize();
		RING_API_RETCPOINTER(pValue,"QSizeF");
	}
}


RING_FUNC(ring_QScreen_primaryOrientation)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	{
		Qt::ScreenOrientation *pValue ; 
		pValue = (Qt::ScreenOrientation *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(Qt::ScreenOrientation)) ;
		*pValue = pObject->primaryOrientation();
		RING_API_RETCPOINTER(pValue,"Qt::ScreenOrientation");
	}
}


RING_FUNC(ring_QScreen_refreshRate)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	RING_API_RETNUMBER(pObject->refreshRate());
}


RING_FUNC(ring_QScreen_setOrientationUpdateMask)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	pObject->setOrientationUpdateMask(* (Qt::ScreenOrientations  *) RING_API_GETCPOINTER(2,"Qt::ScreenOrientations"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"Qt::ScreenOrientations"));
}


RING_FUNC(ring_QScreen_size)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->size();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QScreen_transformBetween)
{
	QScreen *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QScreen *) RING_API_GETCPOINTER(1,"QScreen");
	{
		QTransform *pValue ; 
		pValue = (QTransform *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QTransform)) ;
		*pValue = pObject->transformBetween(* (Qt::ScreenOrientation  *) RING_API_GETCPOINTER(2,"Qt::ScreenOrientation"),* (Qt::ScreenOrientation  *) RING_API_GETCPOINTER(3,"Qt::ScreenOrientation"),* (QRect  *) RING_API_GETCPOINTER(4,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"Qt::ScreenOrientation"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"Qt::ScreenOrientation"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"QRect"));
		RING_API_RETCPOINTER(pValue,"QTransform");
	}
}


RING_FUNC(ring_QWindow_baseSize)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->baseSize();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QWindow_contentOrientation)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		Qt::ScreenOrientation *pValue ; 
		pValue = (Qt::ScreenOrientation *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(Qt::ScreenOrientation)) ;
		*pValue = pObject->contentOrientation();
		RING_API_RETCPOINTER(pValue,"Qt::ScreenOrientation");
	}
}


RING_FUNC(ring_QWindow_create)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->create();
}


RING_FUNC(ring_QWindow_cursor)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		QCursor *pValue ; 
		pValue = new QCursor() ;
		*pValue = pObject->cursor();
		RING_API_RETCPOINTER(pValue,"QCursor");
	}
}


RING_FUNC(ring_QWindow_destroy)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->destroy();
}


RING_FUNC(ring_QWindow_devicePixelRatio)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->devicePixelRatio());
}


RING_FUNC(ring_QWindow_filePath)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->filePath().toStdString().c_str());
}


RING_FUNC(ring_QWindow_flags)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->flags());
}


RING_FUNC(ring_QWindow_focusObject)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETCPOINTER(pObject->focusObject(),"QObject");
}


RING_FUNC(ring_QWindow_frameGeometry)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->frameGeometry();
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QWindow_frameMargins)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		QMargins *pValue ; 
		pValue = (QMargins *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QMargins)) ;
		*pValue = pObject->frameMargins();
		RING_API_RETCPOINTER(pValue,"QMargins");
	}
}


RING_FUNC(ring_QWindow_framePosition)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->framePosition();
		RING_API_RETCPOINTER(pValue,"QPoint");
	}
}


RING_FUNC(ring_QWindow_geometry)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->geometry();
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QWindow_height)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->height());
}


RING_FUNC(ring_QWindow_icon)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		QIcon *pValue ; 
		pValue = new QIcon() ;
		*pValue = pObject->icon();
		RING_API_RETCPOINTER(pValue,"QIcon");
	}
}


RING_FUNC(ring_QWindow_isActive)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->isActive());
}


RING_FUNC(ring_QWindow_isAncestorOf)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->isAncestorOf((QWindow *) RING_API_GETCPOINTER(2,"QWindow"), (QWindow::AncestorMode )  (int) RING_API_GETNUMBER(3)));
}


RING_FUNC(ring_QWindow_isExposed)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->isExposed());
}


RING_FUNC(ring_QWindow_isModal)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->isModal());
}


RING_FUNC(ring_QWindow_isTopLevel)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->isTopLevel());
}


RING_FUNC(ring_QWindow_isVisible)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->isVisible());
}


RING_FUNC(ring_QWindow_mapFromGlobal)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->mapFromGlobal(* (QPoint  *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
		RING_API_RETCPOINTER(pValue,"QPoint");
	}
}


RING_FUNC(ring_QWindow_mapToGlobal)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->mapToGlobal(* (QPoint  *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
		RING_API_RETCPOINTER(pValue,"QPoint");
	}
}


RING_FUNC(ring_QWindow_mask)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		QRegion *pValue ; 
		pValue = new QRegion() ;
		*pValue = pObject->mask();
		RING_API_RETCPOINTER(pValue,"QRegion");
	}
}


RING_FUNC(ring_QWindow_maximumHeight)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->maximumHeight());
}


RING_FUNC(ring_QWindow_maximumSize)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->maximumSize();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QWindow_maximumWidth)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->maximumWidth());
}


RING_FUNC(ring_QWindow_minimumHeight)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->minimumHeight());
}


RING_FUNC(ring_QWindow_minimumSize)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->minimumSize();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QWindow_minimumWidth)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->minimumWidth());
}


RING_FUNC(ring_QWindow_modality)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->modality());
}


RING_FUNC(ring_QWindow_opacity)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->opacity());
}


RING_FUNC(ring_QWindow_position)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		QPoint *pValue ; 
		pValue = new QPoint() ;
		*pValue = pObject->position();
		RING_API_RETCPOINTER(pValue,"QPoint");
	}
}


RING_FUNC(ring_QWindow_reportContentOrientationChange)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->reportContentOrientationChange(* (Qt::ScreenOrientation  *) RING_API_GETCPOINTER(2,"Qt::ScreenOrientation"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"Qt::ScreenOrientation"));
}


RING_FUNC(ring_QWindow_requestedFormat)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		QSurfaceFormat *pValue ; 
		pValue = (QSurfaceFormat *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QSurfaceFormat)) ;
		*pValue = pObject->requestedFormat();
		RING_API_RETCPOINTER(pValue,"QSurfaceFormat");
	}
}


RING_FUNC(ring_QWindow_resize)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->resize(* (QSize  *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QSize"));
}


RING_FUNC(ring_QWindow_resize_2)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->resize( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QWindow_screen)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETCPOINTER(pObject->screen(),"QScreen");
}


RING_FUNC(ring_QWindow_setBaseSize)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->setBaseSize(* (QSize  *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QSize"));
}


RING_FUNC(ring_QWindow_setCursor)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->setCursor(* (QCursor  *) RING_API_GETCPOINTER(2,"QCursor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QCursor"));
}


RING_FUNC(ring_QWindow_setFilePath)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFilePath(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setFlags)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setFlags( (Qt::WindowFlags )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWindow_setFormat)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->setFormat(* (QSurfaceFormat  *) RING_API_GETCPOINTER(2,"QSurfaceFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QSurfaceFormat"));
}


RING_FUNC(ring_QWindow_setFramePosition)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->setFramePosition(* (QPoint  *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
}


RING_FUNC(ring_QWindow_setGeometry)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setGeometry( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3), (int ) RING_API_GETNUMBER(4), (int ) RING_API_GETNUMBER(5));
}


RING_FUNC(ring_QWindow_setGeometry_2)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->setGeometry(* (QRect  *) RING_API_GETCPOINTER(2,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QRect"));
}


RING_FUNC(ring_QWindow_setIcon)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->setIcon(* (QIcon  *) RING_API_GETCPOINTER(2,"QIcon"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QIcon"));
}


RING_FUNC(ring_QWindow_setKeyboardGrabEnabled)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setKeyboardGrabEnabled( (bool ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QWindow_setMask)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->setMask(* (QRegion  *) RING_API_GETCPOINTER(2,"QRegion"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QRegion"));
}


RING_FUNC(ring_QWindow_setMaximumSize)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->setMaximumSize(* (QSize  *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QSize"));
}


RING_FUNC(ring_QWindow_setMinimumSize)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->setMinimumSize(* (QSize  *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QSize"));
}


RING_FUNC(ring_QWindow_setModality)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setModality( (Qt::WindowModality )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWindow_setMouseGrabEnabled)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->setMouseGrabEnabled( (bool ) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QWindow_setOpacity)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOpacity( (qreal ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWindow_setParent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setParent((QWindow *) RING_API_GETCPOINTER(2,"QWindow"));
}


RING_FUNC(ring_QWindow_setPosition)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->setPosition(* (QPoint  *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
}


RING_FUNC(ring_QWindow_setPosition_2)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setPosition( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QWindow_setScreen)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setScreen((QScreen *) RING_API_GETCPOINTER(2,"QScreen"));
}


RING_FUNC(ring_QWindow_setSizeIncrement)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->setSizeIncrement(* (QSize  *) RING_API_GETCPOINTER(2,"QSize"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QSize"));
}


RING_FUNC(ring_QWindow_setTransientParent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTransientParent((QWindow *) RING_API_GETCPOINTER(2,"QWindow"));
}


RING_FUNC(ring_QWindow_setVisibility)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setVisibility( (QWindow::Visibility )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWindow_setWindowState)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWindowState( (Qt::WindowState )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWindow_sizeIncrement)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		QSize *pValue ; 
		pValue = new QSize() ;
		*pValue = pObject->sizeIncrement();
		RING_API_RETCPOINTER(pValue,"QSize");
	}
}


RING_FUNC(ring_QWindow_title)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->title().toStdString().c_str());
}


RING_FUNC(ring_QWindow_transientParent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETCPOINTER(pObject->transientParent(),"QWindow");
}


RING_FUNC(ring_QWindow_type)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->type());
}


RING_FUNC(ring_QWindow_unsetCursor)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->unsetCursor();
}


RING_FUNC(ring_QWindow_visibility)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->visibility());
}


RING_FUNC(ring_QWindow_width)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->width());
}


RING_FUNC(ring_QWindow_winId)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	{
		WId *pValue ; 
		pValue = (WId *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(WId)) ;
		*pValue = pObject->winId();
		RING_API_RETCPOINTER(pValue,"WId");
	}
}


RING_FUNC(ring_QWindow_windowState)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->windowState());
}


RING_FUNC(ring_QWindow_x)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->x());
}


RING_FUNC(ring_QWindow_y)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->y());
}


RING_FUNC(ring_QWindow_alert)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->alert( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWindow_close)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETNUMBER(pObject->close());
}


RING_FUNC(ring_QWindow_hide)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->hide();
}


RING_FUNC(ring_QWindow_lower)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->lower();
}


RING_FUNC(ring_QWindow_raise)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->raise();
}


RING_FUNC(ring_QWindow_requestActivate)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->requestActivate();
}


RING_FUNC(ring_QWindow_setHeight)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHeight( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWindow_setMaximumHeight)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMaximumHeight( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWindow_setMaximumWidth)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMaximumWidth( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWindow_setMinimumHeight)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMinimumHeight( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWindow_setMinimumWidth)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setMinimumWidth( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWindow_setTitle)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setTitle(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setVisible)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setVisible( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWindow_setWidth)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setWidth( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWindow_setX)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setX( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWindow_setY)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setY( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QWindow_show)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->show();
}


RING_FUNC(ring_QWindow_showFullScreen)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->showFullScreen();
}


RING_FUNC(ring_QWindow_showMaximized)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->showMaximized();
}


RING_FUNC(ring_QWindow_showMinimized)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->showMinimized();
}


RING_FUNC(ring_QWindow_showNormal)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	pObject->showNormal();
}


RING_FUNC(ring_QWindow_fromWinId)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETCPOINTER(pObject->fromWinId(* (WId  *) RING_API_GETCPOINTER(2,"WId")),"QWindow");
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"WId"));
}


RING_FUNC(ring_QWindow_setactiveChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setactiveChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setcontentOrientationChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcontentOrientationChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setfocusObjectChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setfocusObjectChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setheightChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setheightChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setmaximumHeightChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setmaximumHeightChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setmaximumWidthChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setmaximumWidthChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setminimumHeightChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setminimumHeightChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setminimumWidthChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setminimumWidthChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setmodalityChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setmodalityChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setopacityChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setopacityChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setscreenChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setscreenChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setvisibilityChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setvisibilityChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setvisibleChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setvisibleChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setwidthChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setwidthChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setwindowStateChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setwindowStateChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setwindowTitleChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setwindowTitleChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setxChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setxChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_setyChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setyChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QWindow_getactiveChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getactiveChangedEvent());
}


RING_FUNC(ring_QWindow_getcontentOrientationChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getcontentOrientationChangedEvent());
}


RING_FUNC(ring_QWindow_getfocusObjectChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getfocusObjectChangedEvent());
}


RING_FUNC(ring_QWindow_getheightChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getheightChangedEvent());
}


RING_FUNC(ring_QWindow_getmaximumHeightChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getmaximumHeightChangedEvent());
}


RING_FUNC(ring_QWindow_getmaximumWidthChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getmaximumWidthChangedEvent());
}


RING_FUNC(ring_QWindow_getminimumHeightChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getminimumHeightChangedEvent());
}


RING_FUNC(ring_QWindow_getminimumWidthChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getminimumWidthChangedEvent());
}


RING_FUNC(ring_QWindow_getmodalityChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getmodalityChangedEvent());
}


RING_FUNC(ring_QWindow_getopacityChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getopacityChangedEvent());
}


RING_FUNC(ring_QWindow_getscreenChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getscreenChangedEvent());
}


RING_FUNC(ring_QWindow_getvisibilityChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getvisibilityChangedEvent());
}


RING_FUNC(ring_QWindow_getvisibleChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getvisibleChangedEvent());
}


RING_FUNC(ring_QWindow_getwidthChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getwidthChangedEvent());
}


RING_FUNC(ring_QWindow_getwindowStateChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getwindowStateChangedEvent());
}


RING_FUNC(ring_QWindow_getwindowTitleChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getwindowTitleChangedEvent());
}


RING_FUNC(ring_QWindow_getxChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getxChangedEvent());
}


RING_FUNC(ring_QWindow_getyChangedEvent)
{
	GWindow *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GWindow *) RING_API_GETCPOINTER(1,"QWindow");
	RING_API_RETSTRING(pObject->getyChangedEvent());
}


RING_FUNC(ring_QGuiApplication_devicePixelRatio)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETNUMBER(pObject->devicePixelRatio());
}


RING_FUNC(ring_QGuiApplication_isSavingSession)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETNUMBER(pObject->isSavingSession());
}


RING_FUNC(ring_QGuiApplication_isSessionRestored)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETNUMBER(pObject->isSessionRestored());
}


RING_FUNC(ring_QGuiApplication_sessionId)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->sessionId().toStdString().c_str());
}


RING_FUNC(ring_QGuiApplication_sessionKey)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->sessionKey().toStdString().c_str());
}


RING_FUNC(ring_QGuiApplication_allWindows)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	{
		QWindowList *pValue ; 
		pValue = (QWindowList *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QWindowList)) ;
		*pValue = pObject->allWindows();
		RING_API_RETCPOINTER(pValue,"QWindowList");
	}
}


RING_FUNC(ring_QGuiApplication_applicationDisplayName)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->applicationDisplayName().toStdString().c_str());
}


RING_FUNC(ring_QGuiApplication_applicationState)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	{
		Qt::ApplicationState *pValue ; 
		pValue = (Qt::ApplicationState *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(Qt::ApplicationState)) ;
		*pValue = pObject->applicationState();
		RING_API_RETCPOINTER(pValue,"Qt::ApplicationState");
	}
}


RING_FUNC(ring_QGuiApplication_changeOverrideCursor)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	pObject->changeOverrideCursor(* (QCursor  *) RING_API_GETCPOINTER(2,"QCursor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QCursor"));
}


RING_FUNC(ring_QGuiApplication_clipboard)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETCPOINTER(pObject->clipboard(),"QClipboard");
}


RING_FUNC(ring_QGuiApplication_desktopSettingsAware)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETNUMBER(pObject->desktopSettingsAware());
}


RING_FUNC(ring_QGuiApplication_exec)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETNUMBER(pObject->exec());
}


RING_FUNC(ring_QGuiApplication_focusObject)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETCPOINTER(pObject->focusObject(),"QObject");
}


RING_FUNC(ring_QGuiApplication_focusWindow)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETCPOINTER(pObject->focusWindow(),"QWindow");
}


RING_FUNC(ring_QGuiApplication_font)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	{
		QFont *pValue ; 
		pValue = new QFont() ;
		*pValue = pObject->font();
		RING_API_RETCPOINTER(pValue,"QFont");
	}
}


RING_FUNC(ring_QGuiApplication_inputMethod)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETCPOINTER(pObject->inputMethod(),"QInputMethod");
}


RING_FUNC(ring_QGuiApplication_isLeftToRight)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETNUMBER(pObject->isLeftToRight());
}


RING_FUNC(ring_QGuiApplication_isRightToLeft)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETNUMBER(pObject->isRightToLeft());
}


RING_FUNC(ring_QGuiApplication_keyboardModifiers)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	{
		Qt::KeyboardModifiers *pValue ; 
		pValue = (Qt::KeyboardModifiers *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(Qt::KeyboardModifiers)) ;
		*pValue = pObject->keyboardModifiers();
		RING_API_RETCPOINTER(pValue,"Qt::KeyboardModifiers");
	}
}


RING_FUNC(ring_QGuiApplication_layoutDirection)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETNUMBER(pObject->layoutDirection());
}


RING_FUNC(ring_QGuiApplication_modalWindow)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETCPOINTER(pObject->modalWindow(),"QWindow");
}


RING_FUNC(ring_QGuiApplication_mouseButtons)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	{
		Qt::MouseButtons *pValue ; 
		pValue = (Qt::MouseButtons *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(Qt::MouseButtons)) ;
		*pValue = pObject->mouseButtons();
		RING_API_RETCPOINTER(pValue,"Qt::MouseButtons");
	}
}


RING_FUNC(ring_QGuiApplication_overrideCursor)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETCPOINTER(pObject->overrideCursor(),"QCursor");
}


RING_FUNC(ring_QGuiApplication_palette)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	{
		QPalette *pValue ; 
		pValue = (QPalette *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QPalette)) ;
		*pValue = pObject->palette();
		RING_API_RETCPOINTER(pValue,"QPalette");
	}
}


RING_FUNC(ring_QGuiApplication_platformName)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->platformName().toStdString().c_str());
}


RING_FUNC(ring_QGuiApplication_platformNativeInterface)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETCPOINTER(pObject->platformNativeInterface(),"QPlatformNativeInterface");
}


RING_FUNC(ring_QGuiApplication_primaryScreen)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETCPOINTER(pObject->primaryScreen(),"QScreen");
}


RING_FUNC(ring_QGuiApplication_queryKeyboardModifiers)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	{
		Qt::KeyboardModifiers *pValue ; 
		pValue = (Qt::KeyboardModifiers *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(Qt::KeyboardModifiers)) ;
		*pValue = pObject->queryKeyboardModifiers();
		RING_API_RETCPOINTER(pValue,"Qt::KeyboardModifiers");
	}
}


RING_FUNC(ring_QGuiApplication_quitOnLastWindowClosed)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETNUMBER(pObject->quitOnLastWindowClosed());
}


RING_FUNC(ring_QGuiApplication_restoreOverrideCursor)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	pObject->restoreOverrideCursor();
}


RING_FUNC(ring_QGuiApplication_screens)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	{
		QList<QScreen *> *pValue ; 
		pValue = (QList<QScreen *> *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QList<QScreen *>)) ;
		*pValue = pObject->screens();
		RING_API_RETCPOINTER(pValue,"QList<QScreen *>");
	}
}


RING_FUNC(ring_QGuiApplication_setApplicationDisplayName)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setApplicationDisplayName(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QGuiApplication_setDesktopSettingsAware)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDesktopSettingsAware( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QGuiApplication_setFont)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	pObject->setFont(* (QFont  *) RING_API_GETCPOINTER(2,"QFont"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QFont"));
}


RING_FUNC(ring_QGuiApplication_setLayoutDirection)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setLayoutDirection( (Qt::LayoutDirection )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QGuiApplication_setOverrideCursor)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	pObject->setOverrideCursor(* (QCursor  *) RING_API_GETCPOINTER(2,"QCursor"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QCursor"));
}


RING_FUNC(ring_QGuiApplication_setPalette)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	pObject->setPalette(* (QPalette  *) RING_API_GETCPOINTER(2,"QPalette"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPalette"));
}


RING_FUNC(ring_QGuiApplication_setQuitOnLastWindowClosed)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setQuitOnLastWindowClosed( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QGuiApplication_styleHints)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETCPOINTER(pObject->styleHints(),"QStyleHints");
}


RING_FUNC(ring_QGuiApplication_sync)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	pObject->sync();
}


RING_FUNC(ring_QGuiApplication_topLevelAt)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETCPOINTER(pObject->topLevelAt(* (QPoint  *) RING_API_GETCPOINTER(2,"QPoint")),"QWindow");
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
}


RING_FUNC(ring_QGuiApplication_topLevelWindows)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	{
		QWindowList *pValue ; 
		pValue = (QWindowList *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QWindowList)) ;
		*pValue = pObject->topLevelWindows();
		RING_API_RETCPOINTER(pValue,"QWindowList");
	}
}


RING_FUNC(ring_QGuiApplication_setapplicationDisplayNameChangedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setapplicationDisplayNameChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QGuiApplication_setapplicationStateChangedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setapplicationStateChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QGuiApplication_setcommitDataRequestEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcommitDataRequestEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QGuiApplication_setfocusObjectChangedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setfocusObjectChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QGuiApplication_setfocusWindowChangedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setfocusWindowChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QGuiApplication_setfontDatabaseChangedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setfontDatabaseChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QGuiApplication_setlastWindowClosedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setlastWindowClosedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QGuiApplication_setlayoutDirectionChangedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setlayoutDirectionChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QGuiApplication_setpaletteChangedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setpaletteChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QGuiApplication_setprimaryScreenChangedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setprimaryScreenChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QGuiApplication_setsaveStateRequestEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsaveStateRequestEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QGuiApplication_setscreenAddedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setscreenAddedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QGuiApplication_setscreenRemovedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setscreenRemovedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QGuiApplication_getapplicationDisplayNameChangedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->getapplicationDisplayNameChangedEvent());
}


RING_FUNC(ring_QGuiApplication_getapplicationStateChangedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->getapplicationStateChangedEvent());
}


RING_FUNC(ring_QGuiApplication_getcommitDataRequestEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->getcommitDataRequestEvent());
}


RING_FUNC(ring_QGuiApplication_getfocusObjectChangedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->getfocusObjectChangedEvent());
}


RING_FUNC(ring_QGuiApplication_getfocusWindowChangedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->getfocusWindowChangedEvent());
}


RING_FUNC(ring_QGuiApplication_getfontDatabaseChangedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->getfontDatabaseChangedEvent());
}


RING_FUNC(ring_QGuiApplication_getlastWindowClosedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->getlastWindowClosedEvent());
}


RING_FUNC(ring_QGuiApplication_getlayoutDirectionChangedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->getlayoutDirectionChangedEvent());
}


RING_FUNC(ring_QGuiApplication_getpaletteChangedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->getpaletteChangedEvent());
}


RING_FUNC(ring_QGuiApplication_getprimaryScreenChangedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->getprimaryScreenChangedEvent());
}


RING_FUNC(ring_QGuiApplication_getsaveStateRequestEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->getsaveStateRequestEvent());
}


RING_FUNC(ring_QGuiApplication_getscreenAddedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->getscreenAddedEvent());
}


RING_FUNC(ring_QGuiApplication_getscreenRemovedEvent)
{
	GGuiApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"QGuiApplication");
	RING_API_RETSTRING(pObject->getscreenRemovedEvent());
}


RING_FUNC(ring_QCoreApplication_installNativeEventFilter)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->installNativeEventFilter((QAbstractNativeEventFilter *) RING_API_GETCPOINTER(2,"QAbstractNativeEventFilter"));
}


RING_FUNC(ring_QCoreApplication_removeNativeEventFilter)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeNativeEventFilter((QAbstractNativeEventFilter *) RING_API_GETCPOINTER(2,"QAbstractNativeEventFilter"));
}


RING_FUNC(ring_QCoreApplication_quit)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	pObject->quit();
}


RING_FUNC(ring_QCoreApplication_addLibraryPath)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->addLibraryPath(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QCoreApplication_applicationDirPath)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	RING_API_RETSTRING(pObject->applicationDirPath().toStdString().c_str());
}


RING_FUNC(ring_QCoreApplication_applicationFilePath)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	RING_API_RETSTRING(pObject->applicationFilePath().toStdString().c_str());
}


RING_FUNC(ring_QCoreApplication_applicationName)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	RING_API_RETSTRING(pObject->applicationName().toStdString().c_str());
}


RING_FUNC(ring_QCoreApplication_applicationPid)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	RING_API_RETNUMBER(pObject->applicationPid());
}


RING_FUNC(ring_QCoreApplication_applicationVersion)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	RING_API_RETSTRING(pObject->applicationVersion().toStdString().c_str());
}


RING_FUNC(ring_QCoreApplication_arguments)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->arguments();
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QCoreApplication_closingDown)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	RING_API_RETNUMBER(pObject->closingDown());
}


RING_FUNC(ring_QCoreApplication_eventDispatcher)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	RING_API_RETCPOINTER(pObject->eventDispatcher(),"QAbstractEventDispatcher");
}


RING_FUNC(ring_QCoreApplication_exec)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	RING_API_RETNUMBER(pObject->exec());
}


RING_FUNC(ring_QCoreApplication_exit)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->exit( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCoreApplication_installTranslator)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->installTranslator((QTranslator *) RING_API_GETCPOINTER(2,"QTranslator")));
}


RING_FUNC(ring_QCoreApplication_instance)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	RING_API_RETCPOINTER(pObject->instance(),"QCoreApplication");
}


RING_FUNC(ring_QCoreApplication_isQuitLockEnabled)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	RING_API_RETNUMBER(pObject->isQuitLockEnabled());
}


RING_FUNC(ring_QCoreApplication_libraryPaths)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->libraryPaths();
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QCoreApplication_organizationDomain)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	RING_API_RETSTRING(pObject->organizationDomain().toStdString().c_str());
}


RING_FUNC(ring_QCoreApplication_organizationName)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	RING_API_RETSTRING(pObject->organizationName().toStdString().c_str());
}


RING_FUNC(ring_QCoreApplication_postEvent)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->postEvent((QObject *) RING_API_GETCPOINTER(2,"QObject"),(QEvent *) RING_API_GETCPOINTER(3,"QEvent"), (int ) RING_API_GETNUMBER(4));
}


RING_FUNC(ring_QCoreApplication_processEvents)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->processEvents( (QEventLoop::ProcessEventsFlags )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCoreApplication_processEvents_2)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->processEvents( (QEventLoop::ProcessEventsFlags )  (int) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QCoreApplication_removeLibraryPath)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeLibraryPath(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QCoreApplication_removePostedEvents)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removePostedEvents((QObject *) RING_API_GETCPOINTER(2,"QObject"), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QCoreApplication_removeTranslator)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->removeTranslator((QTranslator *) RING_API_GETCPOINTER(2,"QTranslator")));
}


RING_FUNC(ring_QCoreApplication_sendEvent)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->sendEvent((QObject *) RING_API_GETCPOINTER(2,"QObject"),(QEvent *) RING_API_GETCPOINTER(3,"QEvent")));
}


RING_FUNC(ring_QCoreApplication_sendPostedEvents)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->sendPostedEvents((QObject *) RING_API_GETCPOINTER(2,"QObject"), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QCoreApplication_setApplicationName)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setApplicationName(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QCoreApplication_setApplicationVersion)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setApplicationVersion(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QCoreApplication_setAttribute)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setAttribute( (Qt::ApplicationAttribute )  (int) RING_API_GETNUMBER(2), (bool ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QCoreApplication_setEventDispatcher)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setEventDispatcher((QAbstractEventDispatcher *) RING_API_GETCPOINTER(2,"QAbstractEventDispatcher"));
}


RING_FUNC(ring_QCoreApplication_setLibraryPaths)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	pObject->setLibraryPaths(* (QStringList  *) RING_API_GETCPOINTER(2,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QStringList"));
}


RING_FUNC(ring_QCoreApplication_setOrganizationDomain)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOrganizationDomain(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QCoreApplication_setOrganizationName)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOrganizationName(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QCoreApplication_setQuitLockEnabled)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setQuitLockEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCoreApplication_startingUp)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	RING_API_RETNUMBER(pObject->startingUp());
}


RING_FUNC(ring_QCoreApplication_testAttribute)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->testAttribute( (Qt::ApplicationAttribute )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QCoreApplication_translate)
{
	QCoreApplication *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QCoreApplication *) RING_API_GETCPOINTER(1,"QCoreApplication");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->translate(RING_API_GETSTRING(2),RING_API_GETSTRING(3),RING_API_GETSTRING(4), (int ) RING_API_GETNUMBER(5)).toStdString().c_str());
}


RING_FUNC(ring_QTextBrowser_backwardHistoryCount)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	RING_API_RETNUMBER(pObject->backwardHistoryCount());
}


RING_FUNC(ring_QTextBrowser_clearHistory)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	pObject->clearHistory();
}


RING_FUNC(ring_QTextBrowser_forwardHistoryCount)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	RING_API_RETNUMBER(pObject->forwardHistoryCount());
}


RING_FUNC(ring_QTextBrowser_historyTitle)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETSTRING(pObject->historyTitle( (int ) RING_API_GETNUMBER(2)).toStdString().c_str());
}


RING_FUNC(ring_QTextBrowser_historyUrl)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QUrl *pValue ; 
		pValue = new QUrl() ;
		*pValue = pObject->historyUrl( (int ) RING_API_GETNUMBER(2));
		RING_API_RETCPOINTER(pValue,"QUrl");
	}
}


RING_FUNC(ring_QTextBrowser_isBackwardAvailable)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	RING_API_RETNUMBER(pObject->isBackwardAvailable());
}


RING_FUNC(ring_QTextBrowser_isForwardAvailable)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	RING_API_RETNUMBER(pObject->isForwardAvailable());
}


RING_FUNC(ring_QTextBrowser_openExternalLinks)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	RING_API_RETNUMBER(pObject->openExternalLinks());
}


RING_FUNC(ring_QTextBrowser_openLinks)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	RING_API_RETNUMBER(pObject->openLinks());
}


RING_FUNC(ring_QTextBrowser_searchPaths)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	{
		QStringList *pValue ; 
		pValue = new QStringList() ;
		*pValue = pObject->searchPaths();
		RING_API_RETCPOINTER(pValue,"QStringList");
	}
}


RING_FUNC(ring_QTextBrowser_setOpenExternalLinks)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOpenExternalLinks( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextBrowser_setOpenLinks)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setOpenLinks( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QTextBrowser_setSearchPaths)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	pObject->setSearchPaths(* (QStringList  *) RING_API_GETCPOINTER(2,"QStringList"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QStringList"));
}


RING_FUNC(ring_QTextBrowser_source)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	{
		QUrl *pValue ; 
		pValue = new QUrl() ;
		*pValue = pObject->source();
		RING_API_RETCPOINTER(pValue,"QUrl");
	}
}


RING_FUNC(ring_QTextBrowser_setanchorClickedEvent)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setanchorClickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextBrowser_setbackwardAvailableEvent)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setbackwardAvailableEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextBrowser_setforwardAvailableEvent)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setforwardAvailableEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextBrowser_sethighlightedEvent)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->sethighlightedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextBrowser_sethistoryChangedEvent)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->sethistoryChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextBrowser_setsourceChangedEvent)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setsourceChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QTextBrowser_getanchorClickedEvent)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	RING_API_RETSTRING(pObject->getanchorClickedEvent());
}


RING_FUNC(ring_QTextBrowser_getbackwardAvailableEvent)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	RING_API_RETSTRING(pObject->getbackwardAvailableEvent());
}


RING_FUNC(ring_QTextBrowser_getforwardAvailableEvent)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	RING_API_RETSTRING(pObject->getforwardAvailableEvent());
}


RING_FUNC(ring_QTextBrowser_gethighlightedEvent)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	RING_API_RETSTRING(pObject->gethighlightedEvent());
}


RING_FUNC(ring_QTextBrowser_gethistoryChangedEvent)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	RING_API_RETSTRING(pObject->gethistoryChangedEvent());
}


RING_FUNC(ring_QTextBrowser_getsourceChangedEvent)
{
	GTextBrowser *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"QTextBrowser");
	RING_API_RETSTRING(pObject->getsourceChangedEvent());
}


RING_FUNC(ring_QRegion_boundingRect)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	{
		QRect *pValue ; 
		pValue = new QRect() ;
		*pValue = pObject->boundingRect();
		RING_API_RETCPOINTER(pValue,"QRect");
	}
}


RING_FUNC(ring_QRegion_contains)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	RING_API_RETNUMBER(pObject->contains(* (QPoint  *) RING_API_GETCPOINTER(2,"QPoint")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
}


RING_FUNC(ring_QRegion_contains_2)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	RING_API_RETNUMBER(pObject->contains(* (QRect  *) RING_API_GETCPOINTER(2,"QRect")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QRect"));
}


RING_FUNC(ring_QRegion_intersected)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	{
		QRegion *pValue ; 
		pValue = new QRegion() ;
		*pValue = pObject->intersected(* (QRegion  *) RING_API_GETCPOINTER(2,"QRegion"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QRegion"));
		RING_API_RETCPOINTER(pValue,"QRegion");
	}
}


RING_FUNC(ring_QRegion_intersected_2)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	{
		QRegion *pValue ; 
		pValue = new QRegion() ;
		*pValue = pObject->intersected(* (QRect  *) RING_API_GETCPOINTER(2,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QRect"));
		RING_API_RETCPOINTER(pValue,"QRegion");
	}
}


RING_FUNC(ring_QRegion_intersects)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	RING_API_RETNUMBER(pObject->intersects(* (QRegion  *) RING_API_GETCPOINTER(2,"QRegion")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QRegion"));
}


RING_FUNC(ring_QRegion_intersects_2)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	RING_API_RETNUMBER(pObject->intersects(* (QRect  *) RING_API_GETCPOINTER(2,"QRect")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QRect"));
}


RING_FUNC(ring_QRegion_isEmpty)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	RING_API_RETNUMBER(pObject->isEmpty());
}


RING_FUNC(ring_QRegion_isNull)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	RING_API_RETNUMBER(pObject->isNull());
}


RING_FUNC(ring_QRegion_rectCount)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	RING_API_RETNUMBER(pObject->rectCount());
}


RING_FUNC(ring_QRegion_rects)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	{
		QVector<QRect> *pValue ; 
		pValue = (QVector<QRect> *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QVector<QRect>)) ;
		*pValue = pObject->rects();
		RING_API_RETCPOINTER(pValue,"QVector<QRect>");
	}
}


RING_FUNC(ring_QRegion_setRects)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setRects((QRect *) RING_API_GETCPOINTER(2,"QRect"), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QRegion_subtracted)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	{
		QRegion *pValue ; 
		pValue = new QRegion() ;
		*pValue = pObject->subtracted(* (QRegion  *) RING_API_GETCPOINTER(2,"QRegion"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QRegion"));
		RING_API_RETCPOINTER(pValue,"QRegion");
	}
}


RING_FUNC(ring_QRegion_swap)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	pObject->swap(* (QRegion  *) RING_API_GETCPOINTER(2,"QRegion"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QRegion"));
}


RING_FUNC(ring_QRegion_translate)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->translate( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QRegion_translate_2)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	pObject->translate(* (QPoint  *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
}


RING_FUNC(ring_QRegion_translated)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QRegion *pValue ; 
		pValue = new QRegion() ;
		*pValue = pObject->translated( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
		RING_API_RETCPOINTER(pValue,"QRegion");
	}
}


RING_FUNC(ring_QRegion_translated_2)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	{
		QRegion *pValue ; 
		pValue = new QRegion() ;
		*pValue = pObject->translated(* (QPoint  *) RING_API_GETCPOINTER(2,"QPoint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QPoint"));
		RING_API_RETCPOINTER(pValue,"QRegion");
	}
}


RING_FUNC(ring_QRegion_united)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	{
		QRegion *pValue ; 
		pValue = new QRegion() ;
		*pValue = pObject->united(* (QRegion  *) RING_API_GETCPOINTER(2,"QRegion"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QRegion"));
		RING_API_RETCPOINTER(pValue,"QRegion");
	}
}


RING_FUNC(ring_QRegion_united_2)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	{
		QRegion *pValue ; 
		pValue = new QRegion() ;
		*pValue = pObject->united(* (QRect  *) RING_API_GETCPOINTER(2,"QRect"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QRect"));
		RING_API_RETCPOINTER(pValue,"QRegion");
	}
}


RING_FUNC(ring_QRegion_xored)
{
	QRegion *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
	{
		QRegion *pValue ; 
		pValue = new QRegion() ;
		*pValue = pObject->xored(* (QRegion  *) RING_API_GETCPOINTER(2,"QRegion"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QRegion"));
		RING_API_RETCPOINTER(pValue,"QRegion");
	}
}


RING_FUNC(ring_QStackedWidget_addWidget)
{
	GStackedWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GStackedWidget *) RING_API_GETCPOINTER(1,"QStackedWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->addWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget")));
}


RING_FUNC(ring_QStackedWidget_count)
{
	GStackedWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GStackedWidget *) RING_API_GETCPOINTER(1,"QStackedWidget");
	RING_API_RETNUMBER(pObject->count());
}


RING_FUNC(ring_QStackedWidget_currentIndex)
{
	GStackedWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GStackedWidget *) RING_API_GETCPOINTER(1,"QStackedWidget");
	RING_API_RETNUMBER(pObject->currentIndex());
}


RING_FUNC(ring_QStackedWidget_currentWidget)
{
	GStackedWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GStackedWidget *) RING_API_GETCPOINTER(1,"QStackedWidget");
	RING_API_RETCPOINTER(pObject->currentWidget(),"QWidget");
}


RING_FUNC(ring_QStackedWidget_indexOf)
{
	GStackedWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GStackedWidget *) RING_API_GETCPOINTER(1,"QStackedWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->indexOf((QWidget *) RING_API_GETCPOINTER(2,"QWidget")));
}


RING_FUNC(ring_QStackedWidget_insertWidget)
{
	GStackedWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GStackedWidget *) RING_API_GETCPOINTER(1,"QStackedWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->insertWidget( (int ) RING_API_GETNUMBER(2),(QWidget *) RING_API_GETCPOINTER(3,"QWidget")));
}


RING_FUNC(ring_QStackedWidget_removeWidget)
{
	GStackedWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GStackedWidget *) RING_API_GETCPOINTER(1,"QStackedWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->removeWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QStackedWidget_widget)
{
	GStackedWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GStackedWidget *) RING_API_GETCPOINTER(1,"QStackedWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETCPOINTER(pObject->widget( (int ) RING_API_GETNUMBER(2)),"QWidget");
}


RING_FUNC(ring_QStackedWidget_setCurrentIndex)
{
	GStackedWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GStackedWidget *) RING_API_GETCPOINTER(1,"QStackedWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCurrentIndex( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QStackedWidget_setCurrentWidget)
{
	GStackedWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GStackedWidget *) RING_API_GETCPOINTER(1,"QStackedWidget");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCurrentWidget((QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
}


RING_FUNC(ring_QStackedWidget_setcurrentChangedEvent)
{
	GStackedWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GStackedWidget *) RING_API_GETCPOINTER(1,"QStackedWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcurrentChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QStackedWidget_setwidgetRemovedEvent)
{
	GStackedWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GStackedWidget *) RING_API_GETCPOINTER(1,"QStackedWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setwidgetRemovedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QStackedWidget_getcurrentChangedEvent)
{
	GStackedWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GStackedWidget *) RING_API_GETCPOINTER(1,"QStackedWidget");
	RING_API_RETSTRING(pObject->getcurrentChangedEvent());
}


RING_FUNC(ring_QStackedWidget_getwidgetRemovedEvent)
{
	GStackedWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GStackedWidget *) RING_API_GETCPOINTER(1,"QStackedWidget");
	RING_API_RETSTRING(pObject->getwidgetRemovedEvent());
}


RING_FUNC(ring_QCalendarWidget_dateEditAcceptDelay)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	RING_API_RETNUMBER(pObject->dateEditAcceptDelay());
}


RING_FUNC(ring_QCalendarWidget_dateTextFormat)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	{
		QMap<QDate, QTextCharFormat> *pValue ; 
		pValue = (QMap<QDate, QTextCharFormat> *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QMap<QDate, QTextCharFormat>)) ;
		*pValue = pObject->dateTextFormat();
		RING_API_RETCPOINTER(pValue,"QMap<QDate, QTextCharFormat>");
	}
}


RING_FUNC(ring_QCalendarWidget_dateTextFormat_2)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	{
		QTextCharFormat *pValue ; 
		pValue = new QTextCharFormat() ;
		*pValue = pObject->dateTextFormat(* (QDate  *) RING_API_GETCPOINTER(2,"QDate"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QDate"));
		RING_API_RETCPOINTER(pValue,"QTextCharFormat");
	}
}


RING_FUNC(ring_QCalendarWidget_firstDayOfWeek)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	{
		Qt::DayOfWeek *pValue ; 
		pValue = (Qt::DayOfWeek *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(Qt::DayOfWeek)) ;
		*pValue = pObject->firstDayOfWeek();
		RING_API_RETCPOINTER(pValue,"Qt::DayOfWeek");
	}
}


RING_FUNC(ring_QCalendarWidget_headerTextFormat)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	{
		QTextCharFormat *pValue ; 
		pValue = new QTextCharFormat() ;
		*pValue = pObject->headerTextFormat();
		RING_API_RETCPOINTER(pValue,"QTextCharFormat");
	}
}


RING_FUNC(ring_QCalendarWidget_horizontalHeaderFormat)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	RING_API_RETNUMBER(pObject->horizontalHeaderFormat());
}


RING_FUNC(ring_QCalendarWidget_isDateEditEnabled)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	RING_API_RETNUMBER(pObject->isDateEditEnabled());
}


RING_FUNC(ring_QCalendarWidget_isGridVisible)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	RING_API_RETNUMBER(pObject->isGridVisible());
}


RING_FUNC(ring_QCalendarWidget_isNavigationBarVisible)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	RING_API_RETNUMBER(pObject->isNavigationBarVisible());
}


RING_FUNC(ring_QCalendarWidget_maximumDate)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	{
		QDate *pValue ; 
		pValue = new QDate() ;
		*pValue = pObject->maximumDate();
		RING_API_RETCPOINTER(pValue,"QDate");
	}
}


RING_FUNC(ring_QCalendarWidget_minimumDate)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	{
		QDate *pValue ; 
		pValue = new QDate() ;
		*pValue = pObject->minimumDate();
		RING_API_RETCPOINTER(pValue,"QDate");
	}
}


RING_FUNC(ring_QCalendarWidget_monthShown)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	RING_API_RETNUMBER(pObject->monthShown());
}


RING_FUNC(ring_QCalendarWidget_selectedDate)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	{
		QDate *pValue ; 
		pValue = new QDate() ;
		*pValue = pObject->selectedDate();
		RING_API_RETCPOINTER(pValue,"QDate");
	}
}


RING_FUNC(ring_QCalendarWidget_selectionMode)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	RING_API_RETNUMBER(pObject->selectionMode());
}


RING_FUNC(ring_QCalendarWidget_setDateEditAcceptDelay)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDateEditAcceptDelay( (int ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCalendarWidget_setDateEditEnabled)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setDateEditEnabled( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCalendarWidget_setDateTextFormat)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	pObject->setDateTextFormat(* (QDate  *) RING_API_GETCPOINTER(2,"QDate"),* (QTextCharFormat  *) RING_API_GETCPOINTER(3,"QTextCharFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QDate"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QTextCharFormat"));
}


RING_FUNC(ring_QCalendarWidget_setFirstDayOfWeek)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	pObject->setFirstDayOfWeek(* (Qt::DayOfWeek  *) RING_API_GETCPOINTER(2,"Qt::DayOfWeek"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"Qt::DayOfWeek"));
}


RING_FUNC(ring_QCalendarWidget_setHeaderTextFormat)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	pObject->setHeaderTextFormat(* (QTextCharFormat  *) RING_API_GETCPOINTER(2,"QTextCharFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QTextCharFormat"));
}


RING_FUNC(ring_QCalendarWidget_setHorizontalHeaderFormat)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setHorizontalHeaderFormat( (QCalendarWidget::HorizontalHeaderFormat )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCalendarWidget_setMaximumDate)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	pObject->setMaximumDate(* (QDate  *) RING_API_GETCPOINTER(2,"QDate"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QDate"));
}


RING_FUNC(ring_QCalendarWidget_setMinimumDate)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	pObject->setMinimumDate(* (QDate  *) RING_API_GETCPOINTER(2,"QDate"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QDate"));
}


RING_FUNC(ring_QCalendarWidget_setSelectionMode)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setSelectionMode( (QCalendarWidget::SelectionMode )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCalendarWidget_setVerticalHeaderFormat)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setVerticalHeaderFormat( (QCalendarWidget::VerticalHeaderFormat )  (int) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCalendarWidget_setWeekdayTextFormat)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	pObject->setWeekdayTextFormat(* (Qt::DayOfWeek  *) RING_API_GETCPOINTER(2,"Qt::DayOfWeek"),* (QTextCharFormat  *) RING_API_GETCPOINTER(3,"QTextCharFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"Qt::DayOfWeek"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QTextCharFormat"));
}


RING_FUNC(ring_QCalendarWidget_verticalHeaderFormat)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	RING_API_RETNUMBER(pObject->verticalHeaderFormat());
}


RING_FUNC(ring_QCalendarWidget_weekdayTextFormat)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	{
		QTextCharFormat *pValue ; 
		pValue = new QTextCharFormat() ;
		*pValue = pObject->weekdayTextFormat(* (Qt::DayOfWeek  *) RING_API_GETCPOINTER(2,"Qt::DayOfWeek"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"Qt::DayOfWeek"));
		RING_API_RETCPOINTER(pValue,"QTextCharFormat");
	}
}


RING_FUNC(ring_QCalendarWidget_yearShown)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	RING_API_RETNUMBER(pObject->yearShown());
}


RING_FUNC(ring_QCalendarWidget_setCurrentPage)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setCurrentPage( (int ) RING_API_GETNUMBER(2), (int ) RING_API_GETNUMBER(3));
}


RING_FUNC(ring_QCalendarWidget_setDateRange)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	pObject->setDateRange(* (QDate  *) RING_API_GETCPOINTER(2,"QDate"),* (QDate  *) RING_API_GETCPOINTER(3,"QDate"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QDate"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"QDate"));
}


RING_FUNC(ring_QCalendarWidget_setGridVisible)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setGridVisible( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCalendarWidget_setNavigationBarVisible)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setNavigationBarVisible( (bool ) RING_API_GETNUMBER(2));
}


RING_FUNC(ring_QCalendarWidget_setSelectedDate)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	pObject->setSelectedDate(* (QDate  *) RING_API_GETCPOINTER(2,"QDate"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QDate"));
}


RING_FUNC(ring_QCalendarWidget_showNextMonth)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	pObject->showNextMonth();
}


RING_FUNC(ring_QCalendarWidget_showNextYear)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	pObject->showNextYear();
}


RING_FUNC(ring_QCalendarWidget_showPreviousMonth)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	pObject->showPreviousMonth();
}


RING_FUNC(ring_QCalendarWidget_showPreviousYear)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	pObject->showPreviousYear();
}


RING_FUNC(ring_QCalendarWidget_showSelectedDate)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	pObject->showSelectedDate();
}


RING_FUNC(ring_QCalendarWidget_showToday)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	pObject->showToday();
}


RING_FUNC(ring_QCalendarWidget_setactivatedEvent)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setactivatedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QCalendarWidget_setclickedEvent)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setclickedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QCalendarWidget_setcurrentPageChangedEvent)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setcurrentPageChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QCalendarWidget_setselectionChangedEvent)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setselectionChangedEvent(RING_API_GETSTRING(2));
}


RING_FUNC(ring_QCalendarWidget_getactivatedEvent)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	RING_API_RETSTRING(pObject->getactivatedEvent());
}


RING_FUNC(ring_QCalendarWidget_getclickedEvent)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	RING_API_RETSTRING(pObject->getclickedEvent());
}


RING_FUNC(ring_QCalendarWidget_getcurrentPageChangedEvent)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	RING_API_RETSTRING(pObject->getcurrentPageChangedEvent());
}


RING_FUNC(ring_QCalendarWidget_getselectionChangedEvent)
{
	GCalendarWidget *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"QCalendarWidget");
	RING_API_RETSTRING(pObject->getselectionChangedEvent());
}


RING_FUNC(ring_QOpenGLFunctions_glActiveTexture)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glActiveTexture(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glAttachShader)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glAttachShader(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"),* (GLuint  *) RING_API_GETCPOINTER(3,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLuint"));
}


RING_FUNC(ring_QOpenGLFunctions_glBindAttribLocation)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISSTRING(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glBindAttribLocation(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"),* (GLuint  *) RING_API_GETCPOINTER(3,"GLuint"),RING_API_GETSTRING(4));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLuint"));
}


RING_FUNC(ring_QOpenGLFunctions_glBindBuffer)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glBindBuffer(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLuint  *) RING_API_GETCPOINTER(3,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLuint"));
}


RING_FUNC(ring_QOpenGLFunctions_glBindFramebuffer)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glBindFramebuffer(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLuint  *) RING_API_GETCPOINTER(3,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLuint"));
}


RING_FUNC(ring_QOpenGLFunctions_glBindRenderbuffer)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glBindRenderbuffer(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLuint  *) RING_API_GETCPOINTER(3,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLuint"));
}


RING_FUNC(ring_QOpenGLFunctions_glBindTexture)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glBindTexture(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLuint  *) RING_API_GETCPOINTER(3,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLuint"));
}


RING_FUNC(ring_QOpenGLFunctions_glBlendColor)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glBlendColor(* (GLclampf  *) RING_API_GETCPOINTER(2,"GLclampf"),* (GLclampf  *) RING_API_GETCPOINTER(3,"GLclampf"),* (GLclampf  *) RING_API_GETCPOINTER(4,"GLclampf"),* (GLclampf  *) RING_API_GETCPOINTER(5,"GLclampf"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLclampf"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLclampf"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLclampf"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(4,"GLclampf"));
}


RING_FUNC(ring_QOpenGLFunctions_glBlendEquation)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glBlendEquation(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glBlendEquationSeparate)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glBlendEquationSeparate(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLenum  *) RING_API_GETCPOINTER(3,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glBlendFunc)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glBlendFunc(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLenum  *) RING_API_GETCPOINTER(3,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glBlendFuncSeparate)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glBlendFuncSeparate(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLenum  *) RING_API_GETCPOINTER(3,"GLenum"),* (GLenum  *) RING_API_GETCPOINTER(4,"GLenum"),* (GLenum  *) RING_API_GETCPOINTER(5,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(4,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glBufferData)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glBufferData(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (qopengl_GLsizeiptr  *) RING_API_GETCPOINTER(3,"qopengl_GLsizeiptr"),(void *) RING_API_GETCPOINTER(4,"void"),* (GLenum  *) RING_API_GETCPOINTER(5,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"qopengl_GLsizeiptr"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(4,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glBufferSubData)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glBufferSubData(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (qopengl_GLintptr  *) RING_API_GETCPOINTER(3,"qopengl_GLintptr"),* (qopengl_GLsizeiptr  *) RING_API_GETCPOINTER(4,"qopengl_GLsizeiptr"),(void *) RING_API_GETCPOINTER(5,"void"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"qopengl_GLintptr"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"qopengl_GLsizeiptr"));
}


RING_FUNC(ring_QOpenGLFunctions_glCheckFramebufferStatus)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	{
		GLenum *pValue ; 
		pValue = (GLenum *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(GLenum)) ;
		*pValue = pObject->glCheckFramebufferStatus(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
		RING_API_RETCPOINTER(pValue,"GLenum");
	}
}


RING_FUNC(ring_QOpenGLFunctions_glClear)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glClear(* (GLbitfield  *) RING_API_GETCPOINTER(2,"GLbitfield"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLbitfield"));
}


RING_FUNC(ring_QOpenGLFunctions_glClearColor)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glClearColor(* (GLclampf  *) RING_API_GETCPOINTER(2,"GLclampf"),* (GLclampf  *) RING_API_GETCPOINTER(3,"GLclampf"),* (GLclampf  *) RING_API_GETCPOINTER(4,"GLclampf"),* (GLclampf  *) RING_API_GETCPOINTER(5,"GLclampf"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLclampf"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLclampf"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLclampf"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(4,"GLclampf"));
}


RING_FUNC(ring_QOpenGLFunctions_glClearDepthf)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glClearDepthf(* (GLclampf  *) RING_API_GETCPOINTER(2,"GLclampf"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLclampf"));
}


RING_FUNC(ring_QOpenGLFunctions_glClearStencil)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glClearStencil(* (GLint  *) RING_API_GETCPOINTER(2,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLint"));
}


RING_FUNC(ring_QOpenGLFunctions_glColorMask)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glColorMask(* (GLboolean  *) RING_API_GETCPOINTER(2,"GLboolean"),* (GLboolean  *) RING_API_GETCPOINTER(3,"GLboolean"),* (GLboolean  *) RING_API_GETCPOINTER(4,"GLboolean"),* (GLboolean  *) RING_API_GETCPOINTER(5,"GLboolean"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLboolean"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLboolean"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLboolean"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(4,"GLboolean"));
}


RING_FUNC(ring_QOpenGLFunctions_glCompileShader)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glCompileShader(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
}


RING_FUNC(ring_QOpenGLFunctions_glCompressedTexImage2D)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 9 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(9) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glCompressedTexImage2D(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLint  *) RING_API_GETCPOINTER(3,"GLint"),* (GLenum  *) RING_API_GETCPOINTER(4,"GLenum"),* (GLsizei  *) RING_API_GETCPOINTER(5,"GLsizei"),* (GLsizei  *) RING_API_GETCPOINTER(6,"GLsizei"),* (GLint  *) RING_API_GETCPOINTER(7,"GLint"),* (GLsizei  *) RING_API_GETCPOINTER(8,"GLsizei"),(void *) RING_API_GETCPOINTER(9,"void"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(4,"GLsizei"));
	if (RING_API_ISCPOINTERNOTASSIGNED(5))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(5,"GLsizei"));
	if (RING_API_ISCPOINTERNOTASSIGNED(6))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(6,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(7))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(7,"GLsizei"));
}


RING_FUNC(ring_QOpenGLFunctions_glCompressedTexSubImage2D)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 10 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(10) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glCompressedTexSubImage2D(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLint  *) RING_API_GETCPOINTER(3,"GLint"),* (GLint  *) RING_API_GETCPOINTER(4,"GLint"),* (GLint  *) RING_API_GETCPOINTER(5,"GLint"),* (GLsizei  *) RING_API_GETCPOINTER(6,"GLsizei"),* (GLsizei  *) RING_API_GETCPOINTER(7,"GLsizei"),* (GLenum  *) RING_API_GETCPOINTER(8,"GLenum"),* (GLsizei  *) RING_API_GETCPOINTER(9,"GLsizei"),(void *) RING_API_GETCPOINTER(10,"void"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(4,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(5))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(5,"GLsizei"));
	if (RING_API_ISCPOINTERNOTASSIGNED(6))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(6,"GLsizei"));
	if (RING_API_ISCPOINTERNOTASSIGNED(7))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(7,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(8))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(8,"GLsizei"));
}


RING_FUNC(ring_QOpenGLFunctions_glCopyTexImage2D)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 9 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glCopyTexImage2D(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLint  *) RING_API_GETCPOINTER(3,"GLint"),* (GLenum  *) RING_API_GETCPOINTER(4,"GLenum"),* (GLint  *) RING_API_GETCPOINTER(5,"GLint"),* (GLint  *) RING_API_GETCPOINTER(6,"GLint"),* (GLsizei  *) RING_API_GETCPOINTER(7,"GLsizei"),* (GLsizei  *) RING_API_GETCPOINTER(8,"GLsizei"),* (GLint  *) RING_API_GETCPOINTER(9,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(4,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(5))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(5,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(6))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(6,"GLsizei"));
	if (RING_API_ISCPOINTERNOTASSIGNED(7))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(7,"GLsizei"));
	if (RING_API_ISCPOINTERNOTASSIGNED(8))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(8,"GLint"));
}


RING_FUNC(ring_QOpenGLFunctions_glCopyTexSubImage2D)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 9 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glCopyTexSubImage2D(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLint  *) RING_API_GETCPOINTER(3,"GLint"),* (GLint  *) RING_API_GETCPOINTER(4,"GLint"),* (GLint  *) RING_API_GETCPOINTER(5,"GLint"),* (GLint  *) RING_API_GETCPOINTER(6,"GLint"),* (GLint  *) RING_API_GETCPOINTER(7,"GLint"),* (GLsizei  *) RING_API_GETCPOINTER(8,"GLsizei"),* (GLsizei  *) RING_API_GETCPOINTER(9,"GLsizei"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(4,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(5))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(5,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(6))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(6,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(7))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(7,"GLsizei"));
	if (RING_API_ISCPOINTERNOTASSIGNED(8))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(8,"GLsizei"));
}


RING_FUNC(ring_QOpenGLFunctions_glCreateProgram)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	{
		GLuint *pValue ; 
		pValue = (GLuint *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(GLuint)) ;
		*pValue = pObject->glCreateProgram();
		RING_API_RETCPOINTER(pValue,"GLuint");
	}
}


RING_FUNC(ring_QOpenGLFunctions_glCreateShader)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	{
		GLuint *pValue ; 
		pValue = (GLuint *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(GLuint)) ;
		*pValue = pObject->glCreateShader(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
		RING_API_RETCPOINTER(pValue,"GLuint");
	}
}


RING_FUNC(ring_QOpenGLFunctions_glCullFace)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glCullFace(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glDeleteBuffers)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glDeleteBuffers(* (GLsizei  *) RING_API_GETCPOINTER(2,"GLsizei"),(GLuint *) RING_API_GETCPOINTER(3,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLsizei"));
}


RING_FUNC(ring_QOpenGLFunctions_glDeleteFramebuffers)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glDeleteFramebuffers(* (GLsizei  *) RING_API_GETCPOINTER(2,"GLsizei"),(GLuint *) RING_API_GETCPOINTER(3,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLsizei"));
}


RING_FUNC(ring_QOpenGLFunctions_glDeleteProgram)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glDeleteProgram(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
}


RING_FUNC(ring_QOpenGLFunctions_glDeleteRenderbuffers)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glDeleteRenderbuffers(* (GLsizei  *) RING_API_GETCPOINTER(2,"GLsizei"),(GLuint *) RING_API_GETCPOINTER(3,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLsizei"));
}


RING_FUNC(ring_QOpenGLFunctions_glDeleteShader)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glDeleteShader(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
}


RING_FUNC(ring_QOpenGLFunctions_glDeleteTextures)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glDeleteTextures(* (GLsizei  *) RING_API_GETCPOINTER(2,"GLsizei"),(GLuint *) RING_API_GETCPOINTER(3,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLsizei"));
}


RING_FUNC(ring_QOpenGLFunctions_glDepthFunc)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glDepthFunc(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glDepthMask)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glDepthMask(* (GLboolean  *) RING_API_GETCPOINTER(2,"GLboolean"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLboolean"));
}


RING_FUNC(ring_QOpenGLFunctions_glDepthRangef)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glDepthRangef(* (GLclampf  *) RING_API_GETCPOINTER(2,"GLclampf"),* (GLclampf  *) RING_API_GETCPOINTER(3,"GLclampf"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLclampf"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLclampf"));
}


RING_FUNC(ring_QOpenGLFunctions_glDetachShader)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glDetachShader(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"),* (GLuint  *) RING_API_GETCPOINTER(3,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLuint"));
}


RING_FUNC(ring_QOpenGLFunctions_glDisable)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glDisable(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glDisableVertexAttribArray)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glDisableVertexAttribArray(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
}


RING_FUNC(ring_QOpenGLFunctions_glDrawArrays)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glDrawArrays(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLint  *) RING_API_GETCPOINTER(3,"GLint"),* (GLsizei  *) RING_API_GETCPOINTER(4,"GLsizei"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLsizei"));
}


RING_FUNC(ring_QOpenGLFunctions_glDrawElements)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glDrawElements(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLsizei  *) RING_API_GETCPOINTER(3,"GLsizei"),* (GLenum  *) RING_API_GETCPOINTER(4,"GLenum"),(GLvoid *) RING_API_GETCPOINTER(5,"GLvoid"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLsizei"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glEnable)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glEnable(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glEnableVertexAttribArray)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glEnableVertexAttribArray(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
}


RING_FUNC(ring_QOpenGLFunctions_glFinish)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glFinish();
}


RING_FUNC(ring_QOpenGLFunctions_glFlush)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glFlush();
}


RING_FUNC(ring_QOpenGLFunctions_glFramebufferRenderbuffer)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glFramebufferRenderbuffer(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLenum  *) RING_API_GETCPOINTER(3,"GLenum"),* (GLenum  *) RING_API_GETCPOINTER(4,"GLenum"),* (GLuint  *) RING_API_GETCPOINTER(5,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(4,"GLuint"));
}


RING_FUNC(ring_QOpenGLFunctions_glFramebufferTexture2D)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glFramebufferTexture2D(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLenum  *) RING_API_GETCPOINTER(3,"GLenum"),* (GLenum  *) RING_API_GETCPOINTER(4,"GLenum"),* (GLuint  *) RING_API_GETCPOINTER(5,"GLuint"),* (GLint  *) RING_API_GETCPOINTER(6,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(4,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(5))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(5,"GLint"));
}


RING_FUNC(ring_QOpenGLFunctions_glFrontFace)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glFrontFace(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glGenBuffers)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glGenBuffers(* (GLsizei  *) RING_API_GETCPOINTER(2,"GLsizei"),(GLuint *) RING_API_GETCPOINTER(3,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLsizei"));
}


RING_FUNC(ring_QOpenGLFunctions_glGenFramebuffers)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glGenFramebuffers(* (GLsizei  *) RING_API_GETCPOINTER(2,"GLsizei"),(GLuint *) RING_API_GETCPOINTER(3,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLsizei"));
}


RING_FUNC(ring_QOpenGLFunctions_glGenRenderbuffers)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glGenRenderbuffers(* (GLsizei  *) RING_API_GETCPOINTER(2,"GLsizei"),(GLuint *) RING_API_GETCPOINTER(3,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLsizei"));
}


RING_FUNC(ring_QOpenGLFunctions_glGenTextures)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glGenTextures(* (GLsizei  *) RING_API_GETCPOINTER(2,"GLsizei"),(GLuint *) RING_API_GETCPOINTER(3,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLsizei"));
}


RING_FUNC(ring_QOpenGLFunctions_glGenerateMipmap)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glGenerateMipmap(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glGetActiveAttrib)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 8 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(8) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glGetActiveAttrib(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"),* (GLuint  *) RING_API_GETCPOINTER(3,"GLuint"),* (GLsizei  *) RING_API_GETCPOINTER(4,"GLsizei"),(GLsizei *) RING_API_GETCPOINTER(5,"GLsizei"),(GLint *) RING_API_GETCPOINTER(6,"GLint"),(GLenum *) RING_API_GETCPOINTER(7,"GLenum"),RING_API_GETSTRING(8));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLsizei"));
}


RING_FUNC(ring_QOpenGLFunctions_glGetActiveUniform)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 8 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(6) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(8) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glGetActiveUniform(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"),* (GLuint  *) RING_API_GETCPOINTER(3,"GLuint"),* (GLsizei  *) RING_API_GETCPOINTER(4,"GLsizei"),(GLsizei *) RING_API_GETCPOINTER(5,"GLsizei"),(GLint *) RING_API_GETCPOINTER(6,"GLint"),(GLenum *) RING_API_GETCPOINTER(7,"GLenum"),RING_API_GETSTRING(8));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLsizei"));
}


RING_FUNC(ring_QOpenGLFunctions_glGetAttachedShaders)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glGetAttachedShaders(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"),* (GLsizei  *) RING_API_GETCPOINTER(3,"GLsizei"),(GLsizei *) RING_API_GETCPOINTER(4,"GLsizei"),(GLuint *) RING_API_GETCPOINTER(5,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLsizei"));
}


RING_FUNC(ring_QOpenGLFunctions_glGetAttribLocation)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		GLint *pValue ; 
		pValue = (GLint *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(GLint)) ;
		*pValue = pObject->glGetAttribLocation(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"),RING_API_GETSTRING(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
		RING_API_RETCPOINTER(pValue,"GLint");
	}
}


RING_FUNC(ring_QOpenGLFunctions_glGetBooleanv)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glGetBooleanv(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),(GLboolean *) RING_API_GETCPOINTER(3,"GLboolean"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glGetBufferParameteriv)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glGetBufferParameteriv(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLenum  *) RING_API_GETCPOINTER(3,"GLenum"),(GLint *) RING_API_GETCPOINTER(4,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glGetError)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	{
		GLenum *pValue ; 
		pValue = (GLenum *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(GLenum)) ;
		*pValue = pObject->glGetError();
		RING_API_RETCPOINTER(pValue,"GLenum");
	}
}


RING_FUNC(ring_QOpenGLFunctions_glGetFloatv)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glGetFloatv(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),(GLfloat *) RING_API_GETCPOINTER(3,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glGetFramebufferAttachmentParameteriv)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glGetFramebufferAttachmentParameteriv(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLenum  *) RING_API_GETCPOINTER(3,"GLenum"),* (GLenum  *) RING_API_GETCPOINTER(4,"GLenum"),(GLint *) RING_API_GETCPOINTER(5,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glGetIntegerv)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glGetIntegerv(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),(GLint *) RING_API_GETCPOINTER(3,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glGetProgramInfoLog)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glGetProgramInfoLog(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"),* (GLsizei  *) RING_API_GETCPOINTER(3,"GLsizei"),(GLsizei *) RING_API_GETCPOINTER(4,"GLsizei"),RING_API_GETSTRING(5));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLsizei"));
}


RING_FUNC(ring_QOpenGLFunctions_glGetProgramiv)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glGetProgramiv(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"),* (GLenum  *) RING_API_GETCPOINTER(3,"GLenum"),(GLint *) RING_API_GETCPOINTER(4,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glGetRenderbufferParameteriv)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glGetRenderbufferParameteriv(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLenum  *) RING_API_GETCPOINTER(3,"GLenum"),(GLint *) RING_API_GETCPOINTER(4,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glGetShaderInfoLog)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glGetShaderInfoLog(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"),* (GLsizei  *) RING_API_GETCPOINTER(3,"GLsizei"),(GLsizei *) RING_API_GETCPOINTER(4,"GLsizei"),RING_API_GETSTRING(5));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLsizei"));
}


RING_FUNC(ring_QOpenGLFunctions_glGetShaderPrecisionFormat)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glGetShaderPrecisionFormat(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLenum  *) RING_API_GETCPOINTER(3,"GLenum"),(GLint *) RING_API_GETCPOINTER(4,"GLint"),(GLint *) RING_API_GETCPOINTER(5,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glGetShaderSource)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glGetShaderSource(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"),* (GLsizei  *) RING_API_GETCPOINTER(3,"GLsizei"),(GLsizei *) RING_API_GETCPOINTER(4,"GLsizei"),RING_API_GETSTRING(5));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLsizei"));
}


RING_FUNC(ring_QOpenGLFunctions_glGetShaderiv)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glGetShaderiv(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"),* (GLenum  *) RING_API_GETCPOINTER(3,"GLenum"),(GLint *) RING_API_GETCPOINTER(4,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glGetString)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	RING_API_RETCPOINTER(pObject->glGetString(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum")),"GLubyte");
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glGetTexParameterfv)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glGetTexParameterfv(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLenum  *) RING_API_GETCPOINTER(3,"GLenum"),(GLfloat *) RING_API_GETCPOINTER(4,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glGetTexParameteriv)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glGetTexParameteriv(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLenum  *) RING_API_GETCPOINTER(3,"GLenum"),(GLint *) RING_API_GETCPOINTER(4,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glGetUniformLocation)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISSTRING(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		GLint *pValue ; 
		pValue = (GLint *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(GLint)) ;
		*pValue = pObject->glGetUniformLocation(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"),RING_API_GETSTRING(3));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
		RING_API_RETCPOINTER(pValue,"GLint");
	}
}


RING_FUNC(ring_QOpenGLFunctions_glGetUniformfv)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glGetUniformfv(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"),* (GLint  *) RING_API_GETCPOINTER(3,"GLint"),(GLfloat *) RING_API_GETCPOINTER(4,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLint"));
}


RING_FUNC(ring_QOpenGLFunctions_glGetUniformiv)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glGetUniformiv(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"),* (GLint  *) RING_API_GETCPOINTER(3,"GLint"),(GLint *) RING_API_GETCPOINTER(4,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLint"));
}


RING_FUNC(ring_QOpenGLFunctions_glGetVertexAttribfv)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glGetVertexAttribfv(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"),* (GLenum  *) RING_API_GETCPOINTER(3,"GLenum"),(GLfloat *) RING_API_GETCPOINTER(4,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glGetVertexAttribiv)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glGetVertexAttribiv(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"),* (GLenum  *) RING_API_GETCPOINTER(3,"GLenum"),(GLint *) RING_API_GETCPOINTER(4,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glHint)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glHint(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLenum  *) RING_API_GETCPOINTER(3,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glIsBuffer)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	{
		GLboolean *pValue ; 
		pValue = (GLboolean *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(GLboolean)) ;
		*pValue = pObject->glIsBuffer(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
		RING_API_RETCPOINTER(pValue,"GLboolean");
	}
}


RING_FUNC(ring_QOpenGLFunctions_glIsEnabled)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	{
		GLboolean *pValue ; 
		pValue = (GLboolean *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(GLboolean)) ;
		*pValue = pObject->glIsEnabled(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
		RING_API_RETCPOINTER(pValue,"GLboolean");
	}
}


RING_FUNC(ring_QOpenGLFunctions_glIsFramebuffer)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	{
		GLboolean *pValue ; 
		pValue = (GLboolean *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(GLboolean)) ;
		*pValue = pObject->glIsFramebuffer(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
		RING_API_RETCPOINTER(pValue,"GLboolean");
	}
}


RING_FUNC(ring_QOpenGLFunctions_glIsProgram)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	{
		GLboolean *pValue ; 
		pValue = (GLboolean *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(GLboolean)) ;
		*pValue = pObject->glIsProgram(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
		RING_API_RETCPOINTER(pValue,"GLboolean");
	}
}


RING_FUNC(ring_QOpenGLFunctions_glIsRenderbuffer)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	{
		GLboolean *pValue ; 
		pValue = (GLboolean *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(GLboolean)) ;
		*pValue = pObject->glIsRenderbuffer(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
		RING_API_RETCPOINTER(pValue,"GLboolean");
	}
}


RING_FUNC(ring_QOpenGLFunctions_glIsShader)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	{
		GLboolean *pValue ; 
		pValue = (GLboolean *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(GLboolean)) ;
		*pValue = pObject->glIsShader(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
		RING_API_RETCPOINTER(pValue,"GLboolean");
	}
}


RING_FUNC(ring_QOpenGLFunctions_glIsTexture)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	{
		GLboolean *pValue ; 
		pValue = (GLboolean *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(GLboolean)) ;
		*pValue = pObject->glIsTexture(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
		RING_API_RETCPOINTER(pValue,"GLboolean");
	}
}


RING_FUNC(ring_QOpenGLFunctions_glLineWidth)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glLineWidth(* (GLfloat  *) RING_API_GETCPOINTER(2,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLfloat"));
}


RING_FUNC(ring_QOpenGLFunctions_glLinkProgram)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glLinkProgram(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
}


RING_FUNC(ring_QOpenGLFunctions_glPixelStorei)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glPixelStorei(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLint  *) RING_API_GETCPOINTER(3,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLint"));
}


RING_FUNC(ring_QOpenGLFunctions_glPolygonOffset)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glPolygonOffset(* (GLfloat  *) RING_API_GETCPOINTER(2,"GLfloat"),* (GLfloat  *) RING_API_GETCPOINTER(3,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLfloat"));
}


RING_FUNC(ring_QOpenGLFunctions_glReadPixels)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 8 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(8) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glReadPixels(* (GLint  *) RING_API_GETCPOINTER(2,"GLint"),* (GLint  *) RING_API_GETCPOINTER(3,"GLint"),* (GLsizei  *) RING_API_GETCPOINTER(4,"GLsizei"),* (GLsizei  *) RING_API_GETCPOINTER(5,"GLsizei"),* (GLenum  *) RING_API_GETCPOINTER(6,"GLenum"),* (GLenum  *) RING_API_GETCPOINTER(7,"GLenum"),(GLvoid *) RING_API_GETCPOINTER(8,"GLvoid"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLsizei"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(4,"GLsizei"));
	if (RING_API_ISCPOINTERNOTASSIGNED(5))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(5,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(6))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(6,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glReleaseShaderCompiler)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glReleaseShaderCompiler();
}


RING_FUNC(ring_QOpenGLFunctions_glRenderbufferStorage)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glRenderbufferStorage(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLenum  *) RING_API_GETCPOINTER(3,"GLenum"),* (GLsizei  *) RING_API_GETCPOINTER(4,"GLsizei"),* (GLsizei  *) RING_API_GETCPOINTER(5,"GLsizei"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLsizei"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(4,"GLsizei"));
}


RING_FUNC(ring_QOpenGLFunctions_glSampleCoverage)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glSampleCoverage(* (GLclampf  *) RING_API_GETCPOINTER(2,"GLclampf"),* (GLboolean  *) RING_API_GETCPOINTER(3,"GLboolean"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLclampf"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLboolean"));
}


RING_FUNC(ring_QOpenGLFunctions_glScissor)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glScissor(* (GLint  *) RING_API_GETCPOINTER(2,"GLint"),* (GLint  *) RING_API_GETCPOINTER(3,"GLint"),* (GLsizei  *) RING_API_GETCPOINTER(4,"GLsizei"),* (GLsizei  *) RING_API_GETCPOINTER(5,"GLsizei"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLsizei"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(4,"GLsizei"));
}


RING_FUNC(ring_QOpenGLFunctions_glShaderBinary)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glShaderBinary(* (GLint  *) RING_API_GETCPOINTER(2,"GLint"),(GLuint *) RING_API_GETCPOINTER(3,"GLuint"),* (GLenum  *) RING_API_GETCPOINTER(4,"GLenum"),(void *) RING_API_GETCPOINTER(5,"void"),* (GLint  *) RING_API_GETCPOINTER(6,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(5))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(5,"GLint"));
}


RING_FUNC(ring_QOpenGLFunctions_glStencilFunc)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glStencilFunc(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLint  *) RING_API_GETCPOINTER(3,"GLint"),* (GLuint  *) RING_API_GETCPOINTER(4,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLuint"));
}


RING_FUNC(ring_QOpenGLFunctions_glStencilFuncSeparate)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glStencilFuncSeparate(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLenum  *) RING_API_GETCPOINTER(3,"GLenum"),* (GLint  *) RING_API_GETCPOINTER(4,"GLint"),* (GLuint  *) RING_API_GETCPOINTER(5,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(4,"GLuint"));
}


RING_FUNC(ring_QOpenGLFunctions_glStencilMask)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glStencilMask(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
}


RING_FUNC(ring_QOpenGLFunctions_glStencilMaskSeparate)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glStencilMaskSeparate(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLuint  *) RING_API_GETCPOINTER(3,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLuint"));
}


RING_FUNC(ring_QOpenGLFunctions_glStencilOp)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glStencilOp(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLenum  *) RING_API_GETCPOINTER(3,"GLenum"),* (GLenum  *) RING_API_GETCPOINTER(4,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glStencilOpSeparate)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glStencilOpSeparate(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLenum  *) RING_API_GETCPOINTER(3,"GLenum"),* (GLenum  *) RING_API_GETCPOINTER(4,"GLenum"),* (GLenum  *) RING_API_GETCPOINTER(5,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(4,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glTexImage2D)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 10 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(10) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glTexImage2D(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLint  *) RING_API_GETCPOINTER(3,"GLint"),* (GLint  *) RING_API_GETCPOINTER(4,"GLint"),* (GLsizei  *) RING_API_GETCPOINTER(5,"GLsizei"),* (GLsizei  *) RING_API_GETCPOINTER(6,"GLsizei"),* (GLint  *) RING_API_GETCPOINTER(7,"GLint"),* (GLenum  *) RING_API_GETCPOINTER(8,"GLenum"),* (GLenum  *) RING_API_GETCPOINTER(9,"GLenum"),(GLvoid *) RING_API_GETCPOINTER(10,"GLvoid"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(4,"GLsizei"));
	if (RING_API_ISCPOINTERNOTASSIGNED(5))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(5,"GLsizei"));
	if (RING_API_ISCPOINTERNOTASSIGNED(6))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(6,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(7))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(7,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(8))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(8,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glTexParameterf)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glTexParameterf(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLenum  *) RING_API_GETCPOINTER(3,"GLenum"),* (GLfloat  *) RING_API_GETCPOINTER(4,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLfloat"));
}


RING_FUNC(ring_QOpenGLFunctions_glTexParameterfv)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glTexParameterfv(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLenum  *) RING_API_GETCPOINTER(3,"GLenum"),(GLfloat *) RING_API_GETCPOINTER(4,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glTexParameteri)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glTexParameteri(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLenum  *) RING_API_GETCPOINTER(3,"GLenum"),* (GLint  *) RING_API_GETCPOINTER(4,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLint"));
}


RING_FUNC(ring_QOpenGLFunctions_glTexParameteriv)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glTexParameteriv(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLenum  *) RING_API_GETCPOINTER(3,"GLenum"),(GLint *) RING_API_GETCPOINTER(4,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glTexSubImage2D)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 10 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(10) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glTexSubImage2D(* (GLenum  *) RING_API_GETCPOINTER(2,"GLenum"),* (GLint  *) RING_API_GETCPOINTER(3,"GLint"),* (GLint  *) RING_API_GETCPOINTER(4,"GLint"),* (GLint  *) RING_API_GETCPOINTER(5,"GLint"),* (GLsizei  *) RING_API_GETCPOINTER(6,"GLsizei"),* (GLsizei  *) RING_API_GETCPOINTER(7,"GLsizei"),* (GLenum  *) RING_API_GETCPOINTER(8,"GLenum"),* (GLenum  *) RING_API_GETCPOINTER(9,"GLenum"),(GLvoid *) RING_API_GETCPOINTER(10,"GLvoid"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(4,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(5))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(5,"GLsizei"));
	if (RING_API_ISCPOINTERNOTASSIGNED(6))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(6,"GLsizei"));
	if (RING_API_ISCPOINTERNOTASSIGNED(7))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(7,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(8))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(8,"GLenum"));
}


RING_FUNC(ring_QOpenGLFunctions_glUniform1f)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glUniform1f(* (GLint  *) RING_API_GETCPOINTER(2,"GLint"),* (GLfloat  *) RING_API_GETCPOINTER(3,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLfloat"));
}


RING_FUNC(ring_QOpenGLFunctions_glUniform1fv)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glUniform1fv(* (GLint  *) RING_API_GETCPOINTER(2,"GLint"),* (GLsizei  *) RING_API_GETCPOINTER(3,"GLsizei"),(GLfloat *) RING_API_GETCPOINTER(4,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLsizei"));
}


RING_FUNC(ring_QOpenGLFunctions_glUniform1i)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glUniform1i(* (GLint  *) RING_API_GETCPOINTER(2,"GLint"),* (GLint  *) RING_API_GETCPOINTER(3,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLint"));
}


RING_FUNC(ring_QOpenGLFunctions_glUniform1iv)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glUniform1iv(* (GLint  *) RING_API_GETCPOINTER(2,"GLint"),* (GLsizei  *) RING_API_GETCPOINTER(3,"GLsizei"),(GLint *) RING_API_GETCPOINTER(4,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLsizei"));
}


RING_FUNC(ring_QOpenGLFunctions_glUniform2f)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glUniform2f(* (GLint  *) RING_API_GETCPOINTER(2,"GLint"),* (GLfloat  *) RING_API_GETCPOINTER(3,"GLfloat"),* (GLfloat  *) RING_API_GETCPOINTER(4,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLfloat"));
}


RING_FUNC(ring_QOpenGLFunctions_glUniform2fv)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glUniform2fv(* (GLint  *) RING_API_GETCPOINTER(2,"GLint"),* (GLsizei  *) RING_API_GETCPOINTER(3,"GLsizei"),(GLfloat *) RING_API_GETCPOINTER(4,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLsizei"));
}


RING_FUNC(ring_QOpenGLFunctions_glUniform2i)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glUniform2i(* (GLint  *) RING_API_GETCPOINTER(2,"GLint"),* (GLint  *) RING_API_GETCPOINTER(3,"GLint"),* (GLint  *) RING_API_GETCPOINTER(4,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLint"));
}


RING_FUNC(ring_QOpenGLFunctions_glUniform2iv)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glUniform2iv(* (GLint  *) RING_API_GETCPOINTER(2,"GLint"),* (GLsizei  *) RING_API_GETCPOINTER(3,"GLsizei"),(GLint *) RING_API_GETCPOINTER(4,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLsizei"));
}


RING_FUNC(ring_QOpenGLFunctions_glUniform3f)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glUniform3f(* (GLint  *) RING_API_GETCPOINTER(2,"GLint"),* (GLfloat  *) RING_API_GETCPOINTER(3,"GLfloat"),* (GLfloat  *) RING_API_GETCPOINTER(4,"GLfloat"),* (GLfloat  *) RING_API_GETCPOINTER(5,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(4,"GLfloat"));
}


RING_FUNC(ring_QOpenGLFunctions_glUniform3fv)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glUniform3fv(* (GLint  *) RING_API_GETCPOINTER(2,"GLint"),* (GLsizei  *) RING_API_GETCPOINTER(3,"GLsizei"),(GLfloat *) RING_API_GETCPOINTER(4,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLsizei"));
}


RING_FUNC(ring_QOpenGLFunctions_glUniform3i)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glUniform3i(* (GLint  *) RING_API_GETCPOINTER(2,"GLint"),* (GLint  *) RING_API_GETCPOINTER(3,"GLint"),* (GLint  *) RING_API_GETCPOINTER(4,"GLint"),* (GLint  *) RING_API_GETCPOINTER(5,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(4,"GLint"));
}


RING_FUNC(ring_QOpenGLFunctions_glUniform3iv)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glUniform3iv(* (GLint  *) RING_API_GETCPOINTER(2,"GLint"),* (GLsizei  *) RING_API_GETCPOINTER(3,"GLsizei"),(GLint *) RING_API_GETCPOINTER(4,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLsizei"));
}


RING_FUNC(ring_QOpenGLFunctions_glUniform4f)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glUniform4f(* (GLint  *) RING_API_GETCPOINTER(2,"GLint"),* (GLfloat  *) RING_API_GETCPOINTER(3,"GLfloat"),* (GLfloat  *) RING_API_GETCPOINTER(4,"GLfloat"),* (GLfloat  *) RING_API_GETCPOINTER(5,"GLfloat"),* (GLfloat  *) RING_API_GETCPOINTER(6,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(4,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(5))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(5,"GLfloat"));
}


RING_FUNC(ring_QOpenGLFunctions_glUniform4fv)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glUniform4fv(* (GLint  *) RING_API_GETCPOINTER(2,"GLint"),* (GLsizei  *) RING_API_GETCPOINTER(3,"GLsizei"),(GLfloat *) RING_API_GETCPOINTER(4,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLsizei"));
}


RING_FUNC(ring_QOpenGLFunctions_glUniform4i)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glUniform4i(* (GLint  *) RING_API_GETCPOINTER(2,"GLint"),* (GLint  *) RING_API_GETCPOINTER(3,"GLint"),* (GLint  *) RING_API_GETCPOINTER(4,"GLint"),* (GLint  *) RING_API_GETCPOINTER(5,"GLint"),* (GLint  *) RING_API_GETCPOINTER(6,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(4,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(5))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(5,"GLint"));
}


RING_FUNC(ring_QOpenGLFunctions_glUniform4iv)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glUniform4iv(* (GLint  *) RING_API_GETCPOINTER(2,"GLint"),* (GLsizei  *) RING_API_GETCPOINTER(3,"GLsizei"),(GLint *) RING_API_GETCPOINTER(4,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLsizei"));
}


RING_FUNC(ring_QOpenGLFunctions_glUniformMatrix2fv)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glUniformMatrix2fv(* (GLint  *) RING_API_GETCPOINTER(2,"GLint"),* (GLsizei  *) RING_API_GETCPOINTER(3,"GLsizei"),* (GLboolean  *) RING_API_GETCPOINTER(4,"GLboolean"),(GLfloat *) RING_API_GETCPOINTER(5,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLsizei"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLboolean"));
}


RING_FUNC(ring_QOpenGLFunctions_glUniformMatrix3fv)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glUniformMatrix3fv(* (GLint  *) RING_API_GETCPOINTER(2,"GLint"),* (GLsizei  *) RING_API_GETCPOINTER(3,"GLsizei"),* (GLboolean  *) RING_API_GETCPOINTER(4,"GLboolean"),(GLfloat *) RING_API_GETCPOINTER(5,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLsizei"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLboolean"));
}


RING_FUNC(ring_QOpenGLFunctions_glUniformMatrix4fv)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(5) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glUniformMatrix4fv(* (GLint  *) RING_API_GETCPOINTER(2,"GLint"),* (GLsizei  *) RING_API_GETCPOINTER(3,"GLsizei"),* (GLboolean  *) RING_API_GETCPOINTER(4,"GLboolean"),(GLfloat *) RING_API_GETCPOINTER(5,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLsizei"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLboolean"));
}


RING_FUNC(ring_QOpenGLFunctions_glUseProgram)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glUseProgram(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
}


RING_FUNC(ring_QOpenGLFunctions_glValidateProgram)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glValidateProgram(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
}


RING_FUNC(ring_QOpenGLFunctions_glVertexAttrib1f)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glVertexAttrib1f(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"),* (GLfloat  *) RING_API_GETCPOINTER(3,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLfloat"));
}


RING_FUNC(ring_QOpenGLFunctions_glVertexAttrib1fv)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glVertexAttrib1fv(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"),(GLfloat *) RING_API_GETCPOINTER(3,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
}


RING_FUNC(ring_QOpenGLFunctions_glVertexAttrib2f)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glVertexAttrib2f(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"),* (GLfloat  *) RING_API_GETCPOINTER(3,"GLfloat"),* (GLfloat  *) RING_API_GETCPOINTER(4,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLfloat"));
}


RING_FUNC(ring_QOpenGLFunctions_glVertexAttrib2fv)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glVertexAttrib2fv(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"),(GLfloat *) RING_API_GETCPOINTER(3,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
}


RING_FUNC(ring_QOpenGLFunctions_glVertexAttrib3f)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glVertexAttrib3f(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"),* (GLfloat  *) RING_API_GETCPOINTER(3,"GLfloat"),* (GLfloat  *) RING_API_GETCPOINTER(4,"GLfloat"),* (GLfloat  *) RING_API_GETCPOINTER(5,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(4,"GLfloat"));
}


RING_FUNC(ring_QOpenGLFunctions_glVertexAttrib3fv)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glVertexAttrib3fv(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"),(GLfloat *) RING_API_GETCPOINTER(3,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
}


RING_FUNC(ring_QOpenGLFunctions_glVertexAttrib4f)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 6 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glVertexAttrib4f(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"),* (GLfloat  *) RING_API_GETCPOINTER(3,"GLfloat"),* (GLfloat  *) RING_API_GETCPOINTER(4,"GLfloat"),* (GLfloat  *) RING_API_GETCPOINTER(5,"GLfloat"),* (GLfloat  *) RING_API_GETCPOINTER(6,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(4,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(5))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(5,"GLfloat"));
}


RING_FUNC(ring_QOpenGLFunctions_glVertexAttrib4fv)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glVertexAttrib4fv(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"),(GLfloat *) RING_API_GETCPOINTER(3,"GLfloat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
}


RING_FUNC(ring_QOpenGLFunctions_glVertexAttribPointer)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 7 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISPOINTER(7) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->glVertexAttribPointer(* (GLuint  *) RING_API_GETCPOINTER(2,"GLuint"),* (GLint  *) RING_API_GETCPOINTER(3,"GLint"),* (GLenum  *) RING_API_GETCPOINTER(4,"GLenum"),* (GLboolean  *) RING_API_GETCPOINTER(5,"GLboolean"),* (GLsizei  *) RING_API_GETCPOINTER(6,"GLsizei"),(void *) RING_API_GETCPOINTER(7,"void"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLuint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLenum"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(4,"GLboolean"));
	if (RING_API_ISCPOINTERNOTASSIGNED(5))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(5,"GLsizei"));
}


RING_FUNC(ring_QOpenGLFunctions_glViewport)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 5 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->glViewport(* (GLint  *) RING_API_GETCPOINTER(2,"GLint"),* (GLint  *) RING_API_GETCPOINTER(3,"GLint"),* (GLsizei  *) RING_API_GETCPOINTER(4,"GLsizei"),* (GLsizei  *) RING_API_GETCPOINTER(5,"GLsizei"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(2))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(2,"GLint"));
	if (RING_API_ISCPOINTERNOTASSIGNED(3))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(3,"GLsizei"));
	if (RING_API_ISCPOINTERNOTASSIGNED(4))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(4,"GLsizei"));
}


RING_FUNC(ring_QOpenGLFunctions_hasOpenGLFeature)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->hasOpenGLFeature( (QOpenGLFunctions::OpenGLFeature )  (int) RING_API_GETNUMBER(2)));
}


RING_FUNC(ring_QOpenGLFunctions_initializeOpenGLFunctions)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	pObject->initializeOpenGLFunctions();
}


RING_FUNC(ring_QOpenGLFunctions_openGLFeatures)
{
	QOpenGLFunctions *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
	RING_API_RETNUMBER(pObject->openGLFeatures());
}


RING_FUNC(ring_QOpenGLContext_create)
{
	QOpenGLContext *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLContext *) RING_API_GETCPOINTER(1,"QOpenGLContext");
	RING_API_RETNUMBER(pObject->create());
}


RING_FUNC(ring_QOpenGLContext_defaultFramebufferObject)
{
	QOpenGLContext *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLContext *) RING_API_GETCPOINTER(1,"QOpenGLContext");
	{
		GLuint *pValue ; 
		pValue = (GLuint *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(GLuint)) ;
		*pValue = pObject->defaultFramebufferObject();
		RING_API_RETCPOINTER(pValue,"GLuint");
	}
}


RING_FUNC(ring_QOpenGLContext_doneCurrent)
{
	QOpenGLContext *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLContext *) RING_API_GETCPOINTER(1,"QOpenGLContext");
	pObject->doneCurrent();
}


RING_FUNC(ring_QOpenGLContext_extensions)
{
	QOpenGLContext *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLContext *) RING_API_GETCPOINTER(1,"QOpenGLContext");
	{
		QSet<QByteArray> *pValue ; 
		pValue = (QSet<QByteArray> *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QSet<QByteArray>)) ;
		*pValue = pObject->extensions();
		RING_API_RETCPOINTER(pValue,"QSet<QByteArray>");
	}
}


RING_FUNC(ring_QOpenGLContext_format)
{
	QOpenGLContext *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLContext *) RING_API_GETCPOINTER(1,"QOpenGLContext");
	{
		QSurfaceFormat *pValue ; 
		pValue = (QSurfaceFormat *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QSurfaceFormat)) ;
		*pValue = pObject->format();
		RING_API_RETCPOINTER(pValue,"QSurfaceFormat");
	}
}


RING_FUNC(ring_QOpenGLContext_functions)
{
	QOpenGLContext *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLContext *) RING_API_GETCPOINTER(1,"QOpenGLContext");
	RING_API_RETCPOINTER(pObject->functions(),"QOpenGLFunctions");
}


RING_FUNC(ring_QOpenGLContext_getProcAddress)
{
	QOpenGLContext *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLContext *) RING_API_GETCPOINTER(1,"QOpenGLContext");
	{
		QFunctionPointer *pValue ; 
		pValue = (QFunctionPointer *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QFunctionPointer)) ;
		*pValue = pObject->getProcAddress(* (QByteArray  *) RING_API_GETCPOINTER(2,"QByteArray"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QByteArray"));
		RING_API_RETCPOINTER(pValue,"QFunctionPointer");
	}
}


RING_FUNC(ring_QOpenGLContext_getProcAddress_2)
{
	QOpenGLContext *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLContext *) RING_API_GETCPOINTER(1,"QOpenGLContext");
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	{
		QFunctionPointer *pValue ; 
		pValue = (QFunctionPointer *) ring_state_malloc(((VM *) pPointer)->pRingState,sizeof(QFunctionPointer)) ;
		*pValue = pObject->getProcAddress(RING_API_GETSTRING(2));
		RING_API_RETCPOINTER(pValue,"QFunctionPointer");
	}
}


RING_FUNC(ring_QOpenGLContext_hasExtension)
{
	QOpenGLContext *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLContext *) RING_API_GETCPOINTER(1,"QOpenGLContext");
	RING_API_RETNUMBER(pObject->hasExtension(* (QByteArray  *) RING_API_GETCPOINTER(2,"QByteArray")));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QByteArray"));
}


RING_FUNC(ring_QOpenGLContext_isOpenGLES)
{
	QOpenGLContext *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLContext *) RING_API_GETCPOINTER(1,"QOpenGLContext");
	RING_API_RETNUMBER(pObject->isOpenGLES());
}


RING_FUNC(ring_QOpenGLContext_isValid)
{
	QOpenGLContext *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLContext *) RING_API_GETCPOINTER(1,"QOpenGLContext");
	RING_API_RETNUMBER(pObject->isValid());
}


RING_FUNC(ring_QOpenGLContext_makeCurrent)
{
	QOpenGLContext *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLContext *) RING_API_GETCPOINTER(1,"QOpenGLContext");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->makeCurrent((QSurface *) RING_API_GETCPOINTER(2,"QSurface")));
}


RING_FUNC(ring_QOpenGLContext_nativeHandle)
{
	QOpenGLContext *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLContext *) RING_API_GETCPOINTER(1,"QOpenGLContext");
	{
		QVariant *pValue ; 
		pValue = new QVariant() ;
		*pValue = pObject->nativeHandle();
		RING_API_RETCPOINTER(pValue,"QVariant");
	}
}


RING_FUNC(ring_QOpenGLContext_screen)
{
	QOpenGLContext *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLContext *) RING_API_GETCPOINTER(1,"QOpenGLContext");
	RING_API_RETCPOINTER(pObject->screen(),"QScreen");
}


RING_FUNC(ring_QOpenGLContext_setFormat)
{
	QOpenGLContext *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLContext *) RING_API_GETCPOINTER(1,"QOpenGLContext");
	pObject->setFormat(* (QSurfaceFormat  *) RING_API_GETCPOINTER(2,"QSurfaceFormat"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QSurfaceFormat"));
}


RING_FUNC(ring_QOpenGLContext_setNativeHandle)
{
	QOpenGLContext *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLContext *) RING_API_GETCPOINTER(1,"QOpenGLContext");
	pObject->setNativeHandle(* (QVariant  *) RING_API_GETCPOINTER(2,"QVariant"));
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QVariant"));
}


RING_FUNC(ring_QOpenGLContext_setScreen)
{
	QOpenGLContext *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLContext *) RING_API_GETCPOINTER(1,"QOpenGLContext");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setScreen((QScreen *) RING_API_GETCPOINTER(2,"QScreen"));
}


RING_FUNC(ring_QOpenGLContext_setShareContext)
{
	QOpenGLContext *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLContext *) RING_API_GETCPOINTER(1,"QOpenGLContext");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->setShareContext((QOpenGLContext *) RING_API_GETCPOINTER(2,"QOpenGLContext"));
}


RING_FUNC(ring_QOpenGLContext_shareContext)
{
	QOpenGLContext *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLContext *) RING_API_GETCPOINTER(1,"QOpenGLContext");
	RING_API_RETCPOINTER(pObject->shareContext(),"QOpenGLContext");
}


RING_FUNC(ring_QOpenGLContext_shareGroup)
{
	QOpenGLContext *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLContext *) RING_API_GETCPOINTER(1,"QOpenGLContext");
	RING_API_RETCPOINTER(pObject->shareGroup(),"QOpenGLContextGroup");
}


RING_FUNC(ring_QOpenGLContext_surface)
{
	QOpenGLContext *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLContext *) RING_API_GETCPOINTER(1,"QOpenGLContext");
	RING_API_RETCPOINTER(pObject->surface(),"QSurface");
}


RING_FUNC(ring_QOpenGLContext_swapBuffers)
{
	QOpenGLContext *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLContext *) RING_API_GETCPOINTER(1,"QOpenGLContext");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject->swapBuffers((QSurface *) RING_API_GETCPOINTER(2,"QSurface"));
}


RING_FUNC(ring_QOpenGLContext_versionFunctions)
{
	QOpenGLContext *pObject ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLContext *) RING_API_GETCPOINTER(1,"QOpenGLContext");
	RING_API_RETCPOINTER(pObject->versionFunctions(* (QOpenGLVersionProfile  *) RING_API_GETCPOINTER(2,"QOpenGLVersionProfile")),"QAbstractOpenGLFunctions");
	if (RING_API_ISCPOINTERNOTASSIGNED(1))
		ring_state_free(((VM *) pPointer)->pRingState,RING_API_GETCPOINTER(1,"QOpenGLVersionProfile"));
}


RING_FUNC(ring_QOpenGLContext_versionFunctions_2)
{
	QOpenGLContext *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLContext *) RING_API_GETCPOINTER(1,"QOpenGLContext");
	RING_API_RETCPOINTER(pObject->versionFunctions(),"TYPE");
}


RING_FUNC(ring_QOpenGLContext_areSharing)
{
	QOpenGLContext *pObject ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLContext *) RING_API_GETCPOINTER(1,"QOpenGLContext");
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	RING_API_RETNUMBER(pObject->areSharing((QOpenGLContext *) RING_API_GETCPOINTER(2,"QOpenGLContext"),(QOpenGLContext *) RING_API_GETCPOINTER(3,"QOpenGLContext")));
}


RING_FUNC(ring_QOpenGLContext_currentContext)
{
	QOpenGLContext *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLContext *) RING_API_GETCPOINTER(1,"QOpenGLContext");
	RING_API_RETCPOINTER(pObject->currentContext(),"QOpenGLContext");
}


RING_FUNC(ring_QOpenGLContext_globalShareContext)
{
	QOpenGLContext *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLContext *) RING_API_GETCPOINTER(1,"QOpenGLContext");
	RING_API_RETCPOINTER(pObject->globalShareContext(),"QOpenGLContext");
}


RING_FUNC(ring_QOpenGLContext_openGLModuleHandle)
{
	QOpenGLContext *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLContext *) RING_API_GETCPOINTER(1,"QOpenGLContext");
	RING_API_RETCPOINTER(pObject->openGLModuleHandle(),"void");
}


RING_FUNC(ring_QOpenGLContext_openGLModuleType)
{
	QOpenGLContext *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLContext *) RING_API_GETCPOINTER(1,"QOpenGLContext");
	RING_API_RETNUMBER(pObject->openGLModuleType());
}


RING_FUNC(ring_QOpenGLContext_supportsThreadedOpenGL)
{
	QOpenGLContext *pObject ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	RING_API_IGNORECPOINTERTYPE ;
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	pObject = (QOpenGLContext *) RING_API_GETCPOINTER(1,"QOpenGLContext");
	RING_API_RETNUMBER(pObject->supportsThreadedOpenGL());
}

RING_FUNC(ring_QObject_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QObject *pObject = new QObject();
	RING_API_RETCPOINTER(pObject,"QObject");
}

RING_FUNC(ring_QWidget_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QWidget *pObject = new QWidget();
	RING_API_RETCPOINTER(pObject,"QWidget");
}

RING_FUNC(ring_QLabel_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QLabel *pObject = new QLabel((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QLabel");
}

RING_FUNC(ring_QPushButton_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GPushButton *pObject = new GPushButton((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QPushButton");
}

RING_FUNC(ring_QBitmap_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QBitmap *pObject = new QBitmap();
	RING_API_RETCPOINTER(pObject,"QBitmap");
}

RING_FUNC(ring_QPixmap_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISSTRING(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QPixmap *pObject = new QPixmap(RING_API_GETSTRING(1));
	RING_API_RETCPOINTER(pObject,"QPixmap");
}

RING_FUNC(ring_QPixmap2_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	if ( ! RING_API_ISNUMBER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QPixmap *pObject = new QPixmap( (int ) RING_API_GETNUMBER(1), (int ) RING_API_GETNUMBER(2));
	RING_API_RETCPOINTER(pObject,"QPixmap2");
}

RING_FUNC(ring_QIcon_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	QIcon *pObject = new QIcon(* (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap"));
	RING_API_RETCPOINTER(pObject,"QIcon");
}

RING_FUNC(ring_QSize_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	if ( ! RING_API_ISNUMBER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QSize *pObject = new QSize( (int ) RING_API_GETNUMBER(1), (int ) RING_API_GETNUMBER(2));
	RING_API_RETCPOINTER(pObject,"QSize");
}

RING_FUNC(ring_QLineEdit_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GLineEdit *pObject = new GLineEdit((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QLineEdit");
}

RING_FUNC(ring_QVBoxLayout_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QVBoxLayout *pObject = new QVBoxLayout();
	RING_API_RETCPOINTER(pObject,"QVBoxLayout");
}

RING_FUNC(ring_QHBoxLayout_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QHBoxLayout *pObject = new QHBoxLayout();
	RING_API_RETCPOINTER(pObject,"QHBoxLayout");
}

RING_FUNC(ring_QTextEdit_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GTextEdit *pObject = new GTextEdit((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QTextEdit");
}

RING_FUNC(ring_QListWidget_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GListWidget *pObject = new GListWidget((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QListWidget");
}

RING_FUNC(ring_QTreeView_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GTreeView *pObject = new GTreeView((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QTreeView");
}

RING_FUNC(ring_QDir_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QDir *pObject = new QDir();
	RING_API_RETCPOINTER(pObject,"QDir");
}

RING_FUNC(ring_QFileSystemModel_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QFileSystemModel *pObject = new QFileSystemModel();
	RING_API_RETCPOINTER(pObject,"QFileSystemModel");
}

RING_FUNC(ring_QTreeWidget_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GTreeWidget *pObject = new GTreeWidget((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QTreeWidget");
}

RING_FUNC(ring_QTreeWidgetItem_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QTreeWidgetItem *pObject = new QTreeWidgetItem();
	RING_API_RETCPOINTER(pObject,"QTreeWidgetItem");
}

RING_FUNC(ring_QComboBox_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GComboBox *pObject = new GComboBox((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QComboBox");
}

RING_FUNC(ring_QMenuBar_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QMenuBar *pObject = new QMenuBar((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QMenuBar");
}

RING_FUNC(ring_QMenu_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QMenu *pObject = new QMenu((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QMenu");
}

RING_FUNC(ring_QToolBar_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QToolBar *pObject = new QToolBar((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QToolBar");
}

RING_FUNC(ring_QMainWindow_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QMainWindow *pObject = new QMainWindow();
	RING_API_RETCPOINTER(pObject,"QMainWindow");
}

RING_FUNC(ring_QStatusBar_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QStatusBar *pObject = new QStatusBar((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QStatusBar");
}

RING_FUNC(ring_QDockWidget_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GDockWidget *pObject = new GDockWidget((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (Qt::WindowType )  (int) RING_API_GETNUMBER(2), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QDockWidget");
}

RING_FUNC(ring_QTabWidget_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GTabWidget *pObject = new GTabWidget((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QTabWidget");
}

RING_FUNC(ring_QTableWidgetItem_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISSTRING(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QTableWidgetItem *pObject = new QTableWidgetItem(RING_API_GETSTRING(1));
	RING_API_RETCPOINTER(pObject,"QTableWidgetItem");
}

RING_FUNC(ring_QFrame_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QFrame *pObject = new QFrame((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (Qt::WindowType )  (int) RING_API_GETNUMBER(2));
	RING_API_RETCPOINTER(pObject,"QFrame");
}

RING_FUNC(ring_QFrame2_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QFrame *pObject = new QFrame();
	RING_API_RETCPOINTER(pObject,"QFrame2");
}

RING_FUNC(ring_QFrame3_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QFrame *pObject = new QFrame((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QFrame3");
}

RING_FUNC(ring_QAbstractScrollArea_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QAbstractScrollArea *pObject = new QAbstractScrollArea((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QAbstractScrollArea");
}

RING_FUNC(ring_QTableView_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QTableView *pObject = new QTableView((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QTableView");
}

RING_FUNC(ring_QTableWidget_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GTableWidget *pObject = new GTableWidget((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QTableWidget");
}

RING_FUNC(ring_QProgressBar_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GProgressBar *pObject = new GProgressBar((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QProgressBar");
}

RING_FUNC(ring_QSpinBox_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GSpinBox *pObject = new GSpinBox((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QSpinBox");
}

RING_FUNC(ring_QAbstractSlider_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QAbstractSlider *pObject = new QAbstractSlider((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QAbstractSlider");
}

RING_FUNC(ring_QSlider_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GSlider *pObject = new GSlider((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QSlider");
}

RING_FUNC(ring_QDateEdit_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QDateEdit *pObject = new QDateEdit((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QDateEdit");
}

RING_FUNC(ring_QDateTimeEdit_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QDateTimeEdit *pObject = new QDateTimeEdit((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QDateTimeEdit");
}

RING_FUNC(ring_QAbstractSpinBox_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QAbstractSpinBox *pObject = new QAbstractSpinBox((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QAbstractSpinBox");
}

RING_FUNC(ring_QDial_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GDial *pObject = new GDial((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QDial");
}

RING_FUNC(ring_QWebView_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GWebView *pObject = new GWebView((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QWebView");
}

RING_FUNC(ring_QUrl_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISSTRING(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QUrl *pObject = new QUrl(RING_API_GETSTRING(1));
	RING_API_RETCPOINTER(pObject,"QUrl");
}

RING_FUNC(ring_QCheckBox_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GCheckBox *pObject = new GCheckBox((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QCheckBox");
}

RING_FUNC(ring_QRadioButton_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GRadioButton *pObject = new GRadioButton((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QRadioButton");
}

RING_FUNC(ring_QButtonGroup_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GButtonGroup *pObject = new GButtonGroup((QObject *) RING_API_GETCPOINTER(1,"QObject"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QButtonGroup");
}

RING_FUNC(ring_QMediaPlayer_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QMediaPlayer *pObject = new QMediaPlayer();
	RING_API_RETCPOINTER(pObject,"QMediaPlayer");
}

RING_FUNC(ring_QMediaPlaylist_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QMediaPlaylist *pObject = new QMediaPlaylist();
	RING_API_RETCPOINTER(pObject,"QMediaPlaylist");
}

RING_FUNC(ring_QVideoWidget_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GVideoWidget *pObject = new GVideoWidget((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QVideoWidget");
}

RING_FUNC(ring_QAction_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GAction *pObject = new GAction((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QAction");
}

RING_FUNC(ring_QEvent_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISNUMBER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QEvent *pObject = new QEvent( (QEvent::Type )  (int) RING_API_GETNUMBER(1));
	RING_API_RETCPOINTER(pObject,"QEvent");
}

RING_FUNC(ring_QMessageBox_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QMessageBox *pObject = new QMessageBox((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QMessageBox");
}

RING_FUNC(ring_QTimer_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GTimer *pObject = new GTimer((QObject *) RING_API_GETCPOINTER(1,"QObject"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QTimer");
}

RING_FUNC(ring_QFileDialog_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QFileDialog *pObject = new QFileDialog((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QFileDialog");
}

RING_FUNC(ring_QPainter_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QPainter *pObject = new QPainter();
	RING_API_RETCPOINTER(pObject,"QPainter");
}

RING_FUNC(ring_QPainter2_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QPainter *pObject = new QPainter((QPaintDevice *) RING_API_GETCPOINTER(1,"QPaintDevice"));
	RING_API_RETCPOINTER(pObject,"QPainter2");
}

RING_FUNC(ring_QPicture_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QPicture *pObject = new QPicture();
	RING_API_RETCPOINTER(pObject,"QPicture");
}

RING_FUNC(ring_QPen_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QPen *pObject = new QPen();
	RING_API_RETCPOINTER(pObject,"QPen");
}

RING_FUNC(ring_QColor_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QColor *pObject = new QColor();
	RING_API_RETCPOINTER(pObject,"QColor");
}

RING_FUNC(ring_QPrinter_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISNUMBER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QPrinter *pObject = new QPrinter( (QPrinter::PrinterMode)  (int) RING_API_GETNUMBER(1));
	RING_API_RETCPOINTER(pObject,"QPrinter");
}

RING_FUNC(ring_QFont_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 4 ) {
		RING_API_ERROR(RING_API_MISS4PARA);
		return ;
	}
	if ( ! RING_API_ISSTRING(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(4) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QFont *pObject = new QFont(RING_API_GETSTRING(1), (int) RING_API_GETNUMBER(2), (int) RING_API_GETNUMBER(3), (bool) RING_API_GETNUMBER(4));
	RING_API_RETCPOINTER(pObject,"QFont");
}

RING_FUNC(ring_QBrush_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QBrush *pObject = new QBrush();
	RING_API_RETCPOINTER(pObject,"QBrush");
}

RING_FUNC(ring_QByteArray_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QByteArray *pObject = new QByteArray();
	RING_API_RETCPOINTER(pObject,"QByteArray");
}

RING_FUNC(ring_QNetworkProxy_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QNetworkProxy *pObject = new QNetworkProxy();
	RING_API_RETCPOINTER(pObject,"QNetworkProxy");
}

RING_FUNC(ring_QTcpSocket_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GTcpSocket *pObject = new GTcpSocket((QObject *) RING_API_GETCPOINTER(1,"QObject"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QTcpSocket");
}

RING_FUNC(ring_QTcpServer_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GTcpServer *pObject = new GTcpServer((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QTcpServer");
}

RING_FUNC(ring_QHostAddress_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QHostAddress *pObject = new QHostAddress();
	RING_API_RETCPOINTER(pObject,"QHostAddress");
}

RING_FUNC(ring_QHostInfo_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QHostInfo *pObject = new QHostInfo();
	RING_API_RETCPOINTER(pObject,"QHostInfo");
}

RING_FUNC(ring_QFileInfo_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QFileInfo *pObject = new QFileInfo();
	RING_API_RETCPOINTER(pObject,"QFileInfo");
}

RING_FUNC(ring_QDirModel_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QDirModel *pObject = new QDirModel();
	RING_API_RETCPOINTER(pObject,"QDirModel");
}

RING_FUNC(ring_QFontDialog_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QFontDialog *pObject = new QFontDialog();
	RING_API_RETCPOINTER(pObject,"QFontDialog");
}

RING_FUNC(ring_QDialog_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QDialog *pObject = new QDialog((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QDialog");
}

RING_FUNC(ring_QTextCursor_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QTextCursor *pObject = new QTextCursor();
	RING_API_RETCPOINTER(pObject,"QTextCursor");
}

RING_FUNC(ring_QColorDialog_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QColorDialog *pObject = new QColorDialog();
	RING_API_RETCPOINTER(pObject,"QColorDialog");
}

RING_FUNC(ring_QStringList_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QStringList *pObject = new QStringList();
	RING_API_RETCPOINTER(pObject,"QStringList");
}

RING_FUNC(ring_QKeySequence_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISSTRING(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QKeySequence *pObject = new QKeySequence(RING_API_GETSTRING(1));
	RING_API_RETCPOINTER(pObject,"QKeySequence");
}

RING_FUNC(ring_QLCDNumber_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QLCDNumber *pObject = new QLCDNumber((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QLCDNumber");
}

RING_FUNC(ring_QInputDialog_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QInputDialog *pObject = new QInputDialog((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QInputDialog");
}

RING_FUNC(ring_QAllEvents_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GAllEvents *pObject = new GAllEvents((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QAllEvents");
}

RING_FUNC(ring_QDesktopWidget_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QDesktopWidget *pObject = new QDesktopWidget();
	RING_API_RETCPOINTER(pObject,"QDesktopWidget");
}

RING_FUNC(ring_QRect_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QRect *pObject = new QRect();
	RING_API_RETCPOINTER(pObject,"QRect");
}

RING_FUNC(ring_QTextDocument_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QTextDocument *pObject = new QTextDocument();
	RING_API_RETCPOINTER(pObject,"QTextDocument");
}

RING_FUNC(ring_QTextBlock_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QTextBlock *pObject = new QTextBlock();
	RING_API_RETCPOINTER(pObject,"QTextBlock");
}

RING_FUNC(ring_QTime_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QTime *pObject = new QTime();
	RING_API_RETCPOINTER(pObject,"QTime");
}

RING_FUNC(ring_QListWidgetItem_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QListWidgetItem *pObject = new QListWidgetItem();
	RING_API_RETCPOINTER(pObject,"QListWidgetItem");
}

RING_FUNC(ring_QSystemTrayIcon_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QSystemTrayIcon *pObject = new QSystemTrayIcon();
	RING_API_RETCPOINTER(pObject,"QSystemTrayIcon");
}

RING_FUNC(ring_QDate_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QDate *pObject = new QDate();
	RING_API_RETCPOINTER(pObject,"QDate");
}

RING_FUNC(ring_QSqlDatabase_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QSqlDatabase *pObject = new QSqlDatabase();
	RING_API_RETCPOINTER(pObject,"QSqlDatabase");
}

RING_FUNC(ring_QSqlQuery_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QSqlQuery *pObject = new QSqlQuery();
	RING_API_RETCPOINTER(pObject,"QSqlQuery");
}

RING_FUNC(ring_QSqlError_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 3 ) {
		RING_API_ERROR(RING_API_MISS3PARA);
		return ;
	}
	if ( ! RING_API_ISSTRING(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(3) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QSqlError *pObject = new QSqlError(RING_API_GETSTRING(1),RING_API_GETSTRING(2), (QSqlError::ErrorType)  (int) RING_API_GETNUMBER(3));
	RING_API_RETCPOINTER(pObject,"QSqlError");
}

RING_FUNC(ring_QSqlIndex_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	if ( ! RING_API_ISSTRING(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISSTRING(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QSqlIndex *pObject = new QSqlIndex(RING_API_GETSTRING(1),RING_API_GETSTRING(2));
	RING_API_RETCPOINTER(pObject,"QSqlIndex");
}

RING_FUNC(ring_QSqlRecord_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QSqlRecord *pObject = new QSqlRecord();
	RING_API_RETCPOINTER(pObject,"QSqlRecord");
}

RING_FUNC(ring_QSqlField_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	if ( ! RING_API_ISSTRING(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISNUMBER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QSqlField *pObject = new QSqlField(RING_API_GETSTRING(1), (QVariant::Type)  (int) RING_API_GETNUMBER(2));
	RING_API_RETCPOINTER(pObject,"QSqlField");
}

RING_FUNC(ring_QVariant_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QVariant *pObject = new QVariant();
	RING_API_RETCPOINTER(pObject,"QVariant");
}

RING_FUNC(ring_QNetworkRequest_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	QNetworkRequest *pObject = new QNetworkRequest(* (QUrl *) RING_API_GETCPOINTER(1,"QUrl"));
	RING_API_RETCPOINTER(pObject,"QNetworkRequest");
}

RING_FUNC(ring_QNetworkAccessManager_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GNetworkAccessManager *pObject = new GNetworkAccessManager((QObject *) RING_API_GETCPOINTER(1,"QObject"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QNetworkAccessManager");
}

RING_FUNC(ring_QPainterPath_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QPainterPath *pObject = new QPainterPath();
	RING_API_RETCPOINTER(pObject,"QPainterPath");
}

RING_FUNC(ring_QImage_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QImage *pObject = new QImage();
	RING_API_RETCPOINTER(pObject,"QImage");
}

RING_FUNC(ring_RingCodeHighlighter_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	Highlighter *pObject = new Highlighter((QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument"));
	RING_API_RETCPOINTER(pObject,"RingCodeHighlighter");
}

RING_FUNC(ring_QXmlStreamReader_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QXmlStreamReader *pObject = new QXmlStreamReader();
	RING_API_RETCPOINTER(pObject,"QXmlStreamReader");
}

RING_FUNC(ring_QXmlStreamWriter_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QXmlStreamWriter *pObject = new QXmlStreamWriter();
	RING_API_RETCPOINTER(pObject,"QXmlStreamWriter");
}

RING_FUNC(ring_QXmlStreamNotationDeclaration_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QXmlStreamNotationDeclaration *pObject = new QXmlStreamNotationDeclaration();
	RING_API_RETCPOINTER(pObject,"QXmlStreamNotationDeclaration");
}

RING_FUNC(ring_QXmlStreamNamespaceDeclaration_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QXmlStreamNamespaceDeclaration *pObject = new QXmlStreamNamespaceDeclaration();
	RING_API_RETCPOINTER(pObject,"QXmlStreamNamespaceDeclaration");
}

RING_FUNC(ring_QXmlStreamEntityResolver_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QXmlStreamEntityResolver *pObject = new QXmlStreamEntityResolver();
	RING_API_RETCPOINTER(pObject,"QXmlStreamEntityResolver");
}

RING_FUNC(ring_QXmlStreamEntityDeclaration_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QXmlStreamEntityDeclaration *pObject = new QXmlStreamEntityDeclaration();
	RING_API_RETCPOINTER(pObject,"QXmlStreamEntityDeclaration");
}

RING_FUNC(ring_QXmlStreamAttributes_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QXmlStreamAttributes *pObject = new QXmlStreamAttributes();
	RING_API_RETCPOINTER(pObject,"QXmlStreamAttributes");
}

RING_FUNC(ring_QXmlStreamAttribute_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QXmlStreamAttribute *pObject = new QXmlStreamAttribute();
	RING_API_RETCPOINTER(pObject,"QXmlStreamAttribute");
}

RING_FUNC(ring_QThread_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GThread *pObject = new GThread((QObject *) RING_API_GETCPOINTER(1,"QObject"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QThread");
}

RING_FUNC(ring_QThreadPool_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QThreadPool *pObject = new QThreadPool();
	RING_API_RETCPOINTER(pObject,"QThreadPool");
}

RING_FUNC(ring_QRegularExpression_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QRegularExpression *pObject = new QRegularExpression();
	RING_API_RETCPOINTER(pObject,"QRegularExpression");
}

RING_FUNC(ring_QRegularExpressionMatch_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QRegularExpressionMatch *pObject = new QRegularExpressionMatch();
	RING_API_RETCPOINTER(pObject,"QRegularExpressionMatch");
}

RING_FUNC(ring_QRegularExpressionMatchIterator_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QRegularExpressionMatchIterator *pObject = new QRegularExpressionMatchIterator();
	RING_API_RETCPOINTER(pObject,"QRegularExpressionMatchIterator");
}

RING_FUNC(ring_QJsonArray_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QJsonArray *pObject = new QJsonArray();
	RING_API_RETCPOINTER(pObject,"QJsonArray");
}

RING_FUNC(ring_QJsonDocument_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QJsonDocument *pObject = new QJsonDocument();
	RING_API_RETCPOINTER(pObject,"QJsonDocument");
}

RING_FUNC(ring_QJsonObject_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QJsonObject *pObject = new QJsonObject();
	RING_API_RETCPOINTER(pObject,"QJsonObject");
}

RING_FUNC(ring_QJsonParseError_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QJsonParseError *pObject = new QJsonParseError();
	RING_API_RETCPOINTER(pObject,"QJsonParseError");
}

RING_FUNC(ring_QJsonValue_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QJsonValue *pObject = new QJsonValue();
	RING_API_RETCPOINTER(pObject,"QJsonValue");
}

RING_FUNC(ring_QPlainTextEdit_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GPlainTextEdit *pObject = new GPlainTextEdit((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QPlainTextEdit");
}

RING_FUNC(ring_CodeEditor_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	CodeEditor *pObject = new CodeEditor((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"CodeEditor");
}

RING_FUNC(ring_QGridLayout_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QGridLayout *pObject = new QGridLayout();
	RING_API_RETCPOINTER(pObject,"QGridLayout");
}

RING_FUNC(ring_QTextCharFormat_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QTextCharFormat *pObject = new QTextCharFormat();
	RING_API_RETCPOINTER(pObject,"QTextCharFormat");
}

RING_FUNC(ring_QCameraViewfinder_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QCameraViewfinder *pObject = new QCameraViewfinder((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QCameraViewfinder");
}

RING_FUNC(ring_QGraphicsVideoItem_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QGraphicsVideoItem *pObject = new QGraphicsVideoItem();
	RING_API_RETCPOINTER(pObject,"QGraphicsVideoItem");
}

RING_FUNC(ring_QCamera_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QCamera *pObject = new QCamera();
	RING_API_RETCPOINTER(pObject,"QCamera");
}

RING_FUNC(ring_QCameraImageCapture_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QCameraImageCapture *pObject = new QCameraImageCapture((QMediaObject *) RING_API_GETCPOINTER(1,"QMediaObject"));
	RING_API_RETCPOINTER(pObject,"QCameraImageCapture");
}

RING_FUNC(ring_QHeaderView_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	if ( ! RING_API_ISNUMBER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GHeaderView *pObject = new GHeaderView( (Qt::Orientation)  (int) RING_API_GETNUMBER(1),(QWidget *) RING_API_GETCPOINTER(2,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QHeaderView");
}

RING_FUNC(ring_QFontMetrics_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	QFontMetrics *pObject = new QFontMetrics(* (QFont *) RING_API_GETCPOINTER(1,"QFont"));
	RING_API_RETCPOINTER(pObject,"QFontMetrics");
}

RING_FUNC(ring_QSplashScreen_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	QSplashScreen *pObject = new QSplashScreen(* (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap"));
	RING_API_RETCPOINTER(pObject,"QSplashScreen");
}

RING_FUNC(ring_QBoxLayout_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QBoxLayout *pObject = new QBoxLayout(* (QBoxLayout::Direction  *) RING_API_GETCPOINTER(1,"QBoxLayout::Direction"),(QWidget *) RING_API_GETCPOINTER(2,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QBoxLayout");
}

RING_FUNC(ring_QLinearGradient_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QLinearGradient *pObject = new QLinearGradient();
	RING_API_RETCPOINTER(pObject,"QLinearGradient");
}

RING_FUNC(ring_QPointF_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QPointF *pObject = new QPointF();
	RING_API_RETCPOINTER(pObject,"QPointF");
}

RING_FUNC(ring_QPoint_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QPoint *pObject = new QPoint();
	RING_API_RETCPOINTER(pObject,"QPoint");
}

RING_FUNC(ring_QScrollArea_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QScrollArea *pObject = new QScrollArea((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QScrollArea");
}

RING_FUNC(ring_QSplitter_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QSplitter *pObject = new QSplitter((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QSplitter");
}

RING_FUNC(ring_QCompleter_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QCompleter *pObject = new QCompleter((QObject *) RING_API_GETCPOINTER(1,"QObject"));
	RING_API_RETCPOINTER(pObject,"QCompleter");
}

RING_FUNC(ring_QCompleter2_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QCompleter *pObject = new QCompleter((QAbstractItemModel *) RING_API_GETCPOINTER(1,"QAbstractItemModel"),(QObject *) RING_API_GETCPOINTER(2,"QObject"));
	RING_API_RETCPOINTER(pObject,"QCompleter2");
}

RING_FUNC(ring_QCompleter3_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QCompleter *pObject = new QCompleter(* (QStringList  *) RING_API_GETCPOINTER(1,"QStringList"),(QObject *) RING_API_GETCPOINTER(2,"QObject"));
	RING_API_RETCPOINTER(pObject,"QCompleter3");
}

RING_FUNC(ring_QString2_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QString *pObject = new QString();
	RING_API_RETCPOINTER(pObject,"QString2");
}

RING_FUNC(ring_QProcess_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GProcess *pObject = new GProcess((QObject *) RING_API_GETCPOINTER(1,"QObject"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QProcess");
}

RING_FUNC(ring_QMdiArea_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QMdiArea *pObject = new QMdiArea((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QMdiArea");
}

RING_FUNC(ring_QMdiSubWindow_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QMdiSubWindow *pObject = new QMdiSubWindow((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QMdiSubWindow");
}

RING_FUNC(ring_QCursor_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QCursor *pObject = new QCursor();
	RING_API_RETCPOINTER(pObject,"QCursor");
}

RING_FUNC(ring_QListView_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QListView *pObject = new QListView((QWidget *) RING_API_GETCPOINTER(1,"QWidget"));
	RING_API_RETCPOINTER(pObject,"QListView");
}

RING_FUNC(ring_QAxObject_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISSTRING(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QAxObject *pObject = new QAxObject(RING_API_GETSTRING(1));
	RING_API_RETCPOINTER(pObject,"QAxObject");
}

RING_FUNC(ring_QUuid_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QUuid *pObject = new QUuid();
	RING_API_RETCPOINTER(pObject,"QUuid");
}

RING_FUNC(ring_QToolButton_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GToolButton *pObject = new GToolButton((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QToolButton");
}

RING_FUNC(ring_QSerialPort_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GSerialPort *pObject = new GSerialPort((QObject *) RING_API_GETCPOINTER(1,"QObject"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QSerialPort");
}

RING_FUNC(ring_QSerialPortInfo_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QSerialPortInfo *pObject = new QSerialPortInfo();
	RING_API_RETCPOINTER(pObject,"QSerialPortInfo");
}

RING_FUNC(ring_QStringRef_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QStringRef *pObject = new QStringRef();
	RING_API_RETCPOINTER(pObject,"QStringRef");
}

RING_FUNC(ring_QMutex_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISNUMBER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QMutex *pObject = new QMutex( (QMutex::RecursionMode)  (int) RING_API_GETNUMBER(1));
	RING_API_RETCPOINTER(pObject,"QMutex");
}

RING_FUNC(ring_QMutexLocker_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QMutexLocker *pObject = new QMutexLocker((QMutex *) RING_API_GETCPOINTER(1,"QMutex"));
	RING_API_RETCPOINTER(pObject,"QMutexLocker");
}

RING_FUNC(ring_QBuffer_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QBuffer *pObject = new QBuffer((QObject *) RING_API_GETCPOINTER(1,"QObject"));
	RING_API_RETCPOINTER(pObject,"QBuffer");
}

RING_FUNC(ring_QBluetoothAddress_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QBluetoothAddress *pObject = new QBluetoothAddress();
	RING_API_RETCPOINTER(pObject,"QBluetoothAddress");
}

RING_FUNC(ring_QBluetoothDeviceDiscoveryAgent_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GBluetoothDeviceDiscoveryAgent *pObject = new GBluetoothDeviceDiscoveryAgent((QObject *) RING_API_GETCPOINTER(1,"QObject"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QBluetoothDeviceDiscoveryAgent");
}

RING_FUNC(ring_QBluetoothDeviceInfo_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QBluetoothDeviceInfo *pObject = new QBluetoothDeviceInfo();
	RING_API_RETCPOINTER(pObject,"QBluetoothDeviceInfo");
}

RING_FUNC(ring_QBluetoothHostInfo_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QBluetoothHostInfo *pObject = new QBluetoothHostInfo();
	RING_API_RETCPOINTER(pObject,"QBluetoothHostInfo");
}

RING_FUNC(ring_QBluetoothLocalDevice_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GBluetoothLocalDevice *pObject = new GBluetoothLocalDevice((QObject *) RING_API_GETCPOINTER(1,"QObject"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QBluetoothLocalDevice");
}

RING_FUNC(ring_QDateTime_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QDateTime *pObject = new QDateTime();
	RING_API_RETCPOINTER(pObject,"QDateTime");
}

RING_FUNC(ring_QWindow_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GWindow *pObject = new GWindow((QScreen *) RING_API_GETCPOINTER(1,"QScreen"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QWindow");
}

RING_FUNC(ring_QGuiApplication_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 2 ) {
		RING_API_ERROR(RING_API_MISS2PARA);
		return ;
	}
	if ( ! RING_API_ISNUMBER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	if ( ! RING_API_ISPOINTER(2) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GGuiApplication *pObject = new GGuiApplication( (int) RING_API_GETNUMBER(1),(char **) RING_API_GETCPOINTER2POINTER(2,"char"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QGuiApplication");
}

RING_FUNC(ring_QTextBrowser_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GTextBrowser *pObject = new GTextBrowser((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QTextBrowser");
}

RING_FUNC(ring_QRegion_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QRegion *pObject = new QRegion();
	RING_API_RETCPOINTER(pObject,"QRegion");
}

RING_FUNC(ring_QStackedWidget_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GStackedWidget *pObject = new GStackedWidget((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QStackedWidget");
}

RING_FUNC(ring_QCalendarWidget_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	GCalendarWidget *pObject = new GCalendarWidget((QWidget *) RING_API_GETCPOINTER(1,"QWidget"), (VM *) pPointer);
	RING_API_RETCPOINTER(pObject,"QCalendarWidget");
}

RING_FUNC(ring_QOpenGLFunctions_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 0 ) {
		RING_API_ERROR(RING_API_BADPARACOUNT);
		return ;
	}
	QOpenGLFunctions *pObject = new QOpenGLFunctions();
	RING_API_RETCPOINTER(pObject,"QOpenGLFunctions");
}

RING_FUNC(ring_QOpenGLContext_new)
{
	RING_API_IGNORECPOINTERTYPE ;
	if ( RING_API_PARACOUNT != 1 ) {
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( ! RING_API_ISPOINTER(1) ) {
		RING_API_ERROR(RING_API_BADPARATYPE);
		return ;
	}
	QOpenGLContext *pObject = new QOpenGLContext((QObject *) RING_API_GETCPOINTER(1,"QObject"));
	RING_API_RETCPOINTER(pObject,"QOpenGLContext");
}

RING_FUNC(ring_QObject_delete)
{
	QObject *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QObject *) RING_API_GETCPOINTER(1,"QObject");
		delete pObject ;
	}
}

RING_FUNC(ring_QWidget_delete)
{
	QWidget *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QWidget *) RING_API_GETCPOINTER(1,"QWidget");
		delete pObject ;
	}
}

RING_FUNC(ring_QLabel_delete)
{
	QLabel *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QLabel *) RING_API_GETCPOINTER(1,"QLabel");
		delete pObject ;
	}
}

RING_FUNC(ring_QPushButton_delete)
{
	GPushButton *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GPushButton *) RING_API_GETCPOINTER(1,"GPushButton");
		delete pObject ;
	}
}

RING_FUNC(ring_QBitmap_delete)
{
	QBitmap *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QBitmap *) RING_API_GETCPOINTER(1,"QBitmap");
		delete pObject ;
	}
}

RING_FUNC(ring_QPixmap_delete)
{
	QPixmap *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
		delete pObject ;
	}
}

RING_FUNC(ring_QPixmap2_delete)
{
	QPixmap *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QPixmap *) RING_API_GETCPOINTER(1,"QPixmap");
		delete pObject ;
	}
}

RING_FUNC(ring_QIcon_delete)
{
	QIcon *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QIcon *) RING_API_GETCPOINTER(1,"QIcon");
		delete pObject ;
	}
}

RING_FUNC(ring_QSize_delete)
{
	QSize *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QSize *) RING_API_GETCPOINTER(1,"QSize");
		delete pObject ;
	}
}

RING_FUNC(ring_QLineEdit_delete)
{
	GLineEdit *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GLineEdit *) RING_API_GETCPOINTER(1,"GLineEdit");
		delete pObject ;
	}
}

RING_FUNC(ring_QVBoxLayout_delete)
{
	QVBoxLayout *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QVBoxLayout *) RING_API_GETCPOINTER(1,"QVBoxLayout");
		delete pObject ;
	}
}

RING_FUNC(ring_QHBoxLayout_delete)
{
	QHBoxLayout *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QHBoxLayout *) RING_API_GETCPOINTER(1,"QHBoxLayout");
		delete pObject ;
	}
}

RING_FUNC(ring_QTextEdit_delete)
{
	GTextEdit *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GTextEdit *) RING_API_GETCPOINTER(1,"GTextEdit");
		delete pObject ;
	}
}

RING_FUNC(ring_QListWidget_delete)
{
	GListWidget *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GListWidget *) RING_API_GETCPOINTER(1,"GListWidget");
		delete pObject ;
	}
}

RING_FUNC(ring_QTreeView_delete)
{
	GTreeView *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GTreeView *) RING_API_GETCPOINTER(1,"GTreeView");
		delete pObject ;
	}
}

RING_FUNC(ring_QDir_delete)
{
	QDir *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QDir *) RING_API_GETCPOINTER(1,"QDir");
		delete pObject ;
	}
}

RING_FUNC(ring_QFileSystemModel_delete)
{
	QFileSystemModel *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QFileSystemModel *) RING_API_GETCPOINTER(1,"QFileSystemModel");
		delete pObject ;
	}
}

RING_FUNC(ring_QTreeWidget_delete)
{
	GTreeWidget *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GTreeWidget *) RING_API_GETCPOINTER(1,"GTreeWidget");
		delete pObject ;
	}
}

RING_FUNC(ring_QTreeWidgetItem_delete)
{
	QTreeWidgetItem *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QTreeWidgetItem *) RING_API_GETCPOINTER(1,"QTreeWidgetItem");
		delete pObject ;
	}
}

RING_FUNC(ring_QComboBox_delete)
{
	GComboBox *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GComboBox *) RING_API_GETCPOINTER(1,"GComboBox");
		delete pObject ;
	}
}

RING_FUNC(ring_QMenuBar_delete)
{
	QMenuBar *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QMenuBar *) RING_API_GETCPOINTER(1,"QMenuBar");
		delete pObject ;
	}
}

RING_FUNC(ring_QMenu_delete)
{
	QMenu *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QMenu *) RING_API_GETCPOINTER(1,"QMenu");
		delete pObject ;
	}
}

RING_FUNC(ring_QToolBar_delete)
{
	QToolBar *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QToolBar *) RING_API_GETCPOINTER(1,"QToolBar");
		delete pObject ;
	}
}

RING_FUNC(ring_QMainWindow_delete)
{
	QMainWindow *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QMainWindow *) RING_API_GETCPOINTER(1,"QMainWindow");
		delete pObject ;
	}
}

RING_FUNC(ring_QStatusBar_delete)
{
	QStatusBar *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QStatusBar *) RING_API_GETCPOINTER(1,"QStatusBar");
		delete pObject ;
	}
}

RING_FUNC(ring_QDockWidget_delete)
{
	GDockWidget *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GDockWidget *) RING_API_GETCPOINTER(1,"GDockWidget");
		delete pObject ;
	}
}

RING_FUNC(ring_QTabWidget_delete)
{
	GTabWidget *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GTabWidget *) RING_API_GETCPOINTER(1,"GTabWidget");
		delete pObject ;
	}
}

RING_FUNC(ring_QTableWidgetItem_delete)
{
	QTableWidgetItem *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QTableWidgetItem *) RING_API_GETCPOINTER(1,"QTableWidgetItem");
		delete pObject ;
	}
}

RING_FUNC(ring_QFrame_delete)
{
	QFrame *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
		delete pObject ;
	}
}

RING_FUNC(ring_QFrame2_delete)
{
	QFrame *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
		delete pObject ;
	}
}

RING_FUNC(ring_QFrame3_delete)
{
	QFrame *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QFrame *) RING_API_GETCPOINTER(1,"QFrame");
		delete pObject ;
	}
}

RING_FUNC(ring_QAbstractScrollArea_delete)
{
	QAbstractScrollArea *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QAbstractScrollArea *) RING_API_GETCPOINTER(1,"QAbstractScrollArea");
		delete pObject ;
	}
}

RING_FUNC(ring_QTableView_delete)
{
	QTableView *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QTableView *) RING_API_GETCPOINTER(1,"QTableView");
		delete pObject ;
	}
}

RING_FUNC(ring_QTableWidget_delete)
{
	GTableWidget *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GTableWidget *) RING_API_GETCPOINTER(1,"GTableWidget");
		delete pObject ;
	}
}

RING_FUNC(ring_QProgressBar_delete)
{
	GProgressBar *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GProgressBar *) RING_API_GETCPOINTER(1,"GProgressBar");
		delete pObject ;
	}
}

RING_FUNC(ring_QSpinBox_delete)
{
	GSpinBox *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GSpinBox *) RING_API_GETCPOINTER(1,"GSpinBox");
		delete pObject ;
	}
}

RING_FUNC(ring_QAbstractSlider_delete)
{
	QAbstractSlider *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QAbstractSlider *) RING_API_GETCPOINTER(1,"QAbstractSlider");
		delete pObject ;
	}
}

RING_FUNC(ring_QSlider_delete)
{
	GSlider *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GSlider *) RING_API_GETCPOINTER(1,"GSlider");
		delete pObject ;
	}
}

RING_FUNC(ring_QDateEdit_delete)
{
	QDateEdit *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QDateEdit *) RING_API_GETCPOINTER(1,"QDateEdit");
		delete pObject ;
	}
}

RING_FUNC(ring_QDateTimeEdit_delete)
{
	QDateTimeEdit *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QDateTimeEdit *) RING_API_GETCPOINTER(1,"QDateTimeEdit");
		delete pObject ;
	}
}

RING_FUNC(ring_QAbstractSpinBox_delete)
{
	QAbstractSpinBox *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QAbstractSpinBox *) RING_API_GETCPOINTER(1,"QAbstractSpinBox");
		delete pObject ;
	}
}

RING_FUNC(ring_QDial_delete)
{
	GDial *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GDial *) RING_API_GETCPOINTER(1,"GDial");
		delete pObject ;
	}
}

RING_FUNC(ring_QWebView_delete)
{
	GWebView *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GWebView *) RING_API_GETCPOINTER(1,"GWebView");
		delete pObject ;
	}
}

RING_FUNC(ring_QUrl_delete)
{
	QUrl *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QUrl *) RING_API_GETCPOINTER(1,"QUrl");
		delete pObject ;
	}
}

RING_FUNC(ring_QCheckBox_delete)
{
	GCheckBox *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GCheckBox *) RING_API_GETCPOINTER(1,"GCheckBox");
		delete pObject ;
	}
}

RING_FUNC(ring_QRadioButton_delete)
{
	GRadioButton *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GRadioButton *) RING_API_GETCPOINTER(1,"GRadioButton");
		delete pObject ;
	}
}

RING_FUNC(ring_QButtonGroup_delete)
{
	GButtonGroup *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GButtonGroup *) RING_API_GETCPOINTER(1,"GButtonGroup");
		delete pObject ;
	}
}

RING_FUNC(ring_QMediaPlayer_delete)
{
	QMediaPlayer *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QMediaPlayer *) RING_API_GETCPOINTER(1,"QMediaPlayer");
		delete pObject ;
	}
}

RING_FUNC(ring_QMediaPlaylist_delete)
{
	QMediaPlaylist *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QMediaPlaylist *) RING_API_GETCPOINTER(1,"QMediaPlaylist");
		delete pObject ;
	}
}

RING_FUNC(ring_QVideoWidget_delete)
{
	GVideoWidget *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GVideoWidget *) RING_API_GETCPOINTER(1,"GVideoWidget");
		delete pObject ;
	}
}

RING_FUNC(ring_QAction_delete)
{
	GAction *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GAction *) RING_API_GETCPOINTER(1,"GAction");
		delete pObject ;
	}
}

RING_FUNC(ring_QEvent_delete)
{
	QEvent *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QEvent *) RING_API_GETCPOINTER(1,"QEvent");
		delete pObject ;
	}
}

RING_FUNC(ring_QMessageBox_delete)
{
	QMessageBox *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QMessageBox *) RING_API_GETCPOINTER(1,"QMessageBox");
		delete pObject ;
	}
}

RING_FUNC(ring_QTimer_delete)
{
	GTimer *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GTimer *) RING_API_GETCPOINTER(1,"GTimer");
		delete pObject ;
	}
}

RING_FUNC(ring_QFileDialog_delete)
{
	QFileDialog *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QFileDialog *) RING_API_GETCPOINTER(1,"QFileDialog");
		delete pObject ;
	}
}

RING_FUNC(ring_QPainter_delete)
{
	QPainter *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
		delete pObject ;
	}
}

RING_FUNC(ring_QPainter2_delete)
{
	QPainter *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QPainter *) RING_API_GETCPOINTER(1,"QPainter");
		delete pObject ;
	}
}

RING_FUNC(ring_QPicture_delete)
{
	QPicture *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QPicture *) RING_API_GETCPOINTER(1,"QPicture");
		delete pObject ;
	}
}

RING_FUNC(ring_QPen_delete)
{
	QPen *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QPen *) RING_API_GETCPOINTER(1,"QPen");
		delete pObject ;
	}
}

RING_FUNC(ring_QColor_delete)
{
	QColor *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QColor *) RING_API_GETCPOINTER(1,"QColor");
		delete pObject ;
	}
}

RING_FUNC(ring_QPrinter_delete)
{
	QPrinter *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QPrinter *) RING_API_GETCPOINTER(1,"QPrinter");
		delete pObject ;
	}
}

RING_FUNC(ring_QFont_delete)
{
	QFont *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QFont *) RING_API_GETCPOINTER(1,"QFont");
		delete pObject ;
	}
}

RING_FUNC(ring_QBrush_delete)
{
	QBrush *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QBrush *) RING_API_GETCPOINTER(1,"QBrush");
		delete pObject ;
	}
}

RING_FUNC(ring_QByteArray_delete)
{
	QByteArray *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QByteArray *) RING_API_GETCPOINTER(1,"QByteArray");
		delete pObject ;
	}
}

RING_FUNC(ring_QNetworkProxy_delete)
{
	QNetworkProxy *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QNetworkProxy *) RING_API_GETCPOINTER(1,"QNetworkProxy");
		delete pObject ;
	}
}

RING_FUNC(ring_QTcpSocket_delete)
{
	GTcpSocket *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GTcpSocket *) RING_API_GETCPOINTER(1,"GTcpSocket");
		delete pObject ;
	}
}

RING_FUNC(ring_QTcpServer_delete)
{
	GTcpServer *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GTcpServer *) RING_API_GETCPOINTER(1,"GTcpServer");
		delete pObject ;
	}
}

RING_FUNC(ring_QHostAddress_delete)
{
	QHostAddress *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QHostAddress *) RING_API_GETCPOINTER(1,"QHostAddress");
		delete pObject ;
	}
}

RING_FUNC(ring_QHostInfo_delete)
{
	QHostInfo *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QHostInfo *) RING_API_GETCPOINTER(1,"QHostInfo");
		delete pObject ;
	}
}

RING_FUNC(ring_QFileInfo_delete)
{
	QFileInfo *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QFileInfo *) RING_API_GETCPOINTER(1,"QFileInfo");
		delete pObject ;
	}
}

RING_FUNC(ring_QDirModel_delete)
{
	QDirModel *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QDirModel *) RING_API_GETCPOINTER(1,"QDirModel");
		delete pObject ;
	}
}

RING_FUNC(ring_QFontDialog_delete)
{
	QFontDialog *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QFontDialog *) RING_API_GETCPOINTER(1,"QFontDialog");
		delete pObject ;
	}
}

RING_FUNC(ring_QDialog_delete)
{
	QDialog *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QDialog *) RING_API_GETCPOINTER(1,"QDialog");
		delete pObject ;
	}
}

RING_FUNC(ring_QTextCursor_delete)
{
	QTextCursor *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QTextCursor *) RING_API_GETCPOINTER(1,"QTextCursor");
		delete pObject ;
	}
}

RING_FUNC(ring_QColorDialog_delete)
{
	QColorDialog *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QColorDialog *) RING_API_GETCPOINTER(1,"QColorDialog");
		delete pObject ;
	}
}

RING_FUNC(ring_QStringList_delete)
{
	QStringList *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QStringList *) RING_API_GETCPOINTER(1,"QStringList");
		delete pObject ;
	}
}

RING_FUNC(ring_QKeySequence_delete)
{
	QKeySequence *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QKeySequence *) RING_API_GETCPOINTER(1,"QKeySequence");
		delete pObject ;
	}
}

RING_FUNC(ring_QLCDNumber_delete)
{
	QLCDNumber *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QLCDNumber *) RING_API_GETCPOINTER(1,"QLCDNumber");
		delete pObject ;
	}
}

RING_FUNC(ring_QInputDialog_delete)
{
	QInputDialog *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QInputDialog *) RING_API_GETCPOINTER(1,"QInputDialog");
		delete pObject ;
	}
}

RING_FUNC(ring_QAllEvents_delete)
{
	GAllEvents *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GAllEvents *) RING_API_GETCPOINTER(1,"GAllEvents");
		delete pObject ;
	}
}

RING_FUNC(ring_QDesktopWidget_delete)
{
	QDesktopWidget *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QDesktopWidget *) RING_API_GETCPOINTER(1,"QDesktopWidget");
		delete pObject ;
	}
}

RING_FUNC(ring_QRect_delete)
{
	QRect *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QRect *) RING_API_GETCPOINTER(1,"QRect");
		delete pObject ;
	}
}

RING_FUNC(ring_QTextDocument_delete)
{
	QTextDocument *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QTextDocument *) RING_API_GETCPOINTER(1,"QTextDocument");
		delete pObject ;
	}
}

RING_FUNC(ring_QTextBlock_delete)
{
	QTextBlock *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QTextBlock *) RING_API_GETCPOINTER(1,"QTextBlock");
		delete pObject ;
	}
}

RING_FUNC(ring_QTime_delete)
{
	QTime *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QTime *) RING_API_GETCPOINTER(1,"QTime");
		delete pObject ;
	}
}

RING_FUNC(ring_QListWidgetItem_delete)
{
	QListWidgetItem *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QListWidgetItem *) RING_API_GETCPOINTER(1,"QListWidgetItem");
		delete pObject ;
	}
}

RING_FUNC(ring_QSystemTrayIcon_delete)
{
	QSystemTrayIcon *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QSystemTrayIcon *) RING_API_GETCPOINTER(1,"QSystemTrayIcon");
		delete pObject ;
	}
}

RING_FUNC(ring_QDate_delete)
{
	QDate *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QDate *) RING_API_GETCPOINTER(1,"QDate");
		delete pObject ;
	}
}

RING_FUNC(ring_QSqlDatabase_delete)
{
	QSqlDatabase *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QSqlDatabase *) RING_API_GETCPOINTER(1,"QSqlDatabase");
		delete pObject ;
	}
}

RING_FUNC(ring_QSqlQuery_delete)
{
	QSqlQuery *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QSqlQuery *) RING_API_GETCPOINTER(1,"QSqlQuery");
		delete pObject ;
	}
}

RING_FUNC(ring_QSqlError_delete)
{
	QSqlError *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QSqlError *) RING_API_GETCPOINTER(1,"QSqlError");
		delete pObject ;
	}
}

RING_FUNC(ring_QSqlIndex_delete)
{
	QSqlIndex *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QSqlIndex *) RING_API_GETCPOINTER(1,"QSqlIndex");
		delete pObject ;
	}
}

RING_FUNC(ring_QSqlRecord_delete)
{
	QSqlRecord *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QSqlRecord *) RING_API_GETCPOINTER(1,"QSqlRecord");
		delete pObject ;
	}
}

RING_FUNC(ring_QSqlField_delete)
{
	QSqlField *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QSqlField *) RING_API_GETCPOINTER(1,"QSqlField");
		delete pObject ;
	}
}

RING_FUNC(ring_QVariant_delete)
{
	QVariant *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QVariant *) RING_API_GETCPOINTER(1,"QVariant");
		delete pObject ;
	}
}

RING_FUNC(ring_QNetworkRequest_delete)
{
	QNetworkRequest *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QNetworkRequest *) RING_API_GETCPOINTER(1,"QNetworkRequest");
		delete pObject ;
	}
}

RING_FUNC(ring_QNetworkAccessManager_delete)
{
	GNetworkAccessManager *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GNetworkAccessManager *) RING_API_GETCPOINTER(1,"GNetworkAccessManager");
		delete pObject ;
	}
}

RING_FUNC(ring_QPainterPath_delete)
{
	QPainterPath *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QPainterPath *) RING_API_GETCPOINTER(1,"QPainterPath");
		delete pObject ;
	}
}

RING_FUNC(ring_QImage_delete)
{
	QImage *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QImage *) RING_API_GETCPOINTER(1,"QImage");
		delete pObject ;
	}
}

RING_FUNC(ring_RingCodeHighlighter_delete)
{
	Highlighter *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (Highlighter *) RING_API_GETCPOINTER(1,"Highlighter");
		delete pObject ;
	}
}

RING_FUNC(ring_QXmlStreamReader_delete)
{
	QXmlStreamReader *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QXmlStreamReader *) RING_API_GETCPOINTER(1,"QXmlStreamReader");
		delete pObject ;
	}
}

RING_FUNC(ring_QXmlStreamWriter_delete)
{
	QXmlStreamWriter *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QXmlStreamWriter *) RING_API_GETCPOINTER(1,"QXmlStreamWriter");
		delete pObject ;
	}
}

RING_FUNC(ring_QXmlStreamNotationDeclaration_delete)
{
	QXmlStreamNotationDeclaration *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QXmlStreamNotationDeclaration *) RING_API_GETCPOINTER(1,"QXmlStreamNotationDeclaration");
		delete pObject ;
	}
}

RING_FUNC(ring_QXmlStreamNamespaceDeclaration_delete)
{
	QXmlStreamNamespaceDeclaration *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QXmlStreamNamespaceDeclaration *) RING_API_GETCPOINTER(1,"QXmlStreamNamespaceDeclaration");
		delete pObject ;
	}
}

RING_FUNC(ring_QXmlStreamEntityResolver_delete)
{
	QXmlStreamEntityResolver *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QXmlStreamEntityResolver *) RING_API_GETCPOINTER(1,"QXmlStreamEntityResolver");
		delete pObject ;
	}
}

RING_FUNC(ring_QXmlStreamEntityDeclaration_delete)
{
	QXmlStreamEntityDeclaration *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QXmlStreamEntityDeclaration *) RING_API_GETCPOINTER(1,"QXmlStreamEntityDeclaration");
		delete pObject ;
	}
}

RING_FUNC(ring_QXmlStreamAttributes_delete)
{
	QXmlStreamAttributes *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QXmlStreamAttributes *) RING_API_GETCPOINTER(1,"QXmlStreamAttributes");
		delete pObject ;
	}
}

RING_FUNC(ring_QXmlStreamAttribute_delete)
{
	QXmlStreamAttribute *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QXmlStreamAttribute *) RING_API_GETCPOINTER(1,"QXmlStreamAttribute");
		delete pObject ;
	}
}

RING_FUNC(ring_QThread_delete)
{
	GThread *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GThread *) RING_API_GETCPOINTER(1,"GThread");
		delete pObject ;
	}
}

RING_FUNC(ring_QThreadPool_delete)
{
	QThreadPool *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QThreadPool *) RING_API_GETCPOINTER(1,"QThreadPool");
		delete pObject ;
	}
}

RING_FUNC(ring_QRegularExpression_delete)
{
	QRegularExpression *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QRegularExpression *) RING_API_GETCPOINTER(1,"QRegularExpression");
		delete pObject ;
	}
}

RING_FUNC(ring_QRegularExpressionMatch_delete)
{
	QRegularExpressionMatch *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QRegularExpressionMatch *) RING_API_GETCPOINTER(1,"QRegularExpressionMatch");
		delete pObject ;
	}
}

RING_FUNC(ring_QRegularExpressionMatchIterator_delete)
{
	QRegularExpressionMatchIterator *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QRegularExpressionMatchIterator *) RING_API_GETCPOINTER(1,"QRegularExpressionMatchIterator");
		delete pObject ;
	}
}

RING_FUNC(ring_QJsonArray_delete)
{
	QJsonArray *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QJsonArray *) RING_API_GETCPOINTER(1,"QJsonArray");
		delete pObject ;
	}
}

RING_FUNC(ring_QJsonDocument_delete)
{
	QJsonDocument *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QJsonDocument *) RING_API_GETCPOINTER(1,"QJsonDocument");
		delete pObject ;
	}
}

RING_FUNC(ring_QJsonObject_delete)
{
	QJsonObject *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QJsonObject *) RING_API_GETCPOINTER(1,"QJsonObject");
		delete pObject ;
	}
}

RING_FUNC(ring_QJsonParseError_delete)
{
	QJsonParseError *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QJsonParseError *) RING_API_GETCPOINTER(1,"QJsonParseError");
		delete pObject ;
	}
}

RING_FUNC(ring_QJsonValue_delete)
{
	QJsonValue *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QJsonValue *) RING_API_GETCPOINTER(1,"QJsonValue");
		delete pObject ;
	}
}

RING_FUNC(ring_QPlainTextEdit_delete)
{
	GPlainTextEdit *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GPlainTextEdit *) RING_API_GETCPOINTER(1,"GPlainTextEdit");
		delete pObject ;
	}
}

RING_FUNC(ring_CodeEditor_delete)
{
	CodeEditor *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (CodeEditor *) RING_API_GETCPOINTER(1,"CodeEditor");
		delete pObject ;
	}
}

RING_FUNC(ring_QGridLayout_delete)
{
	QGridLayout *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QGridLayout *) RING_API_GETCPOINTER(1,"QGridLayout");
		delete pObject ;
	}
}

RING_FUNC(ring_QTextCharFormat_delete)
{
	QTextCharFormat *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QTextCharFormat *) RING_API_GETCPOINTER(1,"QTextCharFormat");
		delete pObject ;
	}
}

RING_FUNC(ring_QCameraViewfinder_delete)
{
	QCameraViewfinder *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QCameraViewfinder *) RING_API_GETCPOINTER(1,"QCameraViewfinder");
		delete pObject ;
	}
}

RING_FUNC(ring_QGraphicsVideoItem_delete)
{
	QGraphicsVideoItem *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QGraphicsVideoItem *) RING_API_GETCPOINTER(1,"QGraphicsVideoItem");
		delete pObject ;
	}
}

RING_FUNC(ring_QCamera_delete)
{
	QCamera *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QCamera *) RING_API_GETCPOINTER(1,"QCamera");
		delete pObject ;
	}
}

RING_FUNC(ring_QCameraImageCapture_delete)
{
	QCameraImageCapture *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QCameraImageCapture *) RING_API_GETCPOINTER(1,"QCameraImageCapture");
		delete pObject ;
	}
}

RING_FUNC(ring_QHeaderView_delete)
{
	GHeaderView *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GHeaderView *) RING_API_GETCPOINTER(1,"GHeaderView");
		delete pObject ;
	}
}

RING_FUNC(ring_QFontMetrics_delete)
{
	QFontMetrics *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QFontMetrics *) RING_API_GETCPOINTER(1,"QFontMetrics");
		delete pObject ;
	}
}

RING_FUNC(ring_QSplashScreen_delete)
{
	QSplashScreen *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QSplashScreen *) RING_API_GETCPOINTER(1,"QSplashScreen");
		delete pObject ;
	}
}

RING_FUNC(ring_QBoxLayout_delete)
{
	QBoxLayout *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QBoxLayout *) RING_API_GETCPOINTER(1,"QBoxLayout");
		delete pObject ;
	}
}

RING_FUNC(ring_QLinearGradient_delete)
{
	QLinearGradient *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QLinearGradient *) RING_API_GETCPOINTER(1,"QLinearGradient");
		delete pObject ;
	}
}

RING_FUNC(ring_QPointF_delete)
{
	QPointF *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QPointF *) RING_API_GETCPOINTER(1,"QPointF");
		delete pObject ;
	}
}

RING_FUNC(ring_QPoint_delete)
{
	QPoint *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QPoint *) RING_API_GETCPOINTER(1,"QPoint");
		delete pObject ;
	}
}

RING_FUNC(ring_QScrollArea_delete)
{
	QScrollArea *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QScrollArea *) RING_API_GETCPOINTER(1,"QScrollArea");
		delete pObject ;
	}
}

RING_FUNC(ring_QSplitter_delete)
{
	QSplitter *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QSplitter *) RING_API_GETCPOINTER(1,"QSplitter");
		delete pObject ;
	}
}

RING_FUNC(ring_QCompleter_delete)
{
	QCompleter *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
		delete pObject ;
	}
}

RING_FUNC(ring_QCompleter2_delete)
{
	QCompleter *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
		delete pObject ;
	}
}

RING_FUNC(ring_QCompleter3_delete)
{
	QCompleter *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QCompleter *) RING_API_GETCPOINTER(1,"QCompleter");
		delete pObject ;
	}
}

RING_FUNC(ring_QString2_delete)
{
	QString *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QString *) RING_API_GETCPOINTER(1,"QString");
		delete pObject ;
	}
}

RING_FUNC(ring_QProcess_delete)
{
	GProcess *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GProcess *) RING_API_GETCPOINTER(1,"GProcess");
		delete pObject ;
	}
}

RING_FUNC(ring_QMdiArea_delete)
{
	QMdiArea *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QMdiArea *) RING_API_GETCPOINTER(1,"QMdiArea");
		delete pObject ;
	}
}

RING_FUNC(ring_QMdiSubWindow_delete)
{
	QMdiSubWindow *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QMdiSubWindow *) RING_API_GETCPOINTER(1,"QMdiSubWindow");
		delete pObject ;
	}
}

RING_FUNC(ring_QCursor_delete)
{
	QCursor *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QCursor *) RING_API_GETCPOINTER(1,"QCursor");
		delete pObject ;
	}
}

RING_FUNC(ring_QListView_delete)
{
	QListView *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QListView *) RING_API_GETCPOINTER(1,"QListView");
		delete pObject ;
	}
}

RING_FUNC(ring_QAxObject_delete)
{
	QAxObject *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QAxObject *) RING_API_GETCPOINTER(1,"QAxObject");
		delete pObject ;
	}
}

RING_FUNC(ring_QUuid_delete)
{
	QUuid *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QUuid *) RING_API_GETCPOINTER(1,"QUuid");
		delete pObject ;
	}
}

RING_FUNC(ring_QToolButton_delete)
{
	GToolButton *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GToolButton *) RING_API_GETCPOINTER(1,"GToolButton");
		delete pObject ;
	}
}

RING_FUNC(ring_QSerialPort_delete)
{
	GSerialPort *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GSerialPort *) RING_API_GETCPOINTER(1,"GSerialPort");
		delete pObject ;
	}
}

RING_FUNC(ring_QSerialPortInfo_delete)
{
	QSerialPortInfo *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QSerialPortInfo *) RING_API_GETCPOINTER(1,"QSerialPortInfo");
		delete pObject ;
	}
}

RING_FUNC(ring_QStringRef_delete)
{
	QStringRef *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QStringRef *) RING_API_GETCPOINTER(1,"QStringRef");
		delete pObject ;
	}
}

RING_FUNC(ring_QMutex_delete)
{
	QMutex *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QMutex *) RING_API_GETCPOINTER(1,"QMutex");
		delete pObject ;
	}
}

RING_FUNC(ring_QMutexLocker_delete)
{
	QMutexLocker *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QMutexLocker *) RING_API_GETCPOINTER(1,"QMutexLocker");
		delete pObject ;
	}
}

RING_FUNC(ring_QBuffer_delete)
{
	QBuffer *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QBuffer *) RING_API_GETCPOINTER(1,"QBuffer");
		delete pObject ;
	}
}

RING_FUNC(ring_QBluetoothAddress_delete)
{
	QBluetoothAddress *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QBluetoothAddress *) RING_API_GETCPOINTER(1,"QBluetoothAddress");
		delete pObject ;
	}
}

RING_FUNC(ring_QBluetoothDeviceDiscoveryAgent_delete)
{
	GBluetoothDeviceDiscoveryAgent *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GBluetoothDeviceDiscoveryAgent *) RING_API_GETCPOINTER(1,"GBluetoothDeviceDiscoveryAgent");
		delete pObject ;
	}
}

RING_FUNC(ring_QBluetoothDeviceInfo_delete)
{
	QBluetoothDeviceInfo *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QBluetoothDeviceInfo *) RING_API_GETCPOINTER(1,"QBluetoothDeviceInfo");
		delete pObject ;
	}
}

RING_FUNC(ring_QBluetoothHostInfo_delete)
{
	QBluetoothHostInfo *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QBluetoothHostInfo *) RING_API_GETCPOINTER(1,"QBluetoothHostInfo");
		delete pObject ;
	}
}

RING_FUNC(ring_QBluetoothLocalDevice_delete)
{
	GBluetoothLocalDevice *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GBluetoothLocalDevice *) RING_API_GETCPOINTER(1,"GBluetoothLocalDevice");
		delete pObject ;
	}
}

RING_FUNC(ring_QDateTime_delete)
{
	QDateTime *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QDateTime *) RING_API_GETCPOINTER(1,"QDateTime");
		delete pObject ;
	}
}

RING_FUNC(ring_QWindow_delete)
{
	GWindow *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GWindow *) RING_API_GETCPOINTER(1,"GWindow");
		delete pObject ;
	}
}

RING_FUNC(ring_QGuiApplication_delete)
{
	GGuiApplication *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GGuiApplication *) RING_API_GETCPOINTER(1,"GGuiApplication");
		delete pObject ;
	}
}

RING_FUNC(ring_QTextBrowser_delete)
{
	GTextBrowser *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GTextBrowser *) RING_API_GETCPOINTER(1,"GTextBrowser");
		delete pObject ;
	}
}

RING_FUNC(ring_QRegion_delete)
{
	QRegion *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QRegion *) RING_API_GETCPOINTER(1,"QRegion");
		delete pObject ;
	}
}

RING_FUNC(ring_QStackedWidget_delete)
{
	GStackedWidget *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GStackedWidget *) RING_API_GETCPOINTER(1,"GStackedWidget");
		delete pObject ;
	}
}

RING_FUNC(ring_QCalendarWidget_delete)
{
	GCalendarWidget *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (GCalendarWidget *) RING_API_GETCPOINTER(1,"GCalendarWidget");
		delete pObject ;
	}
}

RING_FUNC(ring_QOpenGLFunctions_delete)
{
	QOpenGLFunctions *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QOpenGLFunctions *) RING_API_GETCPOINTER(1,"QOpenGLFunctions");
		delete pObject ;
	}
}

RING_FUNC(ring_QOpenGLContext_delete)
{
	QOpenGLContext *pObject ; 
	if ( RING_API_PARACOUNT != 1 )
	{
		RING_API_ERROR(RING_API_MISS1PARA);
		return ;
	}
	if ( RING_API_ISPOINTER(1) )
	{
		pObject = (QOpenGLContext *) RING_API_GETCPOINTER(1,"QOpenGLContext");
		delete pObject ;
	}
}

RING_API void ring_qt_start(RingState *pRingState)
{
	ring_vm_funcregister("qapp_exec",ring_QApp_exec);
	ring_vm_funcregister("qapp_quit",ring_QApp_quit);
	ring_vm_funcregister("qapp_processevents",ring_QApp_processEvents);
	ring_vm_funcregister("qapp_stylewindows",ring_QApp_styleWindows);
	ring_vm_funcregister("qapp_stylewindowsvista",ring_QApp_styleWindowsVista);
	ring_vm_funcregister("qapp_stylefusion",ring_QApp_styleFusion);
	ring_vm_funcregister("qapp_stylefusionblack",ring_QApp_styleFusionBlack);
	ring_vm_funcregister("qapp_stylefusioncustom",ring_QApp_styleFusionCustom);
	ring_vm_funcregister("qapp_closeallwindows",ring_QApp_closeAllWindows);
	ring_vm_funcregister("qapp_keyboardmodifiers",ring_QApp_keyboardModifiers);
	ring_vm_funcregister("qdesktopservices_openurl",ring_QDesktopServices_openUrl);
	ring_vm_funcregister("qdesktopservices_seturlhandler",ring_QDesktopServices_setUrlHandler);
	ring_vm_funcregister("qdesktopservices_unseturlhandler",ring_QDesktopServices_unsetUrlHandler);
	ring_vm_funcregister("qtest_qsleep",ring_QTest_qsleep);
	ring_vm_funcregister("qobject_blocksignals",ring_QObject_blockSignals);
	ring_vm_funcregister("qobject_children",ring_QObject_children);
	ring_vm_funcregister("qobject_dumpobjectinfo",ring_QObject_dumpObjectInfo);
	ring_vm_funcregister("qobject_dumpobjecttree",ring_QObject_dumpObjectTree);
	ring_vm_funcregister("qobject_inherits",ring_QObject_inherits);
	ring_vm_funcregister("qobject_installeventfilter",ring_QObject_installEventFilter);
	ring_vm_funcregister("qobject_iswidgettype",ring_QObject_isWidgetType);
	ring_vm_funcregister("qobject_killtimer",ring_QObject_killTimer);
	ring_vm_funcregister("qobject_movetothread",ring_QObject_moveToThread);
	ring_vm_funcregister("qobject_objectname",ring_QObject_objectName);
	ring_vm_funcregister("qobject_parent",ring_QObject_parent);
	ring_vm_funcregister("qobject_property",ring_QObject_property);
	ring_vm_funcregister("qobject_removeeventfilter",ring_QObject_removeEventFilter);
	ring_vm_funcregister("qobject_setobjectname",ring_QObject_setObjectName);
	ring_vm_funcregister("qobject_setparent",ring_QObject_setParent);
	ring_vm_funcregister("qobject_setproperty",ring_QObject_setProperty);
	ring_vm_funcregister("qobject_signalsblocked",ring_QObject_signalsBlocked);
	ring_vm_funcregister("qobject_starttimer",ring_QObject_startTimer);
	ring_vm_funcregister("qobject_thread",ring_QObject_thread);
	ring_vm_funcregister("qobject_deletelater",ring_QObject_deleteLater);
	ring_vm_funcregister("qwidget_acceptdrops",ring_QWidget_acceptDrops);
	ring_vm_funcregister("qwidget_accessibledescription",ring_QWidget_accessibleDescription);
	ring_vm_funcregister("qwidget_accessiblename",ring_QWidget_accessibleName);
	ring_vm_funcregister("qwidget_activatewindow",ring_QWidget_activateWindow);
	ring_vm_funcregister("qwidget_addaction",ring_QWidget_addAction);
	ring_vm_funcregister("qwidget_adjustsize",ring_QWidget_adjustSize);
	ring_vm_funcregister("qwidget_autofillbackground",ring_QWidget_autoFillBackground);
	ring_vm_funcregister("qwidget_backgroundrole",ring_QWidget_backgroundRole);
	ring_vm_funcregister("qwidget_basesize",ring_QWidget_baseSize);
	ring_vm_funcregister("qwidget_childat",ring_QWidget_childAt);
	ring_vm_funcregister("qwidget_childrenrect",ring_QWidget_childrenRect);
	ring_vm_funcregister("qwidget_childrenregion",ring_QWidget_childrenRegion);
	ring_vm_funcregister("qwidget_clearfocus",ring_QWidget_clearFocus);
	ring_vm_funcregister("qwidget_clearmask",ring_QWidget_clearMask);
	ring_vm_funcregister("qwidget_contentsmargins",ring_QWidget_contentsMargins);
	ring_vm_funcregister("qwidget_contentsrect",ring_QWidget_contentsRect);
	ring_vm_funcregister("qwidget_contextmenupolicy",ring_QWidget_contextMenuPolicy);
	ring_vm_funcregister("qwidget_cursor",ring_QWidget_cursor);
	ring_vm_funcregister("qwidget_effectivewinid",ring_QWidget_effectiveWinId);
	ring_vm_funcregister("qwidget_ensurepolished",ring_QWidget_ensurePolished);
	ring_vm_funcregister("qwidget_focuspolicy",ring_QWidget_focusPolicy);
	ring_vm_funcregister("qwidget_focusproxy",ring_QWidget_focusProxy);
	ring_vm_funcregister("qwidget_focuswidget",ring_QWidget_focusWidget);
	ring_vm_funcregister("qwidget_font",ring_QWidget_font);
	ring_vm_funcregister("qwidget_fontinfo",ring_QWidget_fontInfo);
	ring_vm_funcregister("qwidget_foregroundrole",ring_QWidget_foregroundRole);
	ring_vm_funcregister("qwidget_framegeometry",ring_QWidget_frameGeometry);
	ring_vm_funcregister("qwidget_framesize",ring_QWidget_frameSize);
	ring_vm_funcregister("qwidget_geometry",ring_QWidget_geometry);
	ring_vm_funcregister("qwidget_getcontentsmargins",ring_QWidget_getContentsMargins);
	ring_vm_funcregister("qwidget_grab",ring_QWidget_grab);
	ring_vm_funcregister("qwidget_grabgesture",ring_QWidget_grabGesture);
	ring_vm_funcregister("qwidget_grabkeyboard",ring_QWidget_grabKeyboard);
	ring_vm_funcregister("qwidget_grabmouse",ring_QWidget_grabMouse);
	ring_vm_funcregister("qwidget_grabshortcut",ring_QWidget_grabShortcut);
	ring_vm_funcregister("qwidget_graphicseffect",ring_QWidget_graphicsEffect);
	ring_vm_funcregister("qwidget_graphicsproxywidget",ring_QWidget_graphicsProxyWidget);
	ring_vm_funcregister("qwidget_hasfocus",ring_QWidget_hasFocus);
	ring_vm_funcregister("qwidget_hasmousetracking",ring_QWidget_hasMouseTracking);
	ring_vm_funcregister("qwidget_height",ring_QWidget_height);
	ring_vm_funcregister("qwidget_heightforwidth",ring_QWidget_heightForWidth);
	ring_vm_funcregister("qwidget_inputmethodhints",ring_QWidget_inputMethodHints);
	ring_vm_funcregister("qwidget_inputmethodquery",ring_QWidget_inputMethodQuery);
	ring_vm_funcregister("qwidget_insertaction",ring_QWidget_insertAction);
	ring_vm_funcregister("qwidget_isactivewindow",ring_QWidget_isActiveWindow);
	ring_vm_funcregister("qwidget_isancestorof",ring_QWidget_isAncestorOf);
	ring_vm_funcregister("qwidget_isenabled",ring_QWidget_isEnabled);
	ring_vm_funcregister("qwidget_isenabledto",ring_QWidget_isEnabledTo);
	ring_vm_funcregister("qwidget_isfullscreen",ring_QWidget_isFullScreen);
	ring_vm_funcregister("qwidget_ishidden",ring_QWidget_isHidden);
	ring_vm_funcregister("qwidget_ismaximized",ring_QWidget_isMaximized);
	ring_vm_funcregister("qwidget_isminimized",ring_QWidget_isMinimized);
	ring_vm_funcregister("qwidget_ismodal",ring_QWidget_isModal);
	ring_vm_funcregister("qwidget_isvisible",ring_QWidget_isVisible);
	ring_vm_funcregister("qwidget_isvisibleto",ring_QWidget_isVisibleTo);
	ring_vm_funcregister("qwidget_iswindow",ring_QWidget_isWindow);
	ring_vm_funcregister("qwidget_iswindowmodified",ring_QWidget_isWindowModified);
	ring_vm_funcregister("qwidget_layout",ring_QWidget_layout);
	ring_vm_funcregister("qwidget_layoutdirection",ring_QWidget_layoutDirection);
	ring_vm_funcregister("qwidget_locale",ring_QWidget_locale);
	ring_vm_funcregister("qwidget_mapfrom",ring_QWidget_mapFrom);
	ring_vm_funcregister("qwidget_mapfromglobal",ring_QWidget_mapFromGlobal);
	ring_vm_funcregister("qwidget_mapfromparent",ring_QWidget_mapFromParent);
	ring_vm_funcregister("qwidget_mapto",ring_QWidget_mapTo);
	ring_vm_funcregister("qwidget_maptoglobal",ring_QWidget_mapToGlobal);
	ring_vm_funcregister("qwidget_maptoparent",ring_QWidget_mapToParent);
	ring_vm_funcregister("qwidget_mask",ring_QWidget_mask);
	ring_vm_funcregister("qwidget_maximumheight",ring_QWidget_maximumHeight);
	ring_vm_funcregister("qwidget_maximumsize",ring_QWidget_maximumSize);
	ring_vm_funcregister("qwidget_maximumwidth",ring_QWidget_maximumWidth);
	ring_vm_funcregister("qwidget_minimumheight",ring_QWidget_minimumHeight);
	ring_vm_funcregister("qwidget_minimumsize",ring_QWidget_minimumSize);
	ring_vm_funcregister("qwidget_minimumwidth",ring_QWidget_minimumWidth);
	ring_vm_funcregister("qwidget_move",ring_QWidget_move);
	ring_vm_funcregister("qwidget_nativeparentwidget",ring_QWidget_nativeParentWidget);
	ring_vm_funcregister("qwidget_nextinfocuschain",ring_QWidget_nextInFocusChain);
	ring_vm_funcregister("qwidget_normalgeometry",ring_QWidget_normalGeometry);
	ring_vm_funcregister("qwidget_overridewindowflags",ring_QWidget_overrideWindowFlags);
	ring_vm_funcregister("qwidget_palette",ring_QWidget_palette);
	ring_vm_funcregister("qwidget_parentwidget",ring_QWidget_parentWidget);
	ring_vm_funcregister("qwidget_pos",ring_QWidget_pos);
	ring_vm_funcregister("qwidget_previousinfocuschain",ring_QWidget_previousInFocusChain);
	ring_vm_funcregister("qwidget_rect",ring_QWidget_rect);
	ring_vm_funcregister("qwidget_releasekeyboard",ring_QWidget_releaseKeyboard);
	ring_vm_funcregister("qwidget_releasemouse",ring_QWidget_releaseMouse);
	ring_vm_funcregister("qwidget_releaseshortcut",ring_QWidget_releaseShortcut);
	ring_vm_funcregister("qwidget_removeaction",ring_QWidget_removeAction);
	ring_vm_funcregister("qwidget_render",ring_QWidget_render);
	ring_vm_funcregister("qwidget_repaint",ring_QWidget_repaint);
	ring_vm_funcregister("qwidget_resize",ring_QWidget_resize);
	ring_vm_funcregister("qwidget_restoregeometry",ring_QWidget_restoreGeometry);
	ring_vm_funcregister("qwidget_savegeometry",ring_QWidget_saveGeometry);
	ring_vm_funcregister("qwidget_scroll",ring_QWidget_scroll);
	ring_vm_funcregister("qwidget_setacceptdrops",ring_QWidget_setAcceptDrops);
	ring_vm_funcregister("qwidget_setaccessibledescription",ring_QWidget_setAccessibleDescription);
	ring_vm_funcregister("qwidget_setaccessiblename",ring_QWidget_setAccessibleName);
	ring_vm_funcregister("qwidget_setattribute",ring_QWidget_setAttribute);
	ring_vm_funcregister("qwidget_setautofillbackground",ring_QWidget_setAutoFillBackground);
	ring_vm_funcregister("qwidget_setbackgroundrole",ring_QWidget_setBackgroundRole);
	ring_vm_funcregister("qwidget_setbasesize",ring_QWidget_setBaseSize);
	ring_vm_funcregister("qwidget_setcontentsmargins",ring_QWidget_setContentsMargins);
	ring_vm_funcregister("qwidget_setcontextmenupolicy",ring_QWidget_setContextMenuPolicy);
	ring_vm_funcregister("qwidget_setcursor",ring_QWidget_setCursor);
	ring_vm_funcregister("qwidget_setfixedheight",ring_QWidget_setFixedHeight);
	ring_vm_funcregister("qwidget_setfixedsize",ring_QWidget_setFixedSize);
	ring_vm_funcregister("qwidget_setfixedwidth",ring_QWidget_setFixedWidth);
	ring_vm_funcregister("qwidget_setfocus",ring_QWidget_setFocus);
	ring_vm_funcregister("qwidget_setfocuspolicy",ring_QWidget_setFocusPolicy);
	ring_vm_funcregister("qwidget_setfocusproxy",ring_QWidget_setFocusProxy);
	ring_vm_funcregister("qwidget_setfont",ring_QWidget_setFont);
	ring_vm_funcregister("qwidget_setforegroundrole",ring_QWidget_setForegroundRole);
	ring_vm_funcregister("qwidget_setgeometry",ring_QWidget_setGeometry);
	ring_vm_funcregister("qwidget_setgraphicseffect",ring_QWidget_setGraphicsEffect);
	ring_vm_funcregister("qwidget_setinputmethodhints",ring_QWidget_setInputMethodHints);
	ring_vm_funcregister("qwidget_setlayout",ring_QWidget_setLayout);
	ring_vm_funcregister("qwidget_setlayoutdirection",ring_QWidget_setLayoutDirection);
	ring_vm_funcregister("qwidget_setlocale",ring_QWidget_setLocale);
	ring_vm_funcregister("qwidget_setmask",ring_QWidget_setMask);
	ring_vm_funcregister("qwidget_setmaximumheight",ring_QWidget_setMaximumHeight);
	ring_vm_funcregister("qwidget_setmaximumsize",ring_QWidget_setMaximumSize);
	ring_vm_funcregister("qwidget_setmaximumwidth",ring_QWidget_setMaximumWidth);
	ring_vm_funcregister("qwidget_setminimumheight",ring_QWidget_setMinimumHeight);
	ring_vm_funcregister("qwidget_setminimumsize",ring_QWidget_setMinimumSize);
	ring_vm_funcregister("qwidget_setminimumwidth",ring_QWidget_setMinimumWidth);
	ring_vm_funcregister("qwidget_setmousetracking",ring_QWidget_setMouseTracking);
	ring_vm_funcregister("qwidget_setpalette",ring_QWidget_setPalette);
	ring_vm_funcregister("qwidget_setparent",ring_QWidget_setParent);
	ring_vm_funcregister("qwidget_setshortcutautorepeat",ring_QWidget_setShortcutAutoRepeat);
	ring_vm_funcregister("qwidget_setshortcutenabled",ring_QWidget_setShortcutEnabled);
	ring_vm_funcregister("qwidget_setsizeincrement",ring_QWidget_setSizeIncrement);
	ring_vm_funcregister("qwidget_setsizepolicy",ring_QWidget_setSizePolicy);
	ring_vm_funcregister("qwidget_setstatustip",ring_QWidget_setStatusTip);
	ring_vm_funcregister("qwidget_setstyle",ring_QWidget_setStyle);
	ring_vm_funcregister("qwidget_settooltip",ring_QWidget_setToolTip);
	ring_vm_funcregister("qwidget_setupdatesenabled",ring_QWidget_setUpdatesEnabled);
	ring_vm_funcregister("qwidget_setwhatsthis",ring_QWidget_setWhatsThis);
	ring_vm_funcregister("qwidget_setwindowfilepath",ring_QWidget_setWindowFilePath);
	ring_vm_funcregister("qwidget_setwindowflags",ring_QWidget_setWindowFlags);
	ring_vm_funcregister("qwidget_setwindowicon",ring_QWidget_setWindowIcon);
	ring_vm_funcregister("qwidget_setwindowicontext",ring_QWidget_setWindowIconText);
	ring_vm_funcregister("qwidget_setwindowmodality",ring_QWidget_setWindowModality);
	ring_vm_funcregister("qwidget_setwindowopacity",ring_QWidget_setWindowOpacity);
	ring_vm_funcregister("qwidget_setwindowrole",ring_QWidget_setWindowRole);
	ring_vm_funcregister("qwidget_setwindowstate",ring_QWidget_setWindowState);
	ring_vm_funcregister("qwidget_size",ring_QWidget_size);
	ring_vm_funcregister("qwidget_sizeincrement",ring_QWidget_sizeIncrement);
	ring_vm_funcregister("qwidget_sizepolicy",ring_QWidget_sizePolicy);
	ring_vm_funcregister("qwidget_stackunder",ring_QWidget_stackUnder);
	ring_vm_funcregister("qwidget_statustip",ring_QWidget_statusTip);
	ring_vm_funcregister("qwidget_style",ring_QWidget_style);
	ring_vm_funcregister("qwidget_stylesheet",ring_QWidget_styleSheet);
	ring_vm_funcregister("qwidget_testattribute",ring_QWidget_testAttribute);
	ring_vm_funcregister("qwidget_tooltip",ring_QWidget_toolTip);
	ring_vm_funcregister("qwidget_undermouse",ring_QWidget_underMouse);
	ring_vm_funcregister("qwidget_ungrabgesture",ring_QWidget_ungrabGesture);
	ring_vm_funcregister("qwidget_unsetcursor",ring_QWidget_unsetCursor);
	ring_vm_funcregister("qwidget_unsetlayoutdirection",ring_QWidget_unsetLayoutDirection);
	ring_vm_funcregister("qwidget_unsetlocale",ring_QWidget_unsetLocale);
	ring_vm_funcregister("qwidget_update",ring_QWidget_update);
	ring_vm_funcregister("qwidget_updategeometry",ring_QWidget_updateGeometry);
	ring_vm_funcregister("qwidget_updatesenabled",ring_QWidget_updatesEnabled);
	ring_vm_funcregister("qwidget_visibleregion",ring_QWidget_visibleRegion);
	ring_vm_funcregister("qwidget_whatsthis",ring_QWidget_whatsThis);
	ring_vm_funcregister("qwidget_width",ring_QWidget_width);
	ring_vm_funcregister("qwidget_winid",ring_QWidget_winId);
	ring_vm_funcregister("qwidget_window",ring_QWidget_window);
	ring_vm_funcregister("qwidget_windowfilepath",ring_QWidget_windowFilePath);
	ring_vm_funcregister("qwidget_windowflags",ring_QWidget_windowFlags);
	ring_vm_funcregister("qwidget_windowhandle",ring_QWidget_windowHandle);
	ring_vm_funcregister("qwidget_windowicon",ring_QWidget_windowIcon);
	ring_vm_funcregister("qwidget_windowicontext",ring_QWidget_windowIconText);
	ring_vm_funcregister("qwidget_windowmodality",ring_QWidget_windowModality);
	ring_vm_funcregister("qwidget_windowopacity",ring_QWidget_windowOpacity);
	ring_vm_funcregister("qwidget_windowrole",ring_QWidget_windowRole);
	ring_vm_funcregister("qwidget_windowstate",ring_QWidget_windowState);
	ring_vm_funcregister("qwidget_windowtitle",ring_QWidget_windowTitle);
	ring_vm_funcregister("qwidget_windowtype",ring_QWidget_windowType);
	ring_vm_funcregister("qwidget_x",ring_QWidget_x);
	ring_vm_funcregister("qwidget_y",ring_QWidget_y);
	ring_vm_funcregister("qwidget_close",ring_QWidget_close);
	ring_vm_funcregister("qwidget_hide",ring_QWidget_hide);
	ring_vm_funcregister("qwidget_lower",ring_QWidget_lower);
	ring_vm_funcregister("qwidget_raise",ring_QWidget_raise);
	ring_vm_funcregister("qwidget_setdisabled",ring_QWidget_setDisabled);
	ring_vm_funcregister("qwidget_setenabled",ring_QWidget_setEnabled);
	ring_vm_funcregister("qwidget_sethidden",ring_QWidget_setHidden);
	ring_vm_funcregister("qwidget_setstylesheet",ring_QWidget_setStyleSheet);
	ring_vm_funcregister("qwidget_setwindowmodified",ring_QWidget_setWindowModified);
	ring_vm_funcregister("qwidget_setwindowtitle",ring_QWidget_setWindowTitle);
	ring_vm_funcregister("qwidget_show",ring_QWidget_show);
	ring_vm_funcregister("qwidget_showfullscreen",ring_QWidget_showFullScreen);
	ring_vm_funcregister("qwidget_showmaximized",ring_QWidget_showMaximized);
	ring_vm_funcregister("qwidget_showminimized",ring_QWidget_showMinimized);
	ring_vm_funcregister("qwidget_shownormal",ring_QWidget_showNormal);
	ring_vm_funcregister("qwidget_find",ring_QWidget_find);
	ring_vm_funcregister("qwidget_keyboardgrabber",ring_QWidget_keyboardGrabber);
	ring_vm_funcregister("qwidget_mousegrabber",ring_QWidget_mouseGrabber);
	ring_vm_funcregister("qwidget_settaborder",ring_QWidget_setTabOrder);
	ring_vm_funcregister("qlabel_alignment",ring_QLabel_alignment);
	ring_vm_funcregister("qlabel_buddy",ring_QLabel_buddy);
	ring_vm_funcregister("qlabel_hasscaledcontents",ring_QLabel_hasScaledContents);
	ring_vm_funcregister("qlabel_hasselectedtext",ring_QLabel_hasSelectedText);
	ring_vm_funcregister("qlabel_indent",ring_QLabel_indent);
	ring_vm_funcregister("qlabel_margin",ring_QLabel_margin);
	ring_vm_funcregister("qlabel_movie",ring_QLabel_movie);
	ring_vm_funcregister("qlabel_openexternallinks",ring_QLabel_openExternalLinks);
	ring_vm_funcregister("qlabel_picture",ring_QLabel_picture);
	ring_vm_funcregister("qlabel_pixmap",ring_QLabel_pixmap);
	ring_vm_funcregister("qlabel_selectedtext",ring_QLabel_selectedText);
	ring_vm_funcregister("qlabel_selectionstart",ring_QLabel_selectionStart);
	ring_vm_funcregister("qlabel_setalignment",ring_QLabel_setAlignment);
	ring_vm_funcregister("qlabel_setbuddy",ring_QLabel_setBuddy);
	ring_vm_funcregister("qlabel_setindent",ring_QLabel_setIndent);
	ring_vm_funcregister("qlabel_setmargin",ring_QLabel_setMargin);
	ring_vm_funcregister("qlabel_setopenexternallinks",ring_QLabel_setOpenExternalLinks);
	ring_vm_funcregister("qlabel_setscaledcontents",ring_QLabel_setScaledContents);
	ring_vm_funcregister("qlabel_setselection",ring_QLabel_setSelection);
	ring_vm_funcregister("qlabel_settextformat",ring_QLabel_setTextFormat);
	ring_vm_funcregister("qlabel_settextinteractionflags",ring_QLabel_setTextInteractionFlags);
	ring_vm_funcregister("qlabel_setwordwrap",ring_QLabel_setWordWrap);
	ring_vm_funcregister("qlabel_text",ring_QLabel_text);
	ring_vm_funcregister("qlabel_textformat",ring_QLabel_textFormat);
	ring_vm_funcregister("qlabel_textinteractionflags",ring_QLabel_textInteractionFlags);
	ring_vm_funcregister("qlabel_wordwrap",ring_QLabel_wordWrap);
	ring_vm_funcregister("qlabel_clear",ring_QLabel_clear);
	ring_vm_funcregister("qlabel_setmovie",ring_QLabel_setMovie);
	ring_vm_funcregister("qlabel_setnum",ring_QLabel_setNum);
	ring_vm_funcregister("qlabel_setpicture",ring_QLabel_setPicture);
	ring_vm_funcregister("qlabel_setpixmap",ring_QLabel_setPixmap);
	ring_vm_funcregister("qlabel_settext",ring_QLabel_setText);
	ring_vm_funcregister("qpushbutton_settext",ring_QPushButton_setText);
	ring_vm_funcregister("qpushbutton_setclickevent",ring_QPushButton_setClickEvent);
	ring_vm_funcregister("qpushbutton_seticon",ring_QPushButton_setIcon);
	ring_vm_funcregister("qpushbutton_seticonsize",ring_QPushButton_setIconSize);
	ring_vm_funcregister("qpushbutton_getclickevent",ring_QPushButton_getClickEvent);
	ring_vm_funcregister("qbitmap_clear",ring_QBitmap_clear);
	ring_vm_funcregister("qbitmap_swap",ring_QBitmap_swap);
	ring_vm_funcregister("qbitmap_transformed",ring_QBitmap_transformed);
	ring_vm_funcregister("qbitmap_fromdata",ring_QBitmap_fromData);
	ring_vm_funcregister("qbitmap_fromimage",ring_QBitmap_fromImage);
	ring_vm_funcregister("qpixmap_copy",ring_QPixmap_copy);
	ring_vm_funcregister("qpixmap_scaled",ring_QPixmap_scaled);
	ring_vm_funcregister("qpixmap_width",ring_QPixmap_width);
	ring_vm_funcregister("qpixmap_height",ring_QPixmap_height);
	ring_vm_funcregister("qpixmap_createmaskfromcolor",ring_QPixmap_createMaskFromColor);
	ring_vm_funcregister("qpixmap_mask",ring_QPixmap_mask);
	ring_vm_funcregister("qpixmap_setmask",ring_QPixmap_setMask);
	ring_vm_funcregister("qpixmap_fill",ring_QPixmap_fill);
	ring_vm_funcregister("qpixmap_fromimage",ring_QPixmap_fromImage);
	ring_vm_funcregister("qpixmap_load",ring_QPixmap_load);
	ring_vm_funcregister("qpixmap_cachekey",ring_QPixmap_cacheKey);
	ring_vm_funcregister("qpixmap_convertfromimage",ring_QPixmap_convertFromImage);
	ring_vm_funcregister("qpixmap_copy_2",ring_QPixmap_copy_2);
	ring_vm_funcregister("qpixmap_createheuristicmask",ring_QPixmap_createHeuristicMask);
	ring_vm_funcregister("qpixmap_depth",ring_QPixmap_depth);
	ring_vm_funcregister("qpixmap_detach",ring_QPixmap_detach);
	ring_vm_funcregister("qpixmap_devicepixelratio",ring_QPixmap_devicePixelRatio);
	ring_vm_funcregister("qpixmap_hasalpha",ring_QPixmap_hasAlpha);
	ring_vm_funcregister("qpixmap_hasalphachannel",ring_QPixmap_hasAlphaChannel);
	ring_vm_funcregister("qpixmap_isnull",ring_QPixmap_isNull);
	ring_vm_funcregister("qpixmap_isqbitmap",ring_QPixmap_isQBitmap);
	ring_vm_funcregister("qpixmap_loadfromdata",ring_QPixmap_loadFromData);
	ring_vm_funcregister("qpixmap_loadfromdata_2",ring_QPixmap_loadFromData_2);
	ring_vm_funcregister("qpixmap_rect",ring_QPixmap_rect);
	ring_vm_funcregister("qpixmap_save",ring_QPixmap_save);
	ring_vm_funcregister("qpixmap_save_2",ring_QPixmap_save_2);
	ring_vm_funcregister("qpixmap_scaled_2",ring_QPixmap_scaled_2);
	ring_vm_funcregister("qpixmap_scaledtoheight",ring_QPixmap_scaledToHeight);
	ring_vm_funcregister("qpixmap_scaledtowidth",ring_QPixmap_scaledToWidth);
	ring_vm_funcregister("qpixmap_scroll",ring_QPixmap_scroll);
	ring_vm_funcregister("qpixmap_scroll_2",ring_QPixmap_scroll_2);
	ring_vm_funcregister("qpixmap_setdevicepixelratio",ring_QPixmap_setDevicePixelRatio);
	ring_vm_funcregister("qpixmap_size",ring_QPixmap_size);
	ring_vm_funcregister("qpixmap_swap",ring_QPixmap_swap);
	ring_vm_funcregister("qpixmap_toimage",ring_QPixmap_toImage);
	ring_vm_funcregister("qpixmap_transformed",ring_QPixmap_transformed);
	ring_vm_funcregister("qpixmap_transformed_2",ring_QPixmap_transformed_2);
	ring_vm_funcregister("qpixmap_defaultdepth",ring_QPixmap_defaultDepth);
	ring_vm_funcregister("qpixmap_fromimage_2",ring_QPixmap_fromImage_2);
	ring_vm_funcregister("qpixmap_fromimagereader",ring_QPixmap_fromImageReader);
	ring_vm_funcregister("qpixmap_truematrix",ring_QPixmap_trueMatrix);
	ring_vm_funcregister("qpixmap_truematrix_2",ring_QPixmap_trueMatrix_2);
	ring_vm_funcregister("qlineedit_alignment",ring_QLineEdit_alignment);
	ring_vm_funcregister("qlineedit_backspace",ring_QLineEdit_backspace);
	ring_vm_funcregister("qlineedit_completer",ring_QLineEdit_completer);
	ring_vm_funcregister("qlineedit_createstandardcontextmenu",ring_QLineEdit_createStandardContextMenu);
	ring_vm_funcregister("qlineedit_cursorbackward",ring_QLineEdit_cursorBackward);
	ring_vm_funcregister("qlineedit_cursorforward",ring_QLineEdit_cursorForward);
	ring_vm_funcregister("qlineedit_cursormovestyle",ring_QLineEdit_cursorMoveStyle);
	ring_vm_funcregister("qlineedit_cursorposition",ring_QLineEdit_cursorPosition);
	ring_vm_funcregister("qlineedit_cursorpositionat",ring_QLineEdit_cursorPositionAt);
	ring_vm_funcregister("qlineedit_cursorwordbackward",ring_QLineEdit_cursorWordBackward);
	ring_vm_funcregister("qlineedit_cursorwordforward",ring_QLineEdit_cursorWordForward);
	ring_vm_funcregister("qlineedit_del",ring_QLineEdit_del);
	ring_vm_funcregister("qlineedit_deselect",ring_QLineEdit_deselect);
	ring_vm_funcregister("qlineedit_displaytext",ring_QLineEdit_displayText);
	ring_vm_funcregister("qlineedit_dragenabled",ring_QLineEdit_dragEnabled);
	ring_vm_funcregister("qlineedit_echomode",ring_QLineEdit_echoMode);
	ring_vm_funcregister("qlineedit_end",ring_QLineEdit_end);
	ring_vm_funcregister("qlineedit_gettextmargins",ring_QLineEdit_getTextMargins);
	ring_vm_funcregister("qlineedit_hasacceptableinput",ring_QLineEdit_hasAcceptableInput);
	ring_vm_funcregister("qlineedit_hasframe",ring_QLineEdit_hasFrame);
	ring_vm_funcregister("qlineedit_hasselectedtext",ring_QLineEdit_hasSelectedText);
	ring_vm_funcregister("qlineedit_home",ring_QLineEdit_home);
	ring_vm_funcregister("qlineedit_inputmask",ring_QLineEdit_inputMask);
	ring_vm_funcregister("qlineedit_insert",ring_QLineEdit_insert);
	ring_vm_funcregister("qlineedit_ismodified",ring_QLineEdit_isModified);
	ring_vm_funcregister("qlineedit_isreadonly",ring_QLineEdit_isReadOnly);
	ring_vm_funcregister("qlineedit_isredoavailable",ring_QLineEdit_isRedoAvailable);
	ring_vm_funcregister("qlineedit_isundoavailable",ring_QLineEdit_isUndoAvailable);
	ring_vm_funcregister("qlineedit_maxlength",ring_QLineEdit_maxLength);
	ring_vm_funcregister("qlineedit_placeholdertext",ring_QLineEdit_placeholderText);
	ring_vm_funcregister("qlineedit_selectedtext",ring_QLineEdit_selectedText);
	ring_vm_funcregister("qlineedit_selectionstart",ring_QLineEdit_selectionStart);
	ring_vm_funcregister("qlineedit_setalignment",ring_QLineEdit_setAlignment);
	ring_vm_funcregister("qlineedit_setcompleter",ring_QLineEdit_setCompleter);
	ring_vm_funcregister("qlineedit_setcursormovestyle",ring_QLineEdit_setCursorMoveStyle);
	ring_vm_funcregister("qlineedit_setcursorposition",ring_QLineEdit_setCursorPosition);
	ring_vm_funcregister("qlineedit_setdragenabled",ring_QLineEdit_setDragEnabled);
	ring_vm_funcregister("qlineedit_setechomode",ring_QLineEdit_setEchoMode);
	ring_vm_funcregister("qlineedit_setframe",ring_QLineEdit_setFrame);
	ring_vm_funcregister("qlineedit_setinputmask",ring_QLineEdit_setInputMask);
	ring_vm_funcregister("qlineedit_setmaxlength",ring_QLineEdit_setMaxLength);
	ring_vm_funcregister("qlineedit_setmodified",ring_QLineEdit_setModified);
	ring_vm_funcregister("qlineedit_setplaceholdertext",ring_QLineEdit_setPlaceholderText);
	ring_vm_funcregister("qlineedit_setreadonly",ring_QLineEdit_setReadOnly);
	ring_vm_funcregister("qlineedit_setselection",ring_QLineEdit_setSelection);
	ring_vm_funcregister("qlineedit_settextmargins",ring_QLineEdit_setTextMargins);
	ring_vm_funcregister("qlineedit_setvalidator",ring_QLineEdit_setValidator);
	ring_vm_funcregister("qlineedit_text",ring_QLineEdit_text);
	ring_vm_funcregister("qlineedit_textmargins",ring_QLineEdit_textMargins);
	ring_vm_funcregister("qlineedit_validator",ring_QLineEdit_validator);
	ring_vm_funcregister("qlineedit_clear",ring_QLineEdit_clear);
	ring_vm_funcregister("qlineedit_copy",ring_QLineEdit_copy);
	ring_vm_funcregister("qlineedit_cut",ring_QLineEdit_cut);
	ring_vm_funcregister("qlineedit_paste",ring_QLineEdit_paste);
	ring_vm_funcregister("qlineedit_redo",ring_QLineEdit_redo);
	ring_vm_funcregister("qlineedit_selectall",ring_QLineEdit_selectAll);
	ring_vm_funcregister("qlineedit_settext",ring_QLineEdit_setText);
	ring_vm_funcregister("qlineedit_undo",ring_QLineEdit_undo);
	ring_vm_funcregister("qlineedit_settextchangedevent",ring_QLineEdit_setTextChangedEvent);
	ring_vm_funcregister("qlineedit_setcursorpositionchangedevent",ring_QLineEdit_setcursorPositionChangedEvent);
	ring_vm_funcregister("qlineedit_seteditingfinishedevent",ring_QLineEdit_seteditingFinishedEvent);
	ring_vm_funcregister("qlineedit_setreturnpressedevent",ring_QLineEdit_setreturnPressedEvent);
	ring_vm_funcregister("qlineedit_setselectionchangedevent",ring_QLineEdit_setselectionChangedEvent);
	ring_vm_funcregister("qlineedit_settexteditedevent",ring_QLineEdit_settextEditedEvent);
	ring_vm_funcregister("qlineedit_gettextchangedevent",ring_QLineEdit_getTextChangedEvent);
	ring_vm_funcregister("qlineedit_getcursorpositionchangedevent",ring_QLineEdit_getcursorPositionChangedEvent);
	ring_vm_funcregister("qlineedit_geteditingfinishedevent",ring_QLineEdit_geteditingFinishedEvent);
	ring_vm_funcregister("qlineedit_getreturnpressedevent",ring_QLineEdit_getreturnPressedEvent);
	ring_vm_funcregister("qlineedit_getselectionchangedevent",ring_QLineEdit_getselectionChangedEvent);
	ring_vm_funcregister("qlineedit_gettexteditedevent",ring_QLineEdit_gettextEditedEvent);
	ring_vm_funcregister("qvboxlayout_addwidget",ring_QVBoxLayout_addWidget);
	ring_vm_funcregister("qvboxlayout_addlayout",ring_QVBoxLayout_addLayout);
	ring_vm_funcregister("qhboxlayout_addwidget",ring_QHBoxLayout_addWidget);
	ring_vm_funcregister("qhboxlayout_addlayout",ring_QHBoxLayout_addLayout);
	ring_vm_funcregister("qtextedit_acceptrichtext",ring_QTextEdit_acceptRichText);
	ring_vm_funcregister("qtextedit_alignment",ring_QTextEdit_alignment);
	ring_vm_funcregister("qtextedit_anchorat",ring_QTextEdit_anchorAt);
	ring_vm_funcregister("qtextedit_canpaste",ring_QTextEdit_canPaste);
	ring_vm_funcregister("qtextedit_currentcharformat",ring_QTextEdit_currentCharFormat);
	ring_vm_funcregister("qtextedit_currentfont",ring_QTextEdit_currentFont);
	ring_vm_funcregister("qtextedit_cursorforposition",ring_QTextEdit_cursorForPosition);
	ring_vm_funcregister("qtextedit_cursorrect",ring_QTextEdit_cursorRect);
	ring_vm_funcregister("qtextedit_cursorwidth",ring_QTextEdit_cursorWidth);
	ring_vm_funcregister("qtextedit_document",ring_QTextEdit_document);
	ring_vm_funcregister("qtextedit_documenttitle",ring_QTextEdit_documentTitle);
	ring_vm_funcregister("qtextedit_ensurecursorvisible",ring_QTextEdit_ensureCursorVisible);
	ring_vm_funcregister("qtextedit_find",ring_QTextEdit_find);
	ring_vm_funcregister("qtextedit_fontfamily",ring_QTextEdit_fontFamily);
	ring_vm_funcregister("qtextedit_fontitalic",ring_QTextEdit_fontItalic);
	ring_vm_funcregister("qtextedit_fontpointsize",ring_QTextEdit_fontPointSize);
	ring_vm_funcregister("qtextedit_fontunderline",ring_QTextEdit_fontUnderline);
	ring_vm_funcregister("qtextedit_fontweight",ring_QTextEdit_fontWeight);
	ring_vm_funcregister("qtextedit_isreadonly",ring_QTextEdit_isReadOnly);
	ring_vm_funcregister("qtextedit_isundoredoenabled",ring_QTextEdit_isUndoRedoEnabled);
	ring_vm_funcregister("qtextedit_linewrapcolumnorwidth",ring_QTextEdit_lineWrapColumnOrWidth);
	ring_vm_funcregister("qtextedit_loadresource",ring_QTextEdit_loadResource);
	ring_vm_funcregister("qtextedit_mergecurrentcharformat",ring_QTextEdit_mergeCurrentCharFormat);
	ring_vm_funcregister("qtextedit_movecursor",ring_QTextEdit_moveCursor);
	ring_vm_funcregister("qtextedit_overwritemode",ring_QTextEdit_overwriteMode);
	ring_vm_funcregister("qtextedit_print",ring_QTextEdit_print);
	ring_vm_funcregister("qtextedit_setacceptrichtext",ring_QTextEdit_setAcceptRichText);
	ring_vm_funcregister("qtextedit_setcurrentcharformat",ring_QTextEdit_setCurrentCharFormat);
	ring_vm_funcregister("qtextedit_setcursorwidth",ring_QTextEdit_setCursorWidth);
	ring_vm_funcregister("qtextedit_setdocument",ring_QTextEdit_setDocument);
	ring_vm_funcregister("qtextedit_setdocumenttitle",ring_QTextEdit_setDocumentTitle);
	ring_vm_funcregister("qtextedit_setlinewrapcolumnorwidth",ring_QTextEdit_setLineWrapColumnOrWidth);
	ring_vm_funcregister("qtextedit_setlinewrapmode",ring_QTextEdit_setLineWrapMode);
	ring_vm_funcregister("qtextedit_setoverwritemode",ring_QTextEdit_setOverwriteMode);
	ring_vm_funcregister("qtextedit_setreadonly",ring_QTextEdit_setReadOnly);
	ring_vm_funcregister("qtextedit_settabchangesfocus",ring_QTextEdit_setTabChangesFocus);
	ring_vm_funcregister("qtextedit_settabstopwidth",ring_QTextEdit_setTabStopWidth);
	ring_vm_funcregister("qtextedit_settextcursor",ring_QTextEdit_setTextCursor);
	ring_vm_funcregister("qtextedit_settextinteractionflags",ring_QTextEdit_setTextInteractionFlags);
	ring_vm_funcregister("qtextedit_setundoredoenabled",ring_QTextEdit_setUndoRedoEnabled);
	ring_vm_funcregister("qtextedit_setwordwrapmode",ring_QTextEdit_setWordWrapMode);
	ring_vm_funcregister("qtextedit_tabchangesfocus",ring_QTextEdit_tabChangesFocus);
	ring_vm_funcregister("qtextedit_tabstopwidth",ring_QTextEdit_tabStopWidth);
	ring_vm_funcregister("qtextedit_textbackgroundcolor",ring_QTextEdit_textBackgroundColor);
	ring_vm_funcregister("qtextedit_textcolor",ring_QTextEdit_textColor);
	ring_vm_funcregister("qtextedit_textcursor",ring_QTextEdit_textCursor);
	ring_vm_funcregister("qtextedit_textinteractionflags",ring_QTextEdit_textInteractionFlags);
	ring_vm_funcregister("qtextedit_tohtml",ring_QTextEdit_toHtml);
	ring_vm_funcregister("qtextedit_toplaintext",ring_QTextEdit_toPlainText);
	ring_vm_funcregister("qtextedit_wordwrapmode",ring_QTextEdit_wordWrapMode);
	ring_vm_funcregister("qtextedit_append",ring_QTextEdit_append);
	ring_vm_funcregister("qtextedit_clear",ring_QTextEdit_clear);
	ring_vm_funcregister("qtextedit_copy",ring_QTextEdit_copy);
	ring_vm_funcregister("qtextedit_cut",ring_QTextEdit_cut);
	ring_vm_funcregister("qtextedit_inserthtml",ring_QTextEdit_insertHtml);
	ring_vm_funcregister("qtextedit_insertplaintext",ring_QTextEdit_insertPlainText);
	ring_vm_funcregister("qtextedit_paste",ring_QTextEdit_paste);
	ring_vm_funcregister("qtextedit_redo",ring_QTextEdit_redo);
	ring_vm_funcregister("qtextedit_scrolltoanchor",ring_QTextEdit_scrollToAnchor);
	ring_vm_funcregister("qtextedit_selectall",ring_QTextEdit_selectAll);
	ring_vm_funcregister("qtextedit_setalignment",ring_QTextEdit_setAlignment);
	ring_vm_funcregister("qtextedit_setcurrentfont",ring_QTextEdit_setCurrentFont);
	ring_vm_funcregister("qtextedit_setfontfamily",ring_QTextEdit_setFontFamily);
	ring_vm_funcregister("qtextedit_setfontitalic",ring_QTextEdit_setFontItalic);
	ring_vm_funcregister("qtextedit_setfontpointsize",ring_QTextEdit_setFontPointSize);
	ring_vm_funcregister("qtextedit_setfontunderline",ring_QTextEdit_setFontUnderline);
	ring_vm_funcregister("qtextedit_setfontweight",ring_QTextEdit_setFontWeight);
	ring_vm_funcregister("qtextedit_sethtml",ring_QTextEdit_setHtml);
	ring_vm_funcregister("qtextedit_setplaintext",ring_QTextEdit_setPlainText);
	ring_vm_funcregister("qtextedit_settext",ring_QTextEdit_setText);
	ring_vm_funcregister("qtextedit_settextbackgroundcolor",ring_QTextEdit_setTextBackgroundColor);
	ring_vm_funcregister("qtextedit_settextcolor",ring_QTextEdit_setTextColor);
	ring_vm_funcregister("qtextedit_undo",ring_QTextEdit_undo);
	ring_vm_funcregister("qtextedit_zoomin",ring_QTextEdit_zoomIn);
	ring_vm_funcregister("qtextedit_zoomout",ring_QTextEdit_zoomOut);
	ring_vm_funcregister("qtextedit_setcopyavailableevent",ring_QTextEdit_setcopyAvailableEvent);
	ring_vm_funcregister("qtextedit_setcurrentcharformatchangedevent",ring_QTextEdit_setcurrentCharFormatChangedEvent);
	ring_vm_funcregister("qtextedit_setcursorpositionchangedevent",ring_QTextEdit_setcursorPositionChangedEvent);
	ring_vm_funcregister("qtextedit_setredoavailableevent",ring_QTextEdit_setredoAvailableEvent);
	ring_vm_funcregister("qtextedit_setselectionchangedevent",ring_QTextEdit_setselectionChangedEvent);
	ring_vm_funcregister("qtextedit_settextchangedevent",ring_QTextEdit_settextChangedEvent);
	ring_vm_funcregister("qtextedit_setundoavailableevent",ring_QTextEdit_setundoAvailableEvent);
	ring_vm_funcregister("qtextedit_getcopyavailableevent",ring_QTextEdit_getcopyAvailableEvent);
	ring_vm_funcregister("qtextedit_getcurrentcharformatchangedevent",ring_QTextEdit_getcurrentCharFormatChangedEvent);
	ring_vm_funcregister("qtextedit_getcursorpositionchangedevent",ring_QTextEdit_getcursorPositionChangedEvent);
	ring_vm_funcregister("qtextedit_getredoavailableevent",ring_QTextEdit_getredoAvailableEvent);
	ring_vm_funcregister("qtextedit_getselectionchangedevent",ring_QTextEdit_getselectionChangedEvent);
	ring_vm_funcregister("qtextedit_gettextchangedevent",ring_QTextEdit_gettextChangedEvent);
	ring_vm_funcregister("qtextedit_getundoavailableevent",ring_QTextEdit_getundoAvailableEvent);
	ring_vm_funcregister("qtextedit_cyanline",ring_QTextEdit_cyanline);
	ring_vm_funcregister("qtextedit_setactivelinecolor",ring_QTextEdit_setactivelinecolor);
	ring_vm_funcregister("qlistwidget_additem",ring_QListWidget_addItem);
	ring_vm_funcregister("qlistwidget_count",ring_QListWidget_count);
	ring_vm_funcregister("qlistwidget_currentrow",ring_QListWidget_currentRow);
	ring_vm_funcregister("qlistwidget_edititem",ring_QListWidget_editItem);
	ring_vm_funcregister("qlistwidget_insertitem",ring_QListWidget_insertItem);
	ring_vm_funcregister("qlistwidget_issortingenabled",ring_QListWidget_isSortingEnabled);
	ring_vm_funcregister("qlistwidget_item",ring_QListWidget_item);
	ring_vm_funcregister("qlistwidget_itemat",ring_QListWidget_itemAt);
	ring_vm_funcregister("qlistwidget_itemwidget",ring_QListWidget_itemWidget);
	ring_vm_funcregister("qlistwidget_openpersistenteditor",ring_QListWidget_openPersistentEditor);
	ring_vm_funcregister("qlistwidget_removeitemwidget",ring_QListWidget_removeItemWidget);
	ring_vm_funcregister("qlistwidget_row",ring_QListWidget_row);
	ring_vm_funcregister("qlistwidget_setcurrentitem",ring_QListWidget_setCurrentItem);
	ring_vm_funcregister("qlistwidget_setcurrentrow",ring_QListWidget_setCurrentRow);
	ring_vm_funcregister("qlistwidget_setitemwidget",ring_QListWidget_setItemWidget);
	ring_vm_funcregister("qlistwidget_setsortingenabled",ring_QListWidget_setSortingEnabled);
	ring_vm_funcregister("qlistwidget_sortitems",ring_QListWidget_sortItems);
	ring_vm_funcregister("qlistwidget_takeitem",ring_QListWidget_takeItem);
	ring_vm_funcregister("qlistwidget_visualitemrect",ring_QListWidget_visualItemRect);
	ring_vm_funcregister("qlistwidget_clear",ring_QListWidget_clear);
	ring_vm_funcregister("qlistwidget_scrolltoitem",ring_QListWidget_scrollToItem);
	ring_vm_funcregister("qlistwidget_setcurrentitemchangedevent",ring_QListWidget_setcurrentItemChangedEvent);
	ring_vm_funcregister("qlistwidget_setcurrentrowchangedevent",ring_QListWidget_setcurrentRowChangedEvent);
	ring_vm_funcregister("qlistwidget_setcurrenttextchangedevent",ring_QListWidget_setcurrentTextChangedEvent);
	ring_vm_funcregister("qlistwidget_setitemactivatedevent",ring_QListWidget_setitemActivatedEvent);
	ring_vm_funcregister("qlistwidget_setitemchangedevent",ring_QListWidget_setitemChangedEvent);
	ring_vm_funcregister("qlistwidget_setitemclickedevent",ring_QListWidget_setitemClickedEvent);
	ring_vm_funcregister("qlistwidget_setitemdoubleclickedevent",ring_QListWidget_setitemDoubleClickedEvent);
	ring_vm_funcregister("qlistwidget_setitementeredevent",ring_QListWidget_setitemEnteredEvent);
	ring_vm_funcregister("qlistwidget_setitempressedevent",ring_QListWidget_setitemPressedEvent);
	ring_vm_funcregister("qlistwidget_setitemselectionchangedevent",ring_QListWidget_setitemSelectionChangedEvent);
	ring_vm_funcregister("qlistwidget_getcurrentitemchangedevent",ring_QListWidget_getcurrentItemChangedEvent);
	ring_vm_funcregister("qlistwidget_getcurrentrowchangedevent",ring_QListWidget_getcurrentRowChangedEvent);
	ring_vm_funcregister("qlistwidget_getcurrenttextchangedevent",ring_QListWidget_getcurrentTextChangedEvent);
	ring_vm_funcregister("qlistwidget_getitemactivatedevent",ring_QListWidget_getitemActivatedEvent);
	ring_vm_funcregister("qlistwidget_getitemchangedevent",ring_QListWidget_getitemChangedEvent);
	ring_vm_funcregister("qlistwidget_getitemclickedevent",ring_QListWidget_getitemClickedEvent);
	ring_vm_funcregister("qlistwidget_getitemdoubleclickedevent",ring_QListWidget_getitemDoubleClickedEvent);
	ring_vm_funcregister("qlistwidget_getitementeredevent",ring_QListWidget_getitemEnteredEvent);
	ring_vm_funcregister("qlistwidget_getitempressedevent",ring_QListWidget_getitemPressedEvent);
	ring_vm_funcregister("qlistwidget_getitemselectionchangedevent",ring_QListWidget_getitemSelectionChangedEvent);
	ring_vm_funcregister("qtreeview_allcolumnsshowfocus",ring_QTreeView_allColumnsShowFocus);
	ring_vm_funcregister("qtreeview_autoexpanddelay",ring_QTreeView_autoExpandDelay);
	ring_vm_funcregister("qtreeview_columnat",ring_QTreeView_columnAt);
	ring_vm_funcregister("qtreeview_columnviewportposition",ring_QTreeView_columnViewportPosition);
	ring_vm_funcregister("qtreeview_columnwidth",ring_QTreeView_columnWidth);
	ring_vm_funcregister("qtreeview_expandsondoubleclick",ring_QTreeView_expandsOnDoubleClick);
	ring_vm_funcregister("qtreeview_header",ring_QTreeView_header);
	ring_vm_funcregister("qtreeview_indentation",ring_QTreeView_indentation);
	ring_vm_funcregister("qtreeview_indexabove",ring_QTreeView_indexAbove);
	ring_vm_funcregister("qtreeview_indexbelow",ring_QTreeView_indexBelow);
	ring_vm_funcregister("qtreeview_isanimated",ring_QTreeView_isAnimated);
	ring_vm_funcregister("qtreeview_iscolumnhidden",ring_QTreeView_isColumnHidden);
	ring_vm_funcregister("qtreeview_isexpanded",ring_QTreeView_isExpanded);
	ring_vm_funcregister("qtreeview_isfirstcolumnspanned",ring_QTreeView_isFirstColumnSpanned);
	ring_vm_funcregister("qtreeview_isheaderhidden",ring_QTreeView_isHeaderHidden);
	ring_vm_funcregister("qtreeview_isrowhidden",ring_QTreeView_isRowHidden);
	ring_vm_funcregister("qtreeview_issortingenabled",ring_QTreeView_isSortingEnabled);
	ring_vm_funcregister("qtreeview_itemsexpandable",ring_QTreeView_itemsExpandable);
	ring_vm_funcregister("qtreeview_rootisdecorated",ring_QTreeView_rootIsDecorated);
	ring_vm_funcregister("qtreeview_setallcolumnsshowfocus",ring_QTreeView_setAllColumnsShowFocus);
	ring_vm_funcregister("qtreeview_setanimated",ring_QTreeView_setAnimated);
	ring_vm_funcregister("qtreeview_setautoexpanddelay",ring_QTreeView_setAutoExpandDelay);
	ring_vm_funcregister("qtreeview_setcolumnhidden",ring_QTreeView_setColumnHidden);
	ring_vm_funcregister("qtreeview_setcolumnwidth",ring_QTreeView_setColumnWidth);
	ring_vm_funcregister("qtreeview_setexpanded",ring_QTreeView_setExpanded);
	ring_vm_funcregister("qtreeview_setexpandsondoubleclick",ring_QTreeView_setExpandsOnDoubleClick);
	ring_vm_funcregister("qtreeview_setfirstcolumnspanned",ring_QTreeView_setFirstColumnSpanned);
	ring_vm_funcregister("qtreeview_setheader",ring_QTreeView_setHeader);
	ring_vm_funcregister("qtreeview_setheaderhidden",ring_QTreeView_setHeaderHidden);
	ring_vm_funcregister("qtreeview_setindentation",ring_QTreeView_setIndentation);
	ring_vm_funcregister("qtreeview_setitemsexpandable",ring_QTreeView_setItemsExpandable);
	ring_vm_funcregister("qtreeview_setrootisdecorated",ring_QTreeView_setRootIsDecorated);
	ring_vm_funcregister("qtreeview_setrowhidden",ring_QTreeView_setRowHidden);
	ring_vm_funcregister("qtreeview_setsortingenabled",ring_QTreeView_setSortingEnabled);
	ring_vm_funcregister("qtreeview_setuniformrowheights",ring_QTreeView_setUniformRowHeights);
	ring_vm_funcregister("qtreeview_setwordwrap",ring_QTreeView_setWordWrap);
	ring_vm_funcregister("qtreeview_sortbycolumn",ring_QTreeView_sortByColumn);
	ring_vm_funcregister("qtreeview_uniformrowheights",ring_QTreeView_uniformRowHeights);
	ring_vm_funcregister("qtreeview_wordwrap",ring_QTreeView_wordWrap);
	ring_vm_funcregister("qtreeview_datachanged",ring_QTreeView_dataChanged);
	ring_vm_funcregister("qtreeview_indexat",ring_QTreeView_indexAt);
	ring_vm_funcregister("qtreeview_keyboardsearch",ring_QTreeView_keyboardSearch);
	ring_vm_funcregister("qtreeview_reset",ring_QTreeView_reset);
	ring_vm_funcregister("qtreeview_scrollto",ring_QTreeView_scrollTo);
	ring_vm_funcregister("qtreeview_selectall",ring_QTreeView_selectAll);
	ring_vm_funcregister("qtreeview_setmodel",ring_QTreeView_setModel);
	ring_vm_funcregister("qtreeview_setrootindex",ring_QTreeView_setRootIndex);
	ring_vm_funcregister("qtreeview_setselectionmodel",ring_QTreeView_setSelectionModel);
	ring_vm_funcregister("qtreeview_visualrect",ring_QTreeView_visualRect);
	ring_vm_funcregister("qtreeview_collapse",ring_QTreeView_collapse);
	ring_vm_funcregister("qtreeview_collapseall",ring_QTreeView_collapseAll);
	ring_vm_funcregister("qtreeview_expand",ring_QTreeView_expand);
	ring_vm_funcregister("qtreeview_expandall",ring_QTreeView_expandAll);
	ring_vm_funcregister("qtreeview_expandtodepth",ring_QTreeView_expandToDepth);
	ring_vm_funcregister("qtreeview_hidecolumn",ring_QTreeView_hideColumn);
	ring_vm_funcregister("qtreeview_resizecolumntocontents",ring_QTreeView_resizeColumnToContents);
	ring_vm_funcregister("qtreeview_showcolumn",ring_QTreeView_showColumn);
	ring_vm_funcregister("qtreeview_setcollapsedevent",ring_QTreeView_setcollapsedEvent);
	ring_vm_funcregister("qtreeview_setexpandedevent",ring_QTreeView_setexpandedEvent);
	ring_vm_funcregister("qtreeview_setactivatedevent",ring_QTreeView_setactivatedEvent);
	ring_vm_funcregister("qtreeview_setclickedevent",ring_QTreeView_setclickedEvent);
	ring_vm_funcregister("qtreeview_setdoubleclickedevent",ring_QTreeView_setdoubleClickedEvent);
	ring_vm_funcregister("qtreeview_setenteredevent",ring_QTreeView_setenteredEvent);
	ring_vm_funcregister("qtreeview_setpressedevent",ring_QTreeView_setpressedEvent);
	ring_vm_funcregister("qtreeview_setviewportenteredevent",ring_QTreeView_setviewportEnteredEvent);
	ring_vm_funcregister("qtreeview_getcollapsedevent",ring_QTreeView_getcollapsedEvent);
	ring_vm_funcregister("qtreeview_getexpandedevent",ring_QTreeView_getexpandedEvent);
	ring_vm_funcregister("qtreeview_getactivatedevent",ring_QTreeView_getactivatedEvent);
	ring_vm_funcregister("qtreeview_getclickedevent",ring_QTreeView_getclickedEvent);
	ring_vm_funcregister("qtreeview_getdoubleclickedevent",ring_QTreeView_getdoubleClickedEvent);
	ring_vm_funcregister("qtreeview_getenteredevent",ring_QTreeView_getenteredEvent);
	ring_vm_funcregister("qtreeview_getpressedevent",ring_QTreeView_getpressedEvent);
	ring_vm_funcregister("qtreeview_getviewportenteredevent",ring_QTreeView_getviewportEnteredEvent);
	ring_vm_funcregister("qdir_currentpath",ring_QDir_currentPath);
	ring_vm_funcregister("qdir_setnamefilters",ring_QDir_setNameFilters);
	ring_vm_funcregister("qfilesystemmodel_fileicon",ring_QFileSystemModel_fileIcon);
	ring_vm_funcregister("qfilesystemmodel_fileinfo",ring_QFileSystemModel_fileInfo);
	ring_vm_funcregister("qfilesystemmodel_filename",ring_QFileSystemModel_fileName);
	ring_vm_funcregister("qfilesystemmodel_filepath",ring_QFileSystemModel_filePath);
	ring_vm_funcregister("qfilesystemmodel_filter",ring_QFileSystemModel_filter);
	ring_vm_funcregister("qfilesystemmodel_iconprovider",ring_QFileSystemModel_iconProvider);
	ring_vm_funcregister("qfilesystemmodel_index",ring_QFileSystemModel_index);
	ring_vm_funcregister("qfilesystemmodel_isdir",ring_QFileSystemModel_isDir);
	ring_vm_funcregister("qfilesystemmodel_isreadonly",ring_QFileSystemModel_isReadOnly);
	ring_vm_funcregister("qfilesystemmodel_lastmodified",ring_QFileSystemModel_lastModified);
	ring_vm_funcregister("qfilesystemmodel_mkdir",ring_QFileSystemModel_mkdir);
	ring_vm_funcregister("qfilesystemmodel_mycomputer",ring_QFileSystemModel_myComputer);
	ring_vm_funcregister("qfilesystemmodel_namefilterdisables",ring_QFileSystemModel_nameFilterDisables);
	ring_vm_funcregister("qfilesystemmodel_namefilters",ring_QFileSystemModel_nameFilters);
	ring_vm_funcregister("qfilesystemmodel_permissions",ring_QFileSystemModel_permissions);
	ring_vm_funcregister("qfilesystemmodel_remove",ring_QFileSystemModel_remove);
	ring_vm_funcregister("qfilesystemmodel_resolvesymlinks",ring_QFileSystemModel_resolveSymlinks);
	ring_vm_funcregister("qfilesystemmodel_rmdir",ring_QFileSystemModel_rmdir);
	ring_vm_funcregister("qfilesystemmodel_rootdirectory",ring_QFileSystemModel_rootDirectory);
	ring_vm_funcregister("qfilesystemmodel_rootpath",ring_QFileSystemModel_rootPath);
	ring_vm_funcregister("qfilesystemmodel_setfilter",ring_QFileSystemModel_setFilter);
	ring_vm_funcregister("qfilesystemmodel_seticonprovider",ring_QFileSystemModel_setIconProvider);
	ring_vm_funcregister("qfilesystemmodel_setnamefilterdisables",ring_QFileSystemModel_setNameFilterDisables);
	ring_vm_funcregister("qfilesystemmodel_setnamefilters",ring_QFileSystemModel_setNameFilters);
	ring_vm_funcregister("qfilesystemmodel_setreadonly",ring_QFileSystemModel_setReadOnly);
	ring_vm_funcregister("qfilesystemmodel_setresolvesymlinks",ring_QFileSystemModel_setResolveSymlinks);
	ring_vm_funcregister("qfilesystemmodel_setrootpath",ring_QFileSystemModel_setRootPath);
	ring_vm_funcregister("qfilesystemmodel_size",ring_QFileSystemModel_size);
	ring_vm_funcregister("qfilesystemmodel_type",ring_QFileSystemModel_type);
	ring_vm_funcregister("qfilesystemmodel_canfetchmore",ring_QFileSystemModel_canFetchMore);
	ring_vm_funcregister("qfilesystemmodel_columncount",ring_QFileSystemModel_columnCount);
	ring_vm_funcregister("qfilesystemmodel_data",ring_QFileSystemModel_data);
	ring_vm_funcregister("qfilesystemmodel_dropmimedata",ring_QFileSystemModel_dropMimeData);
	ring_vm_funcregister("qfilesystemmodel_fetchmore",ring_QFileSystemModel_fetchMore);
	ring_vm_funcregister("qfilesystemmodel_flags",ring_QFileSystemModel_flags);
	ring_vm_funcregister("qfilesystemmodel_haschildren",ring_QFileSystemModel_hasChildren);
	ring_vm_funcregister("qfilesystemmodel_headerdata",ring_QFileSystemModel_headerData);
	ring_vm_funcregister("qfilesystemmodel_mimedata",ring_QFileSystemModel_mimeData);
	ring_vm_funcregister("qfilesystemmodel_mimetypes",ring_QFileSystemModel_mimeTypes);
	ring_vm_funcregister("qfilesystemmodel_parent",ring_QFileSystemModel_parent);
	ring_vm_funcregister("qfilesystemmodel_rowcount",ring_QFileSystemModel_rowCount);
	ring_vm_funcregister("qfilesystemmodel_setdata",ring_QFileSystemModel_setData);
	ring_vm_funcregister("qfilesystemmodel_sort",ring_QFileSystemModel_sort);
	ring_vm_funcregister("qfilesystemmodel_supporteddropactions",ring_QFileSystemModel_supportedDropActions);
	ring_vm_funcregister("qtreewidget_addtoplevelitem",ring_QTreeWidget_addTopLevelItem);
	ring_vm_funcregister("qtreewidget_closepersistenteditor",ring_QTreeWidget_closePersistentEditor);
	ring_vm_funcregister("qtreewidget_columncount",ring_QTreeWidget_columnCount);
	ring_vm_funcregister("qtreewidget_currentcolumn",ring_QTreeWidget_currentColumn);
	ring_vm_funcregister("qtreewidget_currentitem",ring_QTreeWidget_currentItem);
	ring_vm_funcregister("qtreewidget_edititem",ring_QTreeWidget_editItem);
	ring_vm_funcregister("qtreewidget_headeritem",ring_QTreeWidget_headerItem);
	ring_vm_funcregister("qtreewidget_indexoftoplevelitem",ring_QTreeWidget_indexOfTopLevelItem);
	ring_vm_funcregister("qtreewidget_inserttoplevelitem",ring_QTreeWidget_insertTopLevelItem);
	ring_vm_funcregister("qtreewidget_invisiblerootitem",ring_QTreeWidget_invisibleRootItem);
	ring_vm_funcregister("qtreewidget_isfirstitemcolumnspanned",ring_QTreeWidget_isFirstItemColumnSpanned);
	ring_vm_funcregister("qtreewidget_itemabove",ring_QTreeWidget_itemAbove);
	ring_vm_funcregister("qtreewidget_itemat",ring_QTreeWidget_itemAt);
	ring_vm_funcregister("qtreewidget_itembelow",ring_QTreeWidget_itemBelow);
	ring_vm_funcregister("qtreewidget_itemwidget",ring_QTreeWidget_itemWidget);
	ring_vm_funcregister("qtreewidget_openpersistenteditor",ring_QTreeWidget_openPersistentEditor);
	ring_vm_funcregister("qtreewidget_removeitemwidget",ring_QTreeWidget_removeItemWidget);
	ring_vm_funcregister("qtreewidget_setcolumncount",ring_QTreeWidget_setColumnCount);
	ring_vm_funcregister("qtreewidget_setcurrentitem",ring_QTreeWidget_setCurrentItem);
	ring_vm_funcregister("qtreewidget_setfirstitemcolumnspanned",ring_QTreeWidget_setFirstItemColumnSpanned);
	ring_vm_funcregister("qtreewidget_setheaderitem",ring_QTreeWidget_setHeaderItem);
	ring_vm_funcregister("qtreewidget_setheaderlabel",ring_QTreeWidget_setHeaderLabel);
	ring_vm_funcregister("qtreewidget_setheaderlabels",ring_QTreeWidget_setHeaderLabels);
	ring_vm_funcregister("qtreewidget_setitemwidget",ring_QTreeWidget_setItemWidget);
	ring_vm_funcregister("qtreewidget_sortcolumn",ring_QTreeWidget_sortColumn);
	ring_vm_funcregister("qtreewidget_sortitems",ring_QTreeWidget_sortItems);
	ring_vm_funcregister("qtreewidget_taketoplevelitem",ring_QTreeWidget_takeTopLevelItem);
	ring_vm_funcregister("qtreewidget_toplevelitem",ring_QTreeWidget_topLevelItem);
	ring_vm_funcregister("qtreewidget_toplevelitemcount",ring_QTreeWidget_topLevelItemCount);
	ring_vm_funcregister("qtreewidget_visualitemrect",ring_QTreeWidget_visualItemRect);
	ring_vm_funcregister("qtreewidget_setselectionmodel",ring_QTreeWidget_setSelectionModel);
	ring_vm_funcregister("qtreewidget_clear",ring_QTreeWidget_clear);
	ring_vm_funcregister("qtreewidget_collapseitem",ring_QTreeWidget_collapseItem);
	ring_vm_funcregister("qtreewidget_expanditem",ring_QTreeWidget_expandItem);
	ring_vm_funcregister("qtreewidget_scrolltoitem",ring_QTreeWidget_scrollToItem);
	ring_vm_funcregister("qtreewidget_setcollapsedevent",ring_QTreeWidget_setcollapsedEvent);
	ring_vm_funcregister("qtreewidget_setexpandedevent",ring_QTreeWidget_setexpandedEvent);
	ring_vm_funcregister("qtreewidget_setactivatedevent",ring_QTreeWidget_setactivatedEvent);
	ring_vm_funcregister("qtreewidget_setclickedevent",ring_QTreeWidget_setclickedEvent);
	ring_vm_funcregister("qtreewidget_setdoubleclickedevent",ring_QTreeWidget_setdoubleClickedEvent);
	ring_vm_funcregister("qtreewidget_setenteredevent",ring_QTreeWidget_setenteredEvent);
	ring_vm_funcregister("qtreewidget_setpressedevent",ring_QTreeWidget_setpressedEvent);
	ring_vm_funcregister("qtreewidget_setviewportenteredevent",ring_QTreeWidget_setviewportEnteredEvent);
	ring_vm_funcregister("qtreewidget_setcurrentitemchangedevent",ring_QTreeWidget_setcurrentItemChangedEvent);
	ring_vm_funcregister("qtreewidget_setitemactivatedevent",ring_QTreeWidget_setitemActivatedEvent);
	ring_vm_funcregister("qtreewidget_setitemchangedevent",ring_QTreeWidget_setitemChangedEvent);
	ring_vm_funcregister("qtreewidget_setitemclickedevent",ring_QTreeWidget_setitemClickedEvent);
	ring_vm_funcregister("qtreewidget_setitemcollapsedevent",ring_QTreeWidget_setitemCollapsedEvent);
	ring_vm_funcregister("qtreewidget_setitemdoubleclickedevent",ring_QTreeWidget_setitemDoubleClickedEvent);
	ring_vm_funcregister("qtreewidget_setitementeredevent",ring_QTreeWidget_setitemEnteredEvent);
	ring_vm_funcregister("qtreewidget_setitemexpandedevent",ring_QTreeWidget_setitemExpandedEvent);
	ring_vm_funcregister("qtreewidget_setitempressedevent",ring_QTreeWidget_setitemPressedEvent);
	ring_vm_funcregister("qtreewidget_setitemselectionchangedevent",ring_QTreeWidget_setitemSelectionChangedEvent);
	ring_vm_funcregister("qtreewidget_getcollapsedevent",ring_QTreeWidget_getcollapsedEvent);
	ring_vm_funcregister("qtreewidget_getexpandedevent",ring_QTreeWidget_getexpandedEvent);
	ring_vm_funcregister("qtreewidget_getactivatedevent",ring_QTreeWidget_getactivatedEvent);
	ring_vm_funcregister("qtreewidget_getclickedevent",ring_QTreeWidget_getclickedEvent);
	ring_vm_funcregister("qtreewidget_getdoubleclickedevent",ring_QTreeWidget_getdoubleClickedEvent);
	ring_vm_funcregister("qtreewidget_getenteredevent",ring_QTreeWidget_getenteredEvent);
	ring_vm_funcregister("qtreewidget_getpressedevent",ring_QTreeWidget_getpressedEvent);
	ring_vm_funcregister("qtreewidget_getviewportenteredevent",ring_QTreeWidget_getviewportEnteredEvent);
	ring_vm_funcregister("qtreewidget_getcurrentitemchangedevent",ring_QTreeWidget_getcurrentItemChangedEvent);
	ring_vm_funcregister("qtreewidget_getitemactivatedevent",ring_QTreeWidget_getitemActivatedEvent);
	ring_vm_funcregister("qtreewidget_getitemchangedevent",ring_QTreeWidget_getitemChangedEvent);
	ring_vm_funcregister("qtreewidget_getitemclickedevent",ring_QTreeWidget_getitemClickedEvent);
	ring_vm_funcregister("qtreewidget_getitemcollapsedevent",ring_QTreeWidget_getitemCollapsedEvent);
	ring_vm_funcregister("qtreewidget_getitemdoubleclickedevent",ring_QTreeWidget_getitemDoubleClickedEvent);
	ring_vm_funcregister("qtreewidget_getitementeredevent",ring_QTreeWidget_getitemEnteredEvent);
	ring_vm_funcregister("qtreewidget_getitemexpandedevent",ring_QTreeWidget_getitemExpandedEvent);
	ring_vm_funcregister("qtreewidget_getitempressedevent",ring_QTreeWidget_getitemPressedEvent);
	ring_vm_funcregister("qtreewidget_getitemselectionchangedevent",ring_QTreeWidget_getitemSelectionChangedEvent);
	ring_vm_funcregister("qtreewidgetitem_addchild",ring_QTreeWidgetItem_addChild);
	ring_vm_funcregister("qtreewidgetitem_background",ring_QTreeWidgetItem_background);
	ring_vm_funcregister("qtreewidgetitem_checkstate",ring_QTreeWidgetItem_checkState);
	ring_vm_funcregister("qtreewidgetitem_child",ring_QTreeWidgetItem_child);
	ring_vm_funcregister("qtreewidgetitem_childcount",ring_QTreeWidgetItem_childCount);
	ring_vm_funcregister("qtreewidgetitem_childindicatorpolicy",ring_QTreeWidgetItem_childIndicatorPolicy);
	ring_vm_funcregister("qtreewidgetitem_clone",ring_QTreeWidgetItem_clone);
	ring_vm_funcregister("qtreewidgetitem_columncount",ring_QTreeWidgetItem_columnCount);
	ring_vm_funcregister("qtreewidgetitem_data",ring_QTreeWidgetItem_data);
	ring_vm_funcregister("qtreewidgetitem_flags",ring_QTreeWidgetItem_flags);
	ring_vm_funcregister("qtreewidgetitem_font",ring_QTreeWidgetItem_font);
	ring_vm_funcregister("qtreewidgetitem_foreground",ring_QTreeWidgetItem_foreground);
	ring_vm_funcregister("qtreewidgetitem_icon",ring_QTreeWidgetItem_icon);
	ring_vm_funcregister("qtreewidgetitem_indexofchild",ring_QTreeWidgetItem_indexOfChild);
	ring_vm_funcregister("qtreewidgetitem_insertchild",ring_QTreeWidgetItem_insertChild);
	ring_vm_funcregister("qtreewidgetitem_isdisabled",ring_QTreeWidgetItem_isDisabled);
	ring_vm_funcregister("qtreewidgetitem_isexpanded",ring_QTreeWidgetItem_isExpanded);
	ring_vm_funcregister("qtreewidgetitem_isfirstcolumnspanned",ring_QTreeWidgetItem_isFirstColumnSpanned);
	ring_vm_funcregister("qtreewidgetitem_ishidden",ring_QTreeWidgetItem_isHidden);
	ring_vm_funcregister("qtreewidgetitem_isselected",ring_QTreeWidgetItem_isSelected);
	ring_vm_funcregister("qtreewidgetitem_parent",ring_QTreeWidgetItem_parent);
	ring_vm_funcregister("qtreewidgetitem_read",ring_QTreeWidgetItem_read);
	ring_vm_funcregister("qtreewidgetitem_removechild",ring_QTreeWidgetItem_removeChild);
	ring_vm_funcregister("qtreewidgetitem_setbackground",ring_QTreeWidgetItem_setBackground);
	ring_vm_funcregister("qtreewidgetitem_setcheckstate",ring_QTreeWidgetItem_setCheckState);
	ring_vm_funcregister("qtreewidgetitem_setchildindicatorpolicy",ring_QTreeWidgetItem_setChildIndicatorPolicy);
	ring_vm_funcregister("qtreewidgetitem_setdata",ring_QTreeWidgetItem_setData);
	ring_vm_funcregister("qtreewidgetitem_setdisabled",ring_QTreeWidgetItem_setDisabled);
	ring_vm_funcregister("qtreewidgetitem_setexpanded",ring_QTreeWidgetItem_setExpanded);
	ring_vm_funcregister("qtreewidgetitem_setfirstcolumnspanned",ring_QTreeWidgetItem_setFirstColumnSpanned);
	ring_vm_funcregister("qtreewidgetitem_setflags",ring_QTreeWidgetItem_setFlags);
	ring_vm_funcregister("qtreewidgetitem_setfont",ring_QTreeWidgetItem_setFont);
	ring_vm_funcregister("qtreewidgetitem_setforeground",ring_QTreeWidgetItem_setForeground);
	ring_vm_funcregister("qtreewidgetitem_sethidden",ring_QTreeWidgetItem_setHidden);
	ring_vm_funcregister("qtreewidgetitem_seticon",ring_QTreeWidgetItem_setIcon);
	ring_vm_funcregister("qtreewidgetitem_setselected",ring_QTreeWidgetItem_setSelected);
	ring_vm_funcregister("qtreewidgetitem_setsizehint",ring_QTreeWidgetItem_setSizeHint);
	ring_vm_funcregister("qtreewidgetitem_setstatustip",ring_QTreeWidgetItem_setStatusTip);
	ring_vm_funcregister("qtreewidgetitem_settext",ring_QTreeWidgetItem_setText);
	ring_vm_funcregister("qtreewidgetitem_settextalignment",ring_QTreeWidgetItem_setTextAlignment);
	ring_vm_funcregister("qtreewidgetitem_settooltip",ring_QTreeWidgetItem_setToolTip);
	ring_vm_funcregister("qtreewidgetitem_setwhatsthis",ring_QTreeWidgetItem_setWhatsThis);
	ring_vm_funcregister("qtreewidgetitem_sizehint",ring_QTreeWidgetItem_sizeHint);
	ring_vm_funcregister("qtreewidgetitem_sortchildren",ring_QTreeWidgetItem_sortChildren);
	ring_vm_funcregister("qtreewidgetitem_statustip",ring_QTreeWidgetItem_statusTip);
	ring_vm_funcregister("qtreewidgetitem_takechild",ring_QTreeWidgetItem_takeChild);
	ring_vm_funcregister("qtreewidgetitem_text",ring_QTreeWidgetItem_text);
	ring_vm_funcregister("qtreewidgetitem_textalignment",ring_QTreeWidgetItem_textAlignment);
	ring_vm_funcregister("qtreewidgetitem_tooltip",ring_QTreeWidgetItem_toolTip);
	ring_vm_funcregister("qtreewidgetitem_treewidget",ring_QTreeWidgetItem_treeWidget);
	ring_vm_funcregister("qtreewidgetitem_type",ring_QTreeWidgetItem_type);
	ring_vm_funcregister("qtreewidgetitem_whatsthis",ring_QTreeWidgetItem_whatsThis);
	ring_vm_funcregister("qtreewidgetitem_write",ring_QTreeWidgetItem_write);
	ring_vm_funcregister("qcombobox_additem",ring_QComboBox_addItem);
	ring_vm_funcregister("qcombobox_completer",ring_QComboBox_completer);
	ring_vm_funcregister("qcombobox_count",ring_QComboBox_count);
	ring_vm_funcregister("qcombobox_currentindex",ring_QComboBox_currentIndex);
	ring_vm_funcregister("qcombobox_currenttext",ring_QComboBox_currentText);
	ring_vm_funcregister("qcombobox_duplicatesenabled",ring_QComboBox_duplicatesEnabled);
	ring_vm_funcregister("qcombobox_finddata",ring_QComboBox_findData);
	ring_vm_funcregister("qcombobox_findtext",ring_QComboBox_findText);
	ring_vm_funcregister("qcombobox_hasframe",ring_QComboBox_hasFrame);
	ring_vm_funcregister("qcombobox_hidepopup",ring_QComboBox_hidePopup);
	ring_vm_funcregister("qcombobox_iconsize",ring_QComboBox_iconSize);
	ring_vm_funcregister("qcombobox_insertitem",ring_QComboBox_insertItem);
	ring_vm_funcregister("qcombobox_insertseparator",ring_QComboBox_insertSeparator);
	ring_vm_funcregister("qcombobox_iseditable",ring_QComboBox_isEditable);
	ring_vm_funcregister("qcombobox_itemdata",ring_QComboBox_itemData);
	ring_vm_funcregister("qcombobox_itemdelegate",ring_QComboBox_itemDelegate);
	ring_vm_funcregister("qcombobox_itemicon",ring_QComboBox_itemIcon);
	ring_vm_funcregister("qcombobox_itemtext",ring_QComboBox_itemText);
	ring_vm_funcregister("qcombobox_lineedit",ring_QComboBox_lineEdit);
	ring_vm_funcregister("qcombobox_maxcount",ring_QComboBox_maxCount);
	ring_vm_funcregister("qcombobox_maxvisibleitems",ring_QComboBox_maxVisibleItems);
	ring_vm_funcregister("qcombobox_minimumcontentslength",ring_QComboBox_minimumContentsLength);
	ring_vm_funcregister("qcombobox_model",ring_QComboBox_model);
	ring_vm_funcregister("qcombobox_modelcolumn",ring_QComboBox_modelColumn);
	ring_vm_funcregister("qcombobox_removeitem",ring_QComboBox_removeItem);
	ring_vm_funcregister("qcombobox_rootmodelindex",ring_QComboBox_rootModelIndex);
	ring_vm_funcregister("qcombobox_setcompleter",ring_QComboBox_setCompleter);
	ring_vm_funcregister("qcombobox_setduplicatesenabled",ring_QComboBox_setDuplicatesEnabled);
	ring_vm_funcregister("qcombobox_seteditable",ring_QComboBox_setEditable);
	ring_vm_funcregister("qcombobox_setframe",ring_QComboBox_setFrame);
	ring_vm_funcregister("qcombobox_seticonsize",ring_QComboBox_setIconSize);
	ring_vm_funcregister("qcombobox_setitemdata",ring_QComboBox_setItemData);
	ring_vm_funcregister("qcombobox_setitemdelegate",ring_QComboBox_setItemDelegate);
	ring_vm_funcregister("qcombobox_setitemicon",ring_QComboBox_setItemIcon);
	ring_vm_funcregister("qcombobox_setitemtext",ring_QComboBox_setItemText);
	ring_vm_funcregister("qcombobox_setlineedit",ring_QComboBox_setLineEdit);
	ring_vm_funcregister("qcombobox_setmaxcount",ring_QComboBox_setMaxCount);
	ring_vm_funcregister("qcombobox_setmaxvisibleitems",ring_QComboBox_setMaxVisibleItems);
	ring_vm_funcregister("qcombobox_setminimumcontentslength",ring_QComboBox_setMinimumContentsLength);
	ring_vm_funcregister("qcombobox_setmodel",ring_QComboBox_setModel);
	ring_vm_funcregister("qcombobox_setmodelcolumn",ring_QComboBox_setModelColumn);
	ring_vm_funcregister("qcombobox_setrootmodelindex",ring_QComboBox_setRootModelIndex);
	ring_vm_funcregister("qcombobox_setvalidator",ring_QComboBox_setValidator);
	ring_vm_funcregister("qcombobox_setview",ring_QComboBox_setView);
	ring_vm_funcregister("qcombobox_showpopup",ring_QComboBox_showPopup);
	ring_vm_funcregister("qcombobox_validator",ring_QComboBox_validator);
	ring_vm_funcregister("qcombobox_view",ring_QComboBox_view);
	ring_vm_funcregister("qcombobox_clear",ring_QComboBox_clear);
	ring_vm_funcregister("qcombobox_clearedittext",ring_QComboBox_clearEditText);
	ring_vm_funcregister("qcombobox_setcurrentindex",ring_QComboBox_setCurrentIndex);
	ring_vm_funcregister("qcombobox_setedittext",ring_QComboBox_setEditText);
	ring_vm_funcregister("qcombobox_setactivatedevent",ring_QComboBox_setactivatedEvent);
	ring_vm_funcregister("qcombobox_setcurrentindexchangedevent",ring_QComboBox_setcurrentIndexChangedEvent);
	ring_vm_funcregister("qcombobox_setedittextchangedevent",ring_QComboBox_seteditTextChangedEvent);
	ring_vm_funcregister("qcombobox_sethighlightedevent",ring_QComboBox_sethighlightedEvent);
	ring_vm_funcregister("qcombobox_getactivatedevent",ring_QComboBox_getactivatedEvent);
	ring_vm_funcregister("qcombobox_getcurrentindexchangedevent",ring_QComboBox_getcurrentIndexChangedEvent);
	ring_vm_funcregister("qcombobox_getedittextchangedevent",ring_QComboBox_geteditTextChangedEvent);
	ring_vm_funcregister("qcombobox_gethighlightedevent",ring_QComboBox_gethighlightedEvent);
	ring_vm_funcregister("qmenubar_actionat",ring_QMenuBar_actionAt);
	ring_vm_funcregister("qmenubar_actiongeometry",ring_QMenuBar_actionGeometry);
	ring_vm_funcregister("qmenubar_activeaction",ring_QMenuBar_activeAction);
	ring_vm_funcregister("qmenubar_addaction",ring_QMenuBar_addAction);
	ring_vm_funcregister("qmenubar_addmenu",ring_QMenuBar_addMenu);
	ring_vm_funcregister("qmenubar_addseparator",ring_QMenuBar_addSeparator);
	ring_vm_funcregister("qmenubar_clear",ring_QMenuBar_clear);
	ring_vm_funcregister("qmenubar_cornerwidget",ring_QMenuBar_cornerWidget);
	ring_vm_funcregister("qmenubar_insertmenu",ring_QMenuBar_insertMenu);
	ring_vm_funcregister("qmenubar_insertseparator",ring_QMenuBar_insertSeparator);
	ring_vm_funcregister("qmenubar_isdefaultup",ring_QMenuBar_isDefaultUp);
	ring_vm_funcregister("qmenubar_isnativemenubar",ring_QMenuBar_isNativeMenuBar);
	ring_vm_funcregister("qmenubar_setactiveaction",ring_QMenuBar_setActiveAction);
	ring_vm_funcregister("qmenubar_setcornerwidget",ring_QMenuBar_setCornerWidget);
	ring_vm_funcregister("qmenubar_setdefaultup",ring_QMenuBar_setDefaultUp);
	ring_vm_funcregister("qmenubar_setnativemenubar",ring_QMenuBar_setNativeMenuBar);
	ring_vm_funcregister("qmenu_actionat",ring_QMenu_actionAt);
	ring_vm_funcregister("qmenu_actiongeometry",ring_QMenu_actionGeometry);
	ring_vm_funcregister("qmenu_activeaction",ring_QMenu_activeAction);
	ring_vm_funcregister("qmenu_addaction",ring_QMenu_addAction);
	ring_vm_funcregister("qmenu_addmenu",ring_QMenu_addMenu);
	ring_vm_funcregister("qmenu_addseparator",ring_QMenu_addSeparator);
	ring_vm_funcregister("qmenu_clear",ring_QMenu_clear);
	ring_vm_funcregister("qmenu_defaultaction",ring_QMenu_defaultAction);
	ring_vm_funcregister("qmenu_exec",ring_QMenu_exec);
	ring_vm_funcregister("qmenu_exec_2",ring_QMenu_exec_2);
	ring_vm_funcregister("qmenu_exec_3",ring_QMenu_exec_3);
	ring_vm_funcregister("qmenu_hidetearoffmenu",ring_QMenu_hideTearOffMenu);
	ring_vm_funcregister("qmenu_icon",ring_QMenu_icon);
	ring_vm_funcregister("qmenu_insertmenu",ring_QMenu_insertMenu);
	ring_vm_funcregister("qmenu_insertseparator",ring_QMenu_insertSeparator);
	ring_vm_funcregister("qmenu_isempty",ring_QMenu_isEmpty);
	ring_vm_funcregister("qmenu_istearoffenabled",ring_QMenu_isTearOffEnabled);
	ring_vm_funcregister("qmenu_istearoffmenuvisible",ring_QMenu_isTearOffMenuVisible);
	ring_vm_funcregister("qmenu_menuaction",ring_QMenu_menuAction);
	ring_vm_funcregister("qmenu_popup",ring_QMenu_popup);
	ring_vm_funcregister("qmenu_separatorscollapsible",ring_QMenu_separatorsCollapsible);
	ring_vm_funcregister("qmenu_setactiveaction",ring_QMenu_setActiveAction);
	ring_vm_funcregister("qmenu_setdefaultaction",ring_QMenu_setDefaultAction);
	ring_vm_funcregister("qmenu_seticon",ring_QMenu_setIcon);
	ring_vm_funcregister("qmenu_setseparatorscollapsible",ring_QMenu_setSeparatorsCollapsible);
	ring_vm_funcregister("qmenu_settearoffenabled",ring_QMenu_setTearOffEnabled);
	ring_vm_funcregister("qmenu_settitle",ring_QMenu_setTitle);
	ring_vm_funcregister("qmenu_title",ring_QMenu_title);
	ring_vm_funcregister("qtoolbar_actionat",ring_QToolBar_actionAt);
	ring_vm_funcregister("qtoolbar_addaction",ring_QToolBar_addAction);
	ring_vm_funcregister("qtoolbar_addseparator",ring_QToolBar_addSeparator);
	ring_vm_funcregister("qtoolbar_addwidget",ring_QToolBar_addWidget);
	ring_vm_funcregister("qtoolbar_allowedareas",ring_QToolBar_allowedAreas);
	ring_vm_funcregister("qtoolbar_clear",ring_QToolBar_clear);
	ring_vm_funcregister("qtoolbar_iconsize",ring_QToolBar_iconSize);
	ring_vm_funcregister("qtoolbar_insertseparator",ring_QToolBar_insertSeparator);
	ring_vm_funcregister("qtoolbar_insertwidget",ring_QToolBar_insertWidget);
	ring_vm_funcregister("qtoolbar_isareaallowed",ring_QToolBar_isAreaAllowed);
	ring_vm_funcregister("qtoolbar_isfloatable",ring_QToolBar_isFloatable);
	ring_vm_funcregister("qtoolbar_isfloating",ring_QToolBar_isFloating);
	ring_vm_funcregister("qtoolbar_ismovable",ring_QToolBar_isMovable);
	ring_vm_funcregister("qtoolbar_orientation",ring_QToolBar_orientation);
	ring_vm_funcregister("qtoolbar_setallowedareas",ring_QToolBar_setAllowedAreas);
	ring_vm_funcregister("qtoolbar_setfloatable",ring_QToolBar_setFloatable);
	ring_vm_funcregister("qtoolbar_setmovable",ring_QToolBar_setMovable);
	ring_vm_funcregister("qtoolbar_setorientation",ring_QToolBar_setOrientation);
	ring_vm_funcregister("qtoolbar_toggleviewaction",ring_QToolBar_toggleViewAction);
	ring_vm_funcregister("qtoolbar_toolbuttonstyle",ring_QToolBar_toolButtonStyle);
	ring_vm_funcregister("qtoolbar_widgetforaction",ring_QToolBar_widgetForAction);
	ring_vm_funcregister("qtoolbar_seticonsize",ring_QToolBar_setIconSize);
	ring_vm_funcregister("qtoolbar_settoolbuttonstyle",ring_QToolBar_setToolButtonStyle);
	ring_vm_funcregister("qmainwindow_adddockwidget",ring_QMainWindow_addDockWidget);
	ring_vm_funcregister("qmainwindow_addtoolbar",ring_QMainWindow_addToolBar);
	ring_vm_funcregister("qmainwindow_addtoolbar_2",ring_QMainWindow_addToolBar_2);
	ring_vm_funcregister("qmainwindow_addtoolbarbreak",ring_QMainWindow_addToolBarBreak);
	ring_vm_funcregister("qmainwindow_centralwidget",ring_QMainWindow_centralWidget);
	ring_vm_funcregister("qmainwindow_corner",ring_QMainWindow_corner);
	ring_vm_funcregister("qmainwindow_createpopupmenu",ring_QMainWindow_createPopupMenu);
	ring_vm_funcregister("qmainwindow_dockoptions",ring_QMainWindow_dockOptions);
	ring_vm_funcregister("qmainwindow_dockwidgetarea",ring_QMainWindow_dockWidgetArea);
	ring_vm_funcregister("qmainwindow_documentmode",ring_QMainWindow_documentMode);
	ring_vm_funcregister("qmainwindow_iconsize",ring_QMainWindow_iconSize);
	ring_vm_funcregister("qmainwindow_inserttoolbar",ring_QMainWindow_insertToolBar);
	ring_vm_funcregister("qmainwindow_inserttoolbarbreak",ring_QMainWindow_insertToolBarBreak);
	ring_vm_funcregister("qmainwindow_isanimated",ring_QMainWindow_isAnimated);
	ring_vm_funcregister("qmainwindow_isdocknestingenabled",ring_QMainWindow_isDockNestingEnabled);
	ring_vm_funcregister("qmainwindow_menubar",ring_QMainWindow_menuBar);
	ring_vm_funcregister("qmainwindow_menuwidget",ring_QMainWindow_menuWidget);
	ring_vm_funcregister("qmainwindow_removedockwidget",ring_QMainWindow_removeDockWidget);
	ring_vm_funcregister("qmainwindow_removetoolbar",ring_QMainWindow_removeToolBar);
	ring_vm_funcregister("qmainwindow_removetoolbarbreak",ring_QMainWindow_removeToolBarBreak);
	ring_vm_funcregister("qmainwindow_restoredockwidget",ring_QMainWindow_restoreDockWidget);
	ring_vm_funcregister("qmainwindow_restorestate",ring_QMainWindow_restoreState);
	ring_vm_funcregister("qmainwindow_savestate",ring_QMainWindow_saveState);
	ring_vm_funcregister("qmainwindow_setcentralwidget",ring_QMainWindow_setCentralWidget);
	ring_vm_funcregister("qmainwindow_setcorner",ring_QMainWindow_setCorner);
	ring_vm_funcregister("qmainwindow_setdockoptions",ring_QMainWindow_setDockOptions);
	ring_vm_funcregister("qmainwindow_setdocumentmode",ring_QMainWindow_setDocumentMode);
	ring_vm_funcregister("qmainwindow_seticonsize",ring_QMainWindow_setIconSize);
	ring_vm_funcregister("qmainwindow_setmenubar",ring_QMainWindow_setMenuBar);
	ring_vm_funcregister("qmainwindow_setmenuwidget",ring_QMainWindow_setMenuWidget);
	ring_vm_funcregister("qmainwindow_setstatusbar",ring_QMainWindow_setStatusBar);
	ring_vm_funcregister("qmainwindow_settabposition",ring_QMainWindow_setTabPosition);
	ring_vm_funcregister("qmainwindow_settabshape",ring_QMainWindow_setTabShape);
	ring_vm_funcregister("qmainwindow_settoolbuttonstyle",ring_QMainWindow_setToolButtonStyle);
	ring_vm_funcregister("qmainwindow_setunifiedtitleandtoolbaronmac",ring_QMainWindow_setUnifiedTitleAndToolBarOnMac);
	ring_vm_funcregister("qmainwindow_splitdockwidget",ring_QMainWindow_splitDockWidget);
	ring_vm_funcregister("qmainwindow_statusbar",ring_QMainWindow_statusBar);
	ring_vm_funcregister("qmainwindow_tabposition",ring_QMainWindow_tabPosition);
	ring_vm_funcregister("qmainwindow_tabshape",ring_QMainWindow_tabShape);
	ring_vm_funcregister("qmainwindow_tabifydockwidget",ring_QMainWindow_tabifyDockWidget);
	ring_vm_funcregister("qmainwindow_toolbararea",ring_QMainWindow_toolBarArea);
	ring_vm_funcregister("qmainwindow_toolbarbreak",ring_QMainWindow_toolBarBreak);
	ring_vm_funcregister("qmainwindow_toolbuttonstyle",ring_QMainWindow_toolButtonStyle);
	ring_vm_funcregister("qmainwindow_unifiedtitleandtoolbaronmac",ring_QMainWindow_unifiedTitleAndToolBarOnMac);
	ring_vm_funcregister("qstatusbar_addpermanentwidget",ring_QStatusBar_addPermanentWidget);
	ring_vm_funcregister("qstatusbar_addwidget",ring_QStatusBar_addWidget);
	ring_vm_funcregister("qstatusbar_currentmessage",ring_QStatusBar_currentMessage);
	ring_vm_funcregister("qstatusbar_insertpermanentwidget",ring_QStatusBar_insertPermanentWidget);
	ring_vm_funcregister("qstatusbar_insertwidget",ring_QStatusBar_insertWidget);
	ring_vm_funcregister("qstatusbar_issizegripenabled",ring_QStatusBar_isSizeGripEnabled);
	ring_vm_funcregister("qstatusbar_removewidget",ring_QStatusBar_removeWidget);
	ring_vm_funcregister("qstatusbar_setsizegripenabled",ring_QStatusBar_setSizeGripEnabled);
	ring_vm_funcregister("qstatusbar_clearmessage",ring_QStatusBar_clearMessage);
	ring_vm_funcregister("qstatusbar_showmessage",ring_QStatusBar_showMessage);
	ring_vm_funcregister("qdockwidget_allowedareas",ring_QDockWidget_allowedAreas);
	ring_vm_funcregister("qdockwidget_features",ring_QDockWidget_features);
	ring_vm_funcregister("qdockwidget_isareaallowed",ring_QDockWidget_isAreaAllowed);
	ring_vm_funcregister("qdockwidget_isfloating",ring_QDockWidget_isFloating);
	ring_vm_funcregister("qdockwidget_setallowedareas",ring_QDockWidget_setAllowedAreas);
	ring_vm_funcregister("qdockwidget_setfeatures",ring_QDockWidget_setFeatures);
	ring_vm_funcregister("qdockwidget_setfloating",ring_QDockWidget_setFloating);
	ring_vm_funcregister("qdockwidget_settitlebarwidget",ring_QDockWidget_setTitleBarWidget);
	ring_vm_funcregister("qdockwidget_setwidget",ring_QDockWidget_setWidget);
	ring_vm_funcregister("qdockwidget_titlebarwidget",ring_QDockWidget_titleBarWidget);
	ring_vm_funcregister("qdockwidget_toggleviewaction",ring_QDockWidget_toggleViewAction);
	ring_vm_funcregister("qdockwidget_widget",ring_QDockWidget_widget);
	ring_vm_funcregister("qdockwidget_allowedareaschanged",ring_QDockWidget_allowedAreasChanged);
	ring_vm_funcregister("qdockwidget_docklocationchanged",ring_QDockWidget_dockLocationChanged);
	ring_vm_funcregister("qdockwidget_featureschanged",ring_QDockWidget_featuresChanged);
	ring_vm_funcregister("qdockwidget_toplevelchanged",ring_QDockWidget_topLevelChanged);
	ring_vm_funcregister("qdockwidget_visibilitychanged",ring_QDockWidget_visibilityChanged);
	ring_vm_funcregister("qdockwidget_setallowedareaschangedevent",ring_QDockWidget_setallowedAreasChangedEvent);
	ring_vm_funcregister("qdockwidget_setdocklocationchangedevent",ring_QDockWidget_setdockLocationChangedEvent);
	ring_vm_funcregister("qdockwidget_setfeatureschangedevent",ring_QDockWidget_setfeaturesChangedEvent);
	ring_vm_funcregister("qdockwidget_settoplevelchangedevent",ring_QDockWidget_settopLevelChangedEvent);
	ring_vm_funcregister("qdockwidget_setvisibilitychangedevent",ring_QDockWidget_setvisibilityChangedEvent);
	ring_vm_funcregister("qdockwidget_getallowedareaschangedevent",ring_QDockWidget_getallowedAreasChangedEvent);
	ring_vm_funcregister("qdockwidget_getdocklocationchangedevent",ring_QDockWidget_getdockLocationChangedEvent);
	ring_vm_funcregister("qdockwidget_getfeatureschangedevent",ring_QDockWidget_getfeaturesChangedEvent);
	ring_vm_funcregister("qdockwidget_gettoplevelchangedevent",ring_QDockWidget_gettopLevelChangedEvent);
	ring_vm_funcregister("qdockwidget_getvisibilitychangedevent",ring_QDockWidget_getvisibilityChangedEvent);
	ring_vm_funcregister("qtabwidget_addtab",ring_QTabWidget_addTab);
	ring_vm_funcregister("qtabwidget_clear",ring_QTabWidget_clear);
	ring_vm_funcregister("qtabwidget_cornerwidget",ring_QTabWidget_cornerWidget);
	ring_vm_funcregister("qtabwidget_count",ring_QTabWidget_count);
	ring_vm_funcregister("qtabwidget_currentindex",ring_QTabWidget_currentIndex);
	ring_vm_funcregister("qtabwidget_currentwidget",ring_QTabWidget_currentWidget);
	ring_vm_funcregister("qtabwidget_documentmode",ring_QTabWidget_documentMode);
	ring_vm_funcregister("qtabwidget_elidemode",ring_QTabWidget_elideMode);
	ring_vm_funcregister("qtabwidget_iconsize",ring_QTabWidget_iconSize);
	ring_vm_funcregister("qtabwidget_indexof",ring_QTabWidget_indexOf);
	ring_vm_funcregister("qtabwidget_inserttab",ring_QTabWidget_insertTab);
	ring_vm_funcregister("qtabwidget_ismovable",ring_QTabWidget_isMovable);
	ring_vm_funcregister("qtabwidget_istabenabled",ring_QTabWidget_isTabEnabled);
	ring_vm_funcregister("qtabwidget_removetab",ring_QTabWidget_removeTab);
	ring_vm_funcregister("qtabwidget_setcornerwidget",ring_QTabWidget_setCornerWidget);
	ring_vm_funcregister("qtabwidget_setdocumentmode",ring_QTabWidget_setDocumentMode);
	ring_vm_funcregister("qtabwidget_setelidemode",ring_QTabWidget_setElideMode);
	ring_vm_funcregister("qtabwidget_seticonsize",ring_QTabWidget_setIconSize);
	ring_vm_funcregister("qtabwidget_setmovable",ring_QTabWidget_setMovable);
	ring_vm_funcregister("qtabwidget_settabenabled",ring_QTabWidget_setTabEnabled);
	ring_vm_funcregister("qtabwidget_settabicon",ring_QTabWidget_setTabIcon);
	ring_vm_funcregister("qtabwidget_settabtext",ring_QTabWidget_setTabText);
	ring_vm_funcregister("qtabwidget_settabtooltip",ring_QTabWidget_setTabToolTip);
	ring_vm_funcregister("qtabwidget_settabwhatsthis",ring_QTabWidget_setTabWhatsThis);
	ring_vm_funcregister("qtabwidget_settabsclosable",ring_QTabWidget_setTabsClosable);
	ring_vm_funcregister("qtabwidget_setusesscrollbuttons",ring_QTabWidget_setUsesScrollButtons);
	ring_vm_funcregister("qtabwidget_tabicon",ring_QTabWidget_tabIcon);
	ring_vm_funcregister("qtabwidget_tabtext",ring_QTabWidget_tabText);
	ring_vm_funcregister("qtabwidget_tabtooltip",ring_QTabWidget_tabToolTip);
	ring_vm_funcregister("qtabwidget_tabwhatsthis",ring_QTabWidget_tabWhatsThis);
	ring_vm_funcregister("qtabwidget_tabsclosable",ring_QTabWidget_tabsClosable);
	ring_vm_funcregister("qtabwidget_usesscrollbuttons",ring_QTabWidget_usesScrollButtons);
	ring_vm_funcregister("qtabwidget_widget",ring_QTabWidget_widget);
	ring_vm_funcregister("qtabwidget_heightforwidth",ring_QTabWidget_heightForWidth);
	ring_vm_funcregister("qtabwidget_minimumsizehint",ring_QTabWidget_minimumSizeHint);
	ring_vm_funcregister("qtabwidget_sizehint",ring_QTabWidget_sizeHint);
	ring_vm_funcregister("qtabwidget_setcurrentindex",ring_QTabWidget_setCurrentIndex);
	ring_vm_funcregister("qtabwidget_setcurrentwidget",ring_QTabWidget_setCurrentWidget);
	ring_vm_funcregister("qtabwidget_setcurrentchangedevent",ring_QTabWidget_setcurrentChangedEvent);
	ring_vm_funcregister("qtabwidget_settabcloserequestedevent",ring_QTabWidget_settabCloseRequestedEvent);
	ring_vm_funcregister("qtabwidget_getcurrentchangedevent",ring_QTabWidget_getcurrentChangedEvent);
	ring_vm_funcregister("qtabwidget_gettabcloserequestedevent",ring_QTabWidget_gettabCloseRequestedEvent);
	ring_vm_funcregister("qtablewidgetitem_background",ring_QTableWidgetItem_background);
	ring_vm_funcregister("qtablewidgetitem_checkstate",ring_QTableWidgetItem_checkState);
	ring_vm_funcregister("qtablewidgetitem_clone",ring_QTableWidgetItem_clone);
	ring_vm_funcregister("qtablewidgetitem_column",ring_QTableWidgetItem_column);
	ring_vm_funcregister("qtablewidgetitem_data",ring_QTableWidgetItem_data);
	ring_vm_funcregister("qtablewidgetitem_flags",ring_QTableWidgetItem_flags);
	ring_vm_funcregister("qtablewidgetitem_font",ring_QTableWidgetItem_font);
	ring_vm_funcregister("qtablewidgetitem_foreground",ring_QTableWidgetItem_foreground);
	ring_vm_funcregister("qtablewidgetitem_icon",ring_QTableWidgetItem_icon);
	ring_vm_funcregister("qtablewidgetitem_isselected",ring_QTableWidgetItem_isSelected);
	ring_vm_funcregister("qtablewidgetitem_read",ring_QTableWidgetItem_read);
	ring_vm_funcregister("qtablewidgetitem_row",ring_QTableWidgetItem_row);
	ring_vm_funcregister("qtablewidgetitem_setbackground",ring_QTableWidgetItem_setBackground);
	ring_vm_funcregister("qtablewidgetitem_setcheckstate",ring_QTableWidgetItem_setCheckState);
	ring_vm_funcregister("qtablewidgetitem_setdata",ring_QTableWidgetItem_setData);
	ring_vm_funcregister("qtablewidgetitem_setflags",ring_QTableWidgetItem_setFlags);
	ring_vm_funcregister("qtablewidgetitem_setfont",ring_QTableWidgetItem_setFont);
	ring_vm_funcregister("qtablewidgetitem_setforeground",ring_QTableWidgetItem_setForeground);
	ring_vm_funcregister("qtablewidgetitem_seticon",ring_QTableWidgetItem_setIcon);
	ring_vm_funcregister("qtablewidgetitem_setselected",ring_QTableWidgetItem_setSelected);
	ring_vm_funcregister("qtablewidgetitem_setsizehint",ring_QTableWidgetItem_setSizeHint);
	ring_vm_funcregister("qtablewidgetitem_setstatustip",ring_QTableWidgetItem_setStatusTip);
	ring_vm_funcregister("qtablewidgetitem_settext",ring_QTableWidgetItem_setText);
	ring_vm_funcregister("qtablewidgetitem_settextalignment",ring_QTableWidgetItem_setTextAlignment);
	ring_vm_funcregister("qtablewidgetitem_settooltip",ring_QTableWidgetItem_setToolTip);
	ring_vm_funcregister("qtablewidgetitem_setwhatsthis",ring_QTableWidgetItem_setWhatsThis);
	ring_vm_funcregister("qtablewidgetitem_sizehint",ring_QTableWidgetItem_sizeHint);
	ring_vm_funcregister("qtablewidgetitem_statustip",ring_QTableWidgetItem_statusTip);
	ring_vm_funcregister("qtablewidgetitem_tablewidget",ring_QTableWidgetItem_tableWidget);
	ring_vm_funcregister("qtablewidgetitem_text",ring_QTableWidgetItem_text);
	ring_vm_funcregister("qtablewidgetitem_textalignment",ring_QTableWidgetItem_textAlignment);
	ring_vm_funcregister("qtablewidgetitem_tooltip",ring_QTableWidgetItem_toolTip);
	ring_vm_funcregister("qtablewidgetitem_type",ring_QTableWidgetItem_type);
	ring_vm_funcregister("qtablewidgetitem_whatsthis",ring_QTableWidgetItem_whatsThis);
	ring_vm_funcregister("qtablewidgetitem_write",ring_QTableWidgetItem_write);
	ring_vm_funcregister("qframe_framerect",ring_QFrame_frameRect);
	ring_vm_funcregister("qframe_frameshadow",ring_QFrame_frameShadow);
	ring_vm_funcregister("qframe_frameshape",ring_QFrame_frameShape);
	ring_vm_funcregister("qframe_framestyle",ring_QFrame_frameStyle);
	ring_vm_funcregister("qframe_framewidth",ring_QFrame_frameWidth);
	ring_vm_funcregister("qframe_linewidth",ring_QFrame_lineWidth);
	ring_vm_funcregister("qframe_midlinewidth",ring_QFrame_midLineWidth);
	ring_vm_funcregister("qframe_setframerect",ring_QFrame_setFrameRect);
	ring_vm_funcregister("qframe_setframeshadow",ring_QFrame_setFrameShadow);
	ring_vm_funcregister("qframe_setframeshape",ring_QFrame_setFrameShape);
	ring_vm_funcregister("qframe_setframestyle",ring_QFrame_setFrameStyle);
	ring_vm_funcregister("qframe_setlinewidth",ring_QFrame_setLineWidth);
	ring_vm_funcregister("qframe_setmidlinewidth",ring_QFrame_setMidLineWidth);
	ring_vm_funcregister("qframe_sizehint",ring_QFrame_sizeHint);
	ring_vm_funcregister("qabstractscrollarea_addscrollbarwidget",ring_QAbstractScrollArea_addScrollBarWidget);
	ring_vm_funcregister("qabstractscrollarea_cornerwidget",ring_QAbstractScrollArea_cornerWidget);
	ring_vm_funcregister("qabstractscrollarea_horizontalscrollbar",ring_QAbstractScrollArea_horizontalScrollBar);
	ring_vm_funcregister("qabstractscrollarea_horizontalscrollbarpolicy",ring_QAbstractScrollArea_horizontalScrollBarPolicy);
	ring_vm_funcregister("qabstractscrollarea_maximumviewportsize",ring_QAbstractScrollArea_maximumViewportSize);
	ring_vm_funcregister("qabstractscrollarea_scrollbarwidgets",ring_QAbstractScrollArea_scrollBarWidgets);
	ring_vm_funcregister("qabstractscrollarea_setcornerwidget",ring_QAbstractScrollArea_setCornerWidget);
	ring_vm_funcregister("qabstractscrollarea_sethorizontalscrollbar",ring_QAbstractScrollArea_setHorizontalScrollBar);
	ring_vm_funcregister("qabstractscrollarea_sethorizontalscrollbarpolicy",ring_QAbstractScrollArea_setHorizontalScrollBarPolicy);
	ring_vm_funcregister("qabstractscrollarea_setverticalscrollbar",ring_QAbstractScrollArea_setVerticalScrollBar);
	ring_vm_funcregister("qabstractscrollarea_setverticalscrollbarpolicy",ring_QAbstractScrollArea_setVerticalScrollBarPolicy);
	ring_vm_funcregister("qabstractscrollarea_setviewport",ring_QAbstractScrollArea_setViewport);
	ring_vm_funcregister("qabstractscrollarea_verticalscrollbar",ring_QAbstractScrollArea_verticalScrollBar);
	ring_vm_funcregister("qabstractscrollarea_verticalscrollbarpolicy",ring_QAbstractScrollArea_verticalScrollBarPolicy);
	ring_vm_funcregister("qabstractscrollarea_viewport",ring_QAbstractScrollArea_viewport);
	ring_vm_funcregister("qabstractitemview_alternatingrowcolors",ring_QAbstractItemView_alternatingRowColors);
	ring_vm_funcregister("qabstractitemview_autoscrollmargin",ring_QAbstractItemView_autoScrollMargin);
	ring_vm_funcregister("qabstractitemview_closepersistenteditor",ring_QAbstractItemView_closePersistentEditor);
	ring_vm_funcregister("qabstractitemview_currentindex",ring_QAbstractItemView_currentIndex);
	ring_vm_funcregister("qabstractitemview_defaultdropaction",ring_QAbstractItemView_defaultDropAction);
	ring_vm_funcregister("qabstractitemview_dragdropmode",ring_QAbstractItemView_dragDropMode);
	ring_vm_funcregister("qabstractitemview_dragdropoverwritemode",ring_QAbstractItemView_dragDropOverwriteMode);
	ring_vm_funcregister("qabstractitemview_dragenabled",ring_QAbstractItemView_dragEnabled);
	ring_vm_funcregister("qabstractitemview_edittriggers",ring_QAbstractItemView_editTriggers);
	ring_vm_funcregister("qabstractitemview_hasautoscroll",ring_QAbstractItemView_hasAutoScroll);
	ring_vm_funcregister("qabstractitemview_horizontalscrollmode",ring_QAbstractItemView_horizontalScrollMode);
	ring_vm_funcregister("qabstractitemview_iconsize",ring_QAbstractItemView_iconSize);
	ring_vm_funcregister("qabstractitemview_indexat",ring_QAbstractItemView_indexAt);
	ring_vm_funcregister("qabstractitemview_indexwidget",ring_QAbstractItemView_indexWidget);
	ring_vm_funcregister("qabstractitemview_itemdelegate",ring_QAbstractItemView_itemDelegate);
	ring_vm_funcregister("qabstractitemview_itemdelegateforcolumn",ring_QAbstractItemView_itemDelegateForColumn);
	ring_vm_funcregister("qabstractitemview_itemdelegateforrow",ring_QAbstractItemView_itemDelegateForRow);
	ring_vm_funcregister("qabstractitemview_keyboardsearch",ring_QAbstractItemView_keyboardSearch);
	ring_vm_funcregister("qabstractitemview_model",ring_QAbstractItemView_model);
	ring_vm_funcregister("qabstractitemview_openpersistenteditor",ring_QAbstractItemView_openPersistentEditor);
	ring_vm_funcregister("qabstractitemview_rootindex",ring_QAbstractItemView_rootIndex);
	ring_vm_funcregister("qabstractitemview_scrollto",ring_QAbstractItemView_scrollTo);
	ring_vm_funcregister("qabstractitemview_selectionbehavior",ring_QAbstractItemView_selectionBehavior);
	ring_vm_funcregister("qabstractitemview_selectionmode",ring_QAbstractItemView_selectionMode);
	ring_vm_funcregister("qabstractitemview_selectionmodel",ring_QAbstractItemView_selectionModel);
	ring_vm_funcregister("qabstractitemview_setalternatingrowcolors",ring_QAbstractItemView_setAlternatingRowColors);
	ring_vm_funcregister("qabstractitemview_setautoscroll",ring_QAbstractItemView_setAutoScroll);
	ring_vm_funcregister("qabstractitemview_setautoscrollmargin",ring_QAbstractItemView_setAutoScrollMargin);
	ring_vm_funcregister("qabstractitemview_setdefaultdropaction",ring_QAbstractItemView_setDefaultDropAction);
	ring_vm_funcregister("qabstractitemview_setdragdropmode",ring_QAbstractItemView_setDragDropMode);
	ring_vm_funcregister("qabstractitemview_setdragdropoverwritemode",ring_QAbstractItemView_setDragDropOverwriteMode);
	ring_vm_funcregister("qabstractitemview_setdragenabled",ring_QAbstractItemView_setDragEnabled);
	ring_vm_funcregister("qabstractitemview_setdropindicatorshown",ring_QAbstractItemView_setDropIndicatorShown);
	ring_vm_funcregister("qabstractitemview_setedittriggers",ring_QAbstractItemView_setEditTriggers);
	ring_vm_funcregister("qabstractitemview_sethorizontalscrollmode",ring_QAbstractItemView_setHorizontalScrollMode);
	ring_vm_funcregister("qabstractitemview_seticonsize",ring_QAbstractItemView_setIconSize);
	ring_vm_funcregister("qabstractitemview_setindexwidget",ring_QAbstractItemView_setIndexWidget);
	ring_vm_funcregister("qabstractitemview_setitemdelegate",ring_QAbstractItemView_setItemDelegate);
	ring_vm_funcregister("qabstractitemview_setitemdelegateforcolumn",ring_QAbstractItemView_setItemDelegateForColumn);
	ring_vm_funcregister("qabstractitemview_setitemdelegateforrow",ring_QAbstractItemView_setItemDelegateForRow);
	ring_vm_funcregister("qabstractitemview_setmodel",ring_QAbstractItemView_setModel);
	ring_vm_funcregister("qabstractitemview_setselectionbehavior",ring_QAbstractItemView_setSelectionBehavior);
	ring_vm_funcregister("qabstractitemview_setselectionmode",ring_QAbstractItemView_setSelectionMode);
	ring_vm_funcregister("qabstractitemview_setselectionmodel",ring_QAbstractItemView_setSelectionModel);
	ring_vm_funcregister("qabstractitemview_settabkeynavigation",ring_QAbstractItemView_setTabKeyNavigation);
	ring_vm_funcregister("qabstractitemview_settextelidemode",ring_QAbstractItemView_setTextElideMode);
	ring_vm_funcregister("qabstractitemview_setverticalscrollmode",ring_QAbstractItemView_setVerticalScrollMode);
	ring_vm_funcregister("qabstractitemview_showdropindicator",ring_QAbstractItemView_showDropIndicator);
	ring_vm_funcregister("qabstractitemview_sizehintforcolumn",ring_QAbstractItemView_sizeHintForColumn);
	ring_vm_funcregister("qabstractitemview_sizehintforindex",ring_QAbstractItemView_sizeHintForIndex);
	ring_vm_funcregister("qabstractitemview_sizehintforrow",ring_QAbstractItemView_sizeHintForRow);
	ring_vm_funcregister("qabstractitemview_tabkeynavigation",ring_QAbstractItemView_tabKeyNavigation);
	ring_vm_funcregister("qabstractitemview_textelidemode",ring_QAbstractItemView_textElideMode);
	ring_vm_funcregister("qabstractitemview_verticalscrollmode",ring_QAbstractItemView_verticalScrollMode);
	ring_vm_funcregister("qabstractitemview_visualrect",ring_QAbstractItemView_visualRect);
	ring_vm_funcregister("qabstractitemview_clearselection",ring_QAbstractItemView_clearSelection);
	ring_vm_funcregister("qabstractitemview_edit",ring_QAbstractItemView_edit);
	ring_vm_funcregister("qabstractitemview_scrolltobottom",ring_QAbstractItemView_scrollToBottom);
	ring_vm_funcregister("qabstractitemview_scrolltotop",ring_QAbstractItemView_scrollToTop);
	ring_vm_funcregister("qabstractitemview_setcurrentindex",ring_QAbstractItemView_setCurrentIndex);
	ring_vm_funcregister("qabstractitemview_update",ring_QAbstractItemView_update);
	ring_vm_funcregister("qtableview_clearspans",ring_QTableView_clearSpans);
	ring_vm_funcregister("qtableview_columnat",ring_QTableView_columnAt);
	ring_vm_funcregister("qtableview_columnspan",ring_QTableView_columnSpan);
	ring_vm_funcregister("qtableview_columnviewportposition",ring_QTableView_columnViewportPosition);
	ring_vm_funcregister("qtableview_columnwidth",ring_QTableView_columnWidth);
	ring_vm_funcregister("qtableview_gridstyle",ring_QTableView_gridStyle);
	ring_vm_funcregister("qtableview_horizontalheader",ring_QTableView_horizontalHeader);
	ring_vm_funcregister("qtableview_iscolumnhidden",ring_QTableView_isColumnHidden);
	ring_vm_funcregister("qtableview_iscornerbuttonenabled",ring_QTableView_isCornerButtonEnabled);
	ring_vm_funcregister("qtableview_isrowhidden",ring_QTableView_isRowHidden);
	ring_vm_funcregister("qtableview_issortingenabled",ring_QTableView_isSortingEnabled);
	ring_vm_funcregister("qtableview_rowat",ring_QTableView_rowAt);
	ring_vm_funcregister("qtableview_rowheight",ring_QTableView_rowHeight);
	ring_vm_funcregister("qtableview_rowspan",ring_QTableView_rowSpan);
	ring_vm_funcregister("qtableview_rowviewportposition",ring_QTableView_rowViewportPosition);
	ring_vm_funcregister("qtableview_setcolumnhidden",ring_QTableView_setColumnHidden);
	ring_vm_funcregister("qtableview_setcolumnwidth",ring_QTableView_setColumnWidth);
	ring_vm_funcregister("qtableview_setcornerbuttonenabled",ring_QTableView_setCornerButtonEnabled);
	ring_vm_funcregister("qtableview_setgridstyle",ring_QTableView_setGridStyle);
	ring_vm_funcregister("qtableview_sethorizontalheader",ring_QTableView_setHorizontalHeader);
	ring_vm_funcregister("qtableview_setrowheight",ring_QTableView_setRowHeight);
	ring_vm_funcregister("qtableview_setrowhidden",ring_QTableView_setRowHidden);
	ring_vm_funcregister("qtableview_setsortingenabled",ring_QTableView_setSortingEnabled);
	ring_vm_funcregister("qtableview_setspan",ring_QTableView_setSpan);
	ring_vm_funcregister("qtableview_setverticalheader",ring_QTableView_setVerticalHeader);
	ring_vm_funcregister("qtableview_setwordwrap",ring_QTableView_setWordWrap);
	ring_vm_funcregister("qtableview_showgrid",ring_QTableView_showGrid);
	ring_vm_funcregister("qtableview_sortbycolumn",ring_QTableView_sortByColumn);
	ring_vm_funcregister("qtableview_verticalheader",ring_QTableView_verticalHeader);
	ring_vm_funcregister("qtableview_wordwrap",ring_QTableView_wordWrap);
	ring_vm_funcregister("qtableview_hidecolumn",ring_QTableView_hideColumn);
	ring_vm_funcregister("qtableview_hiderow",ring_QTableView_hideRow);
	ring_vm_funcregister("qtableview_resizecolumntocontents",ring_QTableView_resizeColumnToContents);
	ring_vm_funcregister("qtableview_resizecolumnstocontents",ring_QTableView_resizeColumnsToContents);
	ring_vm_funcregister("qtableview_resizerowtocontents",ring_QTableView_resizeRowToContents);
	ring_vm_funcregister("qtableview_resizerowstocontents",ring_QTableView_resizeRowsToContents);
	ring_vm_funcregister("qtableview_selectcolumn",ring_QTableView_selectColumn);
	ring_vm_funcregister("qtableview_selectrow",ring_QTableView_selectRow);
	ring_vm_funcregister("qtableview_setshowgrid",ring_QTableView_setShowGrid);
	ring_vm_funcregister("qtableview_showcolumn",ring_QTableView_showColumn);
	ring_vm_funcregister("qtableview_showrow",ring_QTableView_showRow);
	ring_vm_funcregister("qtablewidget_cellwidget",ring_QTableWidget_cellWidget);
	ring_vm_funcregister("qtablewidget_closepersistenteditor",ring_QTableWidget_closePersistentEditor);
	ring_vm_funcregister("qtablewidget_column",ring_QTableWidget_column);
	ring_vm_funcregister("qtablewidget_columncount",ring_QTableWidget_columnCount);
	ring_vm_funcregister("qtablewidget_currentcolumn",ring_QTableWidget_currentColumn);
	ring_vm_funcregister("qtablewidget_currentitem",ring_QTableWidget_currentItem);
	ring_vm_funcregister("qtablewidget_currentrow",ring_QTableWidget_currentRow);
	ring_vm_funcregister("qtablewidget_edititem",ring_QTableWidget_editItem);
	ring_vm_funcregister("qtablewidget_horizontalheaderitem",ring_QTableWidget_horizontalHeaderItem);
	ring_vm_funcregister("qtablewidget_item",ring_QTableWidget_item);
	ring_vm_funcregister("qtablewidget_itemat",ring_QTableWidget_itemAt);
	ring_vm_funcregister("qtablewidget_itemprototype",ring_QTableWidget_itemPrototype);
	ring_vm_funcregister("qtablewidget_openpersistenteditor",ring_QTableWidget_openPersistentEditor);
	ring_vm_funcregister("qtablewidget_removecellwidget",ring_QTableWidget_removeCellWidget);
	ring_vm_funcregister("qtablewidget_row",ring_QTableWidget_row);
	ring_vm_funcregister("qtablewidget_rowcount",ring_QTableWidget_rowCount);
	ring_vm_funcregister("qtablewidget_selecteditems",ring_QTableWidget_selectedItems);
	ring_vm_funcregister("qtablewidget_selectedranges",ring_QTableWidget_selectedRanges);
	ring_vm_funcregister("qtablewidget_setcellwidget",ring_QTableWidget_setCellWidget);
	ring_vm_funcregister("qtablewidget_setcolumncount",ring_QTableWidget_setColumnCount);
	ring_vm_funcregister("qtablewidget_setcurrentcell",ring_QTableWidget_setCurrentCell);
	ring_vm_funcregister("qtablewidget_setcurrentitem",ring_QTableWidget_setCurrentItem);
	ring_vm_funcregister("qtablewidget_sethorizontalheaderitem",ring_QTableWidget_setHorizontalHeaderItem);
	ring_vm_funcregister("qtablewidget_sethorizontalheaderlabels",ring_QTableWidget_setHorizontalHeaderLabels);
	ring_vm_funcregister("qtablewidget_setitem",ring_QTableWidget_setItem);
	ring_vm_funcregister("qtablewidget_setitemprototype",ring_QTableWidget_setItemPrototype);
	ring_vm_funcregister("qtablewidget_setrowcount",ring_QTableWidget_setRowCount);
	ring_vm_funcregister("qtablewidget_setverticalheaderitem",ring_QTableWidget_setVerticalHeaderItem);
	ring_vm_funcregister("qtablewidget_sortitems",ring_QTableWidget_sortItems);
	ring_vm_funcregister("qtablewidget_takehorizontalheaderitem",ring_QTableWidget_takeHorizontalHeaderItem);
	ring_vm_funcregister("qtablewidget_takeitem",ring_QTableWidget_takeItem);
	ring_vm_funcregister("qtablewidget_takeverticalheaderitem",ring_QTableWidget_takeVerticalHeaderItem);
	ring_vm_funcregister("qtablewidget_verticalheaderitem",ring_QTableWidget_verticalHeaderItem);
	ring_vm_funcregister("qtablewidget_visualcolumn",ring_QTableWidget_visualColumn);
	ring_vm_funcregister("qtablewidget_visualitemrect",ring_QTableWidget_visualItemRect);
	ring_vm_funcregister("qtablewidget_visualrow",ring_QTableWidget_visualRow);
	ring_vm_funcregister("qtablewidget_clear",ring_QTableWidget_clear);
	ring_vm_funcregister("qtablewidget_clearcontents",ring_QTableWidget_clearContents);
	ring_vm_funcregister("qtablewidget_insertcolumn",ring_QTableWidget_insertColumn);
	ring_vm_funcregister("qtablewidget_insertrow",ring_QTableWidget_insertRow);
	ring_vm_funcregister("qtablewidget_removecolumn",ring_QTableWidget_removeColumn);
	ring_vm_funcregister("qtablewidget_removerow",ring_QTableWidget_removeRow);
	ring_vm_funcregister("qtablewidget_scrolltoitem",ring_QTableWidget_scrollToItem);
	ring_vm_funcregister("qtablewidget_setcellactivatedevent",ring_QTableWidget_setcellActivatedEvent);
	ring_vm_funcregister("qtablewidget_setcellchangedevent",ring_QTableWidget_setcellChangedEvent);
	ring_vm_funcregister("qtablewidget_setcellclickedevent",ring_QTableWidget_setcellClickedEvent);
	ring_vm_funcregister("qtablewidget_setcelldoubleclickedevent",ring_QTableWidget_setcellDoubleClickedEvent);
	ring_vm_funcregister("qtablewidget_setcellenteredevent",ring_QTableWidget_setcellEnteredEvent);
	ring_vm_funcregister("qtablewidget_setcellpressedevent",ring_QTableWidget_setcellPressedEvent);
	ring_vm_funcregister("qtablewidget_setcurrentcellchangedevent",ring_QTableWidget_setcurrentCellChangedEvent);
	ring_vm_funcregister("qtablewidget_setcurrentitemchangedevent",ring_QTableWidget_setcurrentItemChangedEvent);
	ring_vm_funcregister("qtablewidget_setitemactivatedevent",ring_QTableWidget_setitemActivatedEvent);
	ring_vm_funcregister("qtablewidget_setitemchangedevent",ring_QTableWidget_setitemChangedEvent);
	ring_vm_funcregister("qtablewidget_setitemclickedevent",ring_QTableWidget_setitemClickedEvent);
	ring_vm_funcregister("qtablewidget_setitemdoubleclickedevent",ring_QTableWidget_setitemDoubleClickedEvent);
	ring_vm_funcregister("qtablewidget_setitementeredevent",ring_QTableWidget_setitemEnteredEvent);
	ring_vm_funcregister("qtablewidget_setitempressedevent",ring_QTableWidget_setitemPressedEvent);
	ring_vm_funcregister("qtablewidget_setitemselectionchangedevent",ring_QTableWidget_setitemSelectionChangedEvent);
	ring_vm_funcregister("qtablewidget_getcellactivatedevent",ring_QTableWidget_getcellActivatedEvent);
	ring_vm_funcregister("qtablewidget_getcellchangedevent",ring_QTableWidget_getcellChangedEvent);
	ring_vm_funcregister("qtablewidget_getcellclickedevent",ring_QTableWidget_getcellClickedEvent);
	ring_vm_funcregister("qtablewidget_getcelldoubleclickedevent",ring_QTableWidget_getcellDoubleClickedEvent);
	ring_vm_funcregister("qtablewidget_getcellenteredevent",ring_QTableWidget_getcellEnteredEvent);
	ring_vm_funcregister("qtablewidget_getcellpressedevent",ring_QTableWidget_getcellPressedEvent);
	ring_vm_funcregister("qtablewidget_getcurrentcellchangedevent",ring_QTableWidget_getcurrentCellChangedEvent);
	ring_vm_funcregister("qtablewidget_getcurrentitemchangedevent",ring_QTableWidget_getcurrentItemChangedEvent);
	ring_vm_funcregister("qtablewidget_getitemactivatedevent",ring_QTableWidget_getitemActivatedEvent);
	ring_vm_funcregister("qtablewidget_getitemchangedevent",ring_QTableWidget_getitemChangedEvent);
	ring_vm_funcregister("qtablewidget_getitemclickedevent",ring_QTableWidget_getitemClickedEvent);
	ring_vm_funcregister("qtablewidget_getitemdoubleclickedevent",ring_QTableWidget_getitemDoubleClickedEvent);
	ring_vm_funcregister("qtablewidget_getitementeredevent",ring_QTableWidget_getitemEnteredEvent);
	ring_vm_funcregister("qtablewidget_getitempressedevent",ring_QTableWidget_getitemPressedEvent);
	ring_vm_funcregister("qtablewidget_getitemselectionchangedevent",ring_QTableWidget_getitemSelectionChangedEvent);
	ring_vm_funcregister("qprogressbar_alignment",ring_QProgressBar_alignment);
	ring_vm_funcregister("qprogressbar_format",ring_QProgressBar_format);
	ring_vm_funcregister("qprogressbar_invertedappearance",ring_QProgressBar_invertedAppearance);
	ring_vm_funcregister("qprogressbar_istextvisible",ring_QProgressBar_isTextVisible);
	ring_vm_funcregister("qprogressbar_maximum",ring_QProgressBar_maximum);
	ring_vm_funcregister("qprogressbar_minimum",ring_QProgressBar_minimum);
	ring_vm_funcregister("qprogressbar_orientation",ring_QProgressBar_orientation);
	ring_vm_funcregister("qprogressbar_resetformat",ring_QProgressBar_resetFormat);
	ring_vm_funcregister("qprogressbar_setalignment",ring_QProgressBar_setAlignment);
	ring_vm_funcregister("qprogressbar_setformat",ring_QProgressBar_setFormat);
	ring_vm_funcregister("qprogressbar_setinvertedappearance",ring_QProgressBar_setInvertedAppearance);
	ring_vm_funcregister("qprogressbar_settextdirection",ring_QProgressBar_setTextDirection);
	ring_vm_funcregister("qprogressbar_settextvisible",ring_QProgressBar_setTextVisible);
	ring_vm_funcregister("qprogressbar_text",ring_QProgressBar_text);
	ring_vm_funcregister("qprogressbar_textdirection",ring_QProgressBar_textDirection);
	ring_vm_funcregister("qprogressbar_value",ring_QProgressBar_value);
	ring_vm_funcregister("qprogressbar_reset",ring_QProgressBar_reset);
	ring_vm_funcregister("qprogressbar_setmaximum",ring_QProgressBar_setMaximum);
	ring_vm_funcregister("qprogressbar_setminimum",ring_QProgressBar_setMinimum);
	ring_vm_funcregister("qprogressbar_setorientation",ring_QProgressBar_setOrientation);
	ring_vm_funcregister("qprogressbar_setrange",ring_QProgressBar_setRange);
	ring_vm_funcregister("qprogressbar_setvalue",ring_QProgressBar_setValue);
	ring_vm_funcregister("qprogressbar_setvaluechangedevent",ring_QProgressBar_setvalueChangedEvent);
	ring_vm_funcregister("qprogressbar_getvaluechangedevent",ring_QProgressBar_getvalueChangedEvent);
	ring_vm_funcregister("qspinbox_cleantext",ring_QSpinBox_cleanText);
	ring_vm_funcregister("qspinbox_displayintegerbase",ring_QSpinBox_displayIntegerBase);
	ring_vm_funcregister("qspinbox_maximum",ring_QSpinBox_maximum);
	ring_vm_funcregister("qspinbox_minimum",ring_QSpinBox_minimum);
	ring_vm_funcregister("qspinbox_prefix",ring_QSpinBox_prefix);
	ring_vm_funcregister("qspinbox_setdisplayintegerbase",ring_QSpinBox_setDisplayIntegerBase);
	ring_vm_funcregister("qspinbox_setmaximum",ring_QSpinBox_setMaximum);
	ring_vm_funcregister("qspinbox_setminimum",ring_QSpinBox_setMinimum);
	ring_vm_funcregister("qspinbox_setprefix",ring_QSpinBox_setPrefix);
	ring_vm_funcregister("qspinbox_setrange",ring_QSpinBox_setRange);
	ring_vm_funcregister("qspinbox_setsinglestep",ring_QSpinBox_setSingleStep);
	ring_vm_funcregister("qspinbox_setsuffix",ring_QSpinBox_setSuffix);
	ring_vm_funcregister("qspinbox_singlestep",ring_QSpinBox_singleStep);
	ring_vm_funcregister("qspinbox_suffix",ring_QSpinBox_suffix);
	ring_vm_funcregister("qspinbox_value",ring_QSpinBox_value);
	ring_vm_funcregister("qspinbox_setvalue",ring_QSpinBox_setValue);
	ring_vm_funcregister("qspinbox_setvaluechangedevent",ring_QSpinBox_setvalueChangedEvent);
	ring_vm_funcregister("qspinbox_getvaluechangedevent",ring_QSpinBox_getvalueChangedEvent);
	ring_vm_funcregister("qabstractslider_hastracking",ring_QAbstractSlider_hasTracking);
	ring_vm_funcregister("qabstractslider_invertedappearance",ring_QAbstractSlider_invertedAppearance);
	ring_vm_funcregister("qabstractslider_invertedcontrols",ring_QAbstractSlider_invertedControls);
	ring_vm_funcregister("qabstractslider_issliderdown",ring_QAbstractSlider_isSliderDown);
	ring_vm_funcregister("qabstractslider_maximum",ring_QAbstractSlider_maximum);
	ring_vm_funcregister("qabstractslider_minimum",ring_QAbstractSlider_minimum);
	ring_vm_funcregister("qabstractslider_orientation",ring_QAbstractSlider_orientation);
	ring_vm_funcregister("qabstractslider_pagestep",ring_QAbstractSlider_pageStep);
	ring_vm_funcregister("qabstractslider_setinvertedappearance",ring_QAbstractSlider_setInvertedAppearance);
	ring_vm_funcregister("qabstractslider_setinvertedcontrols",ring_QAbstractSlider_setInvertedControls);
	ring_vm_funcregister("qabstractslider_setmaximum",ring_QAbstractSlider_setMaximum);
	ring_vm_funcregister("qabstractslider_setminimum",ring_QAbstractSlider_setMinimum);
	ring_vm_funcregister("qabstractslider_setpagestep",ring_QAbstractSlider_setPageStep);
	ring_vm_funcregister("qabstractslider_setsinglestep",ring_QAbstractSlider_setSingleStep);
	ring_vm_funcregister("qabstractslider_setsliderdown",ring_QAbstractSlider_setSliderDown);
	ring_vm_funcregister("qabstractslider_setsliderposition",ring_QAbstractSlider_setSliderPosition);
	ring_vm_funcregister("qabstractslider_settracking",ring_QAbstractSlider_setTracking);
	ring_vm_funcregister("qabstractslider_singlestep",ring_QAbstractSlider_singleStep);
	ring_vm_funcregister("qabstractslider_sliderposition",ring_QAbstractSlider_sliderPosition);
	ring_vm_funcregister("qabstractslider_triggeraction",ring_QAbstractSlider_triggerAction);
	ring_vm_funcregister("qabstractslider_value",ring_QAbstractSlider_value);
	ring_vm_funcregister("qabstractslider_setorientation",ring_QAbstractSlider_setOrientation);
	ring_vm_funcregister("qabstractslider_setrange",ring_QAbstractSlider_setRange);
	ring_vm_funcregister("qabstractslider_setvalue",ring_QAbstractSlider_setValue);
	ring_vm_funcregister("qslider_settickinterval",ring_QSlider_setTickInterval);
	ring_vm_funcregister("qslider_settickposition",ring_QSlider_setTickPosition);
	ring_vm_funcregister("qslider_tickinterval",ring_QSlider_tickInterval);
	ring_vm_funcregister("qslider_tickposition",ring_QSlider_tickPosition);
	ring_vm_funcregister("qslider_minimumsizehint",ring_QSlider_minimumSizeHint);
	ring_vm_funcregister("qslider_sizehint",ring_QSlider_sizeHint);
	ring_vm_funcregister("qslider_setactiontriggeredevent",ring_QSlider_setactionTriggeredEvent);
	ring_vm_funcregister("qslider_setrangechangedevent",ring_QSlider_setrangeChangedEvent);
	ring_vm_funcregister("qslider_setslidermovedevent",ring_QSlider_setsliderMovedEvent);
	ring_vm_funcregister("qslider_setsliderpressedevent",ring_QSlider_setsliderPressedEvent);
	ring_vm_funcregister("qslider_setsliderreleasedevent",ring_QSlider_setsliderReleasedEvent);
	ring_vm_funcregister("qslider_setvaluechangedevent",ring_QSlider_setvalueChangedEvent);
	ring_vm_funcregister("qslider_getactiontriggeredevent",ring_QSlider_getactionTriggeredEvent);
	ring_vm_funcregister("qslider_getrangechangedevent",ring_QSlider_getrangeChangedEvent);
	ring_vm_funcregister("qslider_getslidermovedevent",ring_QSlider_getsliderMovedEvent);
	ring_vm_funcregister("qslider_getsliderpressedevent",ring_QSlider_getsliderPressedEvent);
	ring_vm_funcregister("qslider_getsliderreleasedevent",ring_QSlider_getsliderReleasedEvent);
	ring_vm_funcregister("qslider_getvaluechangedevent",ring_QSlider_getvalueChangedEvent);
	ring_vm_funcregister("qdatetimeedit_calendarpopup",ring_QDateTimeEdit_calendarPopup);
	ring_vm_funcregister("qdatetimeedit_calendarwidget",ring_QDateTimeEdit_calendarWidget);
	ring_vm_funcregister("qdatetimeedit_clearmaximumdate",ring_QDateTimeEdit_clearMaximumDate);
	ring_vm_funcregister("qdatetimeedit_clearmaximumdatetime",ring_QDateTimeEdit_clearMaximumDateTime);
	ring_vm_funcregister("qdatetimeedit_clearmaximumtime",ring_QDateTimeEdit_clearMaximumTime);
	ring_vm_funcregister("qdatetimeedit_clearminimumdate",ring_QDateTimeEdit_clearMinimumDate);
	ring_vm_funcregister("qdatetimeedit_clearminimumdatetime",ring_QDateTimeEdit_clearMinimumDateTime);
	ring_vm_funcregister("qdatetimeedit_clearminimumtime",ring_QDateTimeEdit_clearMinimumTime);
	ring_vm_funcregister("qdatetimeedit_currentsection",ring_QDateTimeEdit_currentSection);
	ring_vm_funcregister("qdatetimeedit_currentsectionindex",ring_QDateTimeEdit_currentSectionIndex);
	ring_vm_funcregister("qdatetimeedit_date",ring_QDateTimeEdit_date);
	ring_vm_funcregister("qdatetimeedit_datetime",ring_QDateTimeEdit_dateTime);
	ring_vm_funcregister("qdatetimeedit_displayformat",ring_QDateTimeEdit_displayFormat);
	ring_vm_funcregister("qdatetimeedit_displayedsections",ring_QDateTimeEdit_displayedSections);
	ring_vm_funcregister("qdatetimeedit_maximumdate",ring_QDateTimeEdit_maximumDate);
	ring_vm_funcregister("qdatetimeedit_maximumdatetime",ring_QDateTimeEdit_maximumDateTime);
	ring_vm_funcregister("qdatetimeedit_maximumtime",ring_QDateTimeEdit_maximumTime);
	ring_vm_funcregister("qdatetimeedit_minimumdate",ring_QDateTimeEdit_minimumDate);
	ring_vm_funcregister("qdatetimeedit_minimumdatetime",ring_QDateTimeEdit_minimumDateTime);
	ring_vm_funcregister("qdatetimeedit_minimumtime",ring_QDateTimeEdit_minimumTime);
	ring_vm_funcregister("qdatetimeedit_sectionat",ring_QDateTimeEdit_sectionAt);
	ring_vm_funcregister("qdatetimeedit_sectioncount",ring_QDateTimeEdit_sectionCount);
	ring_vm_funcregister("qdatetimeedit_sectiontext",ring_QDateTimeEdit_sectionText);
	ring_vm_funcregister("qdatetimeedit_setcalendarpopup",ring_QDateTimeEdit_setCalendarPopup);
	ring_vm_funcregister("qdatetimeedit_setcalendarwidget",ring_QDateTimeEdit_setCalendarWidget);
	ring_vm_funcregister("qdatetimeedit_setcurrentsection",ring_QDateTimeEdit_setCurrentSection);
	ring_vm_funcregister("qdatetimeedit_setcurrentsectionindex",ring_QDateTimeEdit_setCurrentSectionIndex);
	ring_vm_funcregister("qdatetimeedit_setdaterange",ring_QDateTimeEdit_setDateRange);
	ring_vm_funcregister("qdatetimeedit_setdatetimerange",ring_QDateTimeEdit_setDateTimeRange);
	ring_vm_funcregister("qdatetimeedit_setdisplayformat",ring_QDateTimeEdit_setDisplayFormat);
	ring_vm_funcregister("qdatetimeedit_setmaximumdate",ring_QDateTimeEdit_setMaximumDate);
	ring_vm_funcregister("qdatetimeedit_setmaximumdatetime",ring_QDateTimeEdit_setMaximumDateTime);
	ring_vm_funcregister("qdatetimeedit_setmaximumtime",ring_QDateTimeEdit_setMaximumTime);
	ring_vm_funcregister("qdatetimeedit_setminimumdate",ring_QDateTimeEdit_setMinimumDate);
	ring_vm_funcregister("qdatetimeedit_setminimumdatetime",ring_QDateTimeEdit_setMinimumDateTime);
	ring_vm_funcregister("qdatetimeedit_setminimumtime",ring_QDateTimeEdit_setMinimumTime);
	ring_vm_funcregister("qdatetimeedit_setselectedsection",ring_QDateTimeEdit_setSelectedSection);
	ring_vm_funcregister("qdatetimeedit_settimerange",ring_QDateTimeEdit_setTimeRange);
	ring_vm_funcregister("qdatetimeedit_settimespec",ring_QDateTimeEdit_setTimeSpec);
	ring_vm_funcregister("qdatetimeedit_time",ring_QDateTimeEdit_time);
	ring_vm_funcregister("qdatetimeedit_timespec",ring_QDateTimeEdit_timeSpec);
	ring_vm_funcregister("qdatetimeedit_setdate",ring_QDateTimeEdit_setDate);
	ring_vm_funcregister("qdatetimeedit_setdatetime",ring_QDateTimeEdit_setDateTime);
	ring_vm_funcregister("qdatetimeedit_settime",ring_QDateTimeEdit_setTime);
	ring_vm_funcregister("qabstractspinbox_alignment",ring_QAbstractSpinBox_alignment);
	ring_vm_funcregister("qabstractspinbox_buttonsymbols",ring_QAbstractSpinBox_buttonSymbols);
	ring_vm_funcregister("qabstractspinbox_correctionmode",ring_QAbstractSpinBox_correctionMode);
	ring_vm_funcregister("qabstractspinbox_hasacceptableinput",ring_QAbstractSpinBox_hasAcceptableInput);
	ring_vm_funcregister("qabstractspinbox_hasframe",ring_QAbstractSpinBox_hasFrame);
	ring_vm_funcregister("qabstractspinbox_interprettext",ring_QAbstractSpinBox_interpretText);
	ring_vm_funcregister("qabstractspinbox_isaccelerated",ring_QAbstractSpinBox_isAccelerated);
	ring_vm_funcregister("qabstractspinbox_isreadonly",ring_QAbstractSpinBox_isReadOnly);
	ring_vm_funcregister("qabstractspinbox_keyboardtracking",ring_QAbstractSpinBox_keyboardTracking);
	ring_vm_funcregister("qabstractspinbox_setaccelerated",ring_QAbstractSpinBox_setAccelerated);
	ring_vm_funcregister("qabstractspinbox_setalignment",ring_QAbstractSpinBox_setAlignment);
	ring_vm_funcregister("qabstractspinbox_setbuttonsymbols",ring_QAbstractSpinBox_setButtonSymbols);
	ring_vm_funcregister("qabstractspinbox_setcorrectionmode",ring_QAbstractSpinBox_setCorrectionMode);
	ring_vm_funcregister("qabstractspinbox_setframe",ring_QAbstractSpinBox_setFrame);
	ring_vm_funcregister("qabstractspinbox_setkeyboardtracking",ring_QAbstractSpinBox_setKeyboardTracking);
	ring_vm_funcregister("qabstractspinbox_setreadonly",ring_QAbstractSpinBox_setReadOnly);
	ring_vm_funcregister("qabstractspinbox_setspecialvaluetext",ring_QAbstractSpinBox_setSpecialValueText);
	ring_vm_funcregister("qabstractspinbox_setwrapping",ring_QAbstractSpinBox_setWrapping);
	ring_vm_funcregister("qabstractspinbox_specialvaluetext",ring_QAbstractSpinBox_specialValueText);
	ring_vm_funcregister("qabstractspinbox_stepby",ring_QAbstractSpinBox_stepBy);
	ring_vm_funcregister("qabstractspinbox_text",ring_QAbstractSpinBox_text);
	ring_vm_funcregister("qabstractspinbox_wrapping",ring_QAbstractSpinBox_wrapping);
	ring_vm_funcregister("qabstractspinbox_clear",ring_QAbstractSpinBox_clear);
	ring_vm_funcregister("qabstractspinbox_selectall",ring_QAbstractSpinBox_selectAll);
	ring_vm_funcregister("qabstractspinbox_stepdown",ring_QAbstractSpinBox_stepDown);
	ring_vm_funcregister("qabstractspinbox_stepup",ring_QAbstractSpinBox_stepUp);
	ring_vm_funcregister("qdial_notchsize",ring_QDial_notchSize);
	ring_vm_funcregister("qdial_notchtarget",ring_QDial_notchTarget);
	ring_vm_funcregister("qdial_notchesvisible",ring_QDial_notchesVisible);
	ring_vm_funcregister("qdial_setnotchtarget",ring_QDial_setNotchTarget);
	ring_vm_funcregister("qdial_wrapping",ring_QDial_wrapping);
	ring_vm_funcregister("qdial_minimumsizehint",ring_QDial_minimumSizeHint);
	ring_vm_funcregister("qdial_sizehint",ring_QDial_sizeHint);
	ring_vm_funcregister("qdial_setnotchesvisible",ring_QDial_setNotchesVisible);
	ring_vm_funcregister("qdial_setwrapping",ring_QDial_setWrapping);
	ring_vm_funcregister("qdial_setactiontriggeredevent",ring_QDial_setactionTriggeredEvent);
	ring_vm_funcregister("qdial_setrangechangedevent",ring_QDial_setrangeChangedEvent);
	ring_vm_funcregister("qdial_setslidermovedevent",ring_QDial_setsliderMovedEvent);
	ring_vm_funcregister("qdial_setsliderpressedevent",ring_QDial_setsliderPressedEvent);
	ring_vm_funcregister("qdial_setsliderreleasedevent",ring_QDial_setsliderReleasedEvent);
	ring_vm_funcregister("qdial_setvaluechangedevent",ring_QDial_setvalueChangedEvent);
	ring_vm_funcregister("qdial_getactiontriggeredevent",ring_QDial_getactionTriggeredEvent);
	ring_vm_funcregister("qdial_getrangechangedevent",ring_QDial_getrangeChangedEvent);
	ring_vm_funcregister("qdial_getslidermovedevent",ring_QDial_getsliderMovedEvent);
	ring_vm_funcregister("qdial_getsliderpressedevent",ring_QDial_getsliderPressedEvent);
	ring_vm_funcregister("qdial_getsliderreleasedevent",ring_QDial_getsliderReleasedEvent);
	ring_vm_funcregister("qdial_getvaluechangedevent",ring_QDial_getvalueChangedEvent);
	ring_vm_funcregister("qwebview_hasselection",ring_QWebView_hasSelection);
	ring_vm_funcregister("qwebview_history",ring_QWebView_history);
	ring_vm_funcregister("qwebview_load",ring_QWebView_load);
	ring_vm_funcregister("qwebview_page",ring_QWebView_page);
	ring_vm_funcregister("qwebview_pageaction",ring_QWebView_pageAction);
	ring_vm_funcregister("qwebview_selectedtext",ring_QWebView_selectedText);
	ring_vm_funcregister("qwebview_setcontent",ring_QWebView_setContent);
	ring_vm_funcregister("qwebview_sethtml",ring_QWebView_setHtml);
	ring_vm_funcregister("qwebview_setpage",ring_QWebView_setPage);
	ring_vm_funcregister("qwebview_seturl",ring_QWebView_setUrl);
	ring_vm_funcregister("qwebview_setzoomfactor",ring_QWebView_setZoomFactor);
	ring_vm_funcregister("qwebview_settings",ring_QWebView_settings);
	ring_vm_funcregister("qwebview_title",ring_QWebView_title);
	ring_vm_funcregister("qwebview_triggerpageaction",ring_QWebView_triggerPageAction);
	ring_vm_funcregister("qwebview_url",ring_QWebView_url);
	ring_vm_funcregister("qwebview_zoomfactor",ring_QWebView_zoomFactor);
	ring_vm_funcregister("qwebview_back",ring_QWebView_back);
	ring_vm_funcregister("qwebview_forward",ring_QWebView_forward);
	ring_vm_funcregister("qwebview_print",ring_QWebView_print);
	ring_vm_funcregister("qwebview_reload",ring_QWebView_reload);
	ring_vm_funcregister("qwebview_stop",ring_QWebView_stop);
	ring_vm_funcregister("qwebview_setloadfinishedevent",ring_QWebView_setloadFinishedEvent);
	ring_vm_funcregister("qwebview_setloadprogressevent",ring_QWebView_setloadProgressEvent);
	ring_vm_funcregister("qwebview_setloadstartedevent",ring_QWebView_setloadStartedEvent);
	ring_vm_funcregister("qwebview_setselectionchangedevent",ring_QWebView_setselectionChangedEvent);
	ring_vm_funcregister("qwebview_settitlechangedevent",ring_QWebView_settitleChangedEvent);
	ring_vm_funcregister("qwebview_seturlchangedevent",ring_QWebView_seturlChangedEvent);
	ring_vm_funcregister("qwebview_getloadfinishedevent",ring_QWebView_getloadFinishedEvent);
	ring_vm_funcregister("qwebview_getloadprogressevent",ring_QWebView_getloadProgressEvent);
	ring_vm_funcregister("qwebview_getloadstartedevent",ring_QWebView_getloadStartedEvent);
	ring_vm_funcregister("qwebview_getselectionchangedevent",ring_QWebView_getselectionChangedEvent);
	ring_vm_funcregister("qwebview_gettitlechangedevent",ring_QWebView_gettitleChangedEvent);
	ring_vm_funcregister("qwebview_geturlchangedevent",ring_QWebView_geturlChangedEvent);
	ring_vm_funcregister("qurl_authority",ring_QUrl_authority);
	ring_vm_funcregister("qurl_clear",ring_QUrl_clear);
	ring_vm_funcregister("qurl_errorstring",ring_QUrl_errorString);
	ring_vm_funcregister("qurl_filename",ring_QUrl_fileName);
	ring_vm_funcregister("qurl_fragment",ring_QUrl_fragment);
	ring_vm_funcregister("qurl_hasfragment",ring_QUrl_hasFragment);
	ring_vm_funcregister("qurl_hasquery",ring_QUrl_hasQuery);
	ring_vm_funcregister("qurl_host",ring_QUrl_host);
	ring_vm_funcregister("qurl_isempty",ring_QUrl_isEmpty);
	ring_vm_funcregister("qurl_islocalfile",ring_QUrl_isLocalFile);
	ring_vm_funcregister("qurl_isparentof",ring_QUrl_isParentOf);
	ring_vm_funcregister("qurl_isrelative",ring_QUrl_isRelative);
	ring_vm_funcregister("qurl_isvalid",ring_QUrl_isValid);
	ring_vm_funcregister("qurl_password",ring_QUrl_password);
	ring_vm_funcregister("qurl_path",ring_QUrl_path);
	ring_vm_funcregister("qurl_port",ring_QUrl_port);
	ring_vm_funcregister("qurl_query",ring_QUrl_query);
	ring_vm_funcregister("qurl_resolved",ring_QUrl_resolved);
	ring_vm_funcregister("qurl_scheme",ring_QUrl_scheme);
	ring_vm_funcregister("qurl_setauthority",ring_QUrl_setAuthority);
	ring_vm_funcregister("qurl_setfragment",ring_QUrl_setFragment);
	ring_vm_funcregister("qurl_sethost",ring_QUrl_setHost);
	ring_vm_funcregister("qurl_setpassword",ring_QUrl_setPassword);
	ring_vm_funcregister("qurl_setpath",ring_QUrl_setPath);
	ring_vm_funcregister("qurl_setport",ring_QUrl_setPort);
	ring_vm_funcregister("qurl_setquery",ring_QUrl_setQuery);
	ring_vm_funcregister("qurl_setscheme",ring_QUrl_setScheme);
	ring_vm_funcregister("qurl_seturl",ring_QUrl_setUrl);
	ring_vm_funcregister("qurl_setuserinfo",ring_QUrl_setUserInfo);
	ring_vm_funcregister("qurl_setusername",ring_QUrl_setUserName);
	ring_vm_funcregister("qurl_swap",ring_QUrl_swap);
	ring_vm_funcregister("qurl_tolocalfile",ring_QUrl_toLocalFile);
	ring_vm_funcregister("qurl_topleveldomain",ring_QUrl_topLevelDomain);
	ring_vm_funcregister("qurl_userinfo",ring_QUrl_userInfo);
	ring_vm_funcregister("qurl_username",ring_QUrl_userName);
	ring_vm_funcregister("qurl_fromlocalfile",ring_QUrl_fromLocalFile);
	ring_vm_funcregister("qcheckbox_checkstate",ring_QCheckBox_checkState);
	ring_vm_funcregister("qcheckbox_istristate",ring_QCheckBox_isTristate);
	ring_vm_funcregister("qcheckbox_setcheckstate",ring_QCheckBox_setCheckState);
	ring_vm_funcregister("qcheckbox_settristate",ring_QCheckBox_setTristate);
	ring_vm_funcregister("qcheckbox_minimumsizehint",ring_QCheckBox_minimumSizeHint);
	ring_vm_funcregister("qcheckbox_sizehint",ring_QCheckBox_sizeHint);
	ring_vm_funcregister("qcheckbox_setstatechangedevent",ring_QCheckBox_setstateChangedEvent);
	ring_vm_funcregister("qcheckbox_setclickedevent",ring_QCheckBox_setclickedEvent);
	ring_vm_funcregister("qcheckbox_setpressedevent",ring_QCheckBox_setpressedEvent);
	ring_vm_funcregister("qcheckbox_setreleasedevent",ring_QCheckBox_setreleasedEvent);
	ring_vm_funcregister("qcheckbox_settoggledevent",ring_QCheckBox_settoggledEvent);
	ring_vm_funcregister("qcheckbox_getstatechangedevent",ring_QCheckBox_getstateChangedEvent);
	ring_vm_funcregister("qcheckbox_getclickedevent",ring_QCheckBox_getclickedEvent);
	ring_vm_funcregister("qcheckbox_getpressedevent",ring_QCheckBox_getpressedEvent);
	ring_vm_funcregister("qcheckbox_getreleasedevent",ring_QCheckBox_getreleasedEvent);
	ring_vm_funcregister("qcheckbox_gettoggledevent",ring_QCheckBox_gettoggledEvent);
	ring_vm_funcregister("qabstractbutton_autoexclusive",ring_QAbstractButton_autoExclusive);
	ring_vm_funcregister("qabstractbutton_autorepeat",ring_QAbstractButton_autoRepeat);
	ring_vm_funcregister("qabstractbutton_autorepeatdelay",ring_QAbstractButton_autoRepeatDelay);
	ring_vm_funcregister("qabstractbutton_autorepeatinterval",ring_QAbstractButton_autoRepeatInterval);
	ring_vm_funcregister("qabstractbutton_group",ring_QAbstractButton_group);
	ring_vm_funcregister("qabstractbutton_icon",ring_QAbstractButton_icon);
	ring_vm_funcregister("qabstractbutton_iconsize",ring_QAbstractButton_iconSize);
	ring_vm_funcregister("qabstractbutton_ischeckable",ring_QAbstractButton_isCheckable);
	ring_vm_funcregister("qabstractbutton_ischecked",ring_QAbstractButton_isChecked);
	ring_vm_funcregister("qabstractbutton_isdown",ring_QAbstractButton_isDown);
	ring_vm_funcregister("qabstractbutton_setautoexclusive",ring_QAbstractButton_setAutoExclusive);
	ring_vm_funcregister("qabstractbutton_setautorepeat",ring_QAbstractButton_setAutoRepeat);
	ring_vm_funcregister("qabstractbutton_setautorepeatdelay",ring_QAbstractButton_setAutoRepeatDelay);
	ring_vm_funcregister("qabstractbutton_setautorepeatinterval",ring_QAbstractButton_setAutoRepeatInterval);
	ring_vm_funcregister("qabstractbutton_setcheckable",ring_QAbstractButton_setCheckable);
	ring_vm_funcregister("qabstractbutton_setdown",ring_QAbstractButton_setDown);
	ring_vm_funcregister("qabstractbutton_seticon",ring_QAbstractButton_setIcon);
	ring_vm_funcregister("qabstractbutton_setshortcut",ring_QAbstractButton_setShortcut);
	ring_vm_funcregister("qabstractbutton_settext",ring_QAbstractButton_setText);
	ring_vm_funcregister("qabstractbutton_shortcut",ring_QAbstractButton_shortcut);
	ring_vm_funcregister("qabstractbutton_text",ring_QAbstractButton_text);
	ring_vm_funcregister("qabstractbutton_animateclick",ring_QAbstractButton_animateClick);
	ring_vm_funcregister("qabstractbutton_click",ring_QAbstractButton_click);
	ring_vm_funcregister("qabstractbutton_setchecked",ring_QAbstractButton_setChecked);
	ring_vm_funcregister("qabstractbutton_seticonsize",ring_QAbstractButton_setIconSize);
	ring_vm_funcregister("qabstractbutton_toggle",ring_QAbstractButton_toggle);
	ring_vm_funcregister("qradiobutton_minimumsizehint",ring_QRadioButton_minimumSizeHint);
	ring_vm_funcregister("qradiobutton_sizehint",ring_QRadioButton_sizeHint);
	ring_vm_funcregister("qradiobutton_setclickedevent",ring_QRadioButton_setclickedEvent);
	ring_vm_funcregister("qradiobutton_setpressedevent",ring_QRadioButton_setpressedEvent);
	ring_vm_funcregister("qradiobutton_setreleasedevent",ring_QRadioButton_setreleasedEvent);
	ring_vm_funcregister("qradiobutton_settoggledevent",ring_QRadioButton_settoggledEvent);
	ring_vm_funcregister("qradiobutton_getclickedevent",ring_QRadioButton_getclickedEvent);
	ring_vm_funcregister("qradiobutton_getpressedevent",ring_QRadioButton_getpressedEvent);
	ring_vm_funcregister("qradiobutton_getreleasedevent",ring_QRadioButton_getreleasedEvent);
	ring_vm_funcregister("qradiobutton_gettoggledevent",ring_QRadioButton_gettoggledEvent);
	ring_vm_funcregister("qbuttongroup_addbutton",ring_QButtonGroup_addButton);
	ring_vm_funcregister("qbuttongroup_button",ring_QButtonGroup_button);
	ring_vm_funcregister("qbuttongroup_checkedbutton",ring_QButtonGroup_checkedButton);
	ring_vm_funcregister("qbuttongroup_checkedid",ring_QButtonGroup_checkedId);
	ring_vm_funcregister("qbuttongroup_exclusive",ring_QButtonGroup_exclusive);
	ring_vm_funcregister("qbuttongroup_id",ring_QButtonGroup_id);
	ring_vm_funcregister("qbuttongroup_removebutton",ring_QButtonGroup_removeButton);
	ring_vm_funcregister("qbuttongroup_setexclusive",ring_QButtonGroup_setExclusive);
	ring_vm_funcregister("qbuttongroup_setid",ring_QButtonGroup_setId);
	ring_vm_funcregister("qbuttongroup_setbuttonclickedevent",ring_QButtonGroup_setbuttonClickedEvent);
	ring_vm_funcregister("qbuttongroup_setbuttonpressedevent",ring_QButtonGroup_setbuttonPressedEvent);
	ring_vm_funcregister("qbuttongroup_setbuttonreleasedevent",ring_QButtonGroup_setbuttonReleasedEvent);
	ring_vm_funcregister("qbuttongroup_getbuttonclickedevent",ring_QButtonGroup_getbuttonClickedEvent);
	ring_vm_funcregister("qbuttongroup_getbuttonpressedevent",ring_QButtonGroup_getbuttonPressedEvent);
	ring_vm_funcregister("qbuttongroup_getbuttonreleasedevent",ring_QButtonGroup_getbuttonReleasedEvent);
	ring_vm_funcregister("qmediaplayer_bufferstatus",ring_QMediaPlayer_bufferStatus);
	ring_vm_funcregister("qmediaplayer_currentmedia",ring_QMediaPlayer_currentMedia);
	ring_vm_funcregister("qmediaplayer_currentnetworkconfiguration",ring_QMediaPlayer_currentNetworkConfiguration);
	ring_vm_funcregister("qmediaplayer_duration",ring_QMediaPlayer_duration);
	ring_vm_funcregister("qmediaplayer_error",ring_QMediaPlayer_error);
	ring_vm_funcregister("qmediaplayer_errorstring",ring_QMediaPlayer_errorString);
	ring_vm_funcregister("qmediaplayer_isaudioavailable",ring_QMediaPlayer_isAudioAvailable);
	ring_vm_funcregister("qmediaplayer_ismuted",ring_QMediaPlayer_isMuted);
	ring_vm_funcregister("qmediaplayer_isseekable",ring_QMediaPlayer_isSeekable);
	ring_vm_funcregister("qmediaplayer_isvideoavailable",ring_QMediaPlayer_isVideoAvailable);
	ring_vm_funcregister("qmediaplayer_media",ring_QMediaPlayer_media);
	ring_vm_funcregister("qmediaplayer_mediastatus",ring_QMediaPlayer_mediaStatus);
	ring_vm_funcregister("qmediaplayer_mediastream",ring_QMediaPlayer_mediaStream);
	ring_vm_funcregister("qmediaplayer_playbackrate",ring_QMediaPlayer_playbackRate);
	ring_vm_funcregister("qmediaplayer_playlist",ring_QMediaPlayer_playlist);
	ring_vm_funcregister("qmediaplayer_position",ring_QMediaPlayer_position);
	ring_vm_funcregister("qmediaplayer_setvideooutput",ring_QMediaPlayer_setVideoOutput);
	ring_vm_funcregister("qmediaplayer_state",ring_QMediaPlayer_state);
	ring_vm_funcregister("qmediaplayer_volume",ring_QMediaPlayer_volume);
	ring_vm_funcregister("qmediaplayer_pause",ring_QMediaPlayer_pause);
	ring_vm_funcregister("qmediaplayer_play",ring_QMediaPlayer_play);
	ring_vm_funcregister("qmediaplayer_setmedia",ring_QMediaPlayer_setMedia);
	ring_vm_funcregister("qmediaplayer_setmuted",ring_QMediaPlayer_setMuted);
	ring_vm_funcregister("qmediaplayer_setplaybackrate",ring_QMediaPlayer_setPlaybackRate);
	ring_vm_funcregister("qmediaplayer_setplaylist",ring_QMediaPlayer_setPlaylist);
	ring_vm_funcregister("qmediaplayer_setposition",ring_QMediaPlayer_setPosition);
	ring_vm_funcregister("qmediaplayer_setvolume",ring_QMediaPlayer_setVolume);
	ring_vm_funcregister("qmediaplayer_stop",ring_QMediaPlayer_stop);
	ring_vm_funcregister("qmediaplaylist_addmedia",ring_QMediaPlaylist_addMedia);
	ring_vm_funcregister("qmediaplaylist_clear",ring_QMediaPlaylist_clear);
	ring_vm_funcregister("qmediaplaylist_currentindex",ring_QMediaPlaylist_currentIndex);
	ring_vm_funcregister("qmediaplaylist_currentmedia",ring_QMediaPlaylist_currentMedia);
	ring_vm_funcregister("qmediaplaylist_error",ring_QMediaPlaylist_error);
	ring_vm_funcregister("qmediaplaylist_errorstring",ring_QMediaPlaylist_errorString);
	ring_vm_funcregister("qmediaplaylist_insertmedia",ring_QMediaPlaylist_insertMedia);
	ring_vm_funcregister("qmediaplaylist_isempty",ring_QMediaPlaylist_isEmpty);
	ring_vm_funcregister("qmediaplaylist_isreadonly",ring_QMediaPlaylist_isReadOnly);
	ring_vm_funcregister("qmediaplaylist_load",ring_QMediaPlaylist_load);
	ring_vm_funcregister("qmediaplaylist_media",ring_QMediaPlaylist_media);
	ring_vm_funcregister("qmediaplaylist_mediacount",ring_QMediaPlaylist_mediaCount);
	ring_vm_funcregister("qmediaplaylist_nextindex",ring_QMediaPlaylist_nextIndex);
	ring_vm_funcregister("qmediaplaylist_playbackmode",ring_QMediaPlaylist_playbackMode);
	ring_vm_funcregister("qmediaplaylist_previousindex",ring_QMediaPlaylist_previousIndex);
	ring_vm_funcregister("qmediaplaylist_removemedia",ring_QMediaPlaylist_removeMedia);
	ring_vm_funcregister("qmediaplaylist_save",ring_QMediaPlaylist_save);
	ring_vm_funcregister("qmediaplaylist_setplaybackmode",ring_QMediaPlaylist_setPlaybackMode);
	ring_vm_funcregister("qmediaplaylist_next",ring_QMediaPlaylist_next);
	ring_vm_funcregister("qmediaplaylist_previous",ring_QMediaPlaylist_previous);
	ring_vm_funcregister("qmediaplaylist_setcurrentindex",ring_QMediaPlaylist_setCurrentIndex);
	ring_vm_funcregister("qmediaplaylist_shuffle",ring_QMediaPlaylist_shuffle);
	ring_vm_funcregister("qvideowidget_aspectratiomode",ring_QVideoWidget_aspectRatioMode);
	ring_vm_funcregister("qvideowidget_brightness",ring_QVideoWidget_brightness);
	ring_vm_funcregister("qvideowidget_contrast",ring_QVideoWidget_contrast);
	ring_vm_funcregister("qvideowidget_hue",ring_QVideoWidget_hue);
	ring_vm_funcregister("qvideowidget_isfullscreen",ring_QVideoWidget_isFullScreen);
	ring_vm_funcregister("qvideowidget_saturation",ring_QVideoWidget_saturation);
	ring_vm_funcregister("qvideowidget_setaspectratiomode",ring_QVideoWidget_setAspectRatioMode);
	ring_vm_funcregister("qvideowidget_setbrightness",ring_QVideoWidget_setBrightness);
	ring_vm_funcregister("qvideowidget_setcontrast",ring_QVideoWidget_setContrast);
	ring_vm_funcregister("qvideowidget_setfullscreen",ring_QVideoWidget_setFullScreen);
	ring_vm_funcregister("qvideowidget_sethue",ring_QVideoWidget_setHue);
	ring_vm_funcregister("qvideowidget_setsaturation",ring_QVideoWidget_setSaturation);
	ring_vm_funcregister("qvideowidget_setbrightnesschangedevent",ring_QVideoWidget_setbrightnessChangedEvent);
	ring_vm_funcregister("qvideowidget_setcontrastchangedevent",ring_QVideoWidget_setcontrastChangedEvent);
	ring_vm_funcregister("qvideowidget_setfullscreenchangedevent",ring_QVideoWidget_setfullScreenChangedEvent);
	ring_vm_funcregister("qvideowidget_sethuechangedevent",ring_QVideoWidget_sethueChangedEvent);
	ring_vm_funcregister("qvideowidget_setsaturationchangedevent",ring_QVideoWidget_setsaturationChangedEvent);
	ring_vm_funcregister("qvideowidget_getbrightnesschangedevent",ring_QVideoWidget_getbrightnessChangedEvent);
	ring_vm_funcregister("qvideowidget_getcontrastchangedevent",ring_QVideoWidget_getcontrastChangedEvent);
	ring_vm_funcregister("qvideowidget_getfullscreenchangedevent",ring_QVideoWidget_getfullScreenChangedEvent);
	ring_vm_funcregister("qvideowidget_gethuechangedevent",ring_QVideoWidget_gethueChangedEvent);
	ring_vm_funcregister("qvideowidget_getsaturationchangedevent",ring_QVideoWidget_getsaturationChangedEvent);
	ring_vm_funcregister("qaction_actiongroup",ring_QAction_actionGroup);
	ring_vm_funcregister("qaction_activate",ring_QAction_activate);
	ring_vm_funcregister("qaction_autorepeat",ring_QAction_autoRepeat);
	ring_vm_funcregister("qaction_data",ring_QAction_data);
	ring_vm_funcregister("qaction_font",ring_QAction_font);
	ring_vm_funcregister("qaction_icon",ring_QAction_icon);
	ring_vm_funcregister("qaction_icontext",ring_QAction_iconText);
	ring_vm_funcregister("qaction_ischeckable",ring_QAction_isCheckable);
	ring_vm_funcregister("qaction_ischecked",ring_QAction_isChecked);
	ring_vm_funcregister("qaction_isenabled",ring_QAction_isEnabled);
	ring_vm_funcregister("qaction_isiconvisibleinmenu",ring_QAction_isIconVisibleInMenu);
	ring_vm_funcregister("qaction_isseparator",ring_QAction_isSeparator);
	ring_vm_funcregister("qaction_isvisible",ring_QAction_isVisible);
	ring_vm_funcregister("qaction_menu",ring_QAction_menu);
	ring_vm_funcregister("qaction_menurole",ring_QAction_menuRole);
	ring_vm_funcregister("qaction_parentwidget",ring_QAction_parentWidget);
	ring_vm_funcregister("qaction_priority",ring_QAction_priority);
	ring_vm_funcregister("qaction_setactiongroup",ring_QAction_setActionGroup);
	ring_vm_funcregister("qaction_setautorepeat",ring_QAction_setAutoRepeat);
	ring_vm_funcregister("qaction_setcheckable",ring_QAction_setCheckable);
	ring_vm_funcregister("qaction_setdata",ring_QAction_setData);
	ring_vm_funcregister("qaction_setfont",ring_QAction_setFont);
	ring_vm_funcregister("qaction_seticon",ring_QAction_setIcon);
	ring_vm_funcregister("qaction_seticontext",ring_QAction_setIconText);
	ring_vm_funcregister("qaction_seticonvisibleinmenu",ring_QAction_setIconVisibleInMenu);
	ring_vm_funcregister("qaction_setmenu",ring_QAction_setMenu);
	ring_vm_funcregister("qaction_setmenurole",ring_QAction_setMenuRole);
	ring_vm_funcregister("qaction_setpriority",ring_QAction_setPriority);
	ring_vm_funcregister("qaction_setseparator",ring_QAction_setSeparator);
	ring_vm_funcregister("qaction_setshortcut",ring_QAction_setShortcut);
	ring_vm_funcregister("qaction_setshortcutcontext",ring_QAction_setShortcutContext);
	ring_vm_funcregister("qaction_setshortcuts",ring_QAction_setShortcuts);
	ring_vm_funcregister("qaction_setstatustip",ring_QAction_setStatusTip);
	ring_vm_funcregister("qaction_settext",ring_QAction_setText);
	ring_vm_funcregister("qaction_settooltip",ring_QAction_setToolTip);
	ring_vm_funcregister("qaction_setwhatsthis",ring_QAction_setWhatsThis);
	ring_vm_funcregister("qaction_shortcut",ring_QAction_shortcut);
	ring_vm_funcregister("qaction_shortcutcontext",ring_QAction_shortcutContext);
	ring_vm_funcregister("qaction_showstatustext",ring_QAction_showStatusText);
	ring_vm_funcregister("qaction_statustip",ring_QAction_statusTip);
	ring_vm_funcregister("qaction_text",ring_QAction_text);
	ring_vm_funcregister("qaction_tooltip",ring_QAction_toolTip);
	ring_vm_funcregister("qaction_whatsthis",ring_QAction_whatsThis);
	ring_vm_funcregister("qaction_hover",ring_QAction_hover);
	ring_vm_funcregister("qaction_setchecked",ring_QAction_setChecked);
	ring_vm_funcregister("qaction_setdisabled",ring_QAction_setDisabled);
	ring_vm_funcregister("qaction_setenabled",ring_QAction_setEnabled);
	ring_vm_funcregister("qaction_setvisible",ring_QAction_setVisible);
	ring_vm_funcregister("qaction_toggle",ring_QAction_toggle);
	ring_vm_funcregister("qaction_trigger",ring_QAction_trigger);
	ring_vm_funcregister("qaction_setclickevent",ring_QAction_setClickEvent);
	ring_vm_funcregister("qaction_getclickevent",ring_QAction_getClickEvent);
	ring_vm_funcregister("qevent_accept",ring_QEvent_accept);
	ring_vm_funcregister("qevent_ignore",ring_QEvent_ignore);
	ring_vm_funcregister("qevent_isaccepted",ring_QEvent_isAccepted);
	ring_vm_funcregister("qevent_setaccepted",ring_QEvent_setAccepted);
	ring_vm_funcregister("qevent_spontaneous",ring_QEvent_spontaneous);
	ring_vm_funcregister("qevent_type",ring_QEvent_type);
	ring_vm_funcregister("qmessagebox_addbutton",ring_QMessageBox_addButton);
	ring_vm_funcregister("qmessagebox_button",ring_QMessageBox_button);
	ring_vm_funcregister("qmessagebox_buttonrole",ring_QMessageBox_buttonRole);
	ring_vm_funcregister("qmessagebox_clickedbutton",ring_QMessageBox_clickedButton);
	ring_vm_funcregister("qmessagebox_defaultbutton",ring_QMessageBox_defaultButton);
	ring_vm_funcregister("qmessagebox_detailedtext",ring_QMessageBox_detailedText);
	ring_vm_funcregister("qmessagebox_escapebutton",ring_QMessageBox_escapeButton);
	ring_vm_funcregister("qmessagebox_iconpixmap",ring_QMessageBox_iconPixmap);
	ring_vm_funcregister("qmessagebox_informativetext",ring_QMessageBox_informativeText);
	ring_vm_funcregister("qmessagebox_open",ring_QMessageBox_open);
	ring_vm_funcregister("qmessagebox_removebutton",ring_QMessageBox_removeButton);
	ring_vm_funcregister("qmessagebox_setdefaultbutton",ring_QMessageBox_setDefaultButton);
	ring_vm_funcregister("qmessagebox_setdetailedtext",ring_QMessageBox_setDetailedText);
	ring_vm_funcregister("qmessagebox_setescapebutton",ring_QMessageBox_setEscapeButton);
	ring_vm_funcregister("qmessagebox_seticonpixmap",ring_QMessageBox_setIconPixmap);
	ring_vm_funcregister("qmessagebox_setinformativetext",ring_QMessageBox_setInformativeText);
	ring_vm_funcregister("qmessagebox_setstandardbuttons",ring_QMessageBox_setStandardButtons);
	ring_vm_funcregister("qmessagebox_settext",ring_QMessageBox_setText);
	ring_vm_funcregister("qmessagebox_settextformat",ring_QMessageBox_setTextFormat);
	ring_vm_funcregister("qmessagebox_setwindowmodality",ring_QMessageBox_setWindowModality);
	ring_vm_funcregister("qmessagebox_setwindowtitle",ring_QMessageBox_setWindowTitle);
	ring_vm_funcregister("qmessagebox_standardbutton",ring_QMessageBox_standardButton);
	ring_vm_funcregister("qmessagebox_standardbuttons",ring_QMessageBox_standardButtons);
	ring_vm_funcregister("qmessagebox_text",ring_QMessageBox_text);
	ring_vm_funcregister("qmessagebox_textformat",ring_QMessageBox_textFormat);
	ring_vm_funcregister("qmessagebox_exec",ring_QMessageBox_exec);
	ring_vm_funcregister("qmessagebox_about",ring_QMessageBox_about);
	ring_vm_funcregister("qmessagebox_aboutqt",ring_QMessageBox_aboutQt);
	ring_vm_funcregister("qmessagebox_critical",ring_QMessageBox_critical);
	ring_vm_funcregister("qmessagebox_information",ring_QMessageBox_information);
	ring_vm_funcregister("qmessagebox_question",ring_QMessageBox_question);
	ring_vm_funcregister("qmessagebox_warning",ring_QMessageBox_warning);
	ring_vm_funcregister("qtimer_interval",ring_QTimer_interval);
	ring_vm_funcregister("qtimer_isactive",ring_QTimer_isActive);
	ring_vm_funcregister("qtimer_issingleshot",ring_QTimer_isSingleShot);
	ring_vm_funcregister("qtimer_setinterval",ring_QTimer_setInterval);
	ring_vm_funcregister("qtimer_setsingleshot",ring_QTimer_setSingleShot);
	ring_vm_funcregister("qtimer_timerid",ring_QTimer_timerId);
	ring_vm_funcregister("qtimer_start",ring_QTimer_start);
	ring_vm_funcregister("qtimer_stop",ring_QTimer_stop);
	ring_vm_funcregister("qtimer_settimeoutevent",ring_QTimer_settimeoutEvent);
	ring_vm_funcregister("qtimer_gettimeoutevent",ring_QTimer_gettimeoutEvent);
	ring_vm_funcregister("qfiledialog_acceptmode",ring_QFileDialog_acceptMode);
	ring_vm_funcregister("qfiledialog_defaultsuffix",ring_QFileDialog_defaultSuffix);
	ring_vm_funcregister("qfiledialog_directory",ring_QFileDialog_directory);
	ring_vm_funcregister("qfiledialog_directoryurl",ring_QFileDialog_directoryUrl);
	ring_vm_funcregister("qfiledialog_filemode",ring_QFileDialog_fileMode);
	ring_vm_funcregister("qfiledialog_filter",ring_QFileDialog_filter);
	ring_vm_funcregister("qfiledialog_history",ring_QFileDialog_history);
	ring_vm_funcregister("qfiledialog_iconprovider",ring_QFileDialog_iconProvider);
	ring_vm_funcregister("qfiledialog_itemdelegate",ring_QFileDialog_itemDelegate);
	ring_vm_funcregister("qfiledialog_labeltext",ring_QFileDialog_labelText);
	ring_vm_funcregister("qfiledialog_mimetypefilters",ring_QFileDialog_mimeTypeFilters);
	ring_vm_funcregister("qfiledialog_namefilters",ring_QFileDialog_nameFilters);
	ring_vm_funcregister("qfiledialog_open",ring_QFileDialog_open);
	ring_vm_funcregister("qfiledialog_options",ring_QFileDialog_options);
	ring_vm_funcregister("qfiledialog_proxymodel",ring_QFileDialog_proxyModel);
	ring_vm_funcregister("qfiledialog_restorestate",ring_QFileDialog_restoreState);
	ring_vm_funcregister("qfiledialog_savestate",ring_QFileDialog_saveState);
	ring_vm_funcregister("qfiledialog_selectfile",ring_QFileDialog_selectFile);
	ring_vm_funcregister("qfiledialog_selectmimetypefilter",ring_QFileDialog_selectMimeTypeFilter);
	ring_vm_funcregister("qfiledialog_selectnamefilter",ring_QFileDialog_selectNameFilter);
	ring_vm_funcregister("qfiledialog_selecturl",ring_QFileDialog_selectUrl);
	ring_vm_funcregister("qfiledialog_selectedfiles",ring_QFileDialog_selectedFiles);
	ring_vm_funcregister("qfiledialog_selectednamefilter",ring_QFileDialog_selectedNameFilter);
	ring_vm_funcregister("qfiledialog_setacceptmode",ring_QFileDialog_setAcceptMode);
	ring_vm_funcregister("qfiledialog_setdefaultsuffix",ring_QFileDialog_setDefaultSuffix);
	ring_vm_funcregister("qfiledialog_setdirectory",ring_QFileDialog_setDirectory);
	ring_vm_funcregister("qfiledialog_setdirectoryurl",ring_QFileDialog_setDirectoryUrl);
	ring_vm_funcregister("qfiledialog_setfilemode",ring_QFileDialog_setFileMode);
	ring_vm_funcregister("qfiledialog_setfilter",ring_QFileDialog_setFilter);
	ring_vm_funcregister("qfiledialog_sethistory",ring_QFileDialog_setHistory);
	ring_vm_funcregister("qfiledialog_seticonprovider",ring_QFileDialog_setIconProvider);
	ring_vm_funcregister("qfiledialog_setitemdelegate",ring_QFileDialog_setItemDelegate);
	ring_vm_funcregister("qfiledialog_setlabeltext",ring_QFileDialog_setLabelText);
	ring_vm_funcregister("qfiledialog_setmimetypefilters",ring_QFileDialog_setMimeTypeFilters);
	ring_vm_funcregister("qfiledialog_setnamefilter",ring_QFileDialog_setNameFilter);
	ring_vm_funcregister("qfiledialog_setnamefilters",ring_QFileDialog_setNameFilters);
	ring_vm_funcregister("qfiledialog_setoption",ring_QFileDialog_setOption);
	ring_vm_funcregister("qfiledialog_setoptions",ring_QFileDialog_setOptions);
	ring_vm_funcregister("qfiledialog_setproxymodel",ring_QFileDialog_setProxyModel);
	ring_vm_funcregister("qfiledialog_setviewmode",ring_QFileDialog_setViewMode);
	ring_vm_funcregister("qfiledialog_testoption",ring_QFileDialog_testOption);
	ring_vm_funcregister("qfiledialog_viewmode",ring_QFileDialog_viewMode);
	ring_vm_funcregister("qfiledialog_getexistingdirectory",ring_QFileDialog_getExistingDirectory);
	ring_vm_funcregister("qfiledialog_getexistingdirectoryurl",ring_QFileDialog_getExistingDirectoryUrl);
	ring_vm_funcregister("qfiledialog_getopenfilename",ring_QFileDialog_getOpenFileName);
	ring_vm_funcregister("qfiledialog_getopenfileurl",ring_QFileDialog_getOpenFileUrl);
	ring_vm_funcregister("qfiledialog_getsavefilename",ring_QFileDialog_getSaveFileName);
	ring_vm_funcregister("qfiledialog_getsavefileurl",ring_QFileDialog_getSaveFileUrl);
	ring_vm_funcregister("qpainter_background",ring_QPainter_background);
	ring_vm_funcregister("qpainter_backgroundmode",ring_QPainter_backgroundMode);
	ring_vm_funcregister("qpainter_begin",ring_QPainter_begin);
	ring_vm_funcregister("qpainter_beginnativepainting",ring_QPainter_beginNativePainting);
	ring_vm_funcregister("qpainter_boundingrect",ring_QPainter_boundingRect);
	ring_vm_funcregister("qpainter_brush",ring_QPainter_brush);
	ring_vm_funcregister("qpainter_brushorigin",ring_QPainter_brushOrigin);
	ring_vm_funcregister("qpainter_clipboundingrect",ring_QPainter_clipBoundingRect);
	ring_vm_funcregister("qpainter_clippath",ring_QPainter_clipPath);
	ring_vm_funcregister("qpainter_clipregion",ring_QPainter_clipRegion);
	ring_vm_funcregister("qpainter_combinedtransform",ring_QPainter_combinedTransform);
	ring_vm_funcregister("qpainter_compositionmode",ring_QPainter_compositionMode);
	ring_vm_funcregister("qpainter_device",ring_QPainter_device);
	ring_vm_funcregister("qpainter_devicetransform",ring_QPainter_deviceTransform);
	ring_vm_funcregister("qpainter_drawarc",ring_QPainter_drawArc);
	ring_vm_funcregister("qpainter_drawchord",ring_QPainter_drawChord);
	ring_vm_funcregister("qpainter_drawconvexpolygon",ring_QPainter_drawConvexPolygon);
	ring_vm_funcregister("qpainter_drawellipse",ring_QPainter_drawEllipse);
	ring_vm_funcregister("qpainter_drawglyphrun",ring_QPainter_drawGlyphRun);
	ring_vm_funcregister("qpainter_drawimage",ring_QPainter_drawImage);
	ring_vm_funcregister("qpainter_drawline",ring_QPainter_drawLine);
	ring_vm_funcregister("qpainter_drawlines",ring_QPainter_drawLines);
	ring_vm_funcregister("qpainter_drawpath",ring_QPainter_drawPath);
	ring_vm_funcregister("qpainter_drawpicture",ring_QPainter_drawPicture);
	ring_vm_funcregister("qpainter_drawpie",ring_QPainter_drawPie);
	ring_vm_funcregister("qpainter_drawpixmap",ring_QPainter_drawPixmap);
	ring_vm_funcregister("qpainter_drawpoint",ring_QPainter_drawPoint);
	ring_vm_funcregister("qpainter_drawpoints",ring_QPainter_drawPoints);
	ring_vm_funcregister("qpainter_drawpolyline",ring_QPainter_drawPolyline);
	ring_vm_funcregister("qpainter_drawrect",ring_QPainter_drawRect);
	ring_vm_funcregister("qpainter_drawrects",ring_QPainter_drawRects);
	ring_vm_funcregister("qpainter_drawroundedrect",ring_QPainter_drawRoundedRect);
	ring_vm_funcregister("qpainter_drawstatictext",ring_QPainter_drawStaticText);
	ring_vm_funcregister("qpainter_drawtext",ring_QPainter_drawText);
	ring_vm_funcregister("qpainter_drawtiledpixmap",ring_QPainter_drawTiledPixmap);
	ring_vm_funcregister("qpainter_end",ring_QPainter_end);
	ring_vm_funcregister("qpainter_endnativepainting",ring_QPainter_endNativePainting);
	ring_vm_funcregister("qpainter_eraserect",ring_QPainter_eraseRect);
	ring_vm_funcregister("qpainter_fillpath",ring_QPainter_fillPath);
	ring_vm_funcregister("qpainter_fillrect",ring_QPainter_fillRect);
	ring_vm_funcregister("qpainter_font",ring_QPainter_font);
	ring_vm_funcregister("qpainter_fontinfo",ring_QPainter_fontInfo);
	ring_vm_funcregister("qpainter_hasclipping",ring_QPainter_hasClipping);
	ring_vm_funcregister("qpainter_initfrom",ring_QPainter_initFrom);
	ring_vm_funcregister("qpainter_isactive",ring_QPainter_isActive);
	ring_vm_funcregister("qpainter_layoutdirection",ring_QPainter_layoutDirection);
	ring_vm_funcregister("qpainter_opacity",ring_QPainter_opacity);
	ring_vm_funcregister("qpainter_paintengine",ring_QPainter_paintEngine);
	ring_vm_funcregister("qpainter_pen",ring_QPainter_pen);
	ring_vm_funcregister("qpainter_renderhints",ring_QPainter_renderHints);
	ring_vm_funcregister("qpainter_resettransform",ring_QPainter_resetTransform);
	ring_vm_funcregister("qpainter_restore",ring_QPainter_restore);
	ring_vm_funcregister("qpainter_rotate",ring_QPainter_rotate);
	ring_vm_funcregister("qpainter_save",ring_QPainter_save);
	ring_vm_funcregister("qpainter_scale",ring_QPainter_scale);
	ring_vm_funcregister("qpainter_setbackground",ring_QPainter_setBackground);
	ring_vm_funcregister("qpainter_setbackgroundmode",ring_QPainter_setBackgroundMode);
	ring_vm_funcregister("qpainter_setbrush",ring_QPainter_setBrush);
	ring_vm_funcregister("qpainter_setbrushorigin",ring_QPainter_setBrushOrigin);
	ring_vm_funcregister("qpainter_setclippath",ring_QPainter_setClipPath);
	ring_vm_funcregister("qpainter_setcliprect",ring_QPainter_setClipRect);
	ring_vm_funcregister("qpainter_setclipregion",ring_QPainter_setClipRegion);
	ring_vm_funcregister("qpainter_setclipping",ring_QPainter_setClipping);
	ring_vm_funcregister("qpainter_setcompositionmode",ring_QPainter_setCompositionMode);
	ring_vm_funcregister("qpainter_setfont",ring_QPainter_setFont);
	ring_vm_funcregister("qpainter_setlayoutdirection",ring_QPainter_setLayoutDirection);
	ring_vm_funcregister("qpainter_setopacity",ring_QPainter_setOpacity);
	ring_vm_funcregister("qpainter_setpen",ring_QPainter_setPen);
	ring_vm_funcregister("qpainter_setrenderhint",ring_QPainter_setRenderHint);
	ring_vm_funcregister("qpainter_settransform",ring_QPainter_setTransform);
	ring_vm_funcregister("qpainter_setviewtransformenabled",ring_QPainter_setViewTransformEnabled);
	ring_vm_funcregister("qpainter_setviewport",ring_QPainter_setViewport);
	ring_vm_funcregister("qpainter_setwindow",ring_QPainter_setWindow);
	ring_vm_funcregister("qpainter_setworldmatrixenabled",ring_QPainter_setWorldMatrixEnabled);
	ring_vm_funcregister("qpainter_setworldtransform",ring_QPainter_setWorldTransform);
	ring_vm_funcregister("qpainter_shear",ring_QPainter_shear);
	ring_vm_funcregister("qpainter_strokepath",ring_QPainter_strokePath);
	ring_vm_funcregister("qpainter_testrenderhint",ring_QPainter_testRenderHint);
	ring_vm_funcregister("qpainter_transform",ring_QPainter_transform);
	ring_vm_funcregister("qpainter_translate",ring_QPainter_translate);
	ring_vm_funcregister("qpainter_viewtransformenabled",ring_QPainter_viewTransformEnabled);
	ring_vm_funcregister("qpainter_viewport",ring_QPainter_viewport);
	ring_vm_funcregister("qpainter_window",ring_QPainter_window);
	ring_vm_funcregister("qpainter_worldmatrixenabled",ring_QPainter_worldMatrixEnabled);
	ring_vm_funcregister("qpainter_worldtransform",ring_QPainter_worldTransform);
	ring_vm_funcregister("qpainter_drawpolygon",ring_QPainter_drawPolygon);
	ring_vm_funcregister("qpicture_boundingrect",ring_QPicture_boundingRect);
	ring_vm_funcregister("qpicture_data",ring_QPicture_data);
	ring_vm_funcregister("qpicture_isnull",ring_QPicture_isNull);
	ring_vm_funcregister("qpicture_load",ring_QPicture_load);
	ring_vm_funcregister("qpicture_play",ring_QPicture_play);
	ring_vm_funcregister("qpicture_save",ring_QPicture_save);
	ring_vm_funcregister("qpicture_setboundingrect",ring_QPicture_setBoundingRect);
	ring_vm_funcregister("qpicture_size",ring_QPicture_size);
	ring_vm_funcregister("qpicture_swap",ring_QPicture_swap);
	ring_vm_funcregister("qpen_brush",ring_QPen_brush);
	ring_vm_funcregister("qpen_capstyle",ring_QPen_capStyle);
	ring_vm_funcregister("qpen_color",ring_QPen_color);
	ring_vm_funcregister("qpen_dashoffset",ring_QPen_dashOffset);
	ring_vm_funcregister("qpen_iscosmetic",ring_QPen_isCosmetic);
	ring_vm_funcregister("qpen_issolid",ring_QPen_isSolid);
	ring_vm_funcregister("qpen_joinstyle",ring_QPen_joinStyle);
	ring_vm_funcregister("qpen_miterlimit",ring_QPen_miterLimit);
	ring_vm_funcregister("qpen_setbrush",ring_QPen_setBrush);
	ring_vm_funcregister("qpen_setcapstyle",ring_QPen_setCapStyle);
	ring_vm_funcregister("qpen_setcolor",ring_QPen_setColor);
	ring_vm_funcregister("qpen_setcosmetic",ring_QPen_setCosmetic);
	ring_vm_funcregister("qpen_setdashoffset",ring_QPen_setDashOffset);
	ring_vm_funcregister("qpen_setjoinstyle",ring_QPen_setJoinStyle);
	ring_vm_funcregister("qpen_setmiterlimit",ring_QPen_setMiterLimit);
	ring_vm_funcregister("qpen_setstyle",ring_QPen_setStyle);
	ring_vm_funcregister("qpen_setwidth",ring_QPen_setWidth);
	ring_vm_funcregister("qpen_setwidthf",ring_QPen_setWidthF);
	ring_vm_funcregister("qpen_style",ring_QPen_style);
	ring_vm_funcregister("qpen_swap",ring_QPen_swap);
	ring_vm_funcregister("qpen_width",ring_QPen_width);
	ring_vm_funcregister("qpen_widthf",ring_QPen_widthF);
	ring_vm_funcregister("qcolor_alpha",ring_QColor_alpha);
	ring_vm_funcregister("qcolor_alphaf",ring_QColor_alphaF);
	ring_vm_funcregister("qcolor_black",ring_QColor_black);
	ring_vm_funcregister("qcolor_blackf",ring_QColor_blackF);
	ring_vm_funcregister("qcolor_blue",ring_QColor_blue);
	ring_vm_funcregister("qcolor_bluef",ring_QColor_blueF);
	ring_vm_funcregister("qcolor_convertto",ring_QColor_convertTo);
	ring_vm_funcregister("qcolor_cyan",ring_QColor_cyan);
	ring_vm_funcregister("qcolor_cyanf",ring_QColor_cyanF);
	ring_vm_funcregister("qcolor_darker",ring_QColor_darker);
	ring_vm_funcregister("qcolor_getcmyk",ring_QColor_getCmyk);
	ring_vm_funcregister("qcolor_getcmykf",ring_QColor_getCmykF);
	ring_vm_funcregister("qcolor_gethsl",ring_QColor_getHsl);
	ring_vm_funcregister("qcolor_gethslf",ring_QColor_getHslF);
	ring_vm_funcregister("qcolor_gethsv",ring_QColor_getHsv);
	ring_vm_funcregister("qcolor_gethsvf",ring_QColor_getHsvF);
	ring_vm_funcregister("qcolor_getrgb",ring_QColor_getRgb);
	ring_vm_funcregister("qcolor_getrgbf",ring_QColor_getRgbF);
	ring_vm_funcregister("qcolor_green",ring_QColor_green);
	ring_vm_funcregister("qcolor_greenf",ring_QColor_greenF);
	ring_vm_funcregister("qcolor_hslhue",ring_QColor_hslHue);
	ring_vm_funcregister("qcolor_hslhuef",ring_QColor_hslHueF);
	ring_vm_funcregister("qcolor_hslsaturation",ring_QColor_hslSaturation);
	ring_vm_funcregister("qcolor_hslsaturationf",ring_QColor_hslSaturationF);
	ring_vm_funcregister("qcolor_hsvhue",ring_QColor_hsvHue);
	ring_vm_funcregister("qcolor_hsvhuef",ring_QColor_hsvHueF);
	ring_vm_funcregister("qcolor_hsvsaturation",ring_QColor_hsvSaturation);
	ring_vm_funcregister("qcolor_hsvsaturationf",ring_QColor_hsvSaturationF);
	ring_vm_funcregister("qcolor_hue",ring_QColor_hue);
	ring_vm_funcregister("qcolor_huef",ring_QColor_hueF);
	ring_vm_funcregister("qcolor_isvalid",ring_QColor_isValid);
	ring_vm_funcregister("qcolor_lighter",ring_QColor_lighter);
	ring_vm_funcregister("qcolor_lightness",ring_QColor_lightness);
	ring_vm_funcregister("qcolor_lightnessf",ring_QColor_lightnessF);
	ring_vm_funcregister("qcolor_magenta",ring_QColor_magenta);
	ring_vm_funcregister("qcolor_magentaf",ring_QColor_magentaF);
	ring_vm_funcregister("qcolor_name",ring_QColor_name);
	ring_vm_funcregister("qcolor_red",ring_QColor_red);
	ring_vm_funcregister("qcolor_redf",ring_QColor_redF);
	ring_vm_funcregister("qcolor_rgb",ring_QColor_rgb);
	ring_vm_funcregister("qcolor_rgba",ring_QColor_rgba);
	ring_vm_funcregister("qcolor_saturation",ring_QColor_saturation);
	ring_vm_funcregister("qcolor_saturationf",ring_QColor_saturationF);
	ring_vm_funcregister("qcolor_setalpha",ring_QColor_setAlpha);
	ring_vm_funcregister("qcolor_setalphaf",ring_QColor_setAlphaF);
	ring_vm_funcregister("qcolor_setblue",ring_QColor_setBlue);
	ring_vm_funcregister("qcolor_setbluef",ring_QColor_setBlueF);
	ring_vm_funcregister("qcolor_setcmyk",ring_QColor_setCmyk);
	ring_vm_funcregister("qcolor_setcmykf",ring_QColor_setCmykF);
	ring_vm_funcregister("qcolor_setgreen",ring_QColor_setGreen);
	ring_vm_funcregister("qcolor_setgreenf",ring_QColor_setGreenF);
	ring_vm_funcregister("qcolor_sethsl",ring_QColor_setHsl);
	ring_vm_funcregister("qcolor_sethslf",ring_QColor_setHslF);
	ring_vm_funcregister("qcolor_sethsv",ring_QColor_setHsv);
	ring_vm_funcregister("qcolor_sethsvf",ring_QColor_setHsvF);
	ring_vm_funcregister("qcolor_setnamedcolor",ring_QColor_setNamedColor);
	ring_vm_funcregister("qcolor_setred",ring_QColor_setRed);
	ring_vm_funcregister("qcolor_setredf",ring_QColor_setRedF);
	ring_vm_funcregister("qcolor_setrgb",ring_QColor_setRgb);
	ring_vm_funcregister("qcolor_setrgbf",ring_QColor_setRgbF);
	ring_vm_funcregister("qcolor_setrgba",ring_QColor_setRgba);
	ring_vm_funcregister("qcolor_spec",ring_QColor_spec);
	ring_vm_funcregister("qcolor_tocmyk",ring_QColor_toCmyk);
	ring_vm_funcregister("qcolor_tohsl",ring_QColor_toHsl);
	ring_vm_funcregister("qcolor_tohsv",ring_QColor_toHsv);
	ring_vm_funcregister("qcolor_torgb",ring_QColor_toRgb);
	ring_vm_funcregister("qcolor_value",ring_QColor_value);
	ring_vm_funcregister("qcolor_valuef",ring_QColor_valueF);
	ring_vm_funcregister("qcolor_yellow",ring_QColor_yellow);
	ring_vm_funcregister("qcolor_yellowf",ring_QColor_yellowF);
	ring_vm_funcregister("qcolor_colornames",ring_QColor_colorNames);
	ring_vm_funcregister("qcolor_fromcmyk",ring_QColor_fromCmyk);
	ring_vm_funcregister("qcolor_fromcmykf",ring_QColor_fromCmykF);
	ring_vm_funcregister("qcolor_fromhsl",ring_QColor_fromHsl);
	ring_vm_funcregister("qcolor_fromhslf",ring_QColor_fromHslF);
	ring_vm_funcregister("qcolor_fromhsv",ring_QColor_fromHsv);
	ring_vm_funcregister("qcolor_fromhsvf",ring_QColor_fromHsvF);
	ring_vm_funcregister("qcolor_fromrgb",ring_QColor_fromRgb);
	ring_vm_funcregister("qcolor_fromrgbf",ring_QColor_fromRgbF);
	ring_vm_funcregister("qcolor_fromrgba",ring_QColor_fromRgba);
	ring_vm_funcregister("qcolor_isvalidcolor",ring_QColor_isValidColor);
	ring_vm_funcregister("qprinter_abort",ring_QPrinter_abort);
	ring_vm_funcregister("qprinter_collatecopies",ring_QPrinter_collateCopies);
	ring_vm_funcregister("qprinter_colormode",ring_QPrinter_colorMode);
	ring_vm_funcregister("qprinter_copycount",ring_QPrinter_copyCount);
	ring_vm_funcregister("qprinter_creator",ring_QPrinter_creator);
	ring_vm_funcregister("qprinter_docname",ring_QPrinter_docName);
	ring_vm_funcregister("qprinter_duplex",ring_QPrinter_duplex);
	ring_vm_funcregister("qprinter_fontembeddingenabled",ring_QPrinter_fontEmbeddingEnabled);
	ring_vm_funcregister("qprinter_frompage",ring_QPrinter_fromPage);
	ring_vm_funcregister("qprinter_fullpage",ring_QPrinter_fullPage);
	ring_vm_funcregister("qprinter_isvalid",ring_QPrinter_isValid);
	ring_vm_funcregister("qprinter_outputfilename",ring_QPrinter_outputFileName);
	ring_vm_funcregister("qprinter_outputformat",ring_QPrinter_outputFormat);
	ring_vm_funcregister("qprinter_pageorder",ring_QPrinter_pageOrder);
	ring_vm_funcregister("qprinter_pagerect",ring_QPrinter_pageRect);
	ring_vm_funcregister("qprinter_paperrect",ring_QPrinter_paperRect);
	ring_vm_funcregister("qprinter_papersource",ring_QPrinter_paperSource);
	ring_vm_funcregister("qprinter_printengine",ring_QPrinter_printEngine);
	ring_vm_funcregister("qprinter_printprogram",ring_QPrinter_printProgram);
	ring_vm_funcregister("qprinter_printrange",ring_QPrinter_printRange);
	ring_vm_funcregister("qprinter_printername",ring_QPrinter_printerName);
	ring_vm_funcregister("qprinter_printerselectionoption",ring_QPrinter_printerSelectionOption);
	ring_vm_funcregister("qprinter_printerstate",ring_QPrinter_printerState);
	ring_vm_funcregister("qprinter_resolution",ring_QPrinter_resolution);
	ring_vm_funcregister("qprinter_setcollatecopies",ring_QPrinter_setCollateCopies);
	ring_vm_funcregister("qprinter_setcolormode",ring_QPrinter_setColorMode);
	ring_vm_funcregister("qprinter_setcopycount",ring_QPrinter_setCopyCount);
	ring_vm_funcregister("qprinter_setcreator",ring_QPrinter_setCreator);
	ring_vm_funcregister("qprinter_setdocname",ring_QPrinter_setDocName);
	ring_vm_funcregister("qprinter_setduplex",ring_QPrinter_setDuplex);
	ring_vm_funcregister("qprinter_setfontembeddingenabled",ring_QPrinter_setFontEmbeddingEnabled);
	ring_vm_funcregister("qprinter_setfromto",ring_QPrinter_setFromTo);
	ring_vm_funcregister("qprinter_setfullpage",ring_QPrinter_setFullPage);
	ring_vm_funcregister("qprinter_setoutputfilename",ring_QPrinter_setOutputFileName);
	ring_vm_funcregister("qprinter_setoutputformat",ring_QPrinter_setOutputFormat);
	ring_vm_funcregister("qprinter_setpageorder",ring_QPrinter_setPageOrder);
	ring_vm_funcregister("qprinter_setpapersource",ring_QPrinter_setPaperSource);
	ring_vm_funcregister("qprinter_setprintprogram",ring_QPrinter_setPrintProgram);
	ring_vm_funcregister("qprinter_setprintrange",ring_QPrinter_setPrintRange);
	ring_vm_funcregister("qprinter_setprintername",ring_QPrinter_setPrinterName);
	ring_vm_funcregister("qprinter_setprinterselectionoption",ring_QPrinter_setPrinterSelectionOption);
	ring_vm_funcregister("qprinter_setresolution",ring_QPrinter_setResolution);
	ring_vm_funcregister("qprinter_supportsmultiplecopies",ring_QPrinter_supportsMultipleCopies);
	ring_vm_funcregister("qprinter_topage",ring_QPrinter_toPage);
	ring_vm_funcregister("qprinter_newpage",ring_QPrinter_newPage);
	ring_vm_funcregister("qprinter_paintengine",ring_QPrinter_paintEngine);
	ring_vm_funcregister("qprinter_setpagesizemm",ring_QPrinter_setPageSizeMM);
	ring_vm_funcregister("qfont_bold",ring_QFont_bold);
	ring_vm_funcregister("qfont_capitalization",ring_QFont_capitalization);
	ring_vm_funcregister("qfont_defaultfamily",ring_QFont_defaultFamily);
	ring_vm_funcregister("qfont_exactmatch",ring_QFont_exactMatch);
	ring_vm_funcregister("qfont_family",ring_QFont_family);
	ring_vm_funcregister("qfont_fixedpitch",ring_QFont_fixedPitch);
	ring_vm_funcregister("qfont_fromstring",ring_QFont_fromString);
	ring_vm_funcregister("qfont_hintingpreference",ring_QFont_hintingPreference);
	ring_vm_funcregister("qfont_iscopyof",ring_QFont_isCopyOf);
	ring_vm_funcregister("qfont_italic",ring_QFont_italic);
	ring_vm_funcregister("qfont_kerning",ring_QFont_kerning);
	ring_vm_funcregister("qfont_key",ring_QFont_key);
	ring_vm_funcregister("qfont_lastresortfamily",ring_QFont_lastResortFamily);
	ring_vm_funcregister("qfont_lastresortfont",ring_QFont_lastResortFont);
	ring_vm_funcregister("qfont_letterspacing",ring_QFont_letterSpacing);
	ring_vm_funcregister("qfont_letterspacingtype",ring_QFont_letterSpacingType);
	ring_vm_funcregister("qfont_overline",ring_QFont_overline);
	ring_vm_funcregister("qfont_pixelsize",ring_QFont_pixelSize);
	ring_vm_funcregister("qfont_pointsize",ring_QFont_pointSize);
	ring_vm_funcregister("qfont_pointsizef",ring_QFont_pointSizeF);
	ring_vm_funcregister("qfont_rawmode",ring_QFont_rawMode);
	ring_vm_funcregister("qfont_rawname",ring_QFont_rawName);
	ring_vm_funcregister("qfont_resolve",ring_QFont_resolve);
	ring_vm_funcregister("qfont_setbold",ring_QFont_setBold);
	ring_vm_funcregister("qfont_setcapitalization",ring_QFont_setCapitalization);
	ring_vm_funcregister("qfont_setfamily",ring_QFont_setFamily);
	ring_vm_funcregister("qfont_setfixedpitch",ring_QFont_setFixedPitch);
	ring_vm_funcregister("qfont_sethintingpreference",ring_QFont_setHintingPreference);
	ring_vm_funcregister("qfont_setitalic",ring_QFont_setItalic);
	ring_vm_funcregister("qfont_setkerning",ring_QFont_setKerning);
	ring_vm_funcregister("qfont_setletterspacing",ring_QFont_setLetterSpacing);
	ring_vm_funcregister("qfont_setoverline",ring_QFont_setOverline);
	ring_vm_funcregister("qfont_setpixelsize",ring_QFont_setPixelSize);
	ring_vm_funcregister("qfont_setpointsize",ring_QFont_setPointSize);
	ring_vm_funcregister("qfont_setpointsizef",ring_QFont_setPointSizeF);
	ring_vm_funcregister("qfont_setrawmode",ring_QFont_setRawMode);
	ring_vm_funcregister("qfont_setrawname",ring_QFont_setRawName);
	ring_vm_funcregister("qfont_setstretch",ring_QFont_setStretch);
	ring_vm_funcregister("qfont_setstrikeout",ring_QFont_setStrikeOut);
	ring_vm_funcregister("qfont_setstyle",ring_QFont_setStyle);
	ring_vm_funcregister("qfont_setstylehint",ring_QFont_setStyleHint);
	ring_vm_funcregister("qfont_setstylename",ring_QFont_setStyleName);
	ring_vm_funcregister("qfont_setstylestrategy",ring_QFont_setStyleStrategy);
	ring_vm_funcregister("qfont_setunderline",ring_QFont_setUnderline);
	ring_vm_funcregister("qfont_setweight",ring_QFont_setWeight);
	ring_vm_funcregister("qfont_setwordspacing",ring_QFont_setWordSpacing);
	ring_vm_funcregister("qfont_stretch",ring_QFont_stretch);
	ring_vm_funcregister("qfont_strikeout",ring_QFont_strikeOut);
	ring_vm_funcregister("qfont_style",ring_QFont_style);
	ring_vm_funcregister("qfont_stylehint",ring_QFont_styleHint);
	ring_vm_funcregister("qfont_stylename",ring_QFont_styleName);
	ring_vm_funcregister("qfont_stylestrategy",ring_QFont_styleStrategy);
	ring_vm_funcregister("qfont_tostring",ring_QFont_toString);
	ring_vm_funcregister("qfont_underline",ring_QFont_underline);
	ring_vm_funcregister("qfont_weight",ring_QFont_weight);
	ring_vm_funcregister("qfont_wordspacing",ring_QFont_wordSpacing);
	ring_vm_funcregister("qfont_insertsubstitution",ring_QFont_insertSubstitution);
	ring_vm_funcregister("qfont_insertsubstitutions",ring_QFont_insertSubstitutions);
	ring_vm_funcregister("qfont_substitute",ring_QFont_substitute);
	ring_vm_funcregister("qfont_substitutes",ring_QFont_substitutes);
	ring_vm_funcregister("qfont_substitutions",ring_QFont_substitutions);
	ring_vm_funcregister("qbrush_color",ring_QBrush_color);
	ring_vm_funcregister("qbrush_gradient",ring_QBrush_gradient);
	ring_vm_funcregister("qbrush_isopaque",ring_QBrush_isOpaque);
	ring_vm_funcregister("qbrush_matrix",ring_QBrush_matrix);
	ring_vm_funcregister("qbrush_setcolor",ring_QBrush_setColor);
	ring_vm_funcregister("qbrush_setmatrix",ring_QBrush_setMatrix);
	ring_vm_funcregister("qbrush_setstyle",ring_QBrush_setStyle);
	ring_vm_funcregister("qbrush_settexture",ring_QBrush_setTexture);
	ring_vm_funcregister("qbrush_settextureimage",ring_QBrush_setTextureImage);
	ring_vm_funcregister("qbrush_settransform",ring_QBrush_setTransform);
	ring_vm_funcregister("qbrush_style",ring_QBrush_style);
	ring_vm_funcregister("qbrush_swap",ring_QBrush_swap);
	ring_vm_funcregister("qbrush_texture",ring_QBrush_texture);
	ring_vm_funcregister("qbrush_textureimage",ring_QBrush_textureImage);
	ring_vm_funcregister("qbrush_transform",ring_QBrush_transform);
	ring_vm_funcregister("qbytearray_append",ring_QByteArray_append);
	ring_vm_funcregister("qbytearray_at",ring_QByteArray_at);
	ring_vm_funcregister("qbytearray_capacity",ring_QByteArray_capacity);
	ring_vm_funcregister("qbytearray_chop",ring_QByteArray_chop);
	ring_vm_funcregister("qbytearray_clear",ring_QByteArray_clear);
	ring_vm_funcregister("qbytearray_constdata",ring_QByteArray_constData);
	ring_vm_funcregister("qbytearray_contains",ring_QByteArray_contains);
	ring_vm_funcregister("qbytearray_count",ring_QByteArray_count);
	ring_vm_funcregister("qbytearray_data",ring_QByteArray_data);
	ring_vm_funcregister("qbytearray_endswith",ring_QByteArray_endsWith);
	ring_vm_funcregister("qbytearray_fill",ring_QByteArray_fill);
	ring_vm_funcregister("qbytearray_indexof",ring_QByteArray_indexOf);
	ring_vm_funcregister("qbytearray_insert",ring_QByteArray_insert);
	ring_vm_funcregister("qbytearray_isempty",ring_QByteArray_isEmpty);
	ring_vm_funcregister("qbytearray_isnull",ring_QByteArray_isNull);
	ring_vm_funcregister("qbytearray_lastindexof",ring_QByteArray_lastIndexOf);
	ring_vm_funcregister("qbytearray_left",ring_QByteArray_left);
	ring_vm_funcregister("qbytearray_leftjustified",ring_QByteArray_leftJustified);
	ring_vm_funcregister("qbytearray_length",ring_QByteArray_length);
	ring_vm_funcregister("qbytearray_mid",ring_QByteArray_mid);
	ring_vm_funcregister("qbytearray_prepend",ring_QByteArray_prepend);
	ring_vm_funcregister("qbytearray_push_back",ring_QByteArray_push_back);
	ring_vm_funcregister("qbytearray_push_front",ring_QByteArray_push_front);
	ring_vm_funcregister("qbytearray_remove",ring_QByteArray_remove);
	ring_vm_funcregister("qbytearray_repeated",ring_QByteArray_repeated);
	ring_vm_funcregister("qbytearray_replace",ring_QByteArray_replace);
	ring_vm_funcregister("qbytearray_reserve",ring_QByteArray_reserve);
	ring_vm_funcregister("qbytearray_resize",ring_QByteArray_resize);
	ring_vm_funcregister("qbytearray_right",ring_QByteArray_right);
	ring_vm_funcregister("qbytearray_rightjustified",ring_QByteArray_rightJustified);
	ring_vm_funcregister("qbytearray_setnum",ring_QByteArray_setNum);
	ring_vm_funcregister("qbytearray_setrawdata",ring_QByteArray_setRawData);
	ring_vm_funcregister("qbytearray_simplified",ring_QByteArray_simplified);
	ring_vm_funcregister("qbytearray_size",ring_QByteArray_size);
	ring_vm_funcregister("qbytearray_squeeze",ring_QByteArray_squeeze);
	ring_vm_funcregister("qbytearray_startswith",ring_QByteArray_startsWith);
	ring_vm_funcregister("qbytearray_swap",ring_QByteArray_swap);
	ring_vm_funcregister("qbytearray_tobase64",ring_QByteArray_toBase64);
	ring_vm_funcregister("qbytearray_todouble",ring_QByteArray_toDouble);
	ring_vm_funcregister("qbytearray_tofloat",ring_QByteArray_toFloat);
	ring_vm_funcregister("qbytearray_tohex",ring_QByteArray_toHex);
	ring_vm_funcregister("qbytearray_toint",ring_QByteArray_toInt);
	ring_vm_funcregister("qbytearray_tolong",ring_QByteArray_toLong);
	ring_vm_funcregister("qbytearray_tolonglong",ring_QByteArray_toLongLong);
	ring_vm_funcregister("qbytearray_tolower",ring_QByteArray_toLower);
	ring_vm_funcregister("qbytearray_topercentencoding",ring_QByteArray_toPercentEncoding);
	ring_vm_funcregister("qbytearray_toshort",ring_QByteArray_toShort);
	ring_vm_funcregister("qbytearray_touint",ring_QByteArray_toUInt);
	ring_vm_funcregister("qbytearray_toulong",ring_QByteArray_toULong);
	ring_vm_funcregister("qbytearray_toulonglong",ring_QByteArray_toULongLong);
	ring_vm_funcregister("qbytearray_toushort",ring_QByteArray_toUShort);
	ring_vm_funcregister("qbytearray_toupper",ring_QByteArray_toUpper);
	ring_vm_funcregister("qbytearray_trimmed",ring_QByteArray_trimmed);
	ring_vm_funcregister("qbytearray_truncate",ring_QByteArray_truncate);
	ring_vm_funcregister("qbytearray_frombase64",ring_QByteArray_fromBase64);
	ring_vm_funcregister("qbytearray_fromhex",ring_QByteArray_fromHex);
	ring_vm_funcregister("qbytearray_frompercentencoding",ring_QByteArray_fromPercentEncoding);
	ring_vm_funcregister("qbytearray_fromrawdata",ring_QByteArray_fromRawData);
	ring_vm_funcregister("qbytearray_number",ring_QByteArray_number);
	ring_vm_funcregister("qiodevice_errorstring",ring_QIODevice_errorString);
	ring_vm_funcregister("qiodevice_getchar",ring_QIODevice_getChar);
	ring_vm_funcregister("qiodevice_isopen",ring_QIODevice_isOpen);
	ring_vm_funcregister("qiodevice_isreadable",ring_QIODevice_isReadable);
	ring_vm_funcregister("qiodevice_istextmodeenabled",ring_QIODevice_isTextModeEnabled);
	ring_vm_funcregister("qiodevice_iswritable",ring_QIODevice_isWritable);
	ring_vm_funcregister("qiodevice_openmode",ring_QIODevice_openMode);
	ring_vm_funcregister("qiodevice_peek",ring_QIODevice_peek);
	ring_vm_funcregister("qiodevice_putchar",ring_QIODevice_putChar);
	ring_vm_funcregister("qiodevice_read",ring_QIODevice_read);
	ring_vm_funcregister("qiodevice_readall",ring_QIODevice_readAll);
	ring_vm_funcregister("qiodevice_readline",ring_QIODevice_readLine);
	ring_vm_funcregister("qiodevice_settextmodeenabled",ring_QIODevice_setTextModeEnabled);
	ring_vm_funcregister("qiodevice_ungetchar",ring_QIODevice_ungetChar);
	ring_vm_funcregister("qiodevice_write",ring_QIODevice_write);
	ring_vm_funcregister("qiodevice_atend",ring_QIODevice_atEnd);
	ring_vm_funcregister("qiodevice_canreadline",ring_QIODevice_canReadLine);
	ring_vm_funcregister("qiodevice_close",ring_QIODevice_close);
	ring_vm_funcregister("qiodevice_open",ring_QIODevice_open);
	ring_vm_funcregister("qiodevice_pos",ring_QIODevice_pos);
	ring_vm_funcregister("qiodevice_seek",ring_QIODevice_seek);
	ring_vm_funcregister("qiodevice_size",ring_QIODevice_size);
	ring_vm_funcregister("qiodevice_setabouttocloseevent",ring_QIODevice_setaboutToCloseEvent);
	ring_vm_funcregister("qiodevice_setbyteswrittenevent",ring_QIODevice_setbytesWrittenEvent);
	ring_vm_funcregister("qiodevice_setreadchannelfinishedevent",ring_QIODevice_setreadChannelFinishedEvent);
	ring_vm_funcregister("qiodevice_setreadyreadevent",ring_QIODevice_setreadyReadEvent);
	ring_vm_funcregister("qiodevice_getabouttocloseevent",ring_QIODevice_getaboutToCloseEvent);
	ring_vm_funcregister("qiodevice_getbyteswrittenevent",ring_QIODevice_getbytesWrittenEvent);
	ring_vm_funcregister("qiodevice_getreadchannelfinishedevent",ring_QIODevice_getreadChannelFinishedEvent);
	ring_vm_funcregister("qiodevice_getreadyreadevent",ring_QIODevice_getreadyReadEvent);
	ring_vm_funcregister("qabstractsocket_abort",ring_QAbstractSocket_abort);
	ring_vm_funcregister("qabstractsocket_bind",ring_QAbstractSocket_bind);
	ring_vm_funcregister("qabstractsocket_connecttohost",ring_QAbstractSocket_connectToHost);
	ring_vm_funcregister("qabstractsocket_disconnectfromhost",ring_QAbstractSocket_disconnectFromHost);
	ring_vm_funcregister("qabstractsocket_error",ring_QAbstractSocket_error);
	ring_vm_funcregister("qabstractsocket_flush",ring_QAbstractSocket_flush);
	ring_vm_funcregister("qabstractsocket_isvalid",ring_QAbstractSocket_isValid);
	ring_vm_funcregister("qabstractsocket_localaddress",ring_QAbstractSocket_localAddress);
	ring_vm_funcregister("qabstractsocket_localport",ring_QAbstractSocket_localPort);
	ring_vm_funcregister("qabstractsocket_pausemode",ring_QAbstractSocket_pauseMode);
	ring_vm_funcregister("qabstractsocket_peeraddress",ring_QAbstractSocket_peerAddress);
	ring_vm_funcregister("qabstractsocket_peername",ring_QAbstractSocket_peerName);
	ring_vm_funcregister("qabstractsocket_peerport",ring_QAbstractSocket_peerPort);
	ring_vm_funcregister("qabstractsocket_proxy",ring_QAbstractSocket_proxy);
	ring_vm_funcregister("qabstractsocket_readbuffersize",ring_QAbstractSocket_readBufferSize);
	ring_vm_funcregister("qabstractsocket_resume",ring_QAbstractSocket_resume);
	ring_vm_funcregister("qabstractsocket_setpausemode",ring_QAbstractSocket_setPauseMode);
	ring_vm_funcregister("qabstractsocket_setproxy",ring_QAbstractSocket_setProxy);
	ring_vm_funcregister("qabstractsocket_setreadbuffersize",ring_QAbstractSocket_setReadBufferSize);
	ring_vm_funcregister("qabstractsocket_setsocketdescriptor",ring_QAbstractSocket_setSocketDescriptor);
	ring_vm_funcregister("qabstractsocket_setsocketoption",ring_QAbstractSocket_setSocketOption);
	ring_vm_funcregister("qabstractsocket_socketdescriptor",ring_QAbstractSocket_socketDescriptor);
	ring_vm_funcregister("qabstractsocket_socketoption",ring_QAbstractSocket_socketOption);
	ring_vm_funcregister("qabstractsocket_sockettype",ring_QAbstractSocket_socketType);
	ring_vm_funcregister("qabstractsocket_state",ring_QAbstractSocket_state);
	ring_vm_funcregister("qabstractsocket_waitforconnected",ring_QAbstractSocket_waitForConnected);
	ring_vm_funcregister("qabstractsocket_waitfordisconnected",ring_QAbstractSocket_waitForDisconnected);
	ring_vm_funcregister("qabstractsocket_atend",ring_QAbstractSocket_atEnd);
	ring_vm_funcregister("qabstractsocket_bytesavailable",ring_QAbstractSocket_bytesAvailable);
	ring_vm_funcregister("qabstractsocket_bytestowrite",ring_QAbstractSocket_bytesToWrite);
	ring_vm_funcregister("qabstractsocket_canreadline",ring_QAbstractSocket_canReadLine);
	ring_vm_funcregister("qabstractsocket_close",ring_QAbstractSocket_close);
	ring_vm_funcregister("qabstractsocket_issequential",ring_QAbstractSocket_isSequential);
	ring_vm_funcregister("qabstractsocket_waitforbyteswritten",ring_QAbstractSocket_waitForBytesWritten);
	ring_vm_funcregister("qabstractsocket_waitforreadyread",ring_QAbstractSocket_waitForReadyRead);
	ring_vm_funcregister("qabstractsocket_setconnectedevent",ring_QAbstractSocket_setconnectedEvent);
	ring_vm_funcregister("qabstractsocket_setdisconnectedevent",ring_QAbstractSocket_setdisconnectedEvent);
	ring_vm_funcregister("qabstractsocket_seterrorevent",ring_QAbstractSocket_seterrorEvent);
	ring_vm_funcregister("qabstractsocket_sethostfoundevent",ring_QAbstractSocket_sethostFoundEvent);
	ring_vm_funcregister("qabstractsocket_setproxyauthenticationrequiredevent",ring_QAbstractSocket_setproxyAuthenticationRequiredEvent);
	ring_vm_funcregister("qabstractsocket_setstatechangedevent",ring_QAbstractSocket_setstateChangedEvent);
	ring_vm_funcregister("qabstractsocket_getconnectedevent",ring_QAbstractSocket_getconnectedEvent);
	ring_vm_funcregister("qabstractsocket_getdisconnectedevent",ring_QAbstractSocket_getdisconnectedEvent);
	ring_vm_funcregister("qabstractsocket_geterrorevent",ring_QAbstractSocket_geterrorEvent);
	ring_vm_funcregister("qabstractsocket_gethostfoundevent",ring_QAbstractSocket_gethostFoundEvent);
	ring_vm_funcregister("qabstractsocket_getproxyauthenticationrequiredevent",ring_QAbstractSocket_getproxyAuthenticationRequiredEvent);
	ring_vm_funcregister("qabstractsocket_getstatechangedevent",ring_QAbstractSocket_getstateChangedEvent);
	ring_vm_funcregister("qnetworkproxy_capabilities",ring_QNetworkProxy_capabilities);
	ring_vm_funcregister("qnetworkproxy_hasrawheader",ring_QNetworkProxy_hasRawHeader);
	ring_vm_funcregister("qnetworkproxy_header",ring_QNetworkProxy_header);
	ring_vm_funcregister("qnetworkproxy_hostname",ring_QNetworkProxy_hostName);
	ring_vm_funcregister("qnetworkproxy_iscachingproxy",ring_QNetworkProxy_isCachingProxy);
	ring_vm_funcregister("qnetworkproxy_istransparentproxy",ring_QNetworkProxy_isTransparentProxy);
	ring_vm_funcregister("qnetworkproxy_password",ring_QNetworkProxy_password);
	ring_vm_funcregister("qnetworkproxy_port",ring_QNetworkProxy_port);
	ring_vm_funcregister("qnetworkproxy_rawheader",ring_QNetworkProxy_rawHeader);
	ring_vm_funcregister("qnetworkproxy_setcapabilities",ring_QNetworkProxy_setCapabilities);
	ring_vm_funcregister("qnetworkproxy_setheader",ring_QNetworkProxy_setHeader);
	ring_vm_funcregister("qnetworkproxy_sethostname",ring_QNetworkProxy_setHostName);
	ring_vm_funcregister("qnetworkproxy_setpassword",ring_QNetworkProxy_setPassword);
	ring_vm_funcregister("qnetworkproxy_setport",ring_QNetworkProxy_setPort);
	ring_vm_funcregister("qnetworkproxy_setrawheader",ring_QNetworkProxy_setRawHeader);
	ring_vm_funcregister("qnetworkproxy_settype",ring_QNetworkProxy_setType);
	ring_vm_funcregister("qnetworkproxy_setuser",ring_QNetworkProxy_setUser);
	ring_vm_funcregister("qnetworkproxy_swap",ring_QNetworkProxy_swap);
	ring_vm_funcregister("qnetworkproxy_type",ring_QNetworkProxy_type);
	ring_vm_funcregister("qnetworkproxy_user",ring_QNetworkProxy_user);
	ring_vm_funcregister("qnetworkproxy_applicationproxy",ring_QNetworkProxy_applicationProxy);
	ring_vm_funcregister("qnetworkproxy_setapplicationproxy",ring_QNetworkProxy_setApplicationProxy);
	ring_vm_funcregister("qtcpsocket_setconnectedevent",ring_QTcpSocket_setconnectedEvent);
	ring_vm_funcregister("qtcpsocket_setdisconnectedevent",ring_QTcpSocket_setdisconnectedEvent);
	ring_vm_funcregister("qtcpsocket_seterrorevent",ring_QTcpSocket_seterrorEvent);
	ring_vm_funcregister("qtcpsocket_sethostfoundevent",ring_QTcpSocket_sethostFoundEvent);
	ring_vm_funcregister("qtcpsocket_setproxyauthenticationrequiredevent",ring_QTcpSocket_setproxyAuthenticationRequiredEvent);
	ring_vm_funcregister("qtcpsocket_setstatechangedevent",ring_QTcpSocket_setstateChangedEvent);
	ring_vm_funcregister("qtcpsocket_setabouttocloseevent",ring_QTcpSocket_setaboutToCloseEvent);
	ring_vm_funcregister("qtcpsocket_setbyteswrittenevent",ring_QTcpSocket_setbytesWrittenEvent);
	ring_vm_funcregister("qtcpsocket_setreadchannelfinishedevent",ring_QTcpSocket_setreadChannelFinishedEvent);
	ring_vm_funcregister("qtcpsocket_setreadyreadevent",ring_QTcpSocket_setreadyReadEvent);
	ring_vm_funcregister("qtcpsocket_getconnectedevent",ring_QTcpSocket_getconnectedEvent);
	ring_vm_funcregister("qtcpsocket_getdisconnectedevent",ring_QTcpSocket_getdisconnectedEvent);
	ring_vm_funcregister("qtcpsocket_geterrorevent",ring_QTcpSocket_geterrorEvent);
	ring_vm_funcregister("qtcpsocket_gethostfoundevent",ring_QTcpSocket_gethostFoundEvent);
	ring_vm_funcregister("qtcpsocket_getproxyauthenticationrequiredevent",ring_QTcpSocket_getproxyAuthenticationRequiredEvent);
	ring_vm_funcregister("qtcpsocket_getstatechangedevent",ring_QTcpSocket_getstateChangedEvent);
	ring_vm_funcregister("qtcpsocket_getabouttocloseevent",ring_QTcpSocket_getaboutToCloseEvent);
	ring_vm_funcregister("qtcpsocket_getbyteswrittenevent",ring_QTcpSocket_getbytesWrittenEvent);
	ring_vm_funcregister("qtcpsocket_getreadchannelfinishedevent",ring_QTcpSocket_getreadChannelFinishedEvent);
	ring_vm_funcregister("qtcpsocket_getreadyreadevent",ring_QTcpSocket_getreadyReadEvent);
	ring_vm_funcregister("qtcpserver_close",ring_QTcpServer_close);
	ring_vm_funcregister("qtcpserver_errorstring",ring_QTcpServer_errorString);
	ring_vm_funcregister("qtcpserver_haspendingconnections",ring_QTcpServer_hasPendingConnections);
	ring_vm_funcregister("qtcpserver_islistening",ring_QTcpServer_isListening);
	ring_vm_funcregister("qtcpserver_listen",ring_QTcpServer_listen);
	ring_vm_funcregister("qtcpserver_maxpendingconnections",ring_QTcpServer_maxPendingConnections);
	ring_vm_funcregister("qtcpserver_nextpendingconnection",ring_QTcpServer_nextPendingConnection);
	ring_vm_funcregister("qtcpserver_pauseaccepting",ring_QTcpServer_pauseAccepting);
	ring_vm_funcregister("qtcpserver_proxy",ring_QTcpServer_proxy);
	ring_vm_funcregister("qtcpserver_resumeaccepting",ring_QTcpServer_resumeAccepting);
	ring_vm_funcregister("qtcpserver_serveraddress",ring_QTcpServer_serverAddress);
	ring_vm_funcregister("qtcpserver_servererror",ring_QTcpServer_serverError);
	ring_vm_funcregister("qtcpserver_serverport",ring_QTcpServer_serverPort);
	ring_vm_funcregister("qtcpserver_setmaxpendingconnections",ring_QTcpServer_setMaxPendingConnections);
	ring_vm_funcregister("qtcpserver_setproxy",ring_QTcpServer_setProxy);
	ring_vm_funcregister("qtcpserver_setsocketdescriptor",ring_QTcpServer_setSocketDescriptor);
	ring_vm_funcregister("qtcpserver_socketdescriptor",ring_QTcpServer_socketDescriptor);
	ring_vm_funcregister("qtcpserver_waitfornewconnection",ring_QTcpServer_waitForNewConnection);
	ring_vm_funcregister("qtcpserver_setaccepterrorevent",ring_QTcpServer_setacceptErrorEvent);
	ring_vm_funcregister("qtcpserver_setnewconnectionevent",ring_QTcpServer_setnewConnectionEvent);
	ring_vm_funcregister("qtcpserver_getaccepterrorevent",ring_QTcpServer_getacceptErrorEvent);
	ring_vm_funcregister("qtcpserver_getnewconnectionevent",ring_QTcpServer_getnewConnectionEvent);
	ring_vm_funcregister("qhostaddress_clear",ring_QHostAddress_clear);
	ring_vm_funcregister("qhostaddress_isinsubnet",ring_QHostAddress_isInSubnet);
	ring_vm_funcregister("qhostaddress_isnull",ring_QHostAddress_isNull);
	ring_vm_funcregister("qhostaddress_protocol",ring_QHostAddress_protocol);
	ring_vm_funcregister("qhostaddress_scopeid",ring_QHostAddress_scopeId);
	ring_vm_funcregister("qhostaddress_setaddress",ring_QHostAddress_setAddress);
	ring_vm_funcregister("qhostaddress_toipv4address",ring_QHostAddress_toIPv4Address);
	ring_vm_funcregister("qhostaddress_toipv6address",ring_QHostAddress_toIPv6Address);
	ring_vm_funcregister("qhostaddress_tostring",ring_QHostAddress_toString);
	ring_vm_funcregister("qhostinfo_error",ring_QHostInfo_error);
	ring_vm_funcregister("qhostinfo_errorstring",ring_QHostInfo_errorString);
	ring_vm_funcregister("qhostinfo_hostname",ring_QHostInfo_hostName);
	ring_vm_funcregister("qhostinfo_lookupid",ring_QHostInfo_lookupId);
	ring_vm_funcregister("qhostinfo_seterror",ring_QHostInfo_setError);
	ring_vm_funcregister("qhostinfo_seterrorstring",ring_QHostInfo_setErrorString);
	ring_vm_funcregister("qhostinfo_sethostname",ring_QHostInfo_setHostName);
	ring_vm_funcregister("qhostinfo_setlookupid",ring_QHostInfo_setLookupId);
	ring_vm_funcregister("qhostinfo_aborthostlookup",ring_QHostInfo_abortHostLookup);
	ring_vm_funcregister("qhostinfo_fromname",ring_QHostInfo_fromName);
	ring_vm_funcregister("qhostinfo_localdomainname",ring_QHostInfo_localDomainName);
	ring_vm_funcregister("qhostinfo_localhostname",ring_QHostInfo_localHostName);
	ring_vm_funcregister("qhostinfo_lookuphost",ring_QHostInfo_lookupHost);
	ring_vm_funcregister("qfileinfo_absolutedir",ring_QFileInfo_absoluteDir);
	ring_vm_funcregister("qfileinfo_absolutefilepath",ring_QFileInfo_absoluteFilePath);
	ring_vm_funcregister("qfileinfo_absolutepath",ring_QFileInfo_absolutePath);
	ring_vm_funcregister("qfileinfo_basename",ring_QFileInfo_baseName);
	ring_vm_funcregister("qfileinfo_bundlename",ring_QFileInfo_bundleName);
	ring_vm_funcregister("qfileinfo_caching",ring_QFileInfo_caching);
	ring_vm_funcregister("qfileinfo_canonicalfilepath",ring_QFileInfo_canonicalFilePath);
	ring_vm_funcregister("qfileinfo_canonicalpath",ring_QFileInfo_canonicalPath);
	ring_vm_funcregister("qfileinfo_completebasename",ring_QFileInfo_completeBaseName);
	ring_vm_funcregister("qfileinfo_completesuffix",ring_QFileInfo_completeSuffix);
	ring_vm_funcregister("qfileinfo_created",ring_QFileInfo_created);
	ring_vm_funcregister("qfileinfo_dir",ring_QFileInfo_dir);
	ring_vm_funcregister("qfileinfo_exists",ring_QFileInfo_exists);
	ring_vm_funcregister("qfileinfo_filename",ring_QFileInfo_fileName);
	ring_vm_funcregister("qfileinfo_filepath",ring_QFileInfo_filePath);
	ring_vm_funcregister("qfileinfo_group",ring_QFileInfo_group);
	ring_vm_funcregister("qfileinfo_groupid",ring_QFileInfo_groupId);
	ring_vm_funcregister("qfileinfo_isabsolute",ring_QFileInfo_isAbsolute);
	ring_vm_funcregister("qfileinfo_isbundle",ring_QFileInfo_isBundle);
	ring_vm_funcregister("qfileinfo_isdir",ring_QFileInfo_isDir);
	ring_vm_funcregister("qfileinfo_isexecutable",ring_QFileInfo_isExecutable);
	ring_vm_funcregister("qfileinfo_isfile",ring_QFileInfo_isFile);
	ring_vm_funcregister("qfileinfo_ishidden",ring_QFileInfo_isHidden);
	ring_vm_funcregister("qfileinfo_isnativepath",ring_QFileInfo_isNativePath);
	ring_vm_funcregister("qfileinfo_isreadable",ring_QFileInfo_isReadable);
	ring_vm_funcregister("qfileinfo_isrelative",ring_QFileInfo_isRelative);
	ring_vm_funcregister("qfileinfo_isroot",ring_QFileInfo_isRoot);
	ring_vm_funcregister("qfileinfo_issymlink",ring_QFileInfo_isSymLink);
	ring_vm_funcregister("qfileinfo_iswritable",ring_QFileInfo_isWritable);
	ring_vm_funcregister("qfileinfo_lastmodified",ring_QFileInfo_lastModified);
	ring_vm_funcregister("qfileinfo_lastread",ring_QFileInfo_lastRead);
	ring_vm_funcregister("qfileinfo_makeabsolute",ring_QFileInfo_makeAbsolute);
	ring_vm_funcregister("qfileinfo_owner",ring_QFileInfo_owner);
	ring_vm_funcregister("qfileinfo_ownerid",ring_QFileInfo_ownerId);
	ring_vm_funcregister("qfileinfo_path",ring_QFileInfo_path);
	ring_vm_funcregister("qfileinfo_permission",ring_QFileInfo_permission);
	ring_vm_funcregister("qfileinfo_permissions",ring_QFileInfo_permissions);
	ring_vm_funcregister("qfileinfo_refresh",ring_QFileInfo_refresh);
	ring_vm_funcregister("qfileinfo_setcaching",ring_QFileInfo_setCaching);
	ring_vm_funcregister("qfileinfo_setfile",ring_QFileInfo_setFile);
	ring_vm_funcregister("qfileinfo_size",ring_QFileInfo_size);
	ring_vm_funcregister("qfileinfo_suffix",ring_QFileInfo_suffix);
	ring_vm_funcregister("qfileinfo_swap",ring_QFileInfo_swap);
	ring_vm_funcregister("qfileinfo_symlinktarget",ring_QFileInfo_symLinkTarget);
	ring_vm_funcregister("qdirmodel_fileicon",ring_QDirModel_fileIcon);
	ring_vm_funcregister("qdirmodel_fileinfo",ring_QDirModel_fileInfo);
	ring_vm_funcregister("qdirmodel_filename",ring_QDirModel_fileName);
	ring_vm_funcregister("qdirmodel_filepath",ring_QDirModel_filePath);
	ring_vm_funcregister("qdirmodel_filter",ring_QDirModel_filter);
	ring_vm_funcregister("qdirmodel_iconprovider",ring_QDirModel_iconProvider);
	ring_vm_funcregister("qdirmodel_index",ring_QDirModel_index);
	ring_vm_funcregister("qdirmodel_isdir",ring_QDirModel_isDir);
	ring_vm_funcregister("qdirmodel_isreadonly",ring_QDirModel_isReadOnly);
	ring_vm_funcregister("qdirmodel_lazychildcount",ring_QDirModel_lazyChildCount);
	ring_vm_funcregister("qdirmodel_mkdir",ring_QDirModel_mkdir);
	ring_vm_funcregister("qdirmodel_namefilters",ring_QDirModel_nameFilters);
	ring_vm_funcregister("qdirmodel_remove",ring_QDirModel_remove);
	ring_vm_funcregister("qdirmodel_resolvesymlinks",ring_QDirModel_resolveSymlinks);
	ring_vm_funcregister("qdirmodel_rmdir",ring_QDirModel_rmdir);
	ring_vm_funcregister("qdirmodel_setfilter",ring_QDirModel_setFilter);
	ring_vm_funcregister("qdirmodel_seticonprovider",ring_QDirModel_setIconProvider);
	ring_vm_funcregister("qdirmodel_setlazychildcount",ring_QDirModel_setLazyChildCount);
	ring_vm_funcregister("qdirmodel_setnamefilters",ring_QDirModel_setNameFilters);
	ring_vm_funcregister("qdirmodel_setreadonly",ring_QDirModel_setReadOnly);
	ring_vm_funcregister("qdirmodel_setresolvesymlinks",ring_QDirModel_setResolveSymlinks);
	ring_vm_funcregister("qdirmodel_setsorting",ring_QDirModel_setSorting);
	ring_vm_funcregister("qdirmodel_sorting",ring_QDirModel_sorting);
	ring_vm_funcregister("qdirmodel_refresh",ring_QDirModel_refresh);
	ring_vm_funcregister("qfontdialog_currentfont",ring_QFontDialog_currentFont);
	ring_vm_funcregister("qfontdialog_open",ring_QFontDialog_open);
	ring_vm_funcregister("qfontdialog_options",ring_QFontDialog_options);
	ring_vm_funcregister("qfontdialog_selectedfont",ring_QFontDialog_selectedFont);
	ring_vm_funcregister("qfontdialog_setcurrentfont",ring_QFontDialog_setCurrentFont);
	ring_vm_funcregister("qfontdialog_setoption",ring_QFontDialog_setOption);
	ring_vm_funcregister("qfontdialog_setoptions",ring_QFontDialog_setOptions);
	ring_vm_funcregister("qfontdialog_testoption",ring_QFontDialog_testOption);
	ring_vm_funcregister("qfontdialog_getfont",ring_QFontDialog_getfont);
	ring_vm_funcregister("qdialog_issizegripenabled",ring_QDialog_isSizeGripEnabled);
	ring_vm_funcregister("qdialog_result",ring_QDialog_result);
	ring_vm_funcregister("qdialog_setmodal",ring_QDialog_setModal);
	ring_vm_funcregister("qdialog_setresult",ring_QDialog_setResult);
	ring_vm_funcregister("qdialog_setsizegripenabled",ring_QDialog_setSizeGripEnabled);
	ring_vm_funcregister("qdialog_accept",ring_QDialog_accept);
	ring_vm_funcregister("qdialog_done",ring_QDialog_done);
	ring_vm_funcregister("qdialog_exec",ring_QDialog_exec);
	ring_vm_funcregister("qdialog_open",ring_QDialog_open);
	ring_vm_funcregister("qdialog_reject",ring_QDialog_reject);
	ring_vm_funcregister("qtextcursor_anchor",ring_QTextCursor_anchor);
	ring_vm_funcregister("qtextcursor_atblockend",ring_QTextCursor_atBlockEnd);
	ring_vm_funcregister("qtextcursor_atblockstart",ring_QTextCursor_atBlockStart);
	ring_vm_funcregister("qtextcursor_atend",ring_QTextCursor_atEnd);
	ring_vm_funcregister("qtextcursor_atstart",ring_QTextCursor_atStart);
	ring_vm_funcregister("qtextcursor_begineditblock",ring_QTextCursor_beginEditBlock);
	ring_vm_funcregister("qtextcursor_block",ring_QTextCursor_block);
	ring_vm_funcregister("qtextcursor_blockcharformat",ring_QTextCursor_blockCharFormat);
	ring_vm_funcregister("qtextcursor_blockformat",ring_QTextCursor_blockFormat);
	ring_vm_funcregister("qtextcursor_blocknumber",ring_QTextCursor_blockNumber);
	ring_vm_funcregister("qtextcursor_charformat",ring_QTextCursor_charFormat);
	ring_vm_funcregister("qtextcursor_clearselection",ring_QTextCursor_clearSelection);
	ring_vm_funcregister("qtextcursor_columnnumber",ring_QTextCursor_columnNumber);
	ring_vm_funcregister("qtextcursor_createlist",ring_QTextCursor_createList);
	ring_vm_funcregister("qtextcursor_currentframe",ring_QTextCursor_currentFrame);
	ring_vm_funcregister("qtextcursor_currentlist",ring_QTextCursor_currentList);
	ring_vm_funcregister("qtextcursor_currenttable",ring_QTextCursor_currentTable);
	ring_vm_funcregister("qtextcursor_deletechar",ring_QTextCursor_deleteChar);
	ring_vm_funcregister("qtextcursor_deletepreviouschar",ring_QTextCursor_deletePreviousChar);
	ring_vm_funcregister("qtextcursor_document",ring_QTextCursor_document);
	ring_vm_funcregister("qtextcursor_endeditblock",ring_QTextCursor_endEditBlock);
	ring_vm_funcregister("qtextcursor_hascomplexselection",ring_QTextCursor_hasComplexSelection);
	ring_vm_funcregister("qtextcursor_hasselection",ring_QTextCursor_hasSelection);
	ring_vm_funcregister("qtextcursor_insertblock",ring_QTextCursor_insertBlock);
	ring_vm_funcregister("qtextcursor_insertfragment",ring_QTextCursor_insertFragment);
	ring_vm_funcregister("qtextcursor_insertframe",ring_QTextCursor_insertFrame);
	ring_vm_funcregister("qtextcursor_inserthtml",ring_QTextCursor_insertHtml);
	ring_vm_funcregister("qtextcursor_insertimage",ring_QTextCursor_insertImage);
	ring_vm_funcregister("qtextcursor_insertlist",ring_QTextCursor_insertList);
	ring_vm_funcregister("qtextcursor_inserttable",ring_QTextCursor_insertTable);
	ring_vm_funcregister("qtextcursor_inserttext",ring_QTextCursor_insertText);
	ring_vm_funcregister("qtextcursor_inserttext_2",ring_QTextCursor_insertText_2);
	ring_vm_funcregister("qtextcursor_iscopyof",ring_QTextCursor_isCopyOf);
	ring_vm_funcregister("qtextcursor_isnull",ring_QTextCursor_isNull);
	ring_vm_funcregister("qtextcursor_joinpreviouseditblock",ring_QTextCursor_joinPreviousEditBlock);
	ring_vm_funcregister("qtextcursor_keeppositiononinsert",ring_QTextCursor_keepPositionOnInsert);
	ring_vm_funcregister("qtextcursor_mergeblockcharformat",ring_QTextCursor_mergeBlockCharFormat);
	ring_vm_funcregister("qtextcursor_mergeblockformat",ring_QTextCursor_mergeBlockFormat);
	ring_vm_funcregister("qtextcursor_mergecharformat",ring_QTextCursor_mergeCharFormat);
	ring_vm_funcregister("qtextcursor_moveposition",ring_QTextCursor_movePosition);
	ring_vm_funcregister("qtextcursor_position",ring_QTextCursor_position);
	ring_vm_funcregister("qtextcursor_positioninblock",ring_QTextCursor_positionInBlock);
	ring_vm_funcregister("qtextcursor_removeselectedtext",ring_QTextCursor_removeSelectedText);
	ring_vm_funcregister("qtextcursor_select",ring_QTextCursor_select);
	ring_vm_funcregister("qtextcursor_selectedtablecells",ring_QTextCursor_selectedTableCells);
	ring_vm_funcregister("qtextcursor_selectedtext",ring_QTextCursor_selectedText);
	ring_vm_funcregister("qtextcursor_selection",ring_QTextCursor_selection);
	ring_vm_funcregister("qtextcursor_selectionend",ring_QTextCursor_selectionEnd);
	ring_vm_funcregister("qtextcursor_selectionstart",ring_QTextCursor_selectionStart);
	ring_vm_funcregister("qtextcursor_setblockcharformat",ring_QTextCursor_setBlockCharFormat);
	ring_vm_funcregister("qtextcursor_setblockformat",ring_QTextCursor_setBlockFormat);
	ring_vm_funcregister("qtextcursor_setcharformat",ring_QTextCursor_setCharFormat);
	ring_vm_funcregister("qtextcursor_setkeeppositiononinsert",ring_QTextCursor_setKeepPositionOnInsert);
	ring_vm_funcregister("qtextcursor_setposition",ring_QTextCursor_setPosition);
	ring_vm_funcregister("qtextcursor_setverticalmovementx",ring_QTextCursor_setVerticalMovementX);
	ring_vm_funcregister("qtextcursor_setvisualnavigation",ring_QTextCursor_setVisualNavigation);
	ring_vm_funcregister("qtextcursor_verticalmovementx",ring_QTextCursor_verticalMovementX);
	ring_vm_funcregister("qtextcursor_visualnavigation",ring_QTextCursor_visualNavigation);
	ring_vm_funcregister("qcolordialog_currentcolor",ring_QColorDialog_currentColor);
	ring_vm_funcregister("qcolordialog_open",ring_QColorDialog_open);
	ring_vm_funcregister("qcolordialog_options",ring_QColorDialog_options);
	ring_vm_funcregister("qcolordialog_selectedcolor",ring_QColorDialog_selectedColor);
	ring_vm_funcregister("qcolordialog_setcurrentcolor",ring_QColorDialog_setCurrentColor);
	ring_vm_funcregister("qcolordialog_setoption",ring_QColorDialog_setOption);
	ring_vm_funcregister("qcolordialog_setoptions",ring_QColorDialog_setOptions);
	ring_vm_funcregister("qcolordialog_testoption",ring_QColorDialog_testOption);
	ring_vm_funcregister("qcolordialog_customcolor",ring_QColorDialog_customColor);
	ring_vm_funcregister("qcolordialog_customcount",ring_QColorDialog_customCount);
	ring_vm_funcregister("qcolordialog_setcustomcolor",ring_QColorDialog_setCustomColor);
	ring_vm_funcregister("qcolordialog_setstandardcolor",ring_QColorDialog_setStandardColor);
	ring_vm_funcregister("qcolordialog_getcolor",ring_QColorDialog_getcolor);
	ring_vm_funcregister("qstringlist_join",ring_QStringList_join);
	ring_vm_funcregister("qstringlist_sort",ring_QStringList_sort);
	ring_vm_funcregister("qstringlist_removeduplicates",ring_QStringList_removeDuplicates);
	ring_vm_funcregister("qstringlist_filter",ring_QStringList_filter);
	ring_vm_funcregister("qstringlist_replaceinstrings",ring_QStringList_replaceInStrings);
	ring_vm_funcregister("qstringlist_append",ring_QStringList_append);
	ring_vm_funcregister("qstringlist_at",ring_QStringList_at);
	ring_vm_funcregister("qstringlist_back",ring_QStringList_back);
	ring_vm_funcregister("qstringlist_clear",ring_QStringList_clear);
	ring_vm_funcregister("qstringlist_contains",ring_QStringList_contains);
	ring_vm_funcregister("qstringlist_count",ring_QStringList_count);
	ring_vm_funcregister("qstringlist_empty",ring_QStringList_empty);
	ring_vm_funcregister("qstringlist_endswith",ring_QStringList_endsWith);
	ring_vm_funcregister("qstringlist_first",ring_QStringList_first);
	ring_vm_funcregister("qstringlist_front",ring_QStringList_front);
	ring_vm_funcregister("qstringlist_indexof",ring_QStringList_indexOf);
	ring_vm_funcregister("qstringlist_insert",ring_QStringList_insert);
	ring_vm_funcregister("qstringlist_isempty",ring_QStringList_isEmpty);
	ring_vm_funcregister("qstringlist_last",ring_QStringList_last);
	ring_vm_funcregister("qstringlist_lastindexof",ring_QStringList_lastIndexOf);
	ring_vm_funcregister("qstringlist_length",ring_QStringList_length);
	ring_vm_funcregister("qstringlist_move",ring_QStringList_move);
	ring_vm_funcregister("qstringlist_pop_back",ring_QStringList_pop_back);
	ring_vm_funcregister("qstringlist_pop_front",ring_QStringList_pop_front);
	ring_vm_funcregister("qstringlist_prepend",ring_QStringList_prepend);
	ring_vm_funcregister("qstringlist_push_back",ring_QStringList_push_back);
	ring_vm_funcregister("qstringlist_push_front",ring_QStringList_push_front);
	ring_vm_funcregister("qstringlist_removeall",ring_QStringList_removeAll);
	ring_vm_funcregister("qstringlist_removeat",ring_QStringList_removeAt);
	ring_vm_funcregister("qstringlist_removefirst",ring_QStringList_removeFirst);
	ring_vm_funcregister("qstringlist_removelast",ring_QStringList_removeLast);
	ring_vm_funcregister("qstringlist_removeone",ring_QStringList_removeOne);
	ring_vm_funcregister("qstringlist_replace",ring_QStringList_replace);
	ring_vm_funcregister("qstringlist_reserve",ring_QStringList_reserve);
	ring_vm_funcregister("qstringlist_size",ring_QStringList_size);
	ring_vm_funcregister("qstringlist_startswith",ring_QStringList_startsWith);
	ring_vm_funcregister("qstringlist_swap",ring_QStringList_swap);
	ring_vm_funcregister("qstringlist_takeat",ring_QStringList_takeAt);
	ring_vm_funcregister("qstringlist_takefirst",ring_QStringList_takeFirst);
	ring_vm_funcregister("qstringlist_takelast",ring_QStringList_takeLast);
	ring_vm_funcregister("qstringlist_value",ring_QStringList_value);
	ring_vm_funcregister("qlcdnumber_checkoverflow",ring_QLCDNumber_checkOverflow);
	ring_vm_funcregister("qlcdnumber_digitcount",ring_QLCDNumber_digitCount);
	ring_vm_funcregister("qlcdnumber_intvalue",ring_QLCDNumber_intValue);
	ring_vm_funcregister("qlcdnumber_mode",ring_QLCDNumber_mode);
	ring_vm_funcregister("qlcdnumber_segmentstyle",ring_QLCDNumber_segmentStyle);
	ring_vm_funcregister("qlcdnumber_setdigitcount",ring_QLCDNumber_setDigitCount);
	ring_vm_funcregister("qlcdnumber_setmode",ring_QLCDNumber_setMode);
	ring_vm_funcregister("qlcdnumber_setsegmentstyle",ring_QLCDNumber_setSegmentStyle);
	ring_vm_funcregister("qlcdnumber_smalldecimalpoint",ring_QLCDNumber_smallDecimalPoint);
	ring_vm_funcregister("qlcdnumber_value",ring_QLCDNumber_value);
	ring_vm_funcregister("qlcdnumber_display",ring_QLCDNumber_display);
	ring_vm_funcregister("qlcdnumber_setbinmode",ring_QLCDNumber_setBinMode);
	ring_vm_funcregister("qlcdnumber_setdecmode",ring_QLCDNumber_setDecMode);
	ring_vm_funcregister("qlcdnumber_sethexmode",ring_QLCDNumber_setHexMode);
	ring_vm_funcregister("qlcdnumber_setoctmode",ring_QLCDNumber_setOctMode);
	ring_vm_funcregister("qlcdnumber_setsmalldecimalpoint",ring_QLCDNumber_setSmallDecimalPoint);
	ring_vm_funcregister("qinputdialog_cancelbuttontext",ring_QInputDialog_cancelButtonText);
	ring_vm_funcregister("qinputdialog_comboboxitems",ring_QInputDialog_comboBoxItems);
	ring_vm_funcregister("qinputdialog_doubledecimals",ring_QInputDialog_doubleDecimals);
	ring_vm_funcregister("qinputdialog_doublemaximum",ring_QInputDialog_doubleMaximum);
	ring_vm_funcregister("qinputdialog_doubleminimum",ring_QInputDialog_doubleMinimum);
	ring_vm_funcregister("qinputdialog_doublevalue",ring_QInputDialog_doubleValue);
	ring_vm_funcregister("qinputdialog_inputmode",ring_QInputDialog_inputMode);
	ring_vm_funcregister("qinputdialog_intmaximum",ring_QInputDialog_intMaximum);
	ring_vm_funcregister("qinputdialog_intminimum",ring_QInputDialog_intMinimum);
	ring_vm_funcregister("qinputdialog_intstep",ring_QInputDialog_intStep);
	ring_vm_funcregister("qinputdialog_intvalue",ring_QInputDialog_intValue);
	ring_vm_funcregister("qinputdialog_iscomboboxeditable",ring_QInputDialog_isComboBoxEditable);
	ring_vm_funcregister("qinputdialog_labeltext",ring_QInputDialog_labelText);
	ring_vm_funcregister("qinputdialog_okbuttontext",ring_QInputDialog_okButtonText);
	ring_vm_funcregister("qinputdialog_open",ring_QInputDialog_open);
	ring_vm_funcregister("qinputdialog_options",ring_QInputDialog_options);
	ring_vm_funcregister("qinputdialog_setcancelbuttontext",ring_QInputDialog_setCancelButtonText);
	ring_vm_funcregister("qinputdialog_setcomboboxeditable",ring_QInputDialog_setComboBoxEditable);
	ring_vm_funcregister("qinputdialog_setcomboboxitems",ring_QInputDialog_setComboBoxItems);
	ring_vm_funcregister("qinputdialog_setdoubledecimals",ring_QInputDialog_setDoubleDecimals);
	ring_vm_funcregister("qinputdialog_setdoublemaximum",ring_QInputDialog_setDoubleMaximum);
	ring_vm_funcregister("qinputdialog_setdoubleminimum",ring_QInputDialog_setDoubleMinimum);
	ring_vm_funcregister("qinputdialog_setdoublerange",ring_QInputDialog_setDoubleRange);
	ring_vm_funcregister("qinputdialog_setdoublevalue",ring_QInputDialog_setDoubleValue);
	ring_vm_funcregister("qinputdialog_setinputmode",ring_QInputDialog_setInputMode);
	ring_vm_funcregister("qinputdialog_setintmaximum",ring_QInputDialog_setIntMaximum);
	ring_vm_funcregister("qinputdialog_setintminimum",ring_QInputDialog_setIntMinimum);
	ring_vm_funcregister("qinputdialog_setintrange",ring_QInputDialog_setIntRange);
	ring_vm_funcregister("qinputdialog_setintstep",ring_QInputDialog_setIntStep);
	ring_vm_funcregister("qinputdialog_setintvalue",ring_QInputDialog_setIntValue);
	ring_vm_funcregister("qinputdialog_setlabeltext",ring_QInputDialog_setLabelText);
	ring_vm_funcregister("qinputdialog_setokbuttontext",ring_QInputDialog_setOkButtonText);
	ring_vm_funcregister("qinputdialog_setoption",ring_QInputDialog_setOption);
	ring_vm_funcregister("qinputdialog_setoptions",ring_QInputDialog_setOptions);
	ring_vm_funcregister("qinputdialog_settextechomode",ring_QInputDialog_setTextEchoMode);
	ring_vm_funcregister("qinputdialog_settextvalue",ring_QInputDialog_setTextValue);
	ring_vm_funcregister("qinputdialog_testoption",ring_QInputDialog_testOption);
	ring_vm_funcregister("qinputdialog_textechomode",ring_QInputDialog_textEchoMode);
	ring_vm_funcregister("qinputdialog_textvalue",ring_QInputDialog_textValue);
	ring_vm_funcregister("qinputdialog_getdouble",ring_QInputDialog_getDouble);
	ring_vm_funcregister("qinputdialog_getint",ring_QInputDialog_getInt);
	ring_vm_funcregister("qallevents_accept",ring_QAllEvents_accept);
	ring_vm_funcregister("qallevents_ignore",ring_QAllEvents_ignore);
	ring_vm_funcregister("qallevents_getkeycode",ring_QAllEvents_getKeyCode);
	ring_vm_funcregister("qallevents_getkeytext",ring_QAllEvents_getKeyText);
	ring_vm_funcregister("qallevents_getmodifiers",ring_QAllEvents_getModifiers);
	ring_vm_funcregister("qallevents_getx",ring_QAllEvents_getx);
	ring_vm_funcregister("qallevents_gety",ring_QAllEvents_gety);
	ring_vm_funcregister("qallevents_getglobalx",ring_QAllEvents_getglobalx);
	ring_vm_funcregister("qallevents_getglobaly",ring_QAllEvents_getglobaly);
	ring_vm_funcregister("qallevents_getbutton",ring_QAllEvents_getbutton);
	ring_vm_funcregister("qallevents_getbuttons",ring_QAllEvents_getbuttons);
	ring_vm_funcregister("qallevents_setkeypressevent",ring_QAllEvents_setKeyPressEvent);
	ring_vm_funcregister("qallevents_setmousebuttonpressevent",ring_QAllEvents_setMouseButtonPressEvent);
	ring_vm_funcregister("qallevents_setmousebuttonreleaseevent",ring_QAllEvents_setMouseButtonReleaseEvent);
	ring_vm_funcregister("qallevents_setmousebuttondblclickevent",ring_QAllEvents_setMouseButtonDblClickEvent);
	ring_vm_funcregister("qallevents_setmousemoveevent",ring_QAllEvents_setMouseMoveEvent);
	ring_vm_funcregister("qallevents_setcloseevent",ring_QAllEvents_setCloseEvent);
	ring_vm_funcregister("qallevents_setcontextmenuevent",ring_QAllEvents_setContextMenuEvent);
	ring_vm_funcregister("qallevents_setdragenterevent",ring_QAllEvents_setDragEnterEvent);
	ring_vm_funcregister("qallevents_setdragleaveevent",ring_QAllEvents_setDragLeaveEvent);
	ring_vm_funcregister("qallevents_setdragmoveevent",ring_QAllEvents_setDragMoveEvent);
	ring_vm_funcregister("qallevents_setdropevent",ring_QAllEvents_setDropEvent);
	ring_vm_funcregister("qallevents_setenterevent",ring_QAllEvents_setEnterEvent);
	ring_vm_funcregister("qallevents_setfocusinevent",ring_QAllEvents_setFocusInEvent);
	ring_vm_funcregister("qallevents_setfocusoutevent",ring_QAllEvents_setFocusOutEvent);
	ring_vm_funcregister("qallevents_setkeyreleaseevent",ring_QAllEvents_setKeyReleaseEvent);
	ring_vm_funcregister("qallevents_setleaveevent",ring_QAllEvents_setLeaveEvent);
	ring_vm_funcregister("qallevents_setnonclientareamousebuttondblclickevent",ring_QAllEvents_setNonClientAreaMouseButtonDblClickEvent);
	ring_vm_funcregister("qallevents_setnonclientareamousebuttonpressevent",ring_QAllEvents_setNonClientAreaMouseButtonPressEvent);
	ring_vm_funcregister("qallevents_setnonclientareamousebuttonreleaseevent",ring_QAllEvents_setNonClientAreaMouseButtonReleaseEvent);
	ring_vm_funcregister("qallevents_setnonclientareamousemoveevent",ring_QAllEvents_setNonClientAreaMouseMoveEvent);
	ring_vm_funcregister("qallevents_setmoveevent",ring_QAllEvents_setMoveEvent);
	ring_vm_funcregister("qallevents_setresizeevent",ring_QAllEvents_setResizeEvent);
	ring_vm_funcregister("qallevents_setwindowactivateevent",ring_QAllEvents_setWindowActivateEvent);
	ring_vm_funcregister("qallevents_setwindowblockedevent",ring_QAllEvents_setWindowBlockedEvent);
	ring_vm_funcregister("qallevents_setwindowdeactivateevent",ring_QAllEvents_setWindowDeactivateEvent);
	ring_vm_funcregister("qallevents_setwindowstatechangeevent",ring_QAllEvents_setWindowStateChangeEvent);
	ring_vm_funcregister("qallevents_setwindowunblockedevent",ring_QAllEvents_setWindowUnblockedEvent);
	ring_vm_funcregister("qallevents_setpaintevent",ring_QAllEvents_setPaintEvent);
	ring_vm_funcregister("qallevents_getkeypressevent",ring_QAllEvents_getKeyPressEvent);
	ring_vm_funcregister("qallevents_getmousebuttonpressevent",ring_QAllEvents_getMouseButtonPressEvent);
	ring_vm_funcregister("qallevents_getmousebuttonreleaseevent",ring_QAllEvents_getMouseButtonReleaseEvent);
	ring_vm_funcregister("qallevents_getmousebuttondblclickevent",ring_QAllEvents_getMouseButtonDblClickEvent);
	ring_vm_funcregister("qallevents_getmousemoveevent",ring_QAllEvents_getMouseMoveEvent);
	ring_vm_funcregister("qallevents_getcloseevent",ring_QAllEvents_getCloseEvent);
	ring_vm_funcregister("qallevents_getcontextmenuevent",ring_QAllEvents_getContextMenuEvent);
	ring_vm_funcregister("qallevents_getdragenterevent",ring_QAllEvents_getDragEnterEvent);
	ring_vm_funcregister("qallevents_getdragleaveevent",ring_QAllEvents_getDragLeaveEvent);
	ring_vm_funcregister("qallevents_getdragmoveevent",ring_QAllEvents_getDragMoveEvent);
	ring_vm_funcregister("qallevents_getdropevent",ring_QAllEvents_getDropEvent);
	ring_vm_funcregister("qallevents_getenterevent",ring_QAllEvents_getEnterEvent);
	ring_vm_funcregister("qallevents_getfocusinevent",ring_QAllEvents_getFocusInEvent);
	ring_vm_funcregister("qallevents_getfocusoutevent",ring_QAllEvents_getFocusOutEvent);
	ring_vm_funcregister("qallevents_getkeyreleaseevent",ring_QAllEvents_getKeyReleaseEvent);
	ring_vm_funcregister("qallevents_getleaveevent",ring_QAllEvents_getLeaveEvent);
	ring_vm_funcregister("qallevents_getnonclientareamousebuttondblclickevent",ring_QAllEvents_getNonClientAreaMouseButtonDblClickEvent);
	ring_vm_funcregister("qallevents_getnonclientareamousebuttonpressevent",ring_QAllEvents_getNonClientAreaMouseButtonPressEvent);
	ring_vm_funcregister("qallevents_getnonclientareamousebuttonreleaseevent",ring_QAllEvents_getNonClientAreaMouseButtonReleaseEvent);
	ring_vm_funcregister("qallevents_getnonclientareamousemoveevent",ring_QAllEvents_getNonClientAreaMouseMoveEvent);
	ring_vm_funcregister("qallevents_getmoveevent",ring_QAllEvents_getMoveEvent);
	ring_vm_funcregister("qallevents_getresizeevent",ring_QAllEvents_getResizeEvent);
	ring_vm_funcregister("qallevents_getwindowactivateevent",ring_QAllEvents_getWindowActivateEvent);
	ring_vm_funcregister("qallevents_getwindowblockedevent",ring_QAllEvents_getWindowBlockedEvent);
	ring_vm_funcregister("qallevents_getwindowdeactivateevent",ring_QAllEvents_getWindowDeactivateEvent);
	ring_vm_funcregister("qallevents_getwindowstatechangeevent",ring_QAllEvents_getWindowStateChangeEvent);
	ring_vm_funcregister("qallevents_getwindowunblockedevent",ring_QAllEvents_getWindowUnblockedEvent);
	ring_vm_funcregister("qallevents_getpaintevent",ring_QAllEvents_getPaintEvent);
	ring_vm_funcregister("qallevents_seteventoutput",ring_QAllEvents_setEventOutput);
	ring_vm_funcregister("qallevents_getparentobject",ring_QAllEvents_getParentObject);
	ring_vm_funcregister("qallevents_getparentwidget",ring_QAllEvents_getParentWidget);
	ring_vm_funcregister("qallevents_setkeypressfunc",ring_QAllEvents_setKeyPressFunc);
	ring_vm_funcregister("qallevents_setmousebuttonpressfunc",ring_QAllEvents_setMouseButtonPressFunc);
	ring_vm_funcregister("qallevents_setmousebuttonreleasefunc",ring_QAllEvents_setMouseButtonReleaseFunc);
	ring_vm_funcregister("qallevents_setmousebuttondblclickfunc",ring_QAllEvents_setMouseButtonDblClickFunc);
	ring_vm_funcregister("qallevents_setmousemovefunc",ring_QAllEvents_setMouseMoveFunc);
	ring_vm_funcregister("qallevents_setclosefunc",ring_QAllEvents_setCloseFunc);
	ring_vm_funcregister("qallevents_setcontextmenufunc",ring_QAllEvents_setContextMenuFunc);
	ring_vm_funcregister("qallevents_setdragenterfunc",ring_QAllEvents_setDragEnterFunc);
	ring_vm_funcregister("qallevents_setdragleavefunc",ring_QAllEvents_setDragLeaveFunc);
	ring_vm_funcregister("qallevents_setdragmovefunc",ring_QAllEvents_setDragMoveFunc);
	ring_vm_funcregister("qallevents_setdropfunc",ring_QAllEvents_setDropFunc);
	ring_vm_funcregister("qallevents_setenterfunc",ring_QAllEvents_setEnterFunc);
	ring_vm_funcregister("qallevents_setfocusinfunc",ring_QAllEvents_setFocusInFunc);
	ring_vm_funcregister("qallevents_setfocusoutfunc",ring_QAllEvents_setFocusOutFunc);
	ring_vm_funcregister("qallevents_setkeyreleasefunc",ring_QAllEvents_setKeyReleaseFunc);
	ring_vm_funcregister("qallevents_setleavefunc",ring_QAllEvents_setLeaveFunc);
	ring_vm_funcregister("qallevents_setnonclientareamousebuttondblclickfunc",ring_QAllEvents_setNonClientAreaMouseButtonDblClickFunc);
	ring_vm_funcregister("qallevents_setnonclientareamousebuttonpressfunc",ring_QAllEvents_setNonClientAreaMouseButtonPressFunc);
	ring_vm_funcregister("qallevents_setnonclientareamousebuttonreleasefunc",ring_QAllEvents_setNonClientAreaMouseButtonReleaseFunc);
	ring_vm_funcregister("qallevents_setnonclientareamousemovefunc",ring_QAllEvents_setNonClientAreaMouseMoveFunc);
	ring_vm_funcregister("qallevents_setmovefunc",ring_QAllEvents_setMoveFunc);
	ring_vm_funcregister("qallevents_setresizefunc",ring_QAllEvents_setResizeFunc);
	ring_vm_funcregister("qallevents_setwindowactivatefunc",ring_QAllEvents_setWindowActivateFunc);
	ring_vm_funcregister("qallevents_setwindowblockedfunc",ring_QAllEvents_setWindowBlockedFunc);
	ring_vm_funcregister("qallevents_setwindowdeactivatefunc",ring_QAllEvents_setWindowDeactivateFunc);
	ring_vm_funcregister("qallevents_setwindowstatechangefunc",ring_QAllEvents_setWindowStateChangeFunc);
	ring_vm_funcregister("qallevents_setwindowunblockedfunc",ring_QAllEvents_setWindowUnblockedFunc);
	ring_vm_funcregister("qallevents_setpaintfunc",ring_QAllEvents_setPaintFunc);
	ring_vm_funcregister("qallevents_getkeypressfunc",ring_QAllEvents_getKeyPressFunc);
	ring_vm_funcregister("qallevents_getmousebuttonpressfunc",ring_QAllEvents_getMouseButtonPressFunc);
	ring_vm_funcregister("qallevents_getmousebuttonreleasefunc",ring_QAllEvents_getMouseButtonReleaseFunc);
	ring_vm_funcregister("qallevents_getmousebuttondblclickfunc",ring_QAllEvents_getMouseButtonDblClickFunc);
	ring_vm_funcregister("qallevents_getmousemovefunc",ring_QAllEvents_getMouseMoveFunc);
	ring_vm_funcregister("qallevents_getclosefunc",ring_QAllEvents_getCloseFunc);
	ring_vm_funcregister("qallevents_getcontextmenufunc",ring_QAllEvents_getContextMenuFunc);
	ring_vm_funcregister("qallevents_getdragenterfunc",ring_QAllEvents_getDragEnterFunc);
	ring_vm_funcregister("qallevents_getdragleavefunc",ring_QAllEvents_getDragLeaveFunc);
	ring_vm_funcregister("qallevents_getdragmovefunc",ring_QAllEvents_getDragMoveFunc);
	ring_vm_funcregister("qallevents_getdropfunc",ring_QAllEvents_getDropFunc);
	ring_vm_funcregister("qallevents_getenterfunc",ring_QAllEvents_getEnterFunc);
	ring_vm_funcregister("qallevents_getfocusinfunc",ring_QAllEvents_getFocusInFunc);
	ring_vm_funcregister("qallevents_getfocusoutfunc",ring_QAllEvents_getFocusOutFunc);
	ring_vm_funcregister("qallevents_getkeyreleasefunc",ring_QAllEvents_getKeyReleaseFunc);
	ring_vm_funcregister("qallevents_getleavefunc",ring_QAllEvents_getLeaveFunc);
	ring_vm_funcregister("qallevents_getnonclientareamousebuttondblclickfunc",ring_QAllEvents_getNonClientAreaMouseButtonDblClickFunc);
	ring_vm_funcregister("qallevents_getnonclientareamousebuttonpressfunc",ring_QAllEvents_getNonClientAreaMouseButtonPressFunc);
	ring_vm_funcregister("qallevents_getnonclientareamousebuttonreleasefunc",ring_QAllEvents_getNonClientAreaMouseButtonReleaseFunc);
	ring_vm_funcregister("qallevents_getnonclientareamousemovefunc",ring_QAllEvents_getNonClientAreaMouseMoveFunc);
	ring_vm_funcregister("qallevents_getmovefunc",ring_QAllEvents_getMoveFunc);
	ring_vm_funcregister("qallevents_getresizefunc",ring_QAllEvents_getResizeFunc);
	ring_vm_funcregister("qallevents_getwindowactivatefunc",ring_QAllEvents_getWindowActivateFunc);
	ring_vm_funcregister("qallevents_getwindowblockedfunc",ring_QAllEvents_getWindowBlockedFunc);
	ring_vm_funcregister("qallevents_getwindowdeactivatefunc",ring_QAllEvents_getWindowDeactivateFunc);
	ring_vm_funcregister("qallevents_getwindowstatechangefunc",ring_QAllEvents_getWindowStateChangeFunc);
	ring_vm_funcregister("qallevents_getwindowunblockedfunc",ring_QAllEvents_getWindowUnblockedFunc);
	ring_vm_funcregister("qallevents_getpaintfunc",ring_QAllEvents_getPaintFunc);
	ring_vm_funcregister("qdesktopwidget_availablegeometry",ring_QDesktopWidget_availableGeometry);
	ring_vm_funcregister("qdesktopwidget_isvirtualdesktop",ring_QDesktopWidget_isVirtualDesktop);
	ring_vm_funcregister("qdesktopwidget_primaryscreen",ring_QDesktopWidget_primaryScreen);
	ring_vm_funcregister("qdesktopwidget_screen",ring_QDesktopWidget_screen);
	ring_vm_funcregister("qdesktopwidget_screencount",ring_QDesktopWidget_screenCount);
	ring_vm_funcregister("qdesktopwidget_screengeometry",ring_QDesktopWidget_screenGeometry);
	ring_vm_funcregister("qdesktopwidget_screennumber",ring_QDesktopWidget_screenNumber);
	ring_vm_funcregister("qrect_adjust",ring_QRect_adjust);
	ring_vm_funcregister("qrect_adjusted",ring_QRect_adjusted);
	ring_vm_funcregister("qrect_bottom",ring_QRect_bottom);
	ring_vm_funcregister("qrect_bottomleft",ring_QRect_bottomLeft);
	ring_vm_funcregister("qrect_bottomright",ring_QRect_bottomRight);
	ring_vm_funcregister("qrect_center",ring_QRect_center);
	ring_vm_funcregister("qrect_contains",ring_QRect_contains);
	ring_vm_funcregister("qrect_getcoords",ring_QRect_getCoords);
	ring_vm_funcregister("qrect_getrect",ring_QRect_getRect);
	ring_vm_funcregister("qrect_height",ring_QRect_height);
	ring_vm_funcregister("qrect_intersected",ring_QRect_intersected);
	ring_vm_funcregister("qrect_intersects",ring_QRect_intersects);
	ring_vm_funcregister("qrect_isempty",ring_QRect_isEmpty);
	ring_vm_funcregister("qrect_isnull",ring_QRect_isNull);
	ring_vm_funcregister("qrect_isvalid",ring_QRect_isValid);
	ring_vm_funcregister("qrect_left",ring_QRect_left);
	ring_vm_funcregister("qrect_movebottom",ring_QRect_moveBottom);
	ring_vm_funcregister("qrect_movebottomleft",ring_QRect_moveBottomLeft);
	ring_vm_funcregister("qrect_movebottomright",ring_QRect_moveBottomRight);
	ring_vm_funcregister("qrect_movecenter",ring_QRect_moveCenter);
	ring_vm_funcregister("qrect_moveleft",ring_QRect_moveLeft);
	ring_vm_funcregister("qrect_moveright",ring_QRect_moveRight);
	ring_vm_funcregister("qrect_moveto",ring_QRect_moveTo);
	ring_vm_funcregister("qrect_movetop",ring_QRect_moveTop);
	ring_vm_funcregister("qrect_movetopleft",ring_QRect_moveTopLeft);
	ring_vm_funcregister("qrect_movetopright",ring_QRect_moveTopRight);
	ring_vm_funcregister("qrect_normalized",ring_QRect_normalized);
	ring_vm_funcregister("qrect_right",ring_QRect_right);
	ring_vm_funcregister("qrect_setbottom",ring_QRect_setBottom);
	ring_vm_funcregister("qrect_setbottomleft",ring_QRect_setBottomLeft);
	ring_vm_funcregister("qrect_setbottomright",ring_QRect_setBottomRight);
	ring_vm_funcregister("qrect_setcoords",ring_QRect_setCoords);
	ring_vm_funcregister("qrect_setheight",ring_QRect_setHeight);
	ring_vm_funcregister("qrect_setleft",ring_QRect_setLeft);
	ring_vm_funcregister("qrect_setrect",ring_QRect_setRect);
	ring_vm_funcregister("qrect_setright",ring_QRect_setRight);
	ring_vm_funcregister("qrect_setsize",ring_QRect_setSize);
	ring_vm_funcregister("qrect_settop",ring_QRect_setTop);
	ring_vm_funcregister("qrect_settopleft",ring_QRect_setTopLeft);
	ring_vm_funcregister("qrect_settopright",ring_QRect_setTopRight);
	ring_vm_funcregister("qrect_setwidth",ring_QRect_setWidth);
	ring_vm_funcregister("qrect_setx",ring_QRect_setX);
	ring_vm_funcregister("qrect_sety",ring_QRect_setY);
	ring_vm_funcregister("qrect_size",ring_QRect_size);
	ring_vm_funcregister("qrect_top",ring_QRect_top);
	ring_vm_funcregister("qrect_topleft",ring_QRect_topLeft);
	ring_vm_funcregister("qrect_topright",ring_QRect_topRight);
	ring_vm_funcregister("qrect_translate",ring_QRect_translate);
	ring_vm_funcregister("qrect_translated",ring_QRect_translated);
	ring_vm_funcregister("qrect_united",ring_QRect_united);
	ring_vm_funcregister("qrect_width",ring_QRect_width);
	ring_vm_funcregister("qrect_x",ring_QRect_x);
	ring_vm_funcregister("qrect_y",ring_QRect_y);
	ring_vm_funcregister("qtextdocument_addresource",ring_QTextDocument_addResource);
	ring_vm_funcregister("qtextdocument_adjustsize",ring_QTextDocument_adjustSize);
	ring_vm_funcregister("qtextdocument_allformats",ring_QTextDocument_allFormats);
	ring_vm_funcregister("qtextdocument_availableredosteps",ring_QTextDocument_availableRedoSteps);
	ring_vm_funcregister("qtextdocument_availableundosteps",ring_QTextDocument_availableUndoSteps);
	ring_vm_funcregister("qtextdocument_begin",ring_QTextDocument_begin);
	ring_vm_funcregister("qtextdocument_blockcount",ring_QTextDocument_blockCount);
	ring_vm_funcregister("qtextdocument_characterat",ring_QTextDocument_characterAt);
	ring_vm_funcregister("qtextdocument_charactercount",ring_QTextDocument_characterCount);
	ring_vm_funcregister("qtextdocument_clearundoredostacks",ring_QTextDocument_clearUndoRedoStacks);
	ring_vm_funcregister("qtextdocument_clone",ring_QTextDocument_clone);
	ring_vm_funcregister("qtextdocument_defaultcursormovestyle",ring_QTextDocument_defaultCursorMoveStyle);
	ring_vm_funcregister("qtextdocument_defaultfont",ring_QTextDocument_defaultFont);
	ring_vm_funcregister("qtextdocument_defaultstylesheet",ring_QTextDocument_defaultStyleSheet);
	ring_vm_funcregister("qtextdocument_defaulttextoption",ring_QTextDocument_defaultTextOption);
	ring_vm_funcregister("qtextdocument_documentlayout",ring_QTextDocument_documentLayout);
	ring_vm_funcregister("qtextdocument_documentmargin",ring_QTextDocument_documentMargin);
	ring_vm_funcregister("qtextdocument_drawcontents",ring_QTextDocument_drawContents);
	ring_vm_funcregister("qtextdocument_end",ring_QTextDocument_end);
	ring_vm_funcregister("qtextdocument_find",ring_QTextDocument_find);
	ring_vm_funcregister("qtextdocument_findblock",ring_QTextDocument_findBlock);
	ring_vm_funcregister("qtextdocument_findblockbylinenumber",ring_QTextDocument_findBlockByLineNumber);
	ring_vm_funcregister("qtextdocument_findblockbynumber",ring_QTextDocument_findBlockByNumber);
	ring_vm_funcregister("qtextdocument_firstblock",ring_QTextDocument_firstBlock);
	ring_vm_funcregister("qtextdocument_idealwidth",ring_QTextDocument_idealWidth);
	ring_vm_funcregister("qtextdocument_indentwidth",ring_QTextDocument_indentWidth);
	ring_vm_funcregister("qtextdocument_isempty",ring_QTextDocument_isEmpty);
	ring_vm_funcregister("qtextdocument_ismodified",ring_QTextDocument_isModified);
	ring_vm_funcregister("qtextdocument_isredoavailable",ring_QTextDocument_isRedoAvailable);
	ring_vm_funcregister("qtextdocument_isundoavailable",ring_QTextDocument_isUndoAvailable);
	ring_vm_funcregister("qtextdocument_isundoredoenabled",ring_QTextDocument_isUndoRedoEnabled);
	ring_vm_funcregister("qtextdocument_lastblock",ring_QTextDocument_lastBlock);
	ring_vm_funcregister("qtextdocument_linecount",ring_QTextDocument_lineCount);
	ring_vm_funcregister("qtextdocument_markcontentsdirty",ring_QTextDocument_markContentsDirty);
	ring_vm_funcregister("qtextdocument_maximumblockcount",ring_QTextDocument_maximumBlockCount);
	ring_vm_funcregister("qtextdocument_metainformation",ring_QTextDocument_metaInformation);
	ring_vm_funcregister("qtextdocument_object",ring_QTextDocument_object);
	ring_vm_funcregister("qtextdocument_objectforformat",ring_QTextDocument_objectForFormat);
	ring_vm_funcregister("qtextdocument_pagecount",ring_QTextDocument_pageCount);
	ring_vm_funcregister("qtextdocument_pagesize",ring_QTextDocument_pageSize);
	ring_vm_funcregister("qtextdocument_print",ring_QTextDocument_print);
	ring_vm_funcregister("qtextdocument_redo",ring_QTextDocument_redo);
	ring_vm_funcregister("qtextdocument_resource",ring_QTextDocument_resource);
	ring_vm_funcregister("qtextdocument_revision",ring_QTextDocument_revision);
	ring_vm_funcregister("qtextdocument_rootframe",ring_QTextDocument_rootFrame);
	ring_vm_funcregister("qtextdocument_setdefaultcursormovestyle",ring_QTextDocument_setDefaultCursorMoveStyle);
	ring_vm_funcregister("qtextdocument_setdefaultfont",ring_QTextDocument_setDefaultFont);
	ring_vm_funcregister("qtextdocument_setdefaultstylesheet",ring_QTextDocument_setDefaultStyleSheet);
	ring_vm_funcregister("qtextdocument_setdefaulttextoption",ring_QTextDocument_setDefaultTextOption);
	ring_vm_funcregister("qtextdocument_setdocumentlayout",ring_QTextDocument_setDocumentLayout);
	ring_vm_funcregister("qtextdocument_setdocumentmargin",ring_QTextDocument_setDocumentMargin);
	ring_vm_funcregister("qtextdocument_sethtml",ring_QTextDocument_setHtml);
	ring_vm_funcregister("qtextdocument_setindentwidth",ring_QTextDocument_setIndentWidth);
	ring_vm_funcregister("qtextdocument_setmaximumblockcount",ring_QTextDocument_setMaximumBlockCount);
	ring_vm_funcregister("qtextdocument_setmetainformation",ring_QTextDocument_setMetaInformation);
	ring_vm_funcregister("qtextdocument_setpagesize",ring_QTextDocument_setPageSize);
	ring_vm_funcregister("qtextdocument_setplaintext",ring_QTextDocument_setPlainText);
	ring_vm_funcregister("qtextdocument_settextwidth",ring_QTextDocument_setTextWidth);
	ring_vm_funcregister("qtextdocument_setundoredoenabled",ring_QTextDocument_setUndoRedoEnabled);
	ring_vm_funcregister("qtextdocument_setusedesignmetrics",ring_QTextDocument_setUseDesignMetrics);
	ring_vm_funcregister("qtextdocument_size",ring_QTextDocument_size);
	ring_vm_funcregister("qtextdocument_textwidth",ring_QTextDocument_textWidth);
	ring_vm_funcregister("qtextdocument_tohtml",ring_QTextDocument_toHtml);
	ring_vm_funcregister("qtextdocument_toplaintext",ring_QTextDocument_toPlainText);
	ring_vm_funcregister("qtextdocument_undo",ring_QTextDocument_undo);
	ring_vm_funcregister("qtextdocument_usedesignmetrics",ring_QTextDocument_useDesignMetrics);
	ring_vm_funcregister("qtextdocument_setmodified",ring_QTextDocument_setModified);
	ring_vm_funcregister("qtextblock_blockformat",ring_QTextBlock_blockFormat);
	ring_vm_funcregister("qtextblock_blockformatindex",ring_QTextBlock_blockFormatIndex);
	ring_vm_funcregister("qtextblock_blocknumber",ring_QTextBlock_blockNumber);
	ring_vm_funcregister("qtextblock_charformat",ring_QTextBlock_charFormat);
	ring_vm_funcregister("qtextblock_charformatindex",ring_QTextBlock_charFormatIndex);
	ring_vm_funcregister("qtextblock_clearlayout",ring_QTextBlock_clearLayout);
	ring_vm_funcregister("qtextblock_contains",ring_QTextBlock_contains);
	ring_vm_funcregister("qtextblock_document",ring_QTextBlock_document);
	ring_vm_funcregister("qtextblock_firstlinenumber",ring_QTextBlock_firstLineNumber);
	ring_vm_funcregister("qtextblock_isvalid",ring_QTextBlock_isValid);
	ring_vm_funcregister("qtextblock_isvisible",ring_QTextBlock_isVisible);
	ring_vm_funcregister("qtextblock_layout",ring_QTextBlock_layout);
	ring_vm_funcregister("qtextblock_length",ring_QTextBlock_length);
	ring_vm_funcregister("qtextblock_linecount",ring_QTextBlock_lineCount);
	ring_vm_funcregister("qtextblock_next",ring_QTextBlock_next);
	ring_vm_funcregister("qtextblock_position",ring_QTextBlock_position);
	ring_vm_funcregister("qtextblock_previous",ring_QTextBlock_previous);
	ring_vm_funcregister("qtextblock_revision",ring_QTextBlock_revision);
	ring_vm_funcregister("qtextblock_setlinecount",ring_QTextBlock_setLineCount);
	ring_vm_funcregister("qtextblock_setrevision",ring_QTextBlock_setRevision);
	ring_vm_funcregister("qtextblock_setuserdata",ring_QTextBlock_setUserData);
	ring_vm_funcregister("qtextblock_setuserstate",ring_QTextBlock_setUserState);
	ring_vm_funcregister("qtextblock_setvisible",ring_QTextBlock_setVisible);
	ring_vm_funcregister("qtextblock_text",ring_QTextBlock_text);
	ring_vm_funcregister("qtextblock_textdirection",ring_QTextBlock_textDirection);
	ring_vm_funcregister("qtextblock_textlist",ring_QTextBlock_textList);
	ring_vm_funcregister("qtextblock_userdata",ring_QTextBlock_userData);
	ring_vm_funcregister("qtextblock_userstate",ring_QTextBlock_userState);
	ring_vm_funcregister("qtime_addmsecs",ring_QTime_addMSecs);
	ring_vm_funcregister("qtime_addsecs",ring_QTime_addSecs);
	ring_vm_funcregister("qtime_elapsed",ring_QTime_elapsed);
	ring_vm_funcregister("qtime_hour",ring_QTime_hour);
	ring_vm_funcregister("qtime_isnull",ring_QTime_isNull);
	ring_vm_funcregister("qtime_isvalid",ring_QTime_isValid);
	ring_vm_funcregister("qtime_minute",ring_QTime_minute);
	ring_vm_funcregister("qtime_msec",ring_QTime_msec);
	ring_vm_funcregister("qtime_msecssincestartofday",ring_QTime_msecsSinceStartOfDay);
	ring_vm_funcregister("qtime_msecsto",ring_QTime_msecsTo);
	ring_vm_funcregister("qtime_restart",ring_QTime_restart);
	ring_vm_funcregister("qtime_second",ring_QTime_second);
	ring_vm_funcregister("qtime_secsto",ring_QTime_secsTo);
	ring_vm_funcregister("qtime_sethms",ring_QTime_setHMS);
	ring_vm_funcregister("qtime_start",ring_QTime_start);
	ring_vm_funcregister("qtime_tostring",ring_QTime_toString);
	ring_vm_funcregister("qtime_currenttime",ring_QTime_currentTime);
	ring_vm_funcregister("qtime_frommsecssincestartofday",ring_QTime_fromMSecsSinceStartOfDay);
	ring_vm_funcregister("qtime_fromstring",ring_QTime_fromString);
	ring_vm_funcregister("qlistwidgetitem_background",ring_QListWidgetItem_background);
	ring_vm_funcregister("qlistwidgetitem_checkstate",ring_QListWidgetItem_checkState);
	ring_vm_funcregister("qlistwidgetitem_flags",ring_QListWidgetItem_flags);
	ring_vm_funcregister("qlistwidgetitem_font",ring_QListWidgetItem_font);
	ring_vm_funcregister("qlistwidgetitem_foreground",ring_QListWidgetItem_foreground);
	ring_vm_funcregister("qlistwidgetitem_icon",ring_QListWidgetItem_icon);
	ring_vm_funcregister("qlistwidgetitem_ishidden",ring_QListWidgetItem_isHidden);
	ring_vm_funcregister("qlistwidgetitem_isselected",ring_QListWidgetItem_isSelected);
	ring_vm_funcregister("qlistwidgetitem_listwidget",ring_QListWidgetItem_listWidget);
	ring_vm_funcregister("qlistwidgetitem_setbackground",ring_QListWidgetItem_setBackground);
	ring_vm_funcregister("qlistwidgetitem_setcheckstate",ring_QListWidgetItem_setCheckState);
	ring_vm_funcregister("qlistwidgetitem_setflags",ring_QListWidgetItem_setFlags);
	ring_vm_funcregister("qlistwidgetitem_setfont",ring_QListWidgetItem_setFont);
	ring_vm_funcregister("qlistwidgetitem_setforeground",ring_QListWidgetItem_setForeground);
	ring_vm_funcregister("qlistwidgetitem_sethidden",ring_QListWidgetItem_setHidden);
	ring_vm_funcregister("qlistwidgetitem_seticon",ring_QListWidgetItem_setIcon);
	ring_vm_funcregister("qlistwidgetitem_setselected",ring_QListWidgetItem_setSelected);
	ring_vm_funcregister("qlistwidgetitem_setsizehint",ring_QListWidgetItem_setSizeHint);
	ring_vm_funcregister("qlistwidgetitem_setstatustip",ring_QListWidgetItem_setStatusTip);
	ring_vm_funcregister("qlistwidgetitem_settext",ring_QListWidgetItem_setText);
	ring_vm_funcregister("qlistwidgetitem_settextalignment",ring_QListWidgetItem_setTextAlignment);
	ring_vm_funcregister("qlistwidgetitem_settooltip",ring_QListWidgetItem_setToolTip);
	ring_vm_funcregister("qlistwidgetitem_setwhatsthis",ring_QListWidgetItem_setWhatsThis);
	ring_vm_funcregister("qlistwidgetitem_sizehint",ring_QListWidgetItem_sizeHint);
	ring_vm_funcregister("qlistwidgetitem_statustip",ring_QListWidgetItem_statusTip);
	ring_vm_funcregister("qlistwidgetitem_text",ring_QListWidgetItem_text);
	ring_vm_funcregister("qlistwidgetitem_textalignment",ring_QListWidgetItem_textAlignment);
	ring_vm_funcregister("qlistwidgetitem_tooltip",ring_QListWidgetItem_toolTip);
	ring_vm_funcregister("qlistwidgetitem_type",ring_QListWidgetItem_type);
	ring_vm_funcregister("qlistwidgetitem_whatsthis",ring_QListWidgetItem_whatsThis);
	ring_vm_funcregister("qsystemtrayicon_contextmenu",ring_QSystemTrayIcon_contextMenu);
	ring_vm_funcregister("qsystemtrayicon_geometry",ring_QSystemTrayIcon_geometry);
	ring_vm_funcregister("qsystemtrayicon_icon",ring_QSystemTrayIcon_icon);
	ring_vm_funcregister("qsystemtrayicon_isvisible",ring_QSystemTrayIcon_isVisible);
	ring_vm_funcregister("qsystemtrayicon_setcontextmenu",ring_QSystemTrayIcon_setContextMenu);
	ring_vm_funcregister("qsystemtrayicon_seticon",ring_QSystemTrayIcon_setIcon);
	ring_vm_funcregister("qsystemtrayicon_settooltip",ring_QSystemTrayIcon_setToolTip);
	ring_vm_funcregister("qsystemtrayicon_tooltip",ring_QSystemTrayIcon_toolTip);
	ring_vm_funcregister("qsystemtrayicon_hide",ring_QSystemTrayIcon_hide);
	ring_vm_funcregister("qsystemtrayicon_setvisible",ring_QSystemTrayIcon_setVisible);
	ring_vm_funcregister("qsystemtrayicon_show",ring_QSystemTrayIcon_show);
	ring_vm_funcregister("qsystemtrayicon_showmessage",ring_QSystemTrayIcon_showMessage);
	ring_vm_funcregister("qsystemtrayicon_issystemtrayavailable",ring_QSystemTrayIcon_isSystemTrayAvailable);
	ring_vm_funcregister("qsystemtrayicon_supportsmessages",ring_QSystemTrayIcon_supportsMessages);
	ring_vm_funcregister("qdate_adddays",ring_QDate_addDays);
	ring_vm_funcregister("qdate_addmonths",ring_QDate_addMonths);
	ring_vm_funcregister("qdate_addyears",ring_QDate_addYears);
	ring_vm_funcregister("qdate_day",ring_QDate_day);
	ring_vm_funcregister("qdate_dayofweek",ring_QDate_dayOfWeek);
	ring_vm_funcregister("qdate_dayofyear",ring_QDate_dayOfYear);
	ring_vm_funcregister("qdate_daysinmonth",ring_QDate_daysInMonth);
	ring_vm_funcregister("qdate_daysinyear",ring_QDate_daysInYear);
	ring_vm_funcregister("qdate_daysto",ring_QDate_daysTo);
	ring_vm_funcregister("qdate_getdate",ring_QDate_getDate);
	ring_vm_funcregister("qdate_isnull",ring_QDate_isNull);
	ring_vm_funcregister("qdate_isvalid",ring_QDate_isValid);
	ring_vm_funcregister("qdate_month",ring_QDate_month);
	ring_vm_funcregister("qdate_setdate",ring_QDate_setDate);
	ring_vm_funcregister("qdate_tojulianday",ring_QDate_toJulianDay);
	ring_vm_funcregister("qdate_tostring",ring_QDate_toString);
	ring_vm_funcregister("qdate_weeknumber",ring_QDate_weekNumber);
	ring_vm_funcregister("qdate_year",ring_QDate_year);
	ring_vm_funcregister("qdate_currentdate",ring_QDate_currentDate);
	ring_vm_funcregister("qdate_fromjulianday",ring_QDate_fromJulianDay);
	ring_vm_funcregister("qdate_fromstring",ring_QDate_fromString);
	ring_vm_funcregister("qdate_isleapyear",ring_QDate_isLeapYear);
	ring_vm_funcregister("qdate_longdayname",ring_QDate_longDayName);
	ring_vm_funcregister("qdate_longmonthname",ring_QDate_longMonthName);
	ring_vm_funcregister("qdate_shortdayname",ring_QDate_shortDayName);
	ring_vm_funcregister("qdate_shortmonthname",ring_QDate_shortMonthName);
	ring_vm_funcregister("qtextcodec_codecforname",ring_QTextCodec_codecForName);
	ring_vm_funcregister("qtextcodec_setcodecforlocale",ring_QTextCodec_setCodecForLocale);
	ring_vm_funcregister("qsqldatabase_close",ring_QSqlDatabase_close);
	ring_vm_funcregister("qsqldatabase_commit",ring_QSqlDatabase_commit);
	ring_vm_funcregister("qsqldatabase_connectoptions",ring_QSqlDatabase_connectOptions);
	ring_vm_funcregister("qsqldatabase_connectionname",ring_QSqlDatabase_connectionName);
	ring_vm_funcregister("qsqldatabase_databasename",ring_QSqlDatabase_databaseName);
	ring_vm_funcregister("qsqldatabase_driver",ring_QSqlDatabase_driver);
	ring_vm_funcregister("qsqldatabase_drivername",ring_QSqlDatabase_driverName);
	ring_vm_funcregister("qsqldatabase_exec",ring_QSqlDatabase_exec);
	ring_vm_funcregister("qsqldatabase_hostname",ring_QSqlDatabase_hostName);
	ring_vm_funcregister("qsqldatabase_isopen",ring_QSqlDatabase_isOpen);
	ring_vm_funcregister("qsqldatabase_isopenerror",ring_QSqlDatabase_isOpenError);
	ring_vm_funcregister("qsqldatabase_isvalid",ring_QSqlDatabase_isValid);
	ring_vm_funcregister("qsqldatabase_lasterror",ring_QSqlDatabase_lastError);
	ring_vm_funcregister("qsqldatabase_numericalprecisionpolicy",ring_QSqlDatabase_numericalPrecisionPolicy);
	ring_vm_funcregister("qsqldatabase_open",ring_QSqlDatabase_open);
	ring_vm_funcregister("qsqldatabase_password",ring_QSqlDatabase_password);
	ring_vm_funcregister("qsqldatabase_port",ring_QSqlDatabase_port);
	ring_vm_funcregister("qsqldatabase_primaryindex",ring_QSqlDatabase_primaryIndex);
	ring_vm_funcregister("qsqldatabase_record",ring_QSqlDatabase_record);
	ring_vm_funcregister("qsqldatabase_rollback",ring_QSqlDatabase_rollback);
	ring_vm_funcregister("qsqldatabase_setconnectoptions",ring_QSqlDatabase_setConnectOptions);
	ring_vm_funcregister("qsqldatabase_setdatabasename",ring_QSqlDatabase_setDatabaseName);
	ring_vm_funcregister("qsqldatabase_sethostname",ring_QSqlDatabase_setHostName);
	ring_vm_funcregister("qsqldatabase_setnumericalprecisionpolicy",ring_QSqlDatabase_setNumericalPrecisionPolicy);
	ring_vm_funcregister("qsqldatabase_setpassword",ring_QSqlDatabase_setPassword);
	ring_vm_funcregister("qsqldatabase_setport",ring_QSqlDatabase_setPort);
	ring_vm_funcregister("qsqldatabase_setusername",ring_QSqlDatabase_setUserName);
	ring_vm_funcregister("qsqldatabase_tables",ring_QSqlDatabase_tables);
	ring_vm_funcregister("qsqldatabase_transaction",ring_QSqlDatabase_transaction);
	ring_vm_funcregister("qsqldatabase_username",ring_QSqlDatabase_userName);
	ring_vm_funcregister("qsqldatabase_adddatabase",ring_QSqlDatabase_addDatabase);
	ring_vm_funcregister("qsqldatabase_clonedatabase",ring_QSqlDatabase_cloneDatabase);
	ring_vm_funcregister("qsqldatabase_connectionnames",ring_QSqlDatabase_connectionNames);
	ring_vm_funcregister("qsqldatabase_contains",ring_QSqlDatabase_contains);
	ring_vm_funcregister("qsqldatabase_database",ring_QSqlDatabase_database);
	ring_vm_funcregister("qsqldatabase_drivers",ring_QSqlDatabase_drivers);
	ring_vm_funcregister("qsqldatabase_isdriveravailable",ring_QSqlDatabase_isDriverAvailable);
	ring_vm_funcregister("qsqldatabase_registersqldriver",ring_QSqlDatabase_registerSqlDriver);
	ring_vm_funcregister("qsqldatabase_removedatabase",ring_QSqlDatabase_removeDatabase);
	ring_vm_funcregister("qsqldriver_isopenerror",ring_QSqlDriver_isOpenError);
	ring_vm_funcregister("qsqldriver_lasterror",ring_QSqlDriver_lastError);
	ring_vm_funcregister("qsqldriver_numericalprecisionpolicy",ring_QSqlDriver_numericalPrecisionPolicy);
	ring_vm_funcregister("qsqldriver_setnumericalprecisionpolicy",ring_QSqlDriver_setNumericalPrecisionPolicy);
	ring_vm_funcregister("qsqlquery_addbindvalue",ring_QSqlQuery_addBindValue);
	ring_vm_funcregister("qsqlquery_at",ring_QSqlQuery_at);
	ring_vm_funcregister("qsqlquery_bindvalue",ring_QSqlQuery_bindValue);
	ring_vm_funcregister("qsqlquery_boundvalue",ring_QSqlQuery_boundValue);
	ring_vm_funcregister("qsqlquery_clear",ring_QSqlQuery_clear);
	ring_vm_funcregister("qsqlquery_driver",ring_QSqlQuery_driver);
	ring_vm_funcregister("qsqlquery_exec",ring_QSqlQuery_exec);
	ring_vm_funcregister("qsqlquery_exec_2",ring_QSqlQuery_exec_2);
	ring_vm_funcregister("qsqlquery_execbatch",ring_QSqlQuery_execBatch);
	ring_vm_funcregister("qsqlquery_executedquery",ring_QSqlQuery_executedQuery);
	ring_vm_funcregister("qsqlquery_finish",ring_QSqlQuery_finish);
	ring_vm_funcregister("qsqlquery_first",ring_QSqlQuery_first);
	ring_vm_funcregister("qsqlquery_isactive",ring_QSqlQuery_isActive);
	ring_vm_funcregister("qsqlquery_isforwardonly",ring_QSqlQuery_isForwardOnly);
	ring_vm_funcregister("qsqlquery_isnull",ring_QSqlQuery_isNull);
	ring_vm_funcregister("qsqlquery_isselect",ring_QSqlQuery_isSelect);
	ring_vm_funcregister("qsqlquery_isvalid",ring_QSqlQuery_isValid);
	ring_vm_funcregister("qsqlquery_last",ring_QSqlQuery_last);
	ring_vm_funcregister("qsqlquery_lasterror",ring_QSqlQuery_lastError);
	ring_vm_funcregister("qsqlquery_lastinsertid",ring_QSqlQuery_lastInsertId);
	ring_vm_funcregister("qsqlquery_lastquery",ring_QSqlQuery_lastQuery);
	ring_vm_funcregister("qsqlquery_next",ring_QSqlQuery_next);
	ring_vm_funcregister("qsqlquery_nextresult",ring_QSqlQuery_nextResult);
	ring_vm_funcregister("qsqlquery_numrowsaffected",ring_QSqlQuery_numRowsAffected);
	ring_vm_funcregister("qsqlquery_numericalprecisionpolicy",ring_QSqlQuery_numericalPrecisionPolicy);
	ring_vm_funcregister("qsqlquery_prepare",ring_QSqlQuery_prepare);
	ring_vm_funcregister("qsqlquery_previous",ring_QSqlQuery_previous);
	ring_vm_funcregister("qsqlquery_record",ring_QSqlQuery_record);
	ring_vm_funcregister("qsqlquery_result",ring_QSqlQuery_result);
	ring_vm_funcregister("qsqlquery_seek",ring_QSqlQuery_seek);
	ring_vm_funcregister("qsqlquery_setforwardonly",ring_QSqlQuery_setForwardOnly);
	ring_vm_funcregister("qsqlquery_setnumericalprecisionpolicy",ring_QSqlQuery_setNumericalPrecisionPolicy);
	ring_vm_funcregister("qsqlquery_size",ring_QSqlQuery_size);
	ring_vm_funcregister("qsqlquery_value",ring_QSqlQuery_value);
	ring_vm_funcregister("qsqlerror_databasetext",ring_QSqlError_databaseText);
	ring_vm_funcregister("qsqlerror_drivertext",ring_QSqlError_driverText);
	ring_vm_funcregister("qsqlerror_isvalid",ring_QSqlError_isValid);
	ring_vm_funcregister("qsqlerror_number",ring_QSqlError_number);
	ring_vm_funcregister("qsqlerror_setdatabasetext",ring_QSqlError_setDatabaseText);
	ring_vm_funcregister("qsqlerror_setdrivertext",ring_QSqlError_setDriverText);
	ring_vm_funcregister("qsqlerror_setnumber",ring_QSqlError_setNumber);
	ring_vm_funcregister("qsqlerror_settype",ring_QSqlError_setType);
	ring_vm_funcregister("qsqlerror_text",ring_QSqlError_text);
	ring_vm_funcregister("qsqlerror_type",ring_QSqlError_type);
	ring_vm_funcregister("qsqlindex_append",ring_QSqlIndex_append);
	ring_vm_funcregister("qsqlindex_cursorname",ring_QSqlIndex_cursorName);
	ring_vm_funcregister("qsqlindex_isdescending",ring_QSqlIndex_isDescending);
	ring_vm_funcregister("qsqlindex_name",ring_QSqlIndex_name);
	ring_vm_funcregister("qsqlindex_setcursorname",ring_QSqlIndex_setCursorName);
	ring_vm_funcregister("qsqlindex_setdescending",ring_QSqlIndex_setDescending);
	ring_vm_funcregister("qsqlindex_setname",ring_QSqlIndex_setName);
	ring_vm_funcregister("qsqlrecord_append",ring_QSqlRecord_append);
	ring_vm_funcregister("qsqlrecord_clear",ring_QSqlRecord_clear);
	ring_vm_funcregister("qsqlrecord_clearvalues",ring_QSqlRecord_clearValues);
	ring_vm_funcregister("qsqlrecord_contains",ring_QSqlRecord_contains);
	ring_vm_funcregister("qsqlrecord_count",ring_QSqlRecord_count);
	ring_vm_funcregister("qsqlrecord_field",ring_QSqlRecord_field);
	ring_vm_funcregister("qsqlrecord_fieldname",ring_QSqlRecord_fieldName);
	ring_vm_funcregister("qsqlrecord_indexof",ring_QSqlRecord_indexOf);
	ring_vm_funcregister("qsqlrecord_insert",ring_QSqlRecord_insert);
	ring_vm_funcregister("qsqlrecord_isempty",ring_QSqlRecord_isEmpty);
	ring_vm_funcregister("qsqlrecord_isgenerated",ring_QSqlRecord_isGenerated);
	ring_vm_funcregister("qsqlrecord_isnull",ring_QSqlRecord_isNull);
	ring_vm_funcregister("qsqlrecord_remove",ring_QSqlRecord_remove);
	ring_vm_funcregister("qsqlrecord_replace",ring_QSqlRecord_replace);
	ring_vm_funcregister("qsqlrecord_setgenerated",ring_QSqlRecord_setGenerated);
	ring_vm_funcregister("qsqlrecord_setnull",ring_QSqlRecord_setNull);
	ring_vm_funcregister("qsqlrecord_setvalue",ring_QSqlRecord_setValue);
	ring_vm_funcregister("qsqlrecord_value",ring_QSqlRecord_value);
	ring_vm_funcregister("qsqlfield_clear",ring_QSqlField_clear);
	ring_vm_funcregister("qsqlfield_defaultvalue",ring_QSqlField_defaultValue);
	ring_vm_funcregister("qsqlfield_isautovalue",ring_QSqlField_isAutoValue);
	ring_vm_funcregister("qsqlfield_isgenerated",ring_QSqlField_isGenerated);
	ring_vm_funcregister("qsqlfield_isnull",ring_QSqlField_isNull);
	ring_vm_funcregister("qsqlfield_isreadonly",ring_QSqlField_isReadOnly);
	ring_vm_funcregister("qsqlfield_isvalid",ring_QSqlField_isValid);
	ring_vm_funcregister("qsqlfield_length",ring_QSqlField_length);
	ring_vm_funcregister("qsqlfield_name",ring_QSqlField_name);
	ring_vm_funcregister("qsqlfield_precision",ring_QSqlField_precision);
	ring_vm_funcregister("qsqlfield_requiredstatus",ring_QSqlField_requiredStatus);
	ring_vm_funcregister("qsqlfield_setautovalue",ring_QSqlField_setAutoValue);
	ring_vm_funcregister("qsqlfield_setdefaultvalue",ring_QSqlField_setDefaultValue);
	ring_vm_funcregister("qsqlfield_setgenerated",ring_QSqlField_setGenerated);
	ring_vm_funcregister("qsqlfield_setlength",ring_QSqlField_setLength);
	ring_vm_funcregister("qsqlfield_setname",ring_QSqlField_setName);
	ring_vm_funcregister("qsqlfield_setprecision",ring_QSqlField_setPrecision);
	ring_vm_funcregister("qsqlfield_setreadonly",ring_QSqlField_setReadOnly);
	ring_vm_funcregister("qsqlfield_setrequired",ring_QSqlField_setRequired);
	ring_vm_funcregister("qsqlfield_setrequiredstatus",ring_QSqlField_setRequiredStatus);
	ring_vm_funcregister("qsqlfield_settype",ring_QSqlField_setType);
	ring_vm_funcregister("qsqlfield_setvalue",ring_QSqlField_setValue);
	ring_vm_funcregister("qsqlfield_type",ring_QSqlField_type);
	ring_vm_funcregister("qsqlfield_value",ring_QSqlField_value);
	ring_vm_funcregister("qvariant_canconvert",ring_QVariant_canConvert);
	ring_vm_funcregister("qvariant_clear",ring_QVariant_clear);
	ring_vm_funcregister("qvariant_convert",ring_QVariant_convert);
	ring_vm_funcregister("qvariant_isnull",ring_QVariant_isNull);
	ring_vm_funcregister("qvariant_isvalid",ring_QVariant_isValid);
	ring_vm_funcregister("qvariant_swap",ring_QVariant_swap);
	ring_vm_funcregister("qvariant_tobitarray",ring_QVariant_toBitArray);
	ring_vm_funcregister("qvariant_tobool",ring_QVariant_toBool);
	ring_vm_funcregister("qvariant_tobytearray",ring_QVariant_toByteArray);
	ring_vm_funcregister("qvariant_tochar",ring_QVariant_toChar);
	ring_vm_funcregister("qvariant_todate",ring_QVariant_toDate);
	ring_vm_funcregister("qvariant_todatetime",ring_QVariant_toDateTime);
	ring_vm_funcregister("qvariant_todouble",ring_QVariant_toDouble);
	ring_vm_funcregister("qvariant_toeasingcurve",ring_QVariant_toEasingCurve);
	ring_vm_funcregister("qvariant_tofloat",ring_QVariant_toFloat);
	ring_vm_funcregister("qvariant_toint",ring_QVariant_toInt);
	ring_vm_funcregister("qvariant_tojsonarray",ring_QVariant_toJsonArray);
	ring_vm_funcregister("qvariant_tojsondocument",ring_QVariant_toJsonDocument);
	ring_vm_funcregister("qvariant_tojsonobject",ring_QVariant_toJsonObject);
	ring_vm_funcregister("qvariant_tojsonvalue",ring_QVariant_toJsonValue);
	ring_vm_funcregister("qvariant_toline",ring_QVariant_toLine);
	ring_vm_funcregister("qvariant_tolinef",ring_QVariant_toLineF);
	ring_vm_funcregister("qvariant_tolocale",ring_QVariant_toLocale);
	ring_vm_funcregister("qvariant_tolonglong",ring_QVariant_toLongLong);
	ring_vm_funcregister("qvariant_tomodelindex",ring_QVariant_toModelIndex);
	ring_vm_funcregister("qvariant_topoint",ring_QVariant_toPoint);
	ring_vm_funcregister("qvariant_topointf",ring_QVariant_toPointF);
	ring_vm_funcregister("qvariant_toreal",ring_QVariant_toReal);
	ring_vm_funcregister("qvariant_torect",ring_QVariant_toRect);
	ring_vm_funcregister("qvariant_torectf",ring_QVariant_toRectF);
	ring_vm_funcregister("qvariant_toregexp",ring_QVariant_toRegExp);
	ring_vm_funcregister("qvariant_toregularexpression",ring_QVariant_toRegularExpression);
	ring_vm_funcregister("qvariant_tosize",ring_QVariant_toSize);
	ring_vm_funcregister("qvariant_tosizef",ring_QVariant_toSizeF);
	ring_vm_funcregister("qvariant_tostringlist",ring_QVariant_toStringList);
	ring_vm_funcregister("qvariant_totime",ring_QVariant_toTime);
	ring_vm_funcregister("qvariant_touint",ring_QVariant_toUInt);
	ring_vm_funcregister("qvariant_toulonglong",ring_QVariant_toULongLong);
	ring_vm_funcregister("qvariant_tourl",ring_QVariant_toUrl);
	ring_vm_funcregister("qvariant_touuid",ring_QVariant_toUuid);
	ring_vm_funcregister("qvariant_type",ring_QVariant_type);
	ring_vm_funcregister("qvariant_typename",ring_QVariant_typeName);
	ring_vm_funcregister("qvariant_usertype",ring_QVariant_userType);
	ring_vm_funcregister("qvariant_tostring",ring_QVariant_toString);
	ring_vm_funcregister("qnetworkrequest_attribute",ring_QNetworkRequest_attribute);
	ring_vm_funcregister("qnetworkrequest_hasrawheader",ring_QNetworkRequest_hasRawHeader);
	ring_vm_funcregister("qnetworkrequest_header",ring_QNetworkRequest_header);
	ring_vm_funcregister("qnetworkrequest_originatingobject",ring_QNetworkRequest_originatingObject);
	ring_vm_funcregister("qnetworkrequest_priority",ring_QNetworkRequest_priority);
	ring_vm_funcregister("qnetworkrequest_rawheader",ring_QNetworkRequest_rawHeader);
	ring_vm_funcregister("qnetworkrequest_setattribute",ring_QNetworkRequest_setAttribute);
	ring_vm_funcregister("qnetworkrequest_setheader",ring_QNetworkRequest_setHeader);
	ring_vm_funcregister("qnetworkrequest_setoriginatingobject",ring_QNetworkRequest_setOriginatingObject);
	ring_vm_funcregister("qnetworkrequest_setpriority",ring_QNetworkRequest_setPriority);
	ring_vm_funcregister("qnetworkrequest_setrawheader",ring_QNetworkRequest_setRawHeader);
	ring_vm_funcregister("qnetworkrequest_seturl",ring_QNetworkRequest_setUrl);
	ring_vm_funcregister("qnetworkrequest_swap",ring_QNetworkRequest_swap);
	ring_vm_funcregister("qnetworkrequest_url",ring_QNetworkRequest_url);
	ring_vm_funcregister("qnetworkaccessmanager_setfinishedevent",ring_QNetworkAccessManager_setfinishedEvent);
	ring_vm_funcregister("qnetworkaccessmanager_getfinishedevent",ring_QNetworkAccessManager_getfinishedEvent);
	ring_vm_funcregister("qnetworkaccessmanager_activeconfiguration",ring_QNetworkAccessManager_activeConfiguration);
	ring_vm_funcregister("qnetworkaccessmanager_cache",ring_QNetworkAccessManager_cache);
	ring_vm_funcregister("qnetworkaccessmanager_clearaccesscache",ring_QNetworkAccessManager_clearAccessCache);
	ring_vm_funcregister("qnetworkaccessmanager_configuration",ring_QNetworkAccessManager_configuration);
	ring_vm_funcregister("qnetworkaccessmanager_connecttohost",ring_QNetworkAccessManager_connectToHost);
	ring_vm_funcregister("qnetworkaccessmanager_cookiejar",ring_QNetworkAccessManager_cookieJar);
	ring_vm_funcregister("qnetworkaccessmanager_deleteresource",ring_QNetworkAccessManager_deleteResource);
	ring_vm_funcregister("qnetworkaccessmanager_get",ring_QNetworkAccessManager_get);
	ring_vm_funcregister("qnetworkaccessmanager_head",ring_QNetworkAccessManager_head);
	ring_vm_funcregister("qnetworkaccessmanager_networkaccessible",ring_QNetworkAccessManager_networkAccessible);
	ring_vm_funcregister("qnetworkaccessmanager_post",ring_QNetworkAccessManager_post);
	ring_vm_funcregister("qnetworkaccessmanager_proxy",ring_QNetworkAccessManager_proxy);
	ring_vm_funcregister("qnetworkaccessmanager_proxyfactory",ring_QNetworkAccessManager_proxyFactory);
	ring_vm_funcregister("qnetworkaccessmanager_put",ring_QNetworkAccessManager_put);
	ring_vm_funcregister("qnetworkaccessmanager_sendcustomrequest",ring_QNetworkAccessManager_sendCustomRequest);
	ring_vm_funcregister("qnetworkaccessmanager_setcache",ring_QNetworkAccessManager_setCache);
	ring_vm_funcregister("qnetworkaccessmanager_setconfiguration",ring_QNetworkAccessManager_setConfiguration);
	ring_vm_funcregister("qnetworkaccessmanager_setcookiejar",ring_QNetworkAccessManager_setCookieJar);
	ring_vm_funcregister("qnetworkaccessmanager_setnetworkaccessible",ring_QNetworkAccessManager_setNetworkAccessible);
	ring_vm_funcregister("qnetworkaccessmanager_setproxy",ring_QNetworkAccessManager_setProxy);
	ring_vm_funcregister("qnetworkaccessmanager_setproxyfactory",ring_QNetworkAccessManager_setProxyFactory);
	ring_vm_funcregister("qnetworkaccessmanager_supportedschemes",ring_QNetworkAccessManager_supportedSchemes);
	ring_vm_funcregister("qnetworkaccessmanager_geteventparameters",ring_QNetworkAccessManager_geteventparameters);
	ring_vm_funcregister("qnetworkreply_attribute",ring_QNetworkReply_attribute);
	ring_vm_funcregister("qnetworkreply_error",ring_QNetworkReply_error);
	ring_vm_funcregister("qnetworkreply_hasrawheader",ring_QNetworkReply_hasRawHeader);
	ring_vm_funcregister("qnetworkreply_header",ring_QNetworkReply_header);
	ring_vm_funcregister("qnetworkreply_isfinished",ring_QNetworkReply_isFinished);
	ring_vm_funcregister("qnetworkreply_isrunning",ring_QNetworkReply_isRunning);
	ring_vm_funcregister("qnetworkreply_manager",ring_QNetworkReply_manager);
	ring_vm_funcregister("qnetworkreply_operation",ring_QNetworkReply_operation);
	ring_vm_funcregister("qnetworkreply_rawheader",ring_QNetworkReply_rawHeader);
	ring_vm_funcregister("qnetworkreply_readbuffersize",ring_QNetworkReply_readBufferSize);
	ring_vm_funcregister("qnetworkreply_request",ring_QNetworkReply_request);
	ring_vm_funcregister("qnetworkreply_url",ring_QNetworkReply_url);
	ring_vm_funcregister("qpainterpath_addellipse",ring_QPainterPath_addEllipse);
	ring_vm_funcregister("qpainterpath_addpath",ring_QPainterPath_addPath);
	ring_vm_funcregister("qpainterpath_addpolygon",ring_QPainterPath_addPolygon);
	ring_vm_funcregister("qpainterpath_addrect",ring_QPainterPath_addRect);
	ring_vm_funcregister("qpainterpath_addregion",ring_QPainterPath_addRegion);
	ring_vm_funcregister("qpainterpath_addroundedrect",ring_QPainterPath_addRoundedRect);
	ring_vm_funcregister("qpainterpath_addtext",ring_QPainterPath_addText);
	ring_vm_funcregister("qpainterpath_angleatpercent",ring_QPainterPath_angleAtPercent);
	ring_vm_funcregister("qpainterpath_arcmoveto",ring_QPainterPath_arcMoveTo);
	ring_vm_funcregister("qpainterpath_arcto",ring_QPainterPath_arcTo);
	ring_vm_funcregister("qpainterpath_boundingrect",ring_QPainterPath_boundingRect);
	ring_vm_funcregister("qpainterpath_closesubpath",ring_QPainterPath_closeSubpath);
	ring_vm_funcregister("qpainterpath_connectpath",ring_QPainterPath_connectPath);
	ring_vm_funcregister("qpainterpath_contains",ring_QPainterPath_contains);
	ring_vm_funcregister("qpainterpath_controlpointrect",ring_QPainterPath_controlPointRect);
	ring_vm_funcregister("qpainterpath_cubicto",ring_QPainterPath_cubicTo);
	ring_vm_funcregister("qpainterpath_currentposition",ring_QPainterPath_currentPosition);
	ring_vm_funcregister("qpainterpath_elementat",ring_QPainterPath_elementAt);
	ring_vm_funcregister("qpainterpath_elementcount",ring_QPainterPath_elementCount);
	ring_vm_funcregister("qpainterpath_fillrule",ring_QPainterPath_fillRule);
	ring_vm_funcregister("qpainterpath_intersected",ring_QPainterPath_intersected);
	ring_vm_funcregister("qpainterpath_intersects",ring_QPainterPath_intersects);
	ring_vm_funcregister("qpainterpath_isempty",ring_QPainterPath_isEmpty);
	ring_vm_funcregister("qpainterpath_length",ring_QPainterPath_length);
	ring_vm_funcregister("qpainterpath_lineto",ring_QPainterPath_lineTo);
	ring_vm_funcregister("qpainterpath_moveto",ring_QPainterPath_moveTo);
	ring_vm_funcregister("qpainterpath_percentatlength",ring_QPainterPath_percentAtLength);
	ring_vm_funcregister("qpainterpath_pointatpercent",ring_QPainterPath_pointAtPercent);
	ring_vm_funcregister("qpainterpath_quadto",ring_QPainterPath_quadTo);
	ring_vm_funcregister("qpainterpath_setelementpositionat",ring_QPainterPath_setElementPositionAt);
	ring_vm_funcregister("qpainterpath_setfillrule",ring_QPainterPath_setFillRule);
	ring_vm_funcregister("qpainterpath_simplified",ring_QPainterPath_simplified);
	ring_vm_funcregister("qpainterpath_slopeatpercent",ring_QPainterPath_slopeAtPercent);
	ring_vm_funcregister("qpainterpath_subtracted",ring_QPainterPath_subtracted);
	ring_vm_funcregister("qpainterpath_swap",ring_QPainterPath_swap);
	ring_vm_funcregister("qpainterpath_tofillpolygon",ring_QPainterPath_toFillPolygon);
	ring_vm_funcregister("qpainterpath_toreversed",ring_QPainterPath_toReversed);
	ring_vm_funcregister("qpainterpath_translate",ring_QPainterPath_translate);
	ring_vm_funcregister("qpainterpath_translated",ring_QPainterPath_translated);
	ring_vm_funcregister("qpainterpath_united",ring_QPainterPath_united);
	ring_vm_funcregister("qimage_allgray",ring_QImage_allGray);
	ring_vm_funcregister("qimage_bitplanecount",ring_QImage_bitPlaneCount);
	ring_vm_funcregister("qimage_bits",ring_QImage_bits);
	ring_vm_funcregister("qimage_bytecount",ring_QImage_byteCount);
	ring_vm_funcregister("qimage_bytesperline",ring_QImage_bytesPerLine);
	ring_vm_funcregister("qimage_cachekey",ring_QImage_cacheKey);
	ring_vm_funcregister("qimage_color",ring_QImage_color);
	ring_vm_funcregister("qimage_colorcount",ring_QImage_colorCount);
	ring_vm_funcregister("qimage_constbits",ring_QImage_constBits);
	ring_vm_funcregister("qimage_constscanline",ring_QImage_constScanLine);
	ring_vm_funcregister("qimage_converttoformat",ring_QImage_convertToFormat);
	ring_vm_funcregister("qimage_copy",ring_QImage_copy);
	ring_vm_funcregister("qimage_createalphamask",ring_QImage_createAlphaMask);
	ring_vm_funcregister("qimage_createheuristicmask",ring_QImage_createHeuristicMask);
	ring_vm_funcregister("qimage_createmaskfromcolor",ring_QImage_createMaskFromColor);
	ring_vm_funcregister("qimage_depth",ring_QImage_depth);
	ring_vm_funcregister("qimage_dotspermeterx",ring_QImage_dotsPerMeterX);
	ring_vm_funcregister("qimage_dotspermetery",ring_QImage_dotsPerMeterY);
	ring_vm_funcregister("qimage_fill",ring_QImage_fill);
	ring_vm_funcregister("qimage_format",ring_QImage_format);
	ring_vm_funcregister("qimage_hasalphachannel",ring_QImage_hasAlphaChannel);
	ring_vm_funcregister("qimage_height",ring_QImage_height);
	ring_vm_funcregister("qimage_invertpixels",ring_QImage_invertPixels);
	ring_vm_funcregister("qimage_isgrayscale",ring_QImage_isGrayscale);
	ring_vm_funcregister("qimage_isnull",ring_QImage_isNull);
	ring_vm_funcregister("qimage_load",ring_QImage_load);
	ring_vm_funcregister("qimage_loadfromdata",ring_QImage_loadFromData);
	ring_vm_funcregister("qimage_mirrored",ring_QImage_mirrored);
	ring_vm_funcregister("qimage_offset",ring_QImage_offset);
	ring_vm_funcregister("qimage_pixel",ring_QImage_pixel);
	ring_vm_funcregister("qimage_pixelindex",ring_QImage_pixelIndex);
	ring_vm_funcregister("qimage_rect",ring_QImage_rect);
	ring_vm_funcregister("qimage_rgbswapped",ring_QImage_rgbSwapped);
	ring_vm_funcregister("qimage_save",ring_QImage_save);
	ring_vm_funcregister("qimage_scaled",ring_QImage_scaled);
	ring_vm_funcregister("qimage_scaledtoheight",ring_QImage_scaledToHeight);
	ring_vm_funcregister("qimage_scaledtowidth",ring_QImage_scaledToWidth);
	ring_vm_funcregister("qimage_scanline",ring_QImage_scanLine);
	ring_vm_funcregister("qimage_setcolor",ring_QImage_setColor);
	ring_vm_funcregister("qimage_setcolorcount",ring_QImage_setColorCount);
	ring_vm_funcregister("qimage_setdotspermeterx",ring_QImage_setDotsPerMeterX);
	ring_vm_funcregister("qimage_setdotspermetery",ring_QImage_setDotsPerMeterY);
	ring_vm_funcregister("qimage_setoffset",ring_QImage_setOffset);
	ring_vm_funcregister("qimage_setpixel",ring_QImage_setPixel);
	ring_vm_funcregister("qimage_settext",ring_QImage_setText);
	ring_vm_funcregister("qimage_size",ring_QImage_size);
	ring_vm_funcregister("qimage_swap",ring_QImage_swap);
	ring_vm_funcregister("qimage_text",ring_QImage_text);
	ring_vm_funcregister("qimage_textkeys",ring_QImage_textKeys);
	ring_vm_funcregister("qimage_transformed",ring_QImage_transformed);
	ring_vm_funcregister("qimage_valid",ring_QImage_valid);
	ring_vm_funcregister("qimage_width",ring_QImage_width);
	ring_vm_funcregister("ringcodehighlighter_setcolors",ring_RingCodeHighlighter_setColors);
	ring_vm_funcregister("ringcodehighlighter_setkeywordsbold",ring_RingCodeHighlighter_setKeywordsBold);
	ring_vm_funcregister("qxmlstreamreader_adddata",ring_QXmlStreamReader_addData);
	ring_vm_funcregister("qxmlstreamreader_adddata_2",ring_QXmlStreamReader_addData_2);
	ring_vm_funcregister("qxmlstreamreader_adddata_3",ring_QXmlStreamReader_addData_3);
	ring_vm_funcregister("qxmlstreamreader_addextranamespacedeclaration",ring_QXmlStreamReader_addExtraNamespaceDeclaration);
	ring_vm_funcregister("qxmlstreamreader_addextranamespacedeclarations",ring_QXmlStreamReader_addExtraNamespaceDeclarations);
	ring_vm_funcregister("qxmlstreamreader_atend",ring_QXmlStreamReader_atEnd);
	ring_vm_funcregister("qxmlstreamreader_attributes",ring_QXmlStreamReader_attributes);
	ring_vm_funcregister("qxmlstreamreader_characteroffset",ring_QXmlStreamReader_characterOffset);
	ring_vm_funcregister("qxmlstreamreader_clear",ring_QXmlStreamReader_clear);
	ring_vm_funcregister("qxmlstreamreader_columnnumber",ring_QXmlStreamReader_columnNumber);
	ring_vm_funcregister("qxmlstreamreader_device",ring_QXmlStreamReader_device);
	ring_vm_funcregister("qxmlstreamreader_documentencoding",ring_QXmlStreamReader_documentEncoding);
	ring_vm_funcregister("qxmlstreamreader_documentversion",ring_QXmlStreamReader_documentVersion);
	ring_vm_funcregister("qxmlstreamreader_dtdname",ring_QXmlStreamReader_dtdName);
	ring_vm_funcregister("qxmlstreamreader_dtdpublicid",ring_QXmlStreamReader_dtdPublicId);
	ring_vm_funcregister("qxmlstreamreader_dtdsystemid",ring_QXmlStreamReader_dtdSystemId);
	ring_vm_funcregister("qxmlstreamreader_entitydeclarations",ring_QXmlStreamReader_entityDeclarations);
	ring_vm_funcregister("qxmlstreamreader_entityresolver",ring_QXmlStreamReader_entityResolver);
	ring_vm_funcregister("qxmlstreamreader_error",ring_QXmlStreamReader_error);
	ring_vm_funcregister("qxmlstreamreader_errorstring",ring_QXmlStreamReader_errorString);
	ring_vm_funcregister("qxmlstreamreader_haserror",ring_QXmlStreamReader_hasError);
	ring_vm_funcregister("qxmlstreamreader_iscdata",ring_QXmlStreamReader_isCDATA);
	ring_vm_funcregister("qxmlstreamreader_ischaracters",ring_QXmlStreamReader_isCharacters);
	ring_vm_funcregister("qxmlstreamreader_iscomment",ring_QXmlStreamReader_isComment);
	ring_vm_funcregister("qxmlstreamreader_isdtd",ring_QXmlStreamReader_isDTD);
	ring_vm_funcregister("qxmlstreamreader_isenddocument",ring_QXmlStreamReader_isEndDocument);
	ring_vm_funcregister("qxmlstreamreader_isendelement",ring_QXmlStreamReader_isEndElement);
	ring_vm_funcregister("qxmlstreamreader_isentityreference",ring_QXmlStreamReader_isEntityReference);
	ring_vm_funcregister("qxmlstreamreader_isprocessinginstruction",ring_QXmlStreamReader_isProcessingInstruction);
	ring_vm_funcregister("qxmlstreamreader_isstandalonedocument",ring_QXmlStreamReader_isStandaloneDocument);
	ring_vm_funcregister("qxmlstreamreader_isstartdocument",ring_QXmlStreamReader_isStartDocument);
	ring_vm_funcregister("qxmlstreamreader_isstartelement",ring_QXmlStreamReader_isStartElement);
	ring_vm_funcregister("qxmlstreamreader_iswhitespace",ring_QXmlStreamReader_isWhitespace);
	ring_vm_funcregister("qxmlstreamreader_linenumber",ring_QXmlStreamReader_lineNumber);
	ring_vm_funcregister("qxmlstreamreader_name",ring_QXmlStreamReader_name);
	ring_vm_funcregister("qxmlstreamreader_namespacedeclarations",ring_QXmlStreamReader_namespaceDeclarations);
	ring_vm_funcregister("qxmlstreamreader_namespaceprocessing",ring_QXmlStreamReader_namespaceProcessing);
	ring_vm_funcregister("qxmlstreamreader_namespaceuri",ring_QXmlStreamReader_namespaceUri);
	ring_vm_funcregister("qxmlstreamreader_notationdeclarations",ring_QXmlStreamReader_notationDeclarations);
	ring_vm_funcregister("qxmlstreamreader_prefix",ring_QXmlStreamReader_prefix);
	ring_vm_funcregister("qxmlstreamreader_processinginstructiondata",ring_QXmlStreamReader_processingInstructionData);
	ring_vm_funcregister("qxmlstreamreader_processinginstructiontarget",ring_QXmlStreamReader_processingInstructionTarget);
	ring_vm_funcregister("qxmlstreamreader_qualifiedname",ring_QXmlStreamReader_qualifiedName);
	ring_vm_funcregister("qxmlstreamreader_raiseerror",ring_QXmlStreamReader_raiseError);
	ring_vm_funcregister("qxmlstreamreader_readelementtext",ring_QXmlStreamReader_readElementText);
	ring_vm_funcregister("qxmlstreamreader_readnext",ring_QXmlStreamReader_readNext);
	ring_vm_funcregister("qxmlstreamreader_readnextstartelement",ring_QXmlStreamReader_readNextStartElement);
	ring_vm_funcregister("qxmlstreamreader_setdevice",ring_QXmlStreamReader_setDevice);
	ring_vm_funcregister("qxmlstreamreader_setentityresolver",ring_QXmlStreamReader_setEntityResolver);
	ring_vm_funcregister("qxmlstreamreader_setnamespaceprocessing",ring_QXmlStreamReader_setNamespaceProcessing);
	ring_vm_funcregister("qxmlstreamreader_skipcurrentelement",ring_QXmlStreamReader_skipCurrentElement);
	ring_vm_funcregister("qxmlstreamreader_text",ring_QXmlStreamReader_text);
	ring_vm_funcregister("qxmlstreamreader_tokenstring",ring_QXmlStreamReader_tokenString);
	ring_vm_funcregister("qxmlstreamreader_tokentype",ring_QXmlStreamReader_tokenType);
	ring_vm_funcregister("qxmlstreamwriter_autoformatting",ring_QXmlStreamWriter_autoFormatting);
	ring_vm_funcregister("qxmlstreamwriter_autoformattingindent",ring_QXmlStreamWriter_autoFormattingIndent);
	ring_vm_funcregister("qxmlstreamwriter_codec",ring_QXmlStreamWriter_codec);
	ring_vm_funcregister("qxmlstreamwriter_device",ring_QXmlStreamWriter_device);
	ring_vm_funcregister("qxmlstreamwriter_haserror",ring_QXmlStreamWriter_hasError);
	ring_vm_funcregister("qxmlstreamwriter_setautoformatting",ring_QXmlStreamWriter_setAutoFormatting);
	ring_vm_funcregister("qxmlstreamwriter_setautoformattingindent",ring_QXmlStreamWriter_setAutoFormattingIndent);
	ring_vm_funcregister("qxmlstreamwriter_setcodec",ring_QXmlStreamWriter_setCodec);
	ring_vm_funcregister("qxmlstreamwriter_setcodec_2",ring_QXmlStreamWriter_setCodec_2);
	ring_vm_funcregister("qxmlstreamwriter_setdevice",ring_QXmlStreamWriter_setDevice);
	ring_vm_funcregister("qxmlstreamwriter_writeattribute",ring_QXmlStreamWriter_writeAttribute);
	ring_vm_funcregister("qxmlstreamwriter_writeattribute_2",ring_QXmlStreamWriter_writeAttribute_2);
	ring_vm_funcregister("qxmlstreamwriter_writeattribute_3",ring_QXmlStreamWriter_writeAttribute_3);
	ring_vm_funcregister("qxmlstreamwriter_writeattributes",ring_QXmlStreamWriter_writeAttributes);
	ring_vm_funcregister("qxmlstreamwriter_writecdata",ring_QXmlStreamWriter_writeCDATA);
	ring_vm_funcregister("qxmlstreamwriter_writecharacters",ring_QXmlStreamWriter_writeCharacters);
	ring_vm_funcregister("qxmlstreamwriter_writecomment",ring_QXmlStreamWriter_writeComment);
	ring_vm_funcregister("qxmlstreamwriter_writecurrenttoken",ring_QXmlStreamWriter_writeCurrentToken);
	ring_vm_funcregister("qxmlstreamwriter_writedtd",ring_QXmlStreamWriter_writeDTD);
	ring_vm_funcregister("qxmlstreamwriter_writedefaultnamespace",ring_QXmlStreamWriter_writeDefaultNamespace);
	ring_vm_funcregister("qxmlstreamwriter_writeemptyelement",ring_QXmlStreamWriter_writeEmptyElement);
	ring_vm_funcregister("qxmlstreamwriter_writeemptyelement_2",ring_QXmlStreamWriter_writeEmptyElement_2);
	ring_vm_funcregister("qxmlstreamwriter_writeenddocument",ring_QXmlStreamWriter_writeEndDocument);
	ring_vm_funcregister("qxmlstreamwriter_writeendelement",ring_QXmlStreamWriter_writeEndElement);
	ring_vm_funcregister("qxmlstreamwriter_writeentityreference",ring_QXmlStreamWriter_writeEntityReference);
	ring_vm_funcregister("qxmlstreamwriter_writenamespace",ring_QXmlStreamWriter_writeNamespace);
	ring_vm_funcregister("qxmlstreamwriter_writeprocessinginstruction",ring_QXmlStreamWriter_writeProcessingInstruction);
	ring_vm_funcregister("qxmlstreamwriter_writestartdocument",ring_QXmlStreamWriter_writeStartDocument);
	ring_vm_funcregister("qxmlstreamwriter_writestartdocument_2",ring_QXmlStreamWriter_writeStartDocument_2);
	ring_vm_funcregister("qxmlstreamwriter_writestartdocument_3",ring_QXmlStreamWriter_writeStartDocument_3);
	ring_vm_funcregister("qxmlstreamwriter_writestartelement",ring_QXmlStreamWriter_writeStartElement);
	ring_vm_funcregister("qxmlstreamwriter_writestartelement_2",ring_QXmlStreamWriter_writeStartElement_2);
	ring_vm_funcregister("qxmlstreamwriter_writetextelement",ring_QXmlStreamWriter_writeTextElement);
	ring_vm_funcregister("qxmlstreamwriter_writetextelement_2",ring_QXmlStreamWriter_writeTextElement_2);
	ring_vm_funcregister("qxmlstreamnotationdeclaration_name",ring_QXmlStreamNotationDeclaration_name);
	ring_vm_funcregister("qxmlstreamnotationdeclaration_publicid",ring_QXmlStreamNotationDeclaration_publicId);
	ring_vm_funcregister("qxmlstreamnotationdeclaration_systemid",ring_QXmlStreamNotationDeclaration_systemId);
	ring_vm_funcregister("qxmlstreamnamespacedeclaration_namespaceuri",ring_QXmlStreamNamespaceDeclaration_namespaceUri);
	ring_vm_funcregister("qxmlstreamnamespacedeclaration_prefix",ring_QXmlStreamNamespaceDeclaration_prefix);
	ring_vm_funcregister("qxmlstreamentitydeclaration_name",ring_QXmlStreamEntityDeclaration_name);
	ring_vm_funcregister("qxmlstreamentitydeclaration_notationname",ring_QXmlStreamEntityDeclaration_notationName);
	ring_vm_funcregister("qxmlstreamentitydeclaration_publicid",ring_QXmlStreamEntityDeclaration_publicId);
	ring_vm_funcregister("qxmlstreamentitydeclaration_systemid",ring_QXmlStreamEntityDeclaration_systemId);
	ring_vm_funcregister("qxmlstreamentitydeclaration_value",ring_QXmlStreamEntityDeclaration_value);
	ring_vm_funcregister("qxmlstreamattributes_append",ring_QXmlStreamAttributes_append);
	ring_vm_funcregister("qxmlstreamattributes_append_2",ring_QXmlStreamAttributes_append_2);
	ring_vm_funcregister("qxmlstreamattributes_hasattribute",ring_QXmlStreamAttributes_hasAttribute);
	ring_vm_funcregister("qxmlstreamattributes_hasattribute_2",ring_QXmlStreamAttributes_hasAttribute_2);
	ring_vm_funcregister("qxmlstreamattributes_hasattribute_3",ring_QXmlStreamAttributes_hasAttribute_3);
	ring_vm_funcregister("qxmlstreamattributes_value",ring_QXmlStreamAttributes_value);
	ring_vm_funcregister("qxmlstreamattributes_value_2",ring_QXmlStreamAttributes_value_2);
	ring_vm_funcregister("qxmlstreamattributes_value_3",ring_QXmlStreamAttributes_value_3);
	ring_vm_funcregister("qxmlstreamattributes_value_4",ring_QXmlStreamAttributes_value_4);
	ring_vm_funcregister("qxmlstreamattributes_value_5",ring_QXmlStreamAttributes_value_5);
	ring_vm_funcregister("qxmlstreamattribute_isdefault",ring_QXmlStreamAttribute_isDefault);
	ring_vm_funcregister("qxmlstreamattribute_name",ring_QXmlStreamAttribute_name);
	ring_vm_funcregister("qxmlstreamattribute_namespaceuri",ring_QXmlStreamAttribute_namespaceUri);
	ring_vm_funcregister("qxmlstreamattribute_prefix",ring_QXmlStreamAttribute_prefix);
	ring_vm_funcregister("qxmlstreamattribute_qualifiedname",ring_QXmlStreamAttribute_qualifiedName);
	ring_vm_funcregister("qxmlstreamattribute_value",ring_QXmlStreamAttribute_value);
	ring_vm_funcregister("qthread_eventdispatcher",ring_QThread_eventDispatcher);
	ring_vm_funcregister("qthread_exit",ring_QThread_exit);
	ring_vm_funcregister("qthread_isfinished",ring_QThread_isFinished);
	ring_vm_funcregister("qthread_isinterruptionrequested",ring_QThread_isInterruptionRequested);
	ring_vm_funcregister("qthread_isrunning",ring_QThread_isRunning);
	ring_vm_funcregister("qthread_priority",ring_QThread_priority);
	ring_vm_funcregister("qthread_requestinterruption",ring_QThread_requestInterruption);
	ring_vm_funcregister("qthread_seteventdispatcher",ring_QThread_setEventDispatcher);
	ring_vm_funcregister("qthread_setpriority",ring_QThread_setPriority);
	ring_vm_funcregister("qthread_setstacksize",ring_QThread_setStackSize);
	ring_vm_funcregister("qthread_stacksize",ring_QThread_stackSize);
	ring_vm_funcregister("qthread_wait",ring_QThread_wait);
	ring_vm_funcregister("qthread_quit",ring_QThread_quit);
	ring_vm_funcregister("qthread_start",ring_QThread_start);
	ring_vm_funcregister("qthread_terminate",ring_QThread_terminate);
	ring_vm_funcregister("qthread_currentthread",ring_QThread_currentThread);
	ring_vm_funcregister("qthread_currentthreadid",ring_QThread_currentThreadId);
	ring_vm_funcregister("qthread_idealthreadcount",ring_QThread_idealThreadCount);
	ring_vm_funcregister("qthread_msleep",ring_QThread_msleep);
	ring_vm_funcregister("qthread_sleep",ring_QThread_sleep);
	ring_vm_funcregister("qthread_usleep",ring_QThread_usleep);
	ring_vm_funcregister("qthread_yieldcurrentthread",ring_QThread_yieldCurrentThread);
	ring_vm_funcregister("qthread_setstartedevent",ring_QThread_setStartedEvent);
	ring_vm_funcregister("qthread_setfinishedevent",ring_QThread_setFinishedEvent);
	ring_vm_funcregister("qthread_getstartedevent",ring_QThread_getStartedEvent);
	ring_vm_funcregister("qthread_getfinishedevent",ring_QThread_getFinishedEvent);
	ring_vm_funcregister("qthreadpool_activethreadcount",ring_QThreadPool_activeThreadCount);
	ring_vm_funcregister("qthreadpool_clear",ring_QThreadPool_clear);
	ring_vm_funcregister("qthreadpool_expirytimeout",ring_QThreadPool_expiryTimeout);
	ring_vm_funcregister("qthreadpool_maxthreadcount",ring_QThreadPool_maxThreadCount);
	ring_vm_funcregister("qthreadpool_releasethread",ring_QThreadPool_releaseThread);
	ring_vm_funcregister("qthreadpool_reservethread",ring_QThreadPool_reserveThread);
	ring_vm_funcregister("qthreadpool_setexpirytimeout",ring_QThreadPool_setExpiryTimeout);
	ring_vm_funcregister("qthreadpool_setmaxthreadcount",ring_QThreadPool_setMaxThreadCount);
	ring_vm_funcregister("qthreadpool_start",ring_QThreadPool_start);
	ring_vm_funcregister("qthreadpool_trystart",ring_QThreadPool_tryStart);
	ring_vm_funcregister("qthreadpool_waitfordone",ring_QThreadPool_waitForDone);
	ring_vm_funcregister("qthreadpool_globalinstance",ring_QThreadPool_globalInstance);
	ring_vm_funcregister("qregularexpression_capturecount",ring_QRegularExpression_captureCount);
	ring_vm_funcregister("qregularexpression_errorstring",ring_QRegularExpression_errorString);
	ring_vm_funcregister("qregularexpression_globalmatch",ring_QRegularExpression_globalMatch);
	ring_vm_funcregister("qregularexpression_isvalid",ring_QRegularExpression_isValid);
	ring_vm_funcregister("qregularexpression_match",ring_QRegularExpression_match);
	ring_vm_funcregister("qregularexpression_namedcapturegroups",ring_QRegularExpression_namedCaptureGroups);
	ring_vm_funcregister("qregularexpression_pattern",ring_QRegularExpression_pattern);
	ring_vm_funcregister("qregularexpression_patternerroroffset",ring_QRegularExpression_patternErrorOffset);
	ring_vm_funcregister("qregularexpression_patternoptions",ring_QRegularExpression_patternOptions);
	ring_vm_funcregister("qregularexpression_setpattern",ring_QRegularExpression_setPattern);
	ring_vm_funcregister("qregularexpression_setpatternoptions",ring_QRegularExpression_setPatternOptions);
	ring_vm_funcregister("qregularexpression_swap",ring_QRegularExpression_swap);
	ring_vm_funcregister("qregularexpressionmatch_captured",ring_QRegularExpressionMatch_captured);
	ring_vm_funcregister("qregularexpressionmatch_captured_2",ring_QRegularExpressionMatch_captured_2);
	ring_vm_funcregister("qregularexpressionmatch_capturedend",ring_QRegularExpressionMatch_capturedEnd);
	ring_vm_funcregister("qregularexpressionmatch_capturedend_2",ring_QRegularExpressionMatch_capturedEnd_2);
	ring_vm_funcregister("qregularexpressionmatch_capturedlength",ring_QRegularExpressionMatch_capturedLength);
	ring_vm_funcregister("qregularexpressionmatch_capturedlength_2",ring_QRegularExpressionMatch_capturedLength_2);
	ring_vm_funcregister("qregularexpressionmatch_capturedref",ring_QRegularExpressionMatch_capturedRef);
	ring_vm_funcregister("qregularexpressionmatch_capturedref_2",ring_QRegularExpressionMatch_capturedRef_2);
	ring_vm_funcregister("qregularexpressionmatch_capturedstart",ring_QRegularExpressionMatch_capturedStart);
	ring_vm_funcregister("qregularexpressionmatch_capturedstart_2",ring_QRegularExpressionMatch_capturedStart_2);
	ring_vm_funcregister("qregularexpressionmatch_capturedtexts",ring_QRegularExpressionMatch_capturedTexts);
	ring_vm_funcregister("qregularexpressionmatch_hasmatch",ring_QRegularExpressionMatch_hasMatch);
	ring_vm_funcregister("qregularexpressionmatch_haspartialmatch",ring_QRegularExpressionMatch_hasPartialMatch);
	ring_vm_funcregister("qregularexpressionmatch_isvalid",ring_QRegularExpressionMatch_isValid);
	ring_vm_funcregister("qregularexpressionmatch_lastcapturedindex",ring_QRegularExpressionMatch_lastCapturedIndex);
	ring_vm_funcregister("qregularexpressionmatch_matchoptions",ring_QRegularExpressionMatch_matchOptions);
	ring_vm_funcregister("qregularexpressionmatch_matchtype",ring_QRegularExpressionMatch_matchType);
	ring_vm_funcregister("qregularexpressionmatch_regularexpression",ring_QRegularExpressionMatch_regularExpression);
	ring_vm_funcregister("qregularexpressionmatch_swap",ring_QRegularExpressionMatch_swap);
	ring_vm_funcregister("qregularexpressionmatchiterator_hasnext",ring_QRegularExpressionMatchIterator_hasNext);
	ring_vm_funcregister("qregularexpressionmatchiterator_isvalid",ring_QRegularExpressionMatchIterator_isValid);
	ring_vm_funcregister("qregularexpressionmatchiterator_matchoptions",ring_QRegularExpressionMatchIterator_matchOptions);
	ring_vm_funcregister("qregularexpressionmatchiterator_matchtype",ring_QRegularExpressionMatchIterator_matchType);
	ring_vm_funcregister("qregularexpressionmatchiterator_next",ring_QRegularExpressionMatchIterator_next);
	ring_vm_funcregister("qregularexpressionmatchiterator_peeknext",ring_QRegularExpressionMatchIterator_peekNext);
	ring_vm_funcregister("qregularexpressionmatchiterator_regularexpression",ring_QRegularExpressionMatchIterator_regularExpression);
	ring_vm_funcregister("qregularexpressionmatchiterator_swap",ring_QRegularExpressionMatchIterator_swap);
	ring_vm_funcregister("qjsonarray_append",ring_QJsonArray_append);
	ring_vm_funcregister("qjsonarray_at",ring_QJsonArray_at);
	ring_vm_funcregister("qjsonarray_contains",ring_QJsonArray_contains);
	ring_vm_funcregister("qjsonarray_count",ring_QJsonArray_count);
	ring_vm_funcregister("qjsonarray_empty",ring_QJsonArray_empty);
	ring_vm_funcregister("qjsonarray_first",ring_QJsonArray_first);
	ring_vm_funcregister("qjsonarray_insert",ring_QJsonArray_insert);
	ring_vm_funcregister("qjsonarray_isempty",ring_QJsonArray_isEmpty);
	ring_vm_funcregister("qjsonarray_last",ring_QJsonArray_last);
	ring_vm_funcregister("qjsonarray_pop_back",ring_QJsonArray_pop_back);
	ring_vm_funcregister("qjsonarray_pop_front",ring_QJsonArray_pop_front);
	ring_vm_funcregister("qjsonarray_prepend",ring_QJsonArray_prepend);
	ring_vm_funcregister("qjsonarray_push_back",ring_QJsonArray_push_back);
	ring_vm_funcregister("qjsonarray_push_front",ring_QJsonArray_push_front);
	ring_vm_funcregister("qjsonarray_removeat",ring_QJsonArray_removeAt);
	ring_vm_funcregister("qjsonarray_removefirst",ring_QJsonArray_removeFirst);
	ring_vm_funcregister("qjsonarray_removelast",ring_QJsonArray_removeLast);
	ring_vm_funcregister("qjsonarray_replace",ring_QJsonArray_replace);
	ring_vm_funcregister("qjsonarray_size",ring_QJsonArray_size);
	ring_vm_funcregister("qjsonarray_takeat",ring_QJsonArray_takeAt);
	ring_vm_funcregister("qjsonarray_tovariantlist",ring_QJsonArray_toVariantList);
	ring_vm_funcregister("qjsonarray_fromstringlist",ring_QJsonArray_fromStringList);
	ring_vm_funcregister("qjsonarray_fromvariantlist",ring_QJsonArray_fromVariantList);
	ring_vm_funcregister("qjsondocument_array",ring_QJsonDocument_array);
	ring_vm_funcregister("qjsondocument_isarray",ring_QJsonDocument_isArray);
	ring_vm_funcregister("qjsondocument_isempty",ring_QJsonDocument_isEmpty);
	ring_vm_funcregister("qjsondocument_isnull",ring_QJsonDocument_isNull);
	ring_vm_funcregister("qjsondocument_isobject",ring_QJsonDocument_isObject);
	ring_vm_funcregister("qjsondocument_object",ring_QJsonDocument_object);
	ring_vm_funcregister("qjsondocument_rawdata",ring_QJsonDocument_rawData);
	ring_vm_funcregister("qjsondocument_setarray",ring_QJsonDocument_setArray);
	ring_vm_funcregister("qjsondocument_setobject",ring_QJsonDocument_setObject);
	ring_vm_funcregister("qjsondocument_tobinarydata",ring_QJsonDocument_toBinaryData);
	ring_vm_funcregister("qjsondocument_tojson",ring_QJsonDocument_toJson);
	ring_vm_funcregister("qjsondocument_tovariant",ring_QJsonDocument_toVariant);
	ring_vm_funcregister("qjsondocument_frombinarydata",ring_QJsonDocument_fromBinaryData);
	ring_vm_funcregister("qjsondocument_fromjson",ring_QJsonDocument_fromJson);
	ring_vm_funcregister("qjsondocument_fromrawdata",ring_QJsonDocument_fromRawData);
	ring_vm_funcregister("qjsondocument_fromvariant",ring_QJsonDocument_fromVariant);
	ring_vm_funcregister("qjsonobject_contains",ring_QJsonObject_contains);
	ring_vm_funcregister("qjsonobject_count",ring_QJsonObject_count);
	ring_vm_funcregister("qjsonobject_empty",ring_QJsonObject_empty);
	ring_vm_funcregister("qjsonobject_isempty",ring_QJsonObject_isEmpty);
	ring_vm_funcregister("qjsonobject_keys",ring_QJsonObject_keys);
	ring_vm_funcregister("qjsonobject_length",ring_QJsonObject_length);
	ring_vm_funcregister("qjsonobject_remove",ring_QJsonObject_remove);
	ring_vm_funcregister("qjsonobject_size",ring_QJsonObject_size);
	ring_vm_funcregister("qjsonobject_take",ring_QJsonObject_take);
	ring_vm_funcregister("qjsonobject_tovariantmap",ring_QJsonObject_toVariantMap);
	ring_vm_funcregister("qjsonobject_value",ring_QJsonObject_value);
	ring_vm_funcregister("qjsonobject_fromvariantmap",ring_QJsonObject_fromVariantMap);
	ring_vm_funcregister("qjsonparseerror_errorstring",ring_QJsonParseError_errorString);
	ring_vm_funcregister("qjsonvalue_isarray",ring_QJsonValue_isArray);
	ring_vm_funcregister("qjsonvalue_isbool",ring_QJsonValue_isBool);
	ring_vm_funcregister("qjsonvalue_isdouble",ring_QJsonValue_isDouble);
	ring_vm_funcregister("qjsonvalue_isnull",ring_QJsonValue_isNull);
	ring_vm_funcregister("qjsonvalue_isobject",ring_QJsonValue_isObject);
	ring_vm_funcregister("qjsonvalue_isstring",ring_QJsonValue_isString);
	ring_vm_funcregister("qjsonvalue_isundefined",ring_QJsonValue_isUndefined);
	ring_vm_funcregister("qjsonvalue_toarray",ring_QJsonValue_toArray);
	ring_vm_funcregister("qjsonvalue_toarray_2",ring_QJsonValue_toArray_2);
	ring_vm_funcregister("qjsonvalue_tobool",ring_QJsonValue_toBool);
	ring_vm_funcregister("qjsonvalue_todouble",ring_QJsonValue_toDouble);
	ring_vm_funcregister("qjsonvalue_toint",ring_QJsonValue_toInt);
	ring_vm_funcregister("qjsonvalue_toobject",ring_QJsonValue_toObject);
	ring_vm_funcregister("qjsonvalue_toobject_2",ring_QJsonValue_toObject_2);
	ring_vm_funcregister("qjsonvalue_tostring",ring_QJsonValue_toString);
	ring_vm_funcregister("qjsonvalue_tovariant",ring_QJsonValue_toVariant);
	ring_vm_funcregister("qjsonvalue_type",ring_QJsonValue_type);
	ring_vm_funcregister("qjsonvalue_fromvariant",ring_QJsonValue_fromVariant);
	ring_vm_funcregister("qplaintextedit_anchorat",ring_QPlainTextEdit_anchorAt);
	ring_vm_funcregister("qplaintextedit_backgroundvisible",ring_QPlainTextEdit_backgroundVisible);
	ring_vm_funcregister("qplaintextedit_blockcount",ring_QPlainTextEdit_blockCount);
	ring_vm_funcregister("qplaintextedit_canpaste",ring_QPlainTextEdit_canPaste);
	ring_vm_funcregister("qplaintextedit_centeronscroll",ring_QPlainTextEdit_centerOnScroll);
	ring_vm_funcregister("qplaintextedit_createstandardcontextmenu",ring_QPlainTextEdit_createStandardContextMenu);
	ring_vm_funcregister("qplaintextedit_currentcharformat",ring_QPlainTextEdit_currentCharFormat);
	ring_vm_funcregister("qplaintextedit_cursorforposition",ring_QPlainTextEdit_cursorForPosition);
	ring_vm_funcregister("qplaintextedit_cursorrect",ring_QPlainTextEdit_cursorRect);
	ring_vm_funcregister("qplaintextedit_cursorrect_2",ring_QPlainTextEdit_cursorRect_2);
	ring_vm_funcregister("qplaintextedit_cursorwidth",ring_QPlainTextEdit_cursorWidth);
	ring_vm_funcregister("qplaintextedit_document",ring_QPlainTextEdit_document);
	ring_vm_funcregister("qplaintextedit_documenttitle",ring_QPlainTextEdit_documentTitle);
	ring_vm_funcregister("qplaintextedit_ensurecursorvisible",ring_QPlainTextEdit_ensureCursorVisible);
	ring_vm_funcregister("qplaintextedit_extraselections",ring_QPlainTextEdit_extraSelections);
	ring_vm_funcregister("qplaintextedit_find",ring_QPlainTextEdit_find);
	ring_vm_funcregister("qplaintextedit_isreadonly",ring_QPlainTextEdit_isReadOnly);
	ring_vm_funcregister("qplaintextedit_isundoredoenabled",ring_QPlainTextEdit_isUndoRedoEnabled);
	ring_vm_funcregister("qplaintextedit_linewrapmode",ring_QPlainTextEdit_lineWrapMode);
	ring_vm_funcregister("qplaintextedit_maximumblockcount",ring_QPlainTextEdit_maximumBlockCount);
	ring_vm_funcregister("qplaintextedit_mergecurrentcharformat",ring_QPlainTextEdit_mergeCurrentCharFormat);
	ring_vm_funcregister("qplaintextedit_movecursor",ring_QPlainTextEdit_moveCursor);
	ring_vm_funcregister("qplaintextedit_overwritemode",ring_QPlainTextEdit_overwriteMode);
	ring_vm_funcregister("qplaintextedit_print",ring_QPlainTextEdit_print);
	ring_vm_funcregister("qplaintextedit_setbackgroundvisible",ring_QPlainTextEdit_setBackgroundVisible);
	ring_vm_funcregister("qplaintextedit_setcenteronscroll",ring_QPlainTextEdit_setCenterOnScroll);
	ring_vm_funcregister("qplaintextedit_setcurrentcharformat",ring_QPlainTextEdit_setCurrentCharFormat);
	ring_vm_funcregister("qplaintextedit_setcursorwidth",ring_QPlainTextEdit_setCursorWidth);
	ring_vm_funcregister("qplaintextedit_setdocument",ring_QPlainTextEdit_setDocument);
	ring_vm_funcregister("qplaintextedit_setdocumenttitle",ring_QPlainTextEdit_setDocumentTitle);
	ring_vm_funcregister("qplaintextedit_setextraselections",ring_QPlainTextEdit_setExtraSelections);
	ring_vm_funcregister("qplaintextedit_setlinewrapmode",ring_QPlainTextEdit_setLineWrapMode);
	ring_vm_funcregister("qplaintextedit_setmaximumblockcount",ring_QPlainTextEdit_setMaximumBlockCount);
	ring_vm_funcregister("qplaintextedit_setoverwritemode",ring_QPlainTextEdit_setOverwriteMode);
	ring_vm_funcregister("qplaintextedit_setreadonly",ring_QPlainTextEdit_setReadOnly);
	ring_vm_funcregister("qplaintextedit_settabchangesfocus",ring_QPlainTextEdit_setTabChangesFocus);
	ring_vm_funcregister("qplaintextedit_settabstopwidth",ring_QPlainTextEdit_setTabStopWidth);
	ring_vm_funcregister("qplaintextedit_settextcursor",ring_QPlainTextEdit_setTextCursor);
	ring_vm_funcregister("qplaintextedit_settextinteractionflags",ring_QPlainTextEdit_setTextInteractionFlags);
	ring_vm_funcregister("qplaintextedit_setundoredoenabled",ring_QPlainTextEdit_setUndoRedoEnabled);
	ring_vm_funcregister("qplaintextedit_setwordwrapmode",ring_QPlainTextEdit_setWordWrapMode);
	ring_vm_funcregister("qplaintextedit_tabchangesfocus",ring_QPlainTextEdit_tabChangesFocus);
	ring_vm_funcregister("qplaintextedit_tabstopwidth",ring_QPlainTextEdit_tabStopWidth);
	ring_vm_funcregister("qplaintextedit_textcursor",ring_QPlainTextEdit_textCursor);
	ring_vm_funcregister("qplaintextedit_textinteractionflags",ring_QPlainTextEdit_textInteractionFlags);
	ring_vm_funcregister("qplaintextedit_toplaintext",ring_QPlainTextEdit_toPlainText);
	ring_vm_funcregister("qplaintextedit_wordwrapmode",ring_QPlainTextEdit_wordWrapMode);
	ring_vm_funcregister("qplaintextedit_appendhtml",ring_QPlainTextEdit_appendHtml);
	ring_vm_funcregister("qplaintextedit_appendplaintext",ring_QPlainTextEdit_appendPlainText);
	ring_vm_funcregister("qplaintextedit_centercursor",ring_QPlainTextEdit_centerCursor);
	ring_vm_funcregister("qplaintextedit_clear",ring_QPlainTextEdit_clear);
	ring_vm_funcregister("qplaintextedit_copy",ring_QPlainTextEdit_copy);
	ring_vm_funcregister("qplaintextedit_cut",ring_QPlainTextEdit_cut);
	ring_vm_funcregister("qplaintextedit_insertplaintext",ring_QPlainTextEdit_insertPlainText);
	ring_vm_funcregister("qplaintextedit_paste",ring_QPlainTextEdit_paste);
	ring_vm_funcregister("qplaintextedit_redo",ring_QPlainTextEdit_redo);
	ring_vm_funcregister("qplaintextedit_selectall",ring_QPlainTextEdit_selectAll);
	ring_vm_funcregister("qplaintextedit_setplaintext",ring_QPlainTextEdit_setPlainText);
	ring_vm_funcregister("qplaintextedit_undo",ring_QPlainTextEdit_undo);
	ring_vm_funcregister("qplaintextedit_zoomin",ring_QPlainTextEdit_zoomIn);
	ring_vm_funcregister("qplaintextedit_zoomout",ring_QPlainTextEdit_zoomOut);
	ring_vm_funcregister("qplaintextedit_setblockcountchangedevent",ring_QPlainTextEdit_setblockCountChangedEvent);
	ring_vm_funcregister("qplaintextedit_setcopyavailableevent",ring_QPlainTextEdit_setcopyAvailableEvent);
	ring_vm_funcregister("qplaintextedit_setcursorpositionchangedevent",ring_QPlainTextEdit_setcursorPositionChangedEvent);
	ring_vm_funcregister("qplaintextedit_setmodificationchangedevent",ring_QPlainTextEdit_setmodificationChangedEvent);
	ring_vm_funcregister("qplaintextedit_setredoavailableevent",ring_QPlainTextEdit_setredoAvailableEvent);
	ring_vm_funcregister("qplaintextedit_setselectionchangedevent",ring_QPlainTextEdit_setselectionChangedEvent);
	ring_vm_funcregister("qplaintextedit_settextchangedevent",ring_QPlainTextEdit_settextChangedEvent);
	ring_vm_funcregister("qplaintextedit_setundoavailableevent",ring_QPlainTextEdit_setundoAvailableEvent);
	ring_vm_funcregister("qplaintextedit_setupdaterequestevent",ring_QPlainTextEdit_setupdateRequestEvent);
	ring_vm_funcregister("qplaintextedit_getblockcountchangedevent",ring_QPlainTextEdit_getblockCountChangedEvent);
	ring_vm_funcregister("qplaintextedit_getcopyavailableevent",ring_QPlainTextEdit_getcopyAvailableEvent);
	ring_vm_funcregister("qplaintextedit_getcursorpositionchangedevent",ring_QPlainTextEdit_getcursorPositionChangedEvent);
	ring_vm_funcregister("qplaintextedit_getmodificationchangedevent",ring_QPlainTextEdit_getmodificationChangedEvent);
	ring_vm_funcregister("qplaintextedit_getredoavailableevent",ring_QPlainTextEdit_getredoAvailableEvent);
	ring_vm_funcregister("qplaintextedit_getselectionchangedevent",ring_QPlainTextEdit_getselectionChangedEvent);
	ring_vm_funcregister("qplaintextedit_gettextchangedevent",ring_QPlainTextEdit_gettextChangedEvent);
	ring_vm_funcregister("qplaintextedit_getundoavailableevent",ring_QPlainTextEdit_getundoAvailableEvent);
	ring_vm_funcregister("qplaintextedit_getupdaterequestevent",ring_QPlainTextEdit_getupdateRequestEvent);
	ring_vm_funcregister("qplaintextedit_cyanline",ring_QPlainTextEdit_cyanline);
	ring_vm_funcregister("qplaintextedit_setactivelinecolor",ring_QPlainTextEdit_setactivelinecolor);
	ring_vm_funcregister("codeeditor_setcompleter",ring_CodeEditor_setCompleter);
	ring_vm_funcregister("codeeditor_completer",ring_CodeEditor_completer);
	ring_vm_funcregister("codeeditor_setlinenumbersareacolor",ring_CodeEditor_setLineNumbersAreaColor);
	ring_vm_funcregister("codeeditor_setlinenumbersareabackcolor",ring_CodeEditor_setLineNumbersAreaBackColor);
	ring_vm_funcregister("qgridlayout_additem",ring_QGridLayout_addItem);
	ring_vm_funcregister("qgridlayout_addlayout",ring_QGridLayout_addLayout);
	ring_vm_funcregister("qgridlayout_addlayout_2",ring_QGridLayout_addLayout_2);
	ring_vm_funcregister("qgridlayout_addwidget",ring_QGridLayout_addWidget);
	ring_vm_funcregister("qgridlayout_addwidget_2",ring_QGridLayout_addWidget_2);
	ring_vm_funcregister("qgridlayout_cellrect",ring_QGridLayout_cellRect);
	ring_vm_funcregister("qgridlayout_columncount",ring_QGridLayout_columnCount);
	ring_vm_funcregister("qgridlayout_columnminimumwidth",ring_QGridLayout_columnMinimumWidth);
	ring_vm_funcregister("qgridlayout_columnstretch",ring_QGridLayout_columnStretch);
	ring_vm_funcregister("qgridlayout_getitemposition",ring_QGridLayout_getItemPosition);
	ring_vm_funcregister("qgridlayout_horizontalspacing",ring_QGridLayout_horizontalSpacing);
	ring_vm_funcregister("qgridlayout_itematposition",ring_QGridLayout_itemAtPosition);
	ring_vm_funcregister("qgridlayout_origincorner",ring_QGridLayout_originCorner);
	ring_vm_funcregister("qgridlayout_rowcount",ring_QGridLayout_rowCount);
	ring_vm_funcregister("qgridlayout_rowminimumheight",ring_QGridLayout_rowMinimumHeight);
	ring_vm_funcregister("qgridlayout_rowstretch",ring_QGridLayout_rowStretch);
	ring_vm_funcregister("qgridlayout_setcolumnminimumwidth",ring_QGridLayout_setColumnMinimumWidth);
	ring_vm_funcregister("qgridlayout_setcolumnstretch",ring_QGridLayout_setColumnStretch);
	ring_vm_funcregister("qgridlayout_sethorizontalspacing",ring_QGridLayout_setHorizontalSpacing);
	ring_vm_funcregister("qgridlayout_setorigincorner",ring_QGridLayout_setOriginCorner);
	ring_vm_funcregister("qgridlayout_setrowminimumheight",ring_QGridLayout_setRowMinimumHeight);
	ring_vm_funcregister("qgridlayout_setrowstretch",ring_QGridLayout_setRowStretch);
	ring_vm_funcregister("qgridlayout_setspacing",ring_QGridLayout_setSpacing);
	ring_vm_funcregister("qgridlayout_setverticalspacing",ring_QGridLayout_setVerticalSpacing);
	ring_vm_funcregister("qgridlayout_spacing",ring_QGridLayout_spacing);
	ring_vm_funcregister("qgridlayout_verticalspacing",ring_QGridLayout_verticalSpacing);
	ring_vm_funcregister("qtextcharformat_anchorhref",ring_QTextCharFormat_anchorHref);
	ring_vm_funcregister("qtextcharformat_anchornames",ring_QTextCharFormat_anchorNames);
	ring_vm_funcregister("qtextcharformat_font",ring_QTextCharFormat_font);
	ring_vm_funcregister("qtextcharformat_fontcapitalization",ring_QTextCharFormat_fontCapitalization);
	ring_vm_funcregister("qtextcharformat_fontfamily",ring_QTextCharFormat_fontFamily);
	ring_vm_funcregister("qtextcharformat_fontfixedpitch",ring_QTextCharFormat_fontFixedPitch);
	ring_vm_funcregister("qtextcharformat_fonthintingpreference",ring_QTextCharFormat_fontHintingPreference);
	ring_vm_funcregister("qtextcharformat_fontitalic",ring_QTextCharFormat_fontItalic);
	ring_vm_funcregister("qtextcharformat_fontkerning",ring_QTextCharFormat_fontKerning);
	ring_vm_funcregister("qtextcharformat_fontletterspacing",ring_QTextCharFormat_fontLetterSpacing);
	ring_vm_funcregister("qtextcharformat_fontletterspacingtype",ring_QTextCharFormat_fontLetterSpacingType);
	ring_vm_funcregister("qtextcharformat_fontoverline",ring_QTextCharFormat_fontOverline);
	ring_vm_funcregister("qtextcharformat_fontpointsize",ring_QTextCharFormat_fontPointSize);
	ring_vm_funcregister("qtextcharformat_fontstretch",ring_QTextCharFormat_fontStretch);
	ring_vm_funcregister("qtextcharformat_fontstrikeout",ring_QTextCharFormat_fontStrikeOut);
	ring_vm_funcregister("qtextcharformat_fontstylehint",ring_QTextCharFormat_fontStyleHint);
	ring_vm_funcregister("qtextcharformat_fontstylestrategy",ring_QTextCharFormat_fontStyleStrategy);
	ring_vm_funcregister("qtextcharformat_fontunderline",ring_QTextCharFormat_fontUnderline);
	ring_vm_funcregister("qtextcharformat_fontweight",ring_QTextCharFormat_fontWeight);
	ring_vm_funcregister("qtextcharformat_fontwordspacing",ring_QTextCharFormat_fontWordSpacing);
	ring_vm_funcregister("qtextcharformat_isanchor",ring_QTextCharFormat_isAnchor);
	ring_vm_funcregister("qtextcharformat_isvalid",ring_QTextCharFormat_isValid);
	ring_vm_funcregister("qtextcharformat_setanchor",ring_QTextCharFormat_setAnchor);
	ring_vm_funcregister("qtextcharformat_setanchorhref",ring_QTextCharFormat_setAnchorHref);
	ring_vm_funcregister("qtextcharformat_setanchornames",ring_QTextCharFormat_setAnchorNames);
	ring_vm_funcregister("qtextcharformat_setfont_2",ring_QTextCharFormat_setFont_2);
	ring_vm_funcregister("qtextcharformat_setfontcapitalization",ring_QTextCharFormat_setFontCapitalization);
	ring_vm_funcregister("qtextcharformat_setfontfamily",ring_QTextCharFormat_setFontFamily);
	ring_vm_funcregister("qtextcharformat_setfontfixedpitch",ring_QTextCharFormat_setFontFixedPitch);
	ring_vm_funcregister("qtextcharformat_setfonthintingpreference",ring_QTextCharFormat_setFontHintingPreference);
	ring_vm_funcregister("qtextcharformat_setfontitalic",ring_QTextCharFormat_setFontItalic);
	ring_vm_funcregister("qtextcharformat_setfontkerning",ring_QTextCharFormat_setFontKerning);
	ring_vm_funcregister("qtextcharformat_setfontletterspacing",ring_QTextCharFormat_setFontLetterSpacing);
	ring_vm_funcregister("qtextcharformat_setfontletterspacingtype",ring_QTextCharFormat_setFontLetterSpacingType);
	ring_vm_funcregister("qtextcharformat_setfontoverline",ring_QTextCharFormat_setFontOverline);
	ring_vm_funcregister("qtextcharformat_setfontpointsize",ring_QTextCharFormat_setFontPointSize);
	ring_vm_funcregister("qtextcharformat_setfontstretch",ring_QTextCharFormat_setFontStretch);
	ring_vm_funcregister("qtextcharformat_setfontstrikeout",ring_QTextCharFormat_setFontStrikeOut);
	ring_vm_funcregister("qtextcharformat_setfontstylehint",ring_QTextCharFormat_setFontStyleHint);
	ring_vm_funcregister("qtextcharformat_setfontstylestrategy",ring_QTextCharFormat_setFontStyleStrategy);
	ring_vm_funcregister("qtextcharformat_setfontunderline",ring_QTextCharFormat_setFontUnderline);
	ring_vm_funcregister("qtextcharformat_setfontweight",ring_QTextCharFormat_setFontWeight);
	ring_vm_funcregister("qtextcharformat_setfontwordspacing",ring_QTextCharFormat_setFontWordSpacing);
	ring_vm_funcregister("qtextcharformat_settextoutline",ring_QTextCharFormat_setTextOutline);
	ring_vm_funcregister("qtextcharformat_settooltip",ring_QTextCharFormat_setToolTip);
	ring_vm_funcregister("qtextcharformat_setunderlinecolor",ring_QTextCharFormat_setUnderlineColor);
	ring_vm_funcregister("qtextcharformat_setunderlinestyle",ring_QTextCharFormat_setUnderlineStyle);
	ring_vm_funcregister("qtextcharformat_setverticalalignment",ring_QTextCharFormat_setVerticalAlignment);
	ring_vm_funcregister("qtextcharformat_textoutline",ring_QTextCharFormat_textOutline);
	ring_vm_funcregister("qtextcharformat_tooltip",ring_QTextCharFormat_toolTip);
	ring_vm_funcregister("qtextcharformat_underlinecolor",ring_QTextCharFormat_underlineColor);
	ring_vm_funcregister("qtextcharformat_underlinestyle",ring_QTextCharFormat_underlineStyle);
	ring_vm_funcregister("qtextcharformat_verticalalignment",ring_QTextCharFormat_verticalAlignment);
	ring_vm_funcregister("qgraphicsvideoitem_aspectratiomode",ring_QGraphicsVideoItem_aspectRatioMode);
	ring_vm_funcregister("qgraphicsvideoitem_nativesize",ring_QGraphicsVideoItem_nativeSize);
	ring_vm_funcregister("qgraphicsvideoitem_offset",ring_QGraphicsVideoItem_offset);
	ring_vm_funcregister("qgraphicsvideoitem_setaspectratiomode",ring_QGraphicsVideoItem_setAspectRatioMode);
	ring_vm_funcregister("qgraphicsvideoitem_setoffset",ring_QGraphicsVideoItem_setOffset);
	ring_vm_funcregister("qgraphicsvideoitem_setsize",ring_QGraphicsVideoItem_setSize);
	ring_vm_funcregister("qgraphicsvideoitem_size",ring_QGraphicsVideoItem_size);
	ring_vm_funcregister("qcamera_capturemode",ring_QCamera_captureMode);
	ring_vm_funcregister("qcamera_error",ring_QCamera_error);
	ring_vm_funcregister("qcamera_errorstring",ring_QCamera_errorString);
	ring_vm_funcregister("qcamera_exposure",ring_QCamera_exposure);
	ring_vm_funcregister("qcamera_focus",ring_QCamera_focus);
	ring_vm_funcregister("qcamera_imageprocessing",ring_QCamera_imageProcessing);
	ring_vm_funcregister("qcamera_iscapturemodesupported",ring_QCamera_isCaptureModeSupported);
	ring_vm_funcregister("qcamera_lockstatus",ring_QCamera_lockStatus);
	ring_vm_funcregister("qcamera_lockstatus_2",ring_QCamera_lockStatus_2);
	ring_vm_funcregister("qcamera_requestedlocks",ring_QCamera_requestedLocks);
	ring_vm_funcregister("qcamera_setviewfinder",ring_QCamera_setViewfinder);
	ring_vm_funcregister("qcamera_setviewfinder_2",ring_QCamera_setViewfinder_2);
	ring_vm_funcregister("qcamera_setviewfinder_3",ring_QCamera_setViewfinder_3);
	ring_vm_funcregister("qcamera_state",ring_QCamera_state);
	ring_vm_funcregister("qcamera_status",ring_QCamera_status);
	ring_vm_funcregister("qcamera_supportedlocks",ring_QCamera_supportedLocks);
	ring_vm_funcregister("qcamera_load",ring_QCamera_load);
	ring_vm_funcregister("qcamera_searchandlock",ring_QCamera_searchAndLock);
	ring_vm_funcregister("qcamera_searchandlock_2",ring_QCamera_searchAndLock_2);
	ring_vm_funcregister("qcamera_setcapturemode",ring_QCamera_setCaptureMode);
	ring_vm_funcregister("qcamera_start",ring_QCamera_start);
	ring_vm_funcregister("qcamera_stop",ring_QCamera_stop);
	ring_vm_funcregister("qcamera_unload",ring_QCamera_unload);
	ring_vm_funcregister("qcamera_unlock",ring_QCamera_unlock);
	ring_vm_funcregister("qcamera_unlock_2",ring_QCamera_unlock_2);
	ring_vm_funcregister("qcameraimagecapture_availability",ring_QCameraImageCapture_availability);
	ring_vm_funcregister("qcameraimagecapture_bufferformat",ring_QCameraImageCapture_bufferFormat);
	ring_vm_funcregister("qcameraimagecapture_capturedestination",ring_QCameraImageCapture_captureDestination);
	ring_vm_funcregister("qcameraimagecapture_encodingsettings",ring_QCameraImageCapture_encodingSettings);
	ring_vm_funcregister("qcameraimagecapture_error",ring_QCameraImageCapture_error);
	ring_vm_funcregister("qcameraimagecapture_errorstring",ring_QCameraImageCapture_errorString);
	ring_vm_funcregister("qcameraimagecapture_imagecodecdescription",ring_QCameraImageCapture_imageCodecDescription);
	ring_vm_funcregister("qcameraimagecapture_isavailable",ring_QCameraImageCapture_isAvailable);
	ring_vm_funcregister("qcameraimagecapture_iscapturedestinationsupported",ring_QCameraImageCapture_isCaptureDestinationSupported);
	ring_vm_funcregister("qcameraimagecapture_isreadyforcapture",ring_QCameraImageCapture_isReadyForCapture);
	ring_vm_funcregister("qcameraimagecapture_setbufferformat",ring_QCameraImageCapture_setBufferFormat);
	ring_vm_funcregister("qcameraimagecapture_setcapturedestination",ring_QCameraImageCapture_setCaptureDestination);
	ring_vm_funcregister("qcameraimagecapture_setencodingsettings",ring_QCameraImageCapture_setEncodingSettings);
	ring_vm_funcregister("qcameraimagecapture_supportedbufferformats",ring_QCameraImageCapture_supportedBufferFormats);
	ring_vm_funcregister("qcameraimagecapture_supportedimagecodecs",ring_QCameraImageCapture_supportedImageCodecs);
	ring_vm_funcregister("qcameraimagecapture_supportedresolutions",ring_QCameraImageCapture_supportedResolutions);
	ring_vm_funcregister("qcameraimagecapture_cancelcapture",ring_QCameraImageCapture_cancelCapture);
	ring_vm_funcregister("qcameraimagecapture_capture",ring_QCameraImageCapture_capture);
	ring_vm_funcregister("qmediaobject_availablemetadata",ring_QMediaObject_availableMetaData);
	ring_vm_funcregister("qmediaobject_ismetadataavailable",ring_QMediaObject_isMetaDataAvailable);
	ring_vm_funcregister("qmediaobject_metadata",ring_QMediaObject_metaData);
	ring_vm_funcregister("qmediaobject_notifyinterval",ring_QMediaObject_notifyInterval);
	ring_vm_funcregister("qmediaobject_setnotifyinterval",ring_QMediaObject_setNotifyInterval);
	ring_vm_funcregister("qheaderview_cascadingsectionresizes",ring_QHeaderView_cascadingSectionResizes);
	ring_vm_funcregister("qheaderview_count",ring_QHeaderView_count);
	ring_vm_funcregister("qheaderview_defaultalignment",ring_QHeaderView_defaultAlignment);
	ring_vm_funcregister("qheaderview_defaultsectionsize",ring_QHeaderView_defaultSectionSize);
	ring_vm_funcregister("qheaderview_hiddensectioncount",ring_QHeaderView_hiddenSectionCount);
	ring_vm_funcregister("qheaderview_hidesection",ring_QHeaderView_hideSection);
	ring_vm_funcregister("qheaderview_highlightsections",ring_QHeaderView_highlightSections);
	ring_vm_funcregister("qheaderview_issectionhidden",ring_QHeaderView_isSectionHidden);
	ring_vm_funcregister("qheaderview_issortindicatorshown",ring_QHeaderView_isSortIndicatorShown);
	ring_vm_funcregister("qheaderview_length",ring_QHeaderView_length);
	ring_vm_funcregister("qheaderview_logicalindex",ring_QHeaderView_logicalIndex);
	ring_vm_funcregister("qheaderview_logicalindexat",ring_QHeaderView_logicalIndexAt);
	ring_vm_funcregister("qheaderview_logicalindexat_2",ring_QHeaderView_logicalIndexAt_2);
	ring_vm_funcregister("qheaderview_logicalindexat_3",ring_QHeaderView_logicalIndexAt_3);
	ring_vm_funcregister("qheaderview_maximumsectionsize",ring_QHeaderView_maximumSectionSize);
	ring_vm_funcregister("qheaderview_minimumsectionsize_2",ring_QHeaderView_minimumSectionSize_2);
	ring_vm_funcregister("qheaderview_movesection",ring_QHeaderView_moveSection);
	ring_vm_funcregister("qheaderview_offset",ring_QHeaderView_offset);
	ring_vm_funcregister("qheaderview_orientation",ring_QHeaderView_orientation);
	ring_vm_funcregister("qheaderview_resizecontentsprecision",ring_QHeaderView_resizeContentsPrecision);
	ring_vm_funcregister("qheaderview_resizesection",ring_QHeaderView_resizeSection);
	ring_vm_funcregister("qheaderview_resizesections",ring_QHeaderView_resizeSections);
	ring_vm_funcregister("qheaderview_restorestate",ring_QHeaderView_restoreState);
	ring_vm_funcregister("qheaderview_savestate",ring_QHeaderView_saveState);
	ring_vm_funcregister("qheaderview_sectionposition",ring_QHeaderView_sectionPosition);
	ring_vm_funcregister("qheaderview_sectionresizemode",ring_QHeaderView_sectionResizeMode);
	ring_vm_funcregister("qheaderview_sectionsize",ring_QHeaderView_sectionSize);
	ring_vm_funcregister("qheaderview_sectionsizehint",ring_QHeaderView_sectionSizeHint);
	ring_vm_funcregister("qheaderview_sectionviewportposition",ring_QHeaderView_sectionViewportPosition);
	ring_vm_funcregister("qheaderview_sectionsclickable",ring_QHeaderView_sectionsClickable);
	ring_vm_funcregister("qheaderview_sectionshidden",ring_QHeaderView_sectionsHidden);
	ring_vm_funcregister("qheaderview_sectionsmovable",ring_QHeaderView_sectionsMovable);
	ring_vm_funcregister("qheaderview_sectionsmoved",ring_QHeaderView_sectionsMoved);
	ring_vm_funcregister("qheaderview_setcascadingsectionresizes",ring_QHeaderView_setCascadingSectionResizes);
	ring_vm_funcregister("qheaderview_setdefaultalignment",ring_QHeaderView_setDefaultAlignment);
	ring_vm_funcregister("qheaderview_setdefaultsectionsize",ring_QHeaderView_setDefaultSectionSize);
	ring_vm_funcregister("qheaderview_sethighlightsections",ring_QHeaderView_setHighlightSections);
	ring_vm_funcregister("qheaderview_setmaximumsectionsize",ring_QHeaderView_setMaximumSectionSize);
	ring_vm_funcregister("qheaderview_setminimumsectionsize",ring_QHeaderView_setMinimumSectionSize);
	ring_vm_funcregister("qheaderview_setresizecontentsprecision",ring_QHeaderView_setResizeContentsPrecision);
	ring_vm_funcregister("qheaderview_setsectionhidden",ring_QHeaderView_setSectionHidden);
	ring_vm_funcregister("qheaderview_setsectionresizemode",ring_QHeaderView_setSectionResizeMode);
	ring_vm_funcregister("qheaderview_setsectionresizemode_2",ring_QHeaderView_setSectionResizeMode_2);
	ring_vm_funcregister("qheaderview_setsectionsclickable",ring_QHeaderView_setSectionsClickable);
	ring_vm_funcregister("qheaderview_setsectionsmovable",ring_QHeaderView_setSectionsMovable);
	ring_vm_funcregister("qheaderview_setsortindicator",ring_QHeaderView_setSortIndicator);
	ring_vm_funcregister("qheaderview_setsortindicatorshown",ring_QHeaderView_setSortIndicatorShown);
	ring_vm_funcregister("qheaderview_setstretchlastsection",ring_QHeaderView_setStretchLastSection);
	ring_vm_funcregister("qheaderview_showsection",ring_QHeaderView_showSection);
	ring_vm_funcregister("qheaderview_sortindicatororder",ring_QHeaderView_sortIndicatorOrder);
	ring_vm_funcregister("qheaderview_sortindicatorsection",ring_QHeaderView_sortIndicatorSection);
	ring_vm_funcregister("qheaderview_stretchlastsection",ring_QHeaderView_stretchLastSection);
	ring_vm_funcregister("qheaderview_stretchsectioncount",ring_QHeaderView_stretchSectionCount);
	ring_vm_funcregister("qheaderview_swapsections",ring_QHeaderView_swapSections);
	ring_vm_funcregister("qheaderview_visualindex",ring_QHeaderView_visualIndex);
	ring_vm_funcregister("qheaderview_visualindexat",ring_QHeaderView_visualIndexAt);
	ring_vm_funcregister("qheaderview_headerdatachanged",ring_QHeaderView_headerDataChanged);
	ring_vm_funcregister("qheaderview_setoffset",ring_QHeaderView_setOffset);
	ring_vm_funcregister("qheaderview_setoffsettolastsection",ring_QHeaderView_setOffsetToLastSection);
	ring_vm_funcregister("qheaderview_setoffsettosectionposition",ring_QHeaderView_setOffsetToSectionPosition);
	ring_vm_funcregister("qheaderview_setgeometrieschangedevent",ring_QHeaderView_setgeometriesChangedEvent);
	ring_vm_funcregister("qheaderview_setsectionclickedevent",ring_QHeaderView_setsectionClickedEvent);
	ring_vm_funcregister("qheaderview_setsectioncountchangedevent",ring_QHeaderView_setsectionCountChangedEvent);
	ring_vm_funcregister("qheaderview_setsectiondoubleclickedevent",ring_QHeaderView_setsectionDoubleClickedEvent);
	ring_vm_funcregister("qheaderview_setsectionenteredevent",ring_QHeaderView_setsectionEnteredEvent);
	ring_vm_funcregister("qheaderview_setsectionhandledoubleclickedevent",ring_QHeaderView_setsectionHandleDoubleClickedEvent);
	ring_vm_funcregister("qheaderview_setsectionmovedevent",ring_QHeaderView_setsectionMovedEvent);
	ring_vm_funcregister("qheaderview_setsectionpressedevent",ring_QHeaderView_setsectionPressedEvent);
	ring_vm_funcregister("qheaderview_setsectionresizedevent",ring_QHeaderView_setsectionResizedEvent);
	ring_vm_funcregister("qheaderview_setsortindicatorchangedevent",ring_QHeaderView_setsortIndicatorChangedEvent);
	ring_vm_funcregister("qheaderview_getgeometrieschangedevent",ring_QHeaderView_getgeometriesChangedEvent);
	ring_vm_funcregister("qheaderview_getsectionclickedevent",ring_QHeaderView_getsectionClickedEvent);
	ring_vm_funcregister("qheaderview_getsectioncountchangedevent",ring_QHeaderView_getsectionCountChangedEvent);
	ring_vm_funcregister("qheaderview_getsectiondoubleclickedevent",ring_QHeaderView_getsectionDoubleClickedEvent);
	ring_vm_funcregister("qheaderview_getsectionenteredevent",ring_QHeaderView_getsectionEnteredEvent);
	ring_vm_funcregister("qheaderview_getsectionhandledoubleclickedevent",ring_QHeaderView_getsectionHandleDoubleClickedEvent);
	ring_vm_funcregister("qheaderview_getsectionmovedevent",ring_QHeaderView_getsectionMovedEvent);
	ring_vm_funcregister("qheaderview_getsectionpressedevent",ring_QHeaderView_getsectionPressedEvent);
	ring_vm_funcregister("qheaderview_getsectionresizedevent",ring_QHeaderView_getsectionResizedEvent);
	ring_vm_funcregister("qheaderview_getsortindicatorchangedevent",ring_QHeaderView_getsortIndicatorChangedEvent);
	ring_vm_funcregister("qheaderview_geteventparameters",ring_QHeaderView_geteventparameters);
	ring_vm_funcregister("qfontmetrics_ascent",ring_QFontMetrics_ascent);
	ring_vm_funcregister("qfontmetrics_averagecharwidth",ring_QFontMetrics_averageCharWidth);
	ring_vm_funcregister("qfontmetrics_boundingrect",ring_QFontMetrics_boundingRect);
	ring_vm_funcregister("qfontmetrics_boundingrect_2",ring_QFontMetrics_boundingRect_2);
	ring_vm_funcregister("qfontmetrics_boundingrect_3",ring_QFontMetrics_boundingRect_3);
	ring_vm_funcregister("qfontmetrics_boundingrect_4",ring_QFontMetrics_boundingRect_4);
	ring_vm_funcregister("qfontmetrics_descent",ring_QFontMetrics_descent);
	ring_vm_funcregister("qfontmetrics_elidedtext",ring_QFontMetrics_elidedText);
	ring_vm_funcregister("qfontmetrics_height",ring_QFontMetrics_height);
	ring_vm_funcregister("qfontmetrics_infont",ring_QFontMetrics_inFont);
	ring_vm_funcregister("qfontmetrics_infontucs4",ring_QFontMetrics_inFontUcs4);
	ring_vm_funcregister("qfontmetrics_leading",ring_QFontMetrics_leading);
	ring_vm_funcregister("qfontmetrics_leftbearing",ring_QFontMetrics_leftBearing);
	ring_vm_funcregister("qfontmetrics_linespacing",ring_QFontMetrics_lineSpacing);
	ring_vm_funcregister("qfontmetrics_linewidth",ring_QFontMetrics_lineWidth);
	ring_vm_funcregister("qfontmetrics_maxwidth",ring_QFontMetrics_maxWidth);
	ring_vm_funcregister("qfontmetrics_minleftbearing",ring_QFontMetrics_minLeftBearing);
	ring_vm_funcregister("qfontmetrics_minrightbearing",ring_QFontMetrics_minRightBearing);
	ring_vm_funcregister("qfontmetrics_overlinepos",ring_QFontMetrics_overlinePos);
	ring_vm_funcregister("qfontmetrics_rightbearing",ring_QFontMetrics_rightBearing);
	ring_vm_funcregister("qfontmetrics_size",ring_QFontMetrics_size);
	ring_vm_funcregister("qfontmetrics_strikeoutpos",ring_QFontMetrics_strikeOutPos);
	ring_vm_funcregister("qfontmetrics_tightboundingrect",ring_QFontMetrics_tightBoundingRect);
	ring_vm_funcregister("qfontmetrics_underlinepos",ring_QFontMetrics_underlinePos);
	ring_vm_funcregister("qfontmetrics_width",ring_QFontMetrics_width);
	ring_vm_funcregister("qfontmetrics_width_2",ring_QFontMetrics_width_2);
	ring_vm_funcregister("qfontmetrics_xheight",ring_QFontMetrics_xHeight);
	ring_vm_funcregister("qsplashscreen_finish",ring_QSplashScreen_finish);
	ring_vm_funcregister("qsplashscreen_pixmap",ring_QSplashScreen_pixmap);
	ring_vm_funcregister("qsplashscreen_repaint",ring_QSplashScreen_repaint);
	ring_vm_funcregister("qsplashscreen_setpixmap",ring_QSplashScreen_setPixmap);
	ring_vm_funcregister("qsplashscreen_clearmessage",ring_QSplashScreen_clearMessage);
	ring_vm_funcregister("qsplashscreen_showmessage",ring_QSplashScreen_showMessage);
	ring_vm_funcregister("qboxlayout_addlayout",ring_QBoxLayout_addLayout);
	ring_vm_funcregister("qboxlayout_addspaceritem",ring_QBoxLayout_addSpacerItem);
	ring_vm_funcregister("qboxlayout_addspacing",ring_QBoxLayout_addSpacing);
	ring_vm_funcregister("qboxlayout_addstretch",ring_QBoxLayout_addStretch);
	ring_vm_funcregister("qboxlayout_addstrut",ring_QBoxLayout_addStrut);
	ring_vm_funcregister("qboxlayout_addwidget",ring_QBoxLayout_addWidget);
	ring_vm_funcregister("qboxlayout_direction",ring_QBoxLayout_direction);
	ring_vm_funcregister("qboxlayout_insertlayout",ring_QBoxLayout_insertLayout);
	ring_vm_funcregister("qboxlayout_insertspaceritem",ring_QBoxLayout_insertSpacerItem);
	ring_vm_funcregister("qboxlayout_insertspacing",ring_QBoxLayout_insertSpacing);
	ring_vm_funcregister("qboxlayout_insertstretch",ring_QBoxLayout_insertStretch);
	ring_vm_funcregister("qboxlayout_insertwidget",ring_QBoxLayout_insertWidget);
	ring_vm_funcregister("qboxlayout_setdirection",ring_QBoxLayout_setDirection);
	ring_vm_funcregister("qboxlayout_setspacing",ring_QBoxLayout_setSpacing);
	ring_vm_funcregister("qboxlayout_setstretch",ring_QBoxLayout_setStretch);
	ring_vm_funcregister("qboxlayout_setstretchfactor",ring_QBoxLayout_setStretchFactor);
	ring_vm_funcregister("qboxlayout_setstretchfactor_2",ring_QBoxLayout_setStretchFactor_2);
	ring_vm_funcregister("qboxlayout_spacing",ring_QBoxLayout_spacing);
	ring_vm_funcregister("qboxlayout_stretch",ring_QBoxLayout_stretch);
	ring_vm_funcregister("qlayout_activate",ring_QLayout_activate);
	ring_vm_funcregister("qlayout_addwidget",ring_QLayout_addWidget);
	ring_vm_funcregister("qlayout_contentsmargins",ring_QLayout_contentsMargins);
	ring_vm_funcregister("qlayout_contentsrect",ring_QLayout_contentsRect);
	ring_vm_funcregister("qlayout_getcontentsmargins",ring_QLayout_getContentsMargins);
	ring_vm_funcregister("qlayout_isenabled",ring_QLayout_isEnabled);
	ring_vm_funcregister("qlayout_menubar",ring_QLayout_menuBar);
	ring_vm_funcregister("qlayout_parentwidget",ring_QLayout_parentWidget);
	ring_vm_funcregister("qlayout_removeitem",ring_QLayout_removeItem);
	ring_vm_funcregister("qlayout_removewidget",ring_QLayout_removeWidget);
	ring_vm_funcregister("qlayout_setalignment",ring_QLayout_setAlignment);
	ring_vm_funcregister("qlayout_setalignment_2",ring_QLayout_setAlignment_2);
	ring_vm_funcregister("qlayout_setalignment_3",ring_QLayout_setAlignment_3);
	ring_vm_funcregister("qlayout_setcontentsmargins",ring_QLayout_setContentsMargins);
	ring_vm_funcregister("qlayout_setcontentsmargins_2",ring_QLayout_setContentsMargins_2);
	ring_vm_funcregister("qlayout_setenabled",ring_QLayout_setEnabled);
	ring_vm_funcregister("qlayout_setmenubar",ring_QLayout_setMenuBar);
	ring_vm_funcregister("qlayout_setsizeconstraint",ring_QLayout_setSizeConstraint);
	ring_vm_funcregister("qlayout_setspacing",ring_QLayout_setSpacing);
	ring_vm_funcregister("qlayout_sizeconstraint",ring_QLayout_sizeConstraint);
	ring_vm_funcregister("qlayout_spacing",ring_QLayout_spacing);
	ring_vm_funcregister("qlayout_update",ring_QLayout_update);
	ring_vm_funcregister("qlayout_closestacceptablesize",ring_QLayout_closestAcceptableSize);
	ring_vm_funcregister("qlineargradient_finalstop",ring_QLinearGradient_finalStop);
	ring_vm_funcregister("qlineargradient_setfinalstop",ring_QLinearGradient_setFinalStop);
	ring_vm_funcregister("qlineargradient_setfinalstop_2",ring_QLinearGradient_setFinalStop_2);
	ring_vm_funcregister("qlineargradient_setstart",ring_QLinearGradient_setStart);
	ring_vm_funcregister("qlineargradient_setstart_2",ring_QLinearGradient_setStart_2);
	ring_vm_funcregister("qlineargradient_start",ring_QLinearGradient_start);
	ring_vm_funcregister("qgradient_coordinatemode",ring_QGradient_coordinateMode);
	ring_vm_funcregister("qgradient_setcolorat",ring_QGradient_setColorAt);
	ring_vm_funcregister("qgradient_setcoordinatemode",ring_QGradient_setCoordinateMode);
	ring_vm_funcregister("qgradient_setspread",ring_QGradient_setSpread);
	ring_vm_funcregister("qgradient_setstops",ring_QGradient_setStops);
	ring_vm_funcregister("qgradient_spread",ring_QGradient_spread);
	ring_vm_funcregister("qgradient_stops",ring_QGradient_stops);
	ring_vm_funcregister("qgradient_type",ring_QGradient_type);
	ring_vm_funcregister("qpointf_isnull",ring_QPointF_isNull);
	ring_vm_funcregister("qpointf_manhattanlength",ring_QPointF_manhattanLength);
	ring_vm_funcregister("qpointf_rx",ring_QPointF_rx);
	ring_vm_funcregister("qpointf_ry",ring_QPointF_ry);
	ring_vm_funcregister("qpointf_setx",ring_QPointF_setX);
	ring_vm_funcregister("qpointf_sety",ring_QPointF_setY);
	ring_vm_funcregister("qpointf_topoint",ring_QPointF_toPoint);
	ring_vm_funcregister("qpointf_x",ring_QPointF_x);
	ring_vm_funcregister("qpointf_y",ring_QPointF_y);
	ring_vm_funcregister("qpoint_isnull",ring_QPoint_isNull);
	ring_vm_funcregister("qpoint_manhattanlength",ring_QPoint_manhattanLength);
	ring_vm_funcregister("qpoint_rx",ring_QPoint_rx);
	ring_vm_funcregister("qpoint_ry",ring_QPoint_ry);
	ring_vm_funcregister("qpoint_setx",ring_QPoint_setX);
	ring_vm_funcregister("qpoint_sety",ring_QPoint_setY);
	ring_vm_funcregister("qpoint_x",ring_QPoint_x);
	ring_vm_funcregister("qpoint_y",ring_QPoint_y);
	ring_vm_funcregister("qscrollarea_alignment",ring_QScrollArea_alignment);
	ring_vm_funcregister("qscrollarea_ensurevisible",ring_QScrollArea_ensureVisible);
	ring_vm_funcregister("qscrollarea_ensurewidgetvisible",ring_QScrollArea_ensureWidgetVisible);
	ring_vm_funcregister("qscrollarea_setalignment",ring_QScrollArea_setAlignment);
	ring_vm_funcregister("qscrollarea_setwidget",ring_QScrollArea_setWidget);
	ring_vm_funcregister("qscrollarea_setwidgetresizable",ring_QScrollArea_setWidgetResizable);
	ring_vm_funcregister("qscrollarea_takewidget",ring_QScrollArea_takeWidget);
	ring_vm_funcregister("qscrollarea_widget",ring_QScrollArea_widget);
	ring_vm_funcregister("qscrollarea_widgetresizable",ring_QScrollArea_widgetResizable);
	ring_vm_funcregister("qsplitter_addwidget",ring_QSplitter_addWidget);
	ring_vm_funcregister("qsplitter_childrencollapsible",ring_QSplitter_childrenCollapsible);
	ring_vm_funcregister("qsplitter_count",ring_QSplitter_count);
	ring_vm_funcregister("qsplitter_getrange",ring_QSplitter_getRange);
	ring_vm_funcregister("qsplitter_handle",ring_QSplitter_handle);
	ring_vm_funcregister("qsplitter_handlewidth",ring_QSplitter_handleWidth);
	ring_vm_funcregister("qsplitter_indexof",ring_QSplitter_indexOf);
	ring_vm_funcregister("qsplitter_insertwidget",ring_QSplitter_insertWidget);
	ring_vm_funcregister("qsplitter_iscollapsible",ring_QSplitter_isCollapsible);
	ring_vm_funcregister("qsplitter_opaqueresize",ring_QSplitter_opaqueResize);
	ring_vm_funcregister("qsplitter_orientation",ring_QSplitter_orientation);
	ring_vm_funcregister("qsplitter_refresh",ring_QSplitter_refresh);
	ring_vm_funcregister("qsplitter_restorestate",ring_QSplitter_restoreState);
	ring_vm_funcregister("qsplitter_savestate",ring_QSplitter_saveState);
	ring_vm_funcregister("qsplitter_setchildrencollapsible",ring_QSplitter_setChildrenCollapsible);
	ring_vm_funcregister("qsplitter_setcollapsible",ring_QSplitter_setCollapsible);
	ring_vm_funcregister("qsplitter_sethandlewidth",ring_QSplitter_setHandleWidth);
	ring_vm_funcregister("qsplitter_setopaqueresize",ring_QSplitter_setOpaqueResize);
	ring_vm_funcregister("qsplitter_setorientation",ring_QSplitter_setOrientation);
	ring_vm_funcregister("qsplitter_setsizes",ring_QSplitter_setSizes);
	ring_vm_funcregister("qsplitter_setstretchfactor",ring_QSplitter_setStretchFactor);
	ring_vm_funcregister("qsplitter_sizes",ring_QSplitter_sizes);
	ring_vm_funcregister("qsplitter_widget",ring_QSplitter_widget);
	ring_vm_funcregister("qcompleter_casesensitivity",ring_QCompleter_caseSensitivity);
	ring_vm_funcregister("qcompleter_completioncolumn",ring_QCompleter_completionColumn);
	ring_vm_funcregister("qcompleter_completioncount",ring_QCompleter_completionCount);
	ring_vm_funcregister("qcompleter_completionmode",ring_QCompleter_completionMode);
	ring_vm_funcregister("qcompleter_completionmodel",ring_QCompleter_completionModel);
	ring_vm_funcregister("qcompleter_completionprefix",ring_QCompleter_completionPrefix);
	ring_vm_funcregister("qcompleter_completionrole",ring_QCompleter_completionRole);
	ring_vm_funcregister("qcompleter_currentcompletion",ring_QCompleter_currentCompletion);
	ring_vm_funcregister("qcompleter_currentindex",ring_QCompleter_currentIndex);
	ring_vm_funcregister("qcompleter_currentrow",ring_QCompleter_currentRow);
	ring_vm_funcregister("qcompleter_filtermode",ring_QCompleter_filterMode);
	ring_vm_funcregister("qcompleter_maxvisibleitems",ring_QCompleter_maxVisibleItems);
	ring_vm_funcregister("qcompleter_model",ring_QCompleter_model);
	ring_vm_funcregister("qcompleter_modelsorting",ring_QCompleter_modelSorting);
	ring_vm_funcregister("qcompleter_popup",ring_QCompleter_popup);
	ring_vm_funcregister("qcompleter_setcasesensitivity",ring_QCompleter_setCaseSensitivity);
	ring_vm_funcregister("qcompleter_setcompletioncolumn",ring_QCompleter_setCompletionColumn);
	ring_vm_funcregister("qcompleter_setcompletionmode",ring_QCompleter_setCompletionMode);
	ring_vm_funcregister("qcompleter_setcompletionrole",ring_QCompleter_setCompletionRole);
	ring_vm_funcregister("qcompleter_setcurrentrow",ring_QCompleter_setCurrentRow);
	ring_vm_funcregister("qcompleter_setfiltermode",ring_QCompleter_setFilterMode);
	ring_vm_funcregister("qcompleter_setmaxvisibleitems",ring_QCompleter_setMaxVisibleItems);
	ring_vm_funcregister("qcompleter_setmodel",ring_QCompleter_setModel);
	ring_vm_funcregister("qcompleter_setmodelsorting",ring_QCompleter_setModelSorting);
	ring_vm_funcregister("qcompleter_setpopup",ring_QCompleter_setPopup);
	ring_vm_funcregister("qcompleter_setwidget",ring_QCompleter_setWidget);
	ring_vm_funcregister("qcompleter_widget",ring_QCompleter_widget);
	ring_vm_funcregister("qcompleter_wraparound",ring_QCompleter_wrapAround);
	ring_vm_funcregister("qcompleter_complete",ring_QCompleter_complete);
	ring_vm_funcregister("qcompleter_setcompletionprefix",ring_QCompleter_setCompletionPrefix);
	ring_vm_funcregister("qcompleter_setwraparound",ring_QCompleter_setWrapAround);
	ring_vm_funcregister("qstring2_append",ring_QString2_append);
	ring_vm_funcregister("qstring2_split",ring_QString2_split);
	ring_vm_funcregister("qstring2_split_2",ring_QString2_split_2);
	ring_vm_funcregister("qstring2_split_3",ring_QString2_split_3);
	ring_vm_funcregister("qstring2_split_4",ring_QString2_split_4);
	ring_vm_funcregister("qprocess_arguments",ring_QProcess_arguments);
	ring_vm_funcregister("qprocess_closereadchannel",ring_QProcess_closeReadChannel);
	ring_vm_funcregister("qprocess_closewritechannel",ring_QProcess_closeWriteChannel);
	ring_vm_funcregister("qprocess_error",ring_QProcess_error);
	ring_vm_funcregister("qprocess_exitcode",ring_QProcess_exitCode);
	ring_vm_funcregister("qprocess_exitstatus",ring_QProcess_exitStatus);
	ring_vm_funcregister("qprocess_inputchannelmode",ring_QProcess_inputChannelMode);
	ring_vm_funcregister("qprocess_processchannelmode",ring_QProcess_processChannelMode);
	ring_vm_funcregister("qprocess_processenvironment",ring_QProcess_processEnvironment);
	ring_vm_funcregister("qprocess_program",ring_QProcess_program);
	ring_vm_funcregister("qprocess_readallstandarderror",ring_QProcess_readAllStandardError);
	ring_vm_funcregister("qprocess_readallstandardoutput",ring_QProcess_readAllStandardOutput);
	ring_vm_funcregister("qprocess_readchannel",ring_QProcess_readChannel);
	ring_vm_funcregister("qprocess_setarguments",ring_QProcess_setArguments);
	ring_vm_funcregister("qprocess_setinputchannelmode",ring_QProcess_setInputChannelMode);
	ring_vm_funcregister("qprocess_setprocesschannelmode",ring_QProcess_setProcessChannelMode);
	ring_vm_funcregister("qprocess_setprocessenvironment",ring_QProcess_setProcessEnvironment);
	ring_vm_funcregister("qprocess_setprogram",ring_QProcess_setProgram);
	ring_vm_funcregister("qprocess_setreadchannel",ring_QProcess_setReadChannel);
	ring_vm_funcregister("qprocess_setstandarderrorfile",ring_QProcess_setStandardErrorFile);
	ring_vm_funcregister("qprocess_setstandardinputfile",ring_QProcess_setStandardInputFile);
	ring_vm_funcregister("qprocess_setstandardoutputfile",ring_QProcess_setStandardOutputFile);
	ring_vm_funcregister("qprocess_setstandardoutputprocess",ring_QProcess_setStandardOutputProcess);
	ring_vm_funcregister("qprocess_setworkingdirectory",ring_QProcess_setWorkingDirectory);
	ring_vm_funcregister("qprocess_start",ring_QProcess_start);
	ring_vm_funcregister("qprocess_start_2",ring_QProcess_start_2);
	ring_vm_funcregister("qprocess_start_3",ring_QProcess_start_3);
	ring_vm_funcregister("qprocess_state",ring_QProcess_state);
	ring_vm_funcregister("qprocess_waitforfinished",ring_QProcess_waitForFinished);
	ring_vm_funcregister("qprocess_waitforstarted",ring_QProcess_waitForStarted);
	ring_vm_funcregister("qprocess_workingdirectory",ring_QProcess_workingDirectory);
	ring_vm_funcregister("qprocess_kill",ring_QProcess_kill);
	ring_vm_funcregister("qprocess_terminate",ring_QProcess_terminate);
	ring_vm_funcregister("qprocess_setreadyreadstandarderrorevent",ring_QProcess_setreadyReadStandardErrorEvent);
	ring_vm_funcregister("qprocess_setreadyreadstandardoutputevent",ring_QProcess_setreadyReadStandardOutputEvent);
	ring_vm_funcregister("qprocess_getreadyreadstandarderrorevent",ring_QProcess_getreadyReadStandardErrorEvent);
	ring_vm_funcregister("qprocess_getreadyreadstandardoutputevent",ring_QProcess_getreadyReadStandardOutputEvent);
	ring_vm_funcregister("qmdiarea_activationorder",ring_QMdiArea_activationOrder);
	ring_vm_funcregister("qmdiarea_activesubwindow",ring_QMdiArea_activeSubWindow);
	ring_vm_funcregister("qmdiarea_addsubwindow",ring_QMdiArea_addSubWindow);
	ring_vm_funcregister("qmdiarea_background",ring_QMdiArea_background);
	ring_vm_funcregister("qmdiarea_currentsubwindow",ring_QMdiArea_currentSubWindow);
	ring_vm_funcregister("qmdiarea_documentmode",ring_QMdiArea_documentMode);
	ring_vm_funcregister("qmdiarea_removesubwindow",ring_QMdiArea_removeSubWindow);
	ring_vm_funcregister("qmdiarea_setactivationorder",ring_QMdiArea_setActivationOrder);
	ring_vm_funcregister("qmdiarea_setbackground",ring_QMdiArea_setBackground);
	ring_vm_funcregister("qmdiarea_setdocumentmode",ring_QMdiArea_setDocumentMode);
	ring_vm_funcregister("qmdiarea_setoption",ring_QMdiArea_setOption);
	ring_vm_funcregister("qmdiarea_settabposition",ring_QMdiArea_setTabPosition);
	ring_vm_funcregister("qmdiarea_settabshape",ring_QMdiArea_setTabShape);
	ring_vm_funcregister("qmdiarea_settabsclosable",ring_QMdiArea_setTabsClosable);
	ring_vm_funcregister("qmdiarea_settabsmovable",ring_QMdiArea_setTabsMovable);
	ring_vm_funcregister("qmdiarea_setviewmode",ring_QMdiArea_setViewMode);
	ring_vm_funcregister("qmdiarea_subwindowlist",ring_QMdiArea_subWindowList);
	ring_vm_funcregister("qmdiarea_tabposition",ring_QMdiArea_tabPosition);
	ring_vm_funcregister("qmdiarea_tabshape",ring_QMdiArea_tabShape);
	ring_vm_funcregister("qmdiarea_tabsclosable",ring_QMdiArea_tabsClosable);
	ring_vm_funcregister("qmdiarea_tabsmovable",ring_QMdiArea_tabsMovable);
	ring_vm_funcregister("qmdiarea_testoption",ring_QMdiArea_testOption);
	ring_vm_funcregister("qmdiarea_viewmode",ring_QMdiArea_viewMode);
	ring_vm_funcregister("qmdiarea_activatenextsubwindow",ring_QMdiArea_activateNextSubWindow);
	ring_vm_funcregister("qmdiarea_activateprevioussubwindow",ring_QMdiArea_activatePreviousSubWindow);
	ring_vm_funcregister("qmdiarea_cascadesubwindows",ring_QMdiArea_cascadeSubWindows);
	ring_vm_funcregister("qmdiarea_closeactivesubwindow",ring_QMdiArea_closeActiveSubWindow);
	ring_vm_funcregister("qmdiarea_closeallsubwindows",ring_QMdiArea_closeAllSubWindows);
	ring_vm_funcregister("qmdiarea_setactivesubwindow",ring_QMdiArea_setActiveSubWindow);
	ring_vm_funcregister("qmdiarea_tilesubwindows",ring_QMdiArea_tileSubWindows);
	ring_vm_funcregister("qmdisubwindow_isshaded",ring_QMdiSubWindow_isShaded);
	ring_vm_funcregister("qmdisubwindow_keyboardpagestep",ring_QMdiSubWindow_keyboardPageStep);
	ring_vm_funcregister("qmdisubwindow_keyboardsinglestep",ring_QMdiSubWindow_keyboardSingleStep);
	ring_vm_funcregister("qmdisubwindow_mdiarea",ring_QMdiSubWindow_mdiArea);
	ring_vm_funcregister("qmdisubwindow_setkeyboardpagestep",ring_QMdiSubWindow_setKeyboardPageStep);
	ring_vm_funcregister("qmdisubwindow_setkeyboardsinglestep",ring_QMdiSubWindow_setKeyboardSingleStep);
	ring_vm_funcregister("qmdisubwindow_setoption",ring_QMdiSubWindow_setOption);
	ring_vm_funcregister("qmdisubwindow_setsystemmenu",ring_QMdiSubWindow_setSystemMenu);
	ring_vm_funcregister("qmdisubwindow_setwidget",ring_QMdiSubWindow_setWidget);
	ring_vm_funcregister("qmdisubwindow_systemmenu",ring_QMdiSubWindow_systemMenu);
	ring_vm_funcregister("qmdisubwindow_testoption",ring_QMdiSubWindow_testOption);
	ring_vm_funcregister("qmdisubwindow_widget",ring_QMdiSubWindow_widget);
	ring_vm_funcregister("qmdisubwindow_showshaded",ring_QMdiSubWindow_showShaded);
	ring_vm_funcregister("qmdisubwindow_showsystemmenu",ring_QMdiSubWindow_showSystemMenu);
	ring_vm_funcregister("qcursor_bitmap",ring_QCursor_bitmap);
	ring_vm_funcregister("qcursor_hotspot",ring_QCursor_hotSpot);
	ring_vm_funcregister("qcursor_mask",ring_QCursor_mask);
	ring_vm_funcregister("qcursor_pixmap",ring_QCursor_pixmap);
	ring_vm_funcregister("qcursor_setshape",ring_QCursor_setShape);
	ring_vm_funcregister("qcursor_shape",ring_QCursor_shape);
	ring_vm_funcregister("qcursor_pos",ring_QCursor_pos);
	ring_vm_funcregister("qcursor_pos_2",ring_QCursor_pos_2);
	ring_vm_funcregister("qcursor_setpos",ring_QCursor_setPos);
	ring_vm_funcregister("qcursor_setpos_2",ring_QCursor_setPos_2);
	ring_vm_funcregister("qcursor_setpos_3",ring_QCursor_setPos_3);
	ring_vm_funcregister("qcursor_setpos_4",ring_QCursor_setPos_4);
	ring_vm_funcregister("qlistview_batchsize",ring_QListView_batchSize);
	ring_vm_funcregister("qlistview_clearpropertyflags",ring_QListView_clearPropertyFlags);
	ring_vm_funcregister("qlistview_flow",ring_QListView_flow);
	ring_vm_funcregister("qlistview_gridsize",ring_QListView_gridSize);
	ring_vm_funcregister("qlistview_isrowhidden",ring_QListView_isRowHidden);
	ring_vm_funcregister("qlistview_isselectionrectvisible",ring_QListView_isSelectionRectVisible);
	ring_vm_funcregister("qlistview_iswrapping",ring_QListView_isWrapping);
	ring_vm_funcregister("qlistview_layoutmode",ring_QListView_layoutMode);
	ring_vm_funcregister("qlistview_modelcolumn",ring_QListView_modelColumn);
	ring_vm_funcregister("qlistview_movement",ring_QListView_movement);
	ring_vm_funcregister("qlistview_resizemode",ring_QListView_resizeMode);
	ring_vm_funcregister("qlistview_setbatchsize",ring_QListView_setBatchSize);
	ring_vm_funcregister("qlistview_setflow",ring_QListView_setFlow);
	ring_vm_funcregister("qlistview_setgridsize",ring_QListView_setGridSize);
	ring_vm_funcregister("qlistview_setlayoutmode",ring_QListView_setLayoutMode);
	ring_vm_funcregister("qlistview_setmodelcolumn",ring_QListView_setModelColumn);
	ring_vm_funcregister("qlistview_setmovement",ring_QListView_setMovement);
	ring_vm_funcregister("qlistview_setresizemode",ring_QListView_setResizeMode);
	ring_vm_funcregister("qlistview_setrowhidden",ring_QListView_setRowHidden);
	ring_vm_funcregister("qlistview_setselectionrectvisible",ring_QListView_setSelectionRectVisible);
	ring_vm_funcregister("qlistview_setspacing",ring_QListView_setSpacing);
	ring_vm_funcregister("qlistview_setuniformitemsizes",ring_QListView_setUniformItemSizes);
	ring_vm_funcregister("qlistview_setviewmode",ring_QListView_setViewMode);
	ring_vm_funcregister("qlistview_setwordwrap",ring_QListView_setWordWrap);
	ring_vm_funcregister("qlistview_setwrapping",ring_QListView_setWrapping);
	ring_vm_funcregister("qlistview_spacing",ring_QListView_spacing);
	ring_vm_funcregister("qlistview_uniformitemsizes",ring_QListView_uniformItemSizes);
	ring_vm_funcregister("qlistview_viewmode",ring_QListView_viewMode);
	ring_vm_funcregister("qlistview_wordwrap",ring_QListView_wordWrap);
	ring_vm_funcregister("qaxbase_asvariant",ring_QAxBase_asVariant);
	ring_vm_funcregister("qaxbase_control",ring_QAxBase_control);
	ring_vm_funcregister("qaxbase_disableclassinfo",ring_QAxBase_disableClassInfo);
	ring_vm_funcregister("qaxbase_disableeventsink",ring_QAxBase_disableEventSink);
	ring_vm_funcregister("qaxbase_disablemetaobject",ring_QAxBase_disableMetaObject);
	ring_vm_funcregister("qaxbase_dynamiccall",ring_QAxBase_dynamicCall);
	ring_vm_funcregister("qaxbase_dynamiccall_2",ring_QAxBase_dynamicCall_2);
	ring_vm_funcregister("qaxbase_generatedocumentation",ring_QAxBase_generateDocumentation);
	ring_vm_funcregister("qaxbase_isnull",ring_QAxBase_isNull);
	ring_vm_funcregister("qaxbase_querysubobject",ring_QAxBase_querySubObject);
	ring_vm_funcregister("qaxbase_setcontrol",ring_QAxBase_setControl);
	ring_vm_funcregister("qaxbase_verbs",ring_QAxBase_verbs);
	ring_vm_funcregister("quuid_tostring",ring_QUuid_toString);
	ring_vm_funcregister("qtoolbutton_arrowtype",ring_QToolButton_arrowType);
	ring_vm_funcregister("qtoolbutton_autoraise",ring_QToolButton_autoRaise);
	ring_vm_funcregister("qtoolbutton_defaultaction",ring_QToolButton_defaultAction);
	ring_vm_funcregister("qtoolbutton_menu",ring_QToolButton_menu);
	ring_vm_funcregister("qtoolbutton_popupmode",ring_QToolButton_popupMode);
	ring_vm_funcregister("qtoolbutton_setarrowtype",ring_QToolButton_setArrowType);
	ring_vm_funcregister("qtoolbutton_setautoraise",ring_QToolButton_setAutoRaise);
	ring_vm_funcregister("qtoolbutton_setmenu",ring_QToolButton_setMenu);
	ring_vm_funcregister("qtoolbutton_setpopupmode",ring_QToolButton_setPopupMode);
	ring_vm_funcregister("qtoolbutton_toolbuttonstyle",ring_QToolButton_toolButtonStyle);
	ring_vm_funcregister("qtoolbutton_setdefaultaction",ring_QToolButton_setDefaultAction);
	ring_vm_funcregister("qtoolbutton_settoolbuttonstyle",ring_QToolButton_setToolButtonStyle);
	ring_vm_funcregister("qtoolbutton_showmenu",ring_QToolButton_showMenu);
	ring_vm_funcregister("qtoolbutton_settriggeredevent",ring_QToolButton_settriggeredEvent);
	ring_vm_funcregister("qtoolbutton_gettriggeredevent",ring_QToolButton_gettriggeredEvent);
	ring_vm_funcregister("qtoolbutton_setclickevent",ring_QToolButton_setClickEvent);
	ring_vm_funcregister("qtoolbutton_getclickevent",ring_QToolButton_getClickEvent);
	ring_vm_funcregister("qserialport_baudrate",ring_QSerialPort_baudRate);
	ring_vm_funcregister("qserialport_clear",ring_QSerialPort_clear);
	ring_vm_funcregister("qserialport_clearerror",ring_QSerialPort_clearError);
	ring_vm_funcregister("qserialport_databits",ring_QSerialPort_dataBits);
	ring_vm_funcregister("qserialport_error",ring_QSerialPort_error);
	ring_vm_funcregister("qserialport_flowcontrol",ring_QSerialPort_flowControl);
	ring_vm_funcregister("qserialport_flush",ring_QSerialPort_flush);
	ring_vm_funcregister("qserialport_handle",ring_QSerialPort_handle);
	ring_vm_funcregister("qserialport_isdataterminalready",ring_QSerialPort_isDataTerminalReady);
	ring_vm_funcregister("qserialport_isrequesttosend",ring_QSerialPort_isRequestToSend);
	ring_vm_funcregister("qserialport_parity",ring_QSerialPort_parity);
	ring_vm_funcregister("qserialport_pinoutsignals",ring_QSerialPort_pinoutSignals);
	ring_vm_funcregister("qserialport_portname",ring_QSerialPort_portName);
	ring_vm_funcregister("qserialport_readbuffersize",ring_QSerialPort_readBufferSize);
	ring_vm_funcregister("qserialport_setbaudrate",ring_QSerialPort_setBaudRate);
	ring_vm_funcregister("qserialport_setbreakenabled",ring_QSerialPort_setBreakEnabled);
	ring_vm_funcregister("qserialport_setdatabits",ring_QSerialPort_setDataBits);
	ring_vm_funcregister("qserialport_setdataterminalready",ring_QSerialPort_setDataTerminalReady);
	ring_vm_funcregister("qserialport_setflowcontrol",ring_QSerialPort_setFlowControl);
	ring_vm_funcregister("qserialport_setparity",ring_QSerialPort_setParity);
	ring_vm_funcregister("qserialport_setport",ring_QSerialPort_setPort);
	ring_vm_funcregister("qserialport_setportname",ring_QSerialPort_setPortName);
	ring_vm_funcregister("qserialport_setreadbuffersize",ring_QSerialPort_setReadBufferSize);
	ring_vm_funcregister("qserialport_setrequesttosend",ring_QSerialPort_setRequestToSend);
	ring_vm_funcregister("qserialport_setstopbits",ring_QSerialPort_setStopBits);
	ring_vm_funcregister("qserialport_stopbits",ring_QSerialPort_stopBits);
	ring_vm_funcregister("qserialport_setbaudratechangedevent",ring_QSerialPort_setbaudRateChangedEvent);
	ring_vm_funcregister("qserialport_setbreakenabledchangedevent",ring_QSerialPort_setbreakEnabledChangedEvent);
	ring_vm_funcregister("qserialport_setdatabitschangedevent",ring_QSerialPort_setdataBitsChangedEvent);
	ring_vm_funcregister("qserialport_setdataterminalreadychangedevent",ring_QSerialPort_setdataTerminalReadyChangedEvent);
	ring_vm_funcregister("qserialport_seterrorevent",ring_QSerialPort_seterrorEvent);
	ring_vm_funcregister("qserialport_setflowcontrolchangedevent",ring_QSerialPort_setflowControlChangedEvent);
	ring_vm_funcregister("qserialport_setparitychangedevent",ring_QSerialPort_setparityChangedEvent);
	ring_vm_funcregister("qserialport_setrequesttosendchangedevent",ring_QSerialPort_setrequestToSendChangedEvent);
	ring_vm_funcregister("qserialport_setstopbitschangedevent",ring_QSerialPort_setstopBitsChangedEvent);
	ring_vm_funcregister("qserialport_getbaudratechangedevent",ring_QSerialPort_getbaudRateChangedEvent);
	ring_vm_funcregister("qserialport_getbreakenabledchangedevent",ring_QSerialPort_getbreakEnabledChangedEvent);
	ring_vm_funcregister("qserialport_getdatabitschangedevent",ring_QSerialPort_getdataBitsChangedEvent);
	ring_vm_funcregister("qserialport_getdataterminalreadychangedevent",ring_QSerialPort_getdataTerminalReadyChangedEvent);
	ring_vm_funcregister("qserialport_geterrorevent",ring_QSerialPort_geterrorEvent);
	ring_vm_funcregister("qserialport_getflowcontrolchangedevent",ring_QSerialPort_getflowControlChangedEvent);
	ring_vm_funcregister("qserialport_getparitychangedevent",ring_QSerialPort_getparityChangedEvent);
	ring_vm_funcregister("qserialport_getrequesttosendchangedevent",ring_QSerialPort_getrequestToSendChangedEvent);
	ring_vm_funcregister("qserialport_getstopbitschangedevent",ring_QSerialPort_getstopBitsChangedEvent);
	ring_vm_funcregister("qserialportinfo_description",ring_QSerialPortInfo_description);
	ring_vm_funcregister("qserialportinfo_hasproductidentifier",ring_QSerialPortInfo_hasProductIdentifier);
	ring_vm_funcregister("qserialportinfo_hasvendoridentifier",ring_QSerialPortInfo_hasVendorIdentifier);
	ring_vm_funcregister("qserialportinfo_isbusy",ring_QSerialPortInfo_isBusy);
	ring_vm_funcregister("qserialportinfo_isnull",ring_QSerialPortInfo_isNull);
	ring_vm_funcregister("qserialportinfo_manufacturer",ring_QSerialPortInfo_manufacturer);
	ring_vm_funcregister("qserialportinfo_portname",ring_QSerialPortInfo_portName);
	ring_vm_funcregister("qserialportinfo_productidentifier",ring_QSerialPortInfo_productIdentifier);
	ring_vm_funcregister("qserialportinfo_swap",ring_QSerialPortInfo_swap);
	ring_vm_funcregister("qserialportinfo_systemlocation",ring_QSerialPortInfo_systemLocation);
	ring_vm_funcregister("qserialportinfo_vendoridentifier",ring_QSerialPortInfo_vendorIdentifier);
	ring_vm_funcregister("qstringref_appendto",ring_QStringRef_appendTo);
	ring_vm_funcregister("qstringref_at",ring_QStringRef_at);
	ring_vm_funcregister("qstringref_clear",ring_QStringRef_clear);
	ring_vm_funcregister("qstringref_compare",ring_QStringRef_compare);
	ring_vm_funcregister("qstringref_compare_2",ring_QStringRef_compare_2);
	ring_vm_funcregister("qstringref_compare_3",ring_QStringRef_compare_3);
	ring_vm_funcregister("qstringref_constdata",ring_QStringRef_constData);
	ring_vm_funcregister("qstringref_contains",ring_QStringRef_contains);
	ring_vm_funcregister("qstringref_contains_2",ring_QStringRef_contains_2);
	ring_vm_funcregister("qstringref_contains_3",ring_QStringRef_contains_3);
	ring_vm_funcregister("qstringref_contains_4",ring_QStringRef_contains_4);
	ring_vm_funcregister("qstringref_count",ring_QStringRef_count);
	ring_vm_funcregister("qstringref_count_2",ring_QStringRef_count_2);
	ring_vm_funcregister("qstringref_count_3",ring_QStringRef_count_3);
	ring_vm_funcregister("qstringref_count_4",ring_QStringRef_count_4);
	ring_vm_funcregister("qstringref_data",ring_QStringRef_data);
	ring_vm_funcregister("qstringref_endswith",ring_QStringRef_endsWith);
	ring_vm_funcregister("qstringref_endswith_2",ring_QStringRef_endsWith_2);
	ring_vm_funcregister("qstringref_endswith_3",ring_QStringRef_endsWith_3);
	ring_vm_funcregister("qstringref_endswith_4",ring_QStringRef_endsWith_4);
	ring_vm_funcregister("qstringref_indexof",ring_QStringRef_indexOf);
	ring_vm_funcregister("qstringref_indexof_2",ring_QStringRef_indexOf_2);
	ring_vm_funcregister("qstringref_indexof_3",ring_QStringRef_indexOf_3);
	ring_vm_funcregister("qstringref_indexof_4",ring_QStringRef_indexOf_4);
	ring_vm_funcregister("qstringref_isempty",ring_QStringRef_isEmpty);
	ring_vm_funcregister("qstringref_isnull",ring_QStringRef_isNull);
	ring_vm_funcregister("qstringref_lastindexof",ring_QStringRef_lastIndexOf);
	ring_vm_funcregister("qstringref_lastindexof_2",ring_QStringRef_lastIndexOf_2);
	ring_vm_funcregister("qstringref_lastindexof_3",ring_QStringRef_lastIndexOf_3);
	ring_vm_funcregister("qstringref_lastindexof_4",ring_QStringRef_lastIndexOf_4);
	ring_vm_funcregister("qstringref_length",ring_QStringRef_length);
	ring_vm_funcregister("qstringref_localeawarecompare",ring_QStringRef_localeAwareCompare);
	ring_vm_funcregister("qstringref_localeawarecompare_2",ring_QStringRef_localeAwareCompare_2);
	ring_vm_funcregister("qstringref_position",ring_QStringRef_position);
	ring_vm_funcregister("qstringref_size",ring_QStringRef_size);
	ring_vm_funcregister("qstringref_startswith",ring_QStringRef_startsWith);
	ring_vm_funcregister("qstringref_startswith_2",ring_QStringRef_startsWith_2);
	ring_vm_funcregister("qstringref_startswith_3",ring_QStringRef_startsWith_3);
	ring_vm_funcregister("qstringref_startswith_4",ring_QStringRef_startsWith_4);
	ring_vm_funcregister("qstringref_string",ring_QStringRef_string);
	ring_vm_funcregister("qstringref_tolatin1",ring_QStringRef_toLatin1);
	ring_vm_funcregister("qstringref_tolocal8bit",ring_QStringRef_toLocal8Bit);
	ring_vm_funcregister("qstringref_tostring",ring_QStringRef_toString);
	ring_vm_funcregister("qstringref_toucs4",ring_QStringRef_toUcs4);
	ring_vm_funcregister("qstringref_toutf8",ring_QStringRef_toUtf8);
	ring_vm_funcregister("qstringref_unicode",ring_QStringRef_unicode);
	ring_vm_funcregister("qstringref_compare_4",ring_QStringRef_compare_4);
	ring_vm_funcregister("qstringref_compare_5",ring_QStringRef_compare_5);
	ring_vm_funcregister("qstringref_compare_6",ring_QStringRef_compare_6);
	ring_vm_funcregister("qstringref_localeawarecompare_3",ring_QStringRef_localeAwareCompare_3);
	ring_vm_funcregister("qstringref_localeawarecompare_4",ring_QStringRef_localeAwareCompare_4);
	ring_vm_funcregister("qmutex_isrecursive",ring_QMutex_isRecursive);
	ring_vm_funcregister("qmutex_lock",ring_QMutex_lock);
	ring_vm_funcregister("qmutex_unlock",ring_QMutex_unlock);
	ring_vm_funcregister("qmutexlocker_mutex",ring_QMutexLocker_mutex);
	ring_vm_funcregister("qmutexlocker_relock",ring_QMutexLocker_relock);
	ring_vm_funcregister("qmutexlocker_unlock",ring_QMutexLocker_unlock);
	ring_vm_funcregister("qbuffer_buffer",ring_QBuffer_buffer);
	ring_vm_funcregister("qbuffer_data",ring_QBuffer_data);
	ring_vm_funcregister("qbuffer_setbuffer",ring_QBuffer_setBuffer);
	ring_vm_funcregister("qbuffer_setdata",ring_QBuffer_setData);
	ring_vm_funcregister("qbuffer_setdata_2",ring_QBuffer_setData_2);
	ring_vm_funcregister("qbluetoothaddress_clear",ring_QBluetoothAddress_clear);
	ring_vm_funcregister("qbluetoothaddress_isnull",ring_QBluetoothAddress_isNull);
	ring_vm_funcregister("qbluetoothaddress_tostring",ring_QBluetoothAddress_toString);
	ring_vm_funcregister("qbluetoothaddress_touint64",ring_QBluetoothAddress_toUInt64);
	ring_vm_funcregister("qbluetoothdevicediscoveryagent_discovereddevices",ring_QBluetoothDeviceDiscoveryAgent_discoveredDevices);
	ring_vm_funcregister("qbluetoothdevicediscoveryagent_error",ring_QBluetoothDeviceDiscoveryAgent_error);
	ring_vm_funcregister("qbluetoothdevicediscoveryagent_errorstring",ring_QBluetoothDeviceDiscoveryAgent_errorString);
	ring_vm_funcregister("qbluetoothdevicediscoveryagent_inquirytype",ring_QBluetoothDeviceDiscoveryAgent_inquiryType);
	ring_vm_funcregister("qbluetoothdevicediscoveryagent_isactive",ring_QBluetoothDeviceDiscoveryAgent_isActive);
	ring_vm_funcregister("qbluetoothdevicediscoveryagent_setinquirytype",ring_QBluetoothDeviceDiscoveryAgent_setInquiryType);
	ring_vm_funcregister("qbluetoothdevicediscoveryagent_start",ring_QBluetoothDeviceDiscoveryAgent_start);
	ring_vm_funcregister("qbluetoothdevicediscoveryagent_stop",ring_QBluetoothDeviceDiscoveryAgent_stop);
	ring_vm_funcregister("qbluetoothdevicediscoveryagent_setcanceledevent",ring_QBluetoothDeviceDiscoveryAgent_setcanceledEvent);
	ring_vm_funcregister("qbluetoothdevicediscoveryagent_setdevicediscoveredevent",ring_QBluetoothDeviceDiscoveryAgent_setdeviceDiscoveredEvent);
	ring_vm_funcregister("qbluetoothdevicediscoveryagent_seterrorevent",ring_QBluetoothDeviceDiscoveryAgent_seterrorEvent);
	ring_vm_funcregister("qbluetoothdevicediscoveryagent_setfinishedevent",ring_QBluetoothDeviceDiscoveryAgent_setfinishedEvent);
	ring_vm_funcregister("qbluetoothdevicediscoveryagent_getcanceledevent",ring_QBluetoothDeviceDiscoveryAgent_getcanceledEvent);
	ring_vm_funcregister("qbluetoothdevicediscoveryagent_getdevicediscoveredevent",ring_QBluetoothDeviceDiscoveryAgent_getdeviceDiscoveredEvent);
	ring_vm_funcregister("qbluetoothdevicediscoveryagent_geterrorevent",ring_QBluetoothDeviceDiscoveryAgent_geterrorEvent);
	ring_vm_funcregister("qbluetoothdevicediscoveryagent_getfinishedevent",ring_QBluetoothDeviceDiscoveryAgent_getfinishedEvent);
	ring_vm_funcregister("qbluetoothdeviceinfo_address",ring_QBluetoothDeviceInfo_address);
	ring_vm_funcregister("qbluetoothdeviceinfo_iscached",ring_QBluetoothDeviceInfo_isCached);
	ring_vm_funcregister("qbluetoothdeviceinfo_isvalid",ring_QBluetoothDeviceInfo_isValid);
	ring_vm_funcregister("qbluetoothdeviceinfo_majordeviceclass",ring_QBluetoothDeviceInfo_majorDeviceClass);
	ring_vm_funcregister("qbluetoothdeviceinfo_minordeviceclass",ring_QBluetoothDeviceInfo_minorDeviceClass);
	ring_vm_funcregister("qbluetoothdeviceinfo_name",ring_QBluetoothDeviceInfo_name);
	ring_vm_funcregister("qbluetoothdeviceinfo_rssi",ring_QBluetoothDeviceInfo_rssi);
	ring_vm_funcregister("qbluetoothdeviceinfo_serviceclasses",ring_QBluetoothDeviceInfo_serviceClasses);
	ring_vm_funcregister("qbluetoothdeviceinfo_serviceuuids",ring_QBluetoothDeviceInfo_serviceUuids);
	ring_vm_funcregister("qbluetoothdeviceinfo_serviceuuidscompleteness",ring_QBluetoothDeviceInfo_serviceUuidsCompleteness);
	ring_vm_funcregister("qbluetoothdeviceinfo_setcached",ring_QBluetoothDeviceInfo_setCached);
	ring_vm_funcregister("qbluetoothdeviceinfo_setrssi",ring_QBluetoothDeviceInfo_setRssi);
	ring_vm_funcregister("qbluetoothdeviceinfo_setserviceuuids",ring_QBluetoothDeviceInfo_setServiceUuids);
	ring_vm_funcregister("qbluetoothhostinfo_address",ring_QBluetoothHostInfo_address);
	ring_vm_funcregister("qbluetoothhostinfo_name",ring_QBluetoothHostInfo_name);
	ring_vm_funcregister("qbluetoothhostinfo_setaddress",ring_QBluetoothHostInfo_setAddress);
	ring_vm_funcregister("qbluetoothhostinfo_setname",ring_QBluetoothHostInfo_setName);
	ring_vm_funcregister("qbluetoothlocaldevice_address",ring_QBluetoothLocalDevice_address);
	ring_vm_funcregister("qdatetime_adddays",ring_QDateTime_addDays);
	ring_vm_funcregister("qdatetime_addmsecs",ring_QDateTime_addMSecs);
	ring_vm_funcregister("qdatetime_addmonths",ring_QDateTime_addMonths);
	ring_vm_funcregister("qdatetime_addsecs",ring_QDateTime_addSecs);
	ring_vm_funcregister("qdatetime_addyears",ring_QDateTime_addYears);
	ring_vm_funcregister("qdatetime_date",ring_QDateTime_date);
	ring_vm_funcregister("qdatetime_daysto",ring_QDateTime_daysTo);
	ring_vm_funcregister("qdatetime_isnull",ring_QDateTime_isNull);
	ring_vm_funcregister("qdatetime_isvalid",ring_QDateTime_isValid);
	ring_vm_funcregister("qdatetime_msecsto",ring_QDateTime_msecsTo);
	ring_vm_funcregister("qdatetime_secsto",ring_QDateTime_secsTo);
	ring_vm_funcregister("qdatetime_setdate",ring_QDateTime_setDate);
	ring_vm_funcregister("qdatetime_setmsecssinceepoch",ring_QDateTime_setMSecsSinceEpoch);
	ring_vm_funcregister("qdatetime_settime",ring_QDateTime_setTime);
	ring_vm_funcregister("qdatetime_settimespec",ring_QDateTime_setTimeSpec);
	ring_vm_funcregister("qdatetime_settime_t",ring_QDateTime_setTime_t);
	ring_vm_funcregister("qdatetime_time",ring_QDateTime_time);
	ring_vm_funcregister("qdatetime_timespec",ring_QDateTime_timeSpec);
	ring_vm_funcregister("qdatetime_tolocaltime",ring_QDateTime_toLocalTime);
	ring_vm_funcregister("qdatetime_tomsecssinceepoch",ring_QDateTime_toMSecsSinceEpoch);
	ring_vm_funcregister("qdatetime_tostring",ring_QDateTime_toString);
	ring_vm_funcregister("qdatetime_tostring_2",ring_QDateTime_toString_2);
	ring_vm_funcregister("qdatetime_totimespec",ring_QDateTime_toTimeSpec);
	ring_vm_funcregister("qdatetime_totime_t",ring_QDateTime_toTime_t);
	ring_vm_funcregister("qdatetime_toutc",ring_QDateTime_toUTC);
	ring_vm_funcregister("qdatetime_currentdatetime",ring_QDateTime_currentDateTime);
	ring_vm_funcregister("qdatetime_currentdatetimeutc",ring_QDateTime_currentDateTimeUtc);
	ring_vm_funcregister("qdatetime_currentmsecssinceepoch",ring_QDateTime_currentMSecsSinceEpoch);
	ring_vm_funcregister("qdatetime_frommsecssinceepoch",ring_QDateTime_fromMSecsSinceEpoch);
	ring_vm_funcregister("qdatetime_fromstring",ring_QDateTime_fromString);
	ring_vm_funcregister("qdatetime_fromstring_2",ring_QDateTime_fromString_2);
	ring_vm_funcregister("qdatetime_fromtime_t",ring_QDateTime_fromTime_t);
	ring_vm_funcregister("qscreen_anglebetween",ring_QScreen_angleBetween);
	ring_vm_funcregister("qscreen_availablegeometry",ring_QScreen_availableGeometry);
	ring_vm_funcregister("qscreen_availablesize",ring_QScreen_availableSize);
	ring_vm_funcregister("qscreen_availablevirtualgeometry",ring_QScreen_availableVirtualGeometry);
	ring_vm_funcregister("qscreen_availablevirtualsize",ring_QScreen_availableVirtualSize);
	ring_vm_funcregister("qscreen_depth",ring_QScreen_depth);
	ring_vm_funcregister("qscreen_devicepixelratio",ring_QScreen_devicePixelRatio);
	ring_vm_funcregister("qscreen_geometry",ring_QScreen_geometry);
	ring_vm_funcregister("qscreen_grabwindow",ring_QScreen_grabWindow);
	ring_vm_funcregister("qscreen_grabwindow_2",ring_QScreen_grabWindow_2);
	ring_vm_funcregister("qscreen_handle",ring_QScreen_handle);
	ring_vm_funcregister("qscreen_islandscape",ring_QScreen_isLandscape);
	ring_vm_funcregister("qscreen_isportrait",ring_QScreen_isPortrait);
	ring_vm_funcregister("qscreen_logicaldotsperinch",ring_QScreen_logicalDotsPerInch);
	ring_vm_funcregister("qscreen_logicaldotsperinchx",ring_QScreen_logicalDotsPerInchX);
	ring_vm_funcregister("qscreen_logicaldotsperinchy",ring_QScreen_logicalDotsPerInchY);
	ring_vm_funcregister("qscreen_mapbetween",ring_QScreen_mapBetween);
	ring_vm_funcregister("qscreen_name",ring_QScreen_name);
	ring_vm_funcregister("qscreen_nativeorientation",ring_QScreen_nativeOrientation);
	ring_vm_funcregister("qscreen_orientation",ring_QScreen_orientation);
	ring_vm_funcregister("qscreen_orientationupdatemask",ring_QScreen_orientationUpdateMask);
	ring_vm_funcregister("qscreen_physicaldotsperinch",ring_QScreen_physicalDotsPerInch);
	ring_vm_funcregister("qscreen_physicaldotsperinchx",ring_QScreen_physicalDotsPerInchX);
	ring_vm_funcregister("qscreen_physicaldotsperinchy",ring_QScreen_physicalDotsPerInchY);
	ring_vm_funcregister("qscreen_physicalsize",ring_QScreen_physicalSize);
	ring_vm_funcregister("qscreen_primaryorientation",ring_QScreen_primaryOrientation);
	ring_vm_funcregister("qscreen_refreshrate",ring_QScreen_refreshRate);
	ring_vm_funcregister("qscreen_setorientationupdatemask",ring_QScreen_setOrientationUpdateMask);
	ring_vm_funcregister("qscreen_size",ring_QScreen_size);
	ring_vm_funcregister("qscreen_transformbetween",ring_QScreen_transformBetween);
	ring_vm_funcregister("qwindow_basesize",ring_QWindow_baseSize);
	ring_vm_funcregister("qwindow_contentorientation",ring_QWindow_contentOrientation);
	ring_vm_funcregister("qwindow_create",ring_QWindow_create);
	ring_vm_funcregister("qwindow_cursor",ring_QWindow_cursor);
	ring_vm_funcregister("qwindow_destroy",ring_QWindow_destroy);
	ring_vm_funcregister("qwindow_devicepixelratio",ring_QWindow_devicePixelRatio);
	ring_vm_funcregister("qwindow_filepath",ring_QWindow_filePath);
	ring_vm_funcregister("qwindow_flags",ring_QWindow_flags);
	ring_vm_funcregister("qwindow_focusobject",ring_QWindow_focusObject);
	ring_vm_funcregister("qwindow_framegeometry",ring_QWindow_frameGeometry);
	ring_vm_funcregister("qwindow_framemargins",ring_QWindow_frameMargins);
	ring_vm_funcregister("qwindow_frameposition",ring_QWindow_framePosition);
	ring_vm_funcregister("qwindow_geometry",ring_QWindow_geometry);
	ring_vm_funcregister("qwindow_height",ring_QWindow_height);
	ring_vm_funcregister("qwindow_icon",ring_QWindow_icon);
	ring_vm_funcregister("qwindow_isactive",ring_QWindow_isActive);
	ring_vm_funcregister("qwindow_isancestorof",ring_QWindow_isAncestorOf);
	ring_vm_funcregister("qwindow_isexposed",ring_QWindow_isExposed);
	ring_vm_funcregister("qwindow_ismodal",ring_QWindow_isModal);
	ring_vm_funcregister("qwindow_istoplevel",ring_QWindow_isTopLevel);
	ring_vm_funcregister("qwindow_isvisible",ring_QWindow_isVisible);
	ring_vm_funcregister("qwindow_mapfromglobal",ring_QWindow_mapFromGlobal);
	ring_vm_funcregister("qwindow_maptoglobal",ring_QWindow_mapToGlobal);
	ring_vm_funcregister("qwindow_mask",ring_QWindow_mask);
	ring_vm_funcregister("qwindow_maximumheight",ring_QWindow_maximumHeight);
	ring_vm_funcregister("qwindow_maximumsize",ring_QWindow_maximumSize);
	ring_vm_funcregister("qwindow_maximumwidth",ring_QWindow_maximumWidth);
	ring_vm_funcregister("qwindow_minimumheight",ring_QWindow_minimumHeight);
	ring_vm_funcregister("qwindow_minimumsize",ring_QWindow_minimumSize);
	ring_vm_funcregister("qwindow_minimumwidth",ring_QWindow_minimumWidth);
	ring_vm_funcregister("qwindow_modality",ring_QWindow_modality);
	ring_vm_funcregister("qwindow_opacity",ring_QWindow_opacity);
	ring_vm_funcregister("qwindow_position",ring_QWindow_position);
	ring_vm_funcregister("qwindow_reportcontentorientationchange",ring_QWindow_reportContentOrientationChange);
	ring_vm_funcregister("qwindow_requestedformat",ring_QWindow_requestedFormat);
	ring_vm_funcregister("qwindow_resize",ring_QWindow_resize);
	ring_vm_funcregister("qwindow_resize_2",ring_QWindow_resize_2);
	ring_vm_funcregister("qwindow_screen",ring_QWindow_screen);
	ring_vm_funcregister("qwindow_setbasesize",ring_QWindow_setBaseSize);
	ring_vm_funcregister("qwindow_setcursor",ring_QWindow_setCursor);
	ring_vm_funcregister("qwindow_setfilepath",ring_QWindow_setFilePath);
	ring_vm_funcregister("qwindow_setflags",ring_QWindow_setFlags);
	ring_vm_funcregister("qwindow_setformat",ring_QWindow_setFormat);
	ring_vm_funcregister("qwindow_setframeposition",ring_QWindow_setFramePosition);
	ring_vm_funcregister("qwindow_setgeometry",ring_QWindow_setGeometry);
	ring_vm_funcregister("qwindow_setgeometry_2",ring_QWindow_setGeometry_2);
	ring_vm_funcregister("qwindow_seticon",ring_QWindow_setIcon);
	ring_vm_funcregister("qwindow_setkeyboardgrabenabled",ring_QWindow_setKeyboardGrabEnabled);
	ring_vm_funcregister("qwindow_setmask",ring_QWindow_setMask);
	ring_vm_funcregister("qwindow_setmaximumsize",ring_QWindow_setMaximumSize);
	ring_vm_funcregister("qwindow_setminimumsize",ring_QWindow_setMinimumSize);
	ring_vm_funcregister("qwindow_setmodality",ring_QWindow_setModality);
	ring_vm_funcregister("qwindow_setmousegrabenabled",ring_QWindow_setMouseGrabEnabled);
	ring_vm_funcregister("qwindow_setopacity",ring_QWindow_setOpacity);
	ring_vm_funcregister("qwindow_setparent",ring_QWindow_setParent);
	ring_vm_funcregister("qwindow_setposition",ring_QWindow_setPosition);
	ring_vm_funcregister("qwindow_setposition_2",ring_QWindow_setPosition_2);
	ring_vm_funcregister("qwindow_setscreen",ring_QWindow_setScreen);
	ring_vm_funcregister("qwindow_setsizeincrement",ring_QWindow_setSizeIncrement);
	ring_vm_funcregister("qwindow_settransientparent",ring_QWindow_setTransientParent);
	ring_vm_funcregister("qwindow_setvisibility",ring_QWindow_setVisibility);
	ring_vm_funcregister("qwindow_setwindowstate",ring_QWindow_setWindowState);
	ring_vm_funcregister("qwindow_sizeincrement",ring_QWindow_sizeIncrement);
	ring_vm_funcregister("qwindow_title",ring_QWindow_title);
	ring_vm_funcregister("qwindow_transientparent",ring_QWindow_transientParent);
	ring_vm_funcregister("qwindow_type",ring_QWindow_type);
	ring_vm_funcregister("qwindow_unsetcursor",ring_QWindow_unsetCursor);
	ring_vm_funcregister("qwindow_visibility",ring_QWindow_visibility);
	ring_vm_funcregister("qwindow_width",ring_QWindow_width);
	ring_vm_funcregister("qwindow_winid",ring_QWindow_winId);
	ring_vm_funcregister("qwindow_windowstate",ring_QWindow_windowState);
	ring_vm_funcregister("qwindow_x",ring_QWindow_x);
	ring_vm_funcregister("qwindow_y",ring_QWindow_y);
	ring_vm_funcregister("qwindow_alert",ring_QWindow_alert);
	ring_vm_funcregister("qwindow_close",ring_QWindow_close);
	ring_vm_funcregister("qwindow_hide",ring_QWindow_hide);
	ring_vm_funcregister("qwindow_lower",ring_QWindow_lower);
	ring_vm_funcregister("qwindow_raise",ring_QWindow_raise);
	ring_vm_funcregister("qwindow_requestactivate",ring_QWindow_requestActivate);
	ring_vm_funcregister("qwindow_setheight",ring_QWindow_setHeight);
	ring_vm_funcregister("qwindow_setmaximumheight",ring_QWindow_setMaximumHeight);
	ring_vm_funcregister("qwindow_setmaximumwidth",ring_QWindow_setMaximumWidth);
	ring_vm_funcregister("qwindow_setminimumheight",ring_QWindow_setMinimumHeight);
	ring_vm_funcregister("qwindow_setminimumwidth",ring_QWindow_setMinimumWidth);
	ring_vm_funcregister("qwindow_settitle",ring_QWindow_setTitle);
	ring_vm_funcregister("qwindow_setvisible",ring_QWindow_setVisible);
	ring_vm_funcregister("qwindow_setwidth",ring_QWindow_setWidth);
	ring_vm_funcregister("qwindow_setx",ring_QWindow_setX);
	ring_vm_funcregister("qwindow_sety",ring_QWindow_setY);
	ring_vm_funcregister("qwindow_show",ring_QWindow_show);
	ring_vm_funcregister("qwindow_showfullscreen",ring_QWindow_showFullScreen);
	ring_vm_funcregister("qwindow_showmaximized",ring_QWindow_showMaximized);
	ring_vm_funcregister("qwindow_showminimized",ring_QWindow_showMinimized);
	ring_vm_funcregister("qwindow_shownormal",ring_QWindow_showNormal);
	ring_vm_funcregister("qwindow_fromwinid",ring_QWindow_fromWinId);
	ring_vm_funcregister("qwindow_setactivechangedevent",ring_QWindow_setactiveChangedEvent);
	ring_vm_funcregister("qwindow_setcontentorientationchangedevent",ring_QWindow_setcontentOrientationChangedEvent);
	ring_vm_funcregister("qwindow_setfocusobjectchangedevent",ring_QWindow_setfocusObjectChangedEvent);
	ring_vm_funcregister("qwindow_setheightchangedevent",ring_QWindow_setheightChangedEvent);
	ring_vm_funcregister("qwindow_setmaximumheightchangedevent",ring_QWindow_setmaximumHeightChangedEvent);
	ring_vm_funcregister("qwindow_setmaximumwidthchangedevent",ring_QWindow_setmaximumWidthChangedEvent);
	ring_vm_funcregister("qwindow_setminimumheightchangedevent",ring_QWindow_setminimumHeightChangedEvent);
	ring_vm_funcregister("qwindow_setminimumwidthchangedevent",ring_QWindow_setminimumWidthChangedEvent);
	ring_vm_funcregister("qwindow_setmodalitychangedevent",ring_QWindow_setmodalityChangedEvent);
	ring_vm_funcregister("qwindow_setopacitychangedevent",ring_QWindow_setopacityChangedEvent);
	ring_vm_funcregister("qwindow_setscreenchangedevent",ring_QWindow_setscreenChangedEvent);
	ring_vm_funcregister("qwindow_setvisibilitychangedevent",ring_QWindow_setvisibilityChangedEvent);
	ring_vm_funcregister("qwindow_setvisiblechangedevent",ring_QWindow_setvisibleChangedEvent);
	ring_vm_funcregister("qwindow_setwidthchangedevent",ring_QWindow_setwidthChangedEvent);
	ring_vm_funcregister("qwindow_setwindowstatechangedevent",ring_QWindow_setwindowStateChangedEvent);
	ring_vm_funcregister("qwindow_setwindowtitlechangedevent",ring_QWindow_setwindowTitleChangedEvent);
	ring_vm_funcregister("qwindow_setxchangedevent",ring_QWindow_setxChangedEvent);
	ring_vm_funcregister("qwindow_setychangedevent",ring_QWindow_setyChangedEvent);
	ring_vm_funcregister("qwindow_getactivechangedevent",ring_QWindow_getactiveChangedEvent);
	ring_vm_funcregister("qwindow_getcontentorientationchangedevent",ring_QWindow_getcontentOrientationChangedEvent);
	ring_vm_funcregister("qwindow_getfocusobjectchangedevent",ring_QWindow_getfocusObjectChangedEvent);
	ring_vm_funcregister("qwindow_getheightchangedevent",ring_QWindow_getheightChangedEvent);
	ring_vm_funcregister("qwindow_getmaximumheightchangedevent",ring_QWindow_getmaximumHeightChangedEvent);
	ring_vm_funcregister("qwindow_getmaximumwidthchangedevent",ring_QWindow_getmaximumWidthChangedEvent);
	ring_vm_funcregister("qwindow_getminimumheightchangedevent",ring_QWindow_getminimumHeightChangedEvent);
	ring_vm_funcregister("qwindow_getminimumwidthchangedevent",ring_QWindow_getminimumWidthChangedEvent);
	ring_vm_funcregister("qwindow_getmodalitychangedevent",ring_QWindow_getmodalityChangedEvent);
	ring_vm_funcregister("qwindow_getopacitychangedevent",ring_QWindow_getopacityChangedEvent);
	ring_vm_funcregister("qwindow_getscreenchangedevent",ring_QWindow_getscreenChangedEvent);
	ring_vm_funcregister("qwindow_getvisibilitychangedevent",ring_QWindow_getvisibilityChangedEvent);
	ring_vm_funcregister("qwindow_getvisiblechangedevent",ring_QWindow_getvisibleChangedEvent);
	ring_vm_funcregister("qwindow_getwidthchangedevent",ring_QWindow_getwidthChangedEvent);
	ring_vm_funcregister("qwindow_getwindowstatechangedevent",ring_QWindow_getwindowStateChangedEvent);
	ring_vm_funcregister("qwindow_getwindowtitlechangedevent",ring_QWindow_getwindowTitleChangedEvent);
	ring_vm_funcregister("qwindow_getxchangedevent",ring_QWindow_getxChangedEvent);
	ring_vm_funcregister("qwindow_getychangedevent",ring_QWindow_getyChangedEvent);
	ring_vm_funcregister("qguiapplication_devicepixelratio",ring_QGuiApplication_devicePixelRatio);
	ring_vm_funcregister("qguiapplication_issavingsession",ring_QGuiApplication_isSavingSession);
	ring_vm_funcregister("qguiapplication_issessionrestored",ring_QGuiApplication_isSessionRestored);
	ring_vm_funcregister("qguiapplication_sessionid",ring_QGuiApplication_sessionId);
	ring_vm_funcregister("qguiapplication_sessionkey",ring_QGuiApplication_sessionKey);
	ring_vm_funcregister("qguiapplication_allwindows",ring_QGuiApplication_allWindows);
	ring_vm_funcregister("qguiapplication_applicationdisplayname",ring_QGuiApplication_applicationDisplayName);
	ring_vm_funcregister("qguiapplication_applicationstate",ring_QGuiApplication_applicationState);
	ring_vm_funcregister("qguiapplication_changeoverridecursor",ring_QGuiApplication_changeOverrideCursor);
	ring_vm_funcregister("qguiapplication_clipboard",ring_QGuiApplication_clipboard);
	ring_vm_funcregister("qguiapplication_desktopsettingsaware",ring_QGuiApplication_desktopSettingsAware);
	ring_vm_funcregister("qguiapplication_exec",ring_QGuiApplication_exec);
	ring_vm_funcregister("qguiapplication_focusobject",ring_QGuiApplication_focusObject);
	ring_vm_funcregister("qguiapplication_focuswindow",ring_QGuiApplication_focusWindow);
	ring_vm_funcregister("qguiapplication_font",ring_QGuiApplication_font);
	ring_vm_funcregister("qguiapplication_inputmethod",ring_QGuiApplication_inputMethod);
	ring_vm_funcregister("qguiapplication_islefttoright",ring_QGuiApplication_isLeftToRight);
	ring_vm_funcregister("qguiapplication_isrighttoleft",ring_QGuiApplication_isRightToLeft);
	ring_vm_funcregister("qguiapplication_keyboardmodifiers",ring_QGuiApplication_keyboardModifiers);
	ring_vm_funcregister("qguiapplication_layoutdirection",ring_QGuiApplication_layoutDirection);
	ring_vm_funcregister("qguiapplication_modalwindow",ring_QGuiApplication_modalWindow);
	ring_vm_funcregister("qguiapplication_mousebuttons",ring_QGuiApplication_mouseButtons);
	ring_vm_funcregister("qguiapplication_overridecursor",ring_QGuiApplication_overrideCursor);
	ring_vm_funcregister("qguiapplication_palette",ring_QGuiApplication_palette);
	ring_vm_funcregister("qguiapplication_platformname",ring_QGuiApplication_platformName);
	ring_vm_funcregister("qguiapplication_platformnativeinterface",ring_QGuiApplication_platformNativeInterface);
	ring_vm_funcregister("qguiapplication_primaryscreen",ring_QGuiApplication_primaryScreen);
	ring_vm_funcregister("qguiapplication_querykeyboardmodifiers",ring_QGuiApplication_queryKeyboardModifiers);
	ring_vm_funcregister("qguiapplication_quitonlastwindowclosed",ring_QGuiApplication_quitOnLastWindowClosed);
	ring_vm_funcregister("qguiapplication_restoreoverridecursor",ring_QGuiApplication_restoreOverrideCursor);
	ring_vm_funcregister("qguiapplication_screens",ring_QGuiApplication_screens);
	ring_vm_funcregister("qguiapplication_setapplicationdisplayname",ring_QGuiApplication_setApplicationDisplayName);
	ring_vm_funcregister("qguiapplication_setdesktopsettingsaware",ring_QGuiApplication_setDesktopSettingsAware);
	ring_vm_funcregister("qguiapplication_setfont",ring_QGuiApplication_setFont);
	ring_vm_funcregister("qguiapplication_setlayoutdirection",ring_QGuiApplication_setLayoutDirection);
	ring_vm_funcregister("qguiapplication_setoverridecursor",ring_QGuiApplication_setOverrideCursor);
	ring_vm_funcregister("qguiapplication_setpalette",ring_QGuiApplication_setPalette);
	ring_vm_funcregister("qguiapplication_setquitonlastwindowclosed",ring_QGuiApplication_setQuitOnLastWindowClosed);
	ring_vm_funcregister("qguiapplication_stylehints",ring_QGuiApplication_styleHints);
	ring_vm_funcregister("qguiapplication_sync",ring_QGuiApplication_sync);
	ring_vm_funcregister("qguiapplication_toplevelat",ring_QGuiApplication_topLevelAt);
	ring_vm_funcregister("qguiapplication_toplevelwindows",ring_QGuiApplication_topLevelWindows);
	ring_vm_funcregister("qguiapplication_setapplicationdisplaynamechangedevent",ring_QGuiApplication_setapplicationDisplayNameChangedEvent);
	ring_vm_funcregister("qguiapplication_setapplicationstatechangedevent",ring_QGuiApplication_setapplicationStateChangedEvent);
	ring_vm_funcregister("qguiapplication_setcommitdatarequestevent",ring_QGuiApplication_setcommitDataRequestEvent);
	ring_vm_funcregister("qguiapplication_setfocusobjectchangedevent",ring_QGuiApplication_setfocusObjectChangedEvent);
	ring_vm_funcregister("qguiapplication_setfocuswindowchangedevent",ring_QGuiApplication_setfocusWindowChangedEvent);
	ring_vm_funcregister("qguiapplication_setfontdatabasechangedevent",ring_QGuiApplication_setfontDatabaseChangedEvent);
	ring_vm_funcregister("qguiapplication_setlastwindowclosedevent",ring_QGuiApplication_setlastWindowClosedEvent);
	ring_vm_funcregister("qguiapplication_setlayoutdirectionchangedevent",ring_QGuiApplication_setlayoutDirectionChangedEvent);
	ring_vm_funcregister("qguiapplication_setpalettechangedevent",ring_QGuiApplication_setpaletteChangedEvent);
	ring_vm_funcregister("qguiapplication_setprimaryscreenchangedevent",ring_QGuiApplication_setprimaryScreenChangedEvent);
	ring_vm_funcregister("qguiapplication_setsavestaterequestevent",ring_QGuiApplication_setsaveStateRequestEvent);
	ring_vm_funcregister("qguiapplication_setscreenaddedevent",ring_QGuiApplication_setscreenAddedEvent);
	ring_vm_funcregister("qguiapplication_setscreenremovedevent",ring_QGuiApplication_setscreenRemovedEvent);
	ring_vm_funcregister("qguiapplication_getapplicationdisplaynamechangedevent",ring_QGuiApplication_getapplicationDisplayNameChangedEvent);
	ring_vm_funcregister("qguiapplication_getapplicationstatechangedevent",ring_QGuiApplication_getapplicationStateChangedEvent);
	ring_vm_funcregister("qguiapplication_getcommitdatarequestevent",ring_QGuiApplication_getcommitDataRequestEvent);
	ring_vm_funcregister("qguiapplication_getfocusobjectchangedevent",ring_QGuiApplication_getfocusObjectChangedEvent);
	ring_vm_funcregister("qguiapplication_getfocuswindowchangedevent",ring_QGuiApplication_getfocusWindowChangedEvent);
	ring_vm_funcregister("qguiapplication_getfontdatabasechangedevent",ring_QGuiApplication_getfontDatabaseChangedEvent);
	ring_vm_funcregister("qguiapplication_getlastwindowclosedevent",ring_QGuiApplication_getlastWindowClosedEvent);
	ring_vm_funcregister("qguiapplication_getlayoutdirectionchangedevent",ring_QGuiApplication_getlayoutDirectionChangedEvent);
	ring_vm_funcregister("qguiapplication_getpalettechangedevent",ring_QGuiApplication_getpaletteChangedEvent);
	ring_vm_funcregister("qguiapplication_getprimaryscreenchangedevent",ring_QGuiApplication_getprimaryScreenChangedEvent);
	ring_vm_funcregister("qguiapplication_getsavestaterequestevent",ring_QGuiApplication_getsaveStateRequestEvent);
	ring_vm_funcregister("qguiapplication_getscreenaddedevent",ring_QGuiApplication_getscreenAddedEvent);
	ring_vm_funcregister("qguiapplication_getscreenremovedevent",ring_QGuiApplication_getscreenRemovedEvent);
	ring_vm_funcregister("qcoreapplication_installnativeeventfilter",ring_QCoreApplication_installNativeEventFilter);
	ring_vm_funcregister("qcoreapplication_removenativeeventfilter",ring_QCoreApplication_removeNativeEventFilter);
	ring_vm_funcregister("qcoreapplication_quit",ring_QCoreApplication_quit);
	ring_vm_funcregister("qcoreapplication_addlibrarypath",ring_QCoreApplication_addLibraryPath);
	ring_vm_funcregister("qcoreapplication_applicationdirpath",ring_QCoreApplication_applicationDirPath);
	ring_vm_funcregister("qcoreapplication_applicationfilepath",ring_QCoreApplication_applicationFilePath);
	ring_vm_funcregister("qcoreapplication_applicationname",ring_QCoreApplication_applicationName);
	ring_vm_funcregister("qcoreapplication_applicationpid",ring_QCoreApplication_applicationPid);
	ring_vm_funcregister("qcoreapplication_applicationversion",ring_QCoreApplication_applicationVersion);
	ring_vm_funcregister("qcoreapplication_arguments",ring_QCoreApplication_arguments);
	ring_vm_funcregister("qcoreapplication_closingdown",ring_QCoreApplication_closingDown);
	ring_vm_funcregister("qcoreapplication_eventdispatcher",ring_QCoreApplication_eventDispatcher);
	ring_vm_funcregister("qcoreapplication_exec",ring_QCoreApplication_exec);
	ring_vm_funcregister("qcoreapplication_exit",ring_QCoreApplication_exit);
	ring_vm_funcregister("qcoreapplication_installtranslator",ring_QCoreApplication_installTranslator);
	ring_vm_funcregister("qcoreapplication_instance",ring_QCoreApplication_instance);
	ring_vm_funcregister("qcoreapplication_isquitlockenabled",ring_QCoreApplication_isQuitLockEnabled);
	ring_vm_funcregister("qcoreapplication_librarypaths",ring_QCoreApplication_libraryPaths);
	ring_vm_funcregister("qcoreapplication_organizationdomain",ring_QCoreApplication_organizationDomain);
	ring_vm_funcregister("qcoreapplication_organizationname",ring_QCoreApplication_organizationName);
	ring_vm_funcregister("qcoreapplication_postevent",ring_QCoreApplication_postEvent);
	ring_vm_funcregister("qcoreapplication_processevents",ring_QCoreApplication_processEvents);
	ring_vm_funcregister("qcoreapplication_processevents_2",ring_QCoreApplication_processEvents_2);
	ring_vm_funcregister("qcoreapplication_removelibrarypath",ring_QCoreApplication_removeLibraryPath);
	ring_vm_funcregister("qcoreapplication_removepostedevents",ring_QCoreApplication_removePostedEvents);
	ring_vm_funcregister("qcoreapplication_removetranslator",ring_QCoreApplication_removeTranslator);
	ring_vm_funcregister("qcoreapplication_sendevent",ring_QCoreApplication_sendEvent);
	ring_vm_funcregister("qcoreapplication_sendpostedevents",ring_QCoreApplication_sendPostedEvents);
	ring_vm_funcregister("qcoreapplication_setapplicationname",ring_QCoreApplication_setApplicationName);
	ring_vm_funcregister("qcoreapplication_setapplicationversion",ring_QCoreApplication_setApplicationVersion);
	ring_vm_funcregister("qcoreapplication_setattribute",ring_QCoreApplication_setAttribute);
	ring_vm_funcregister("qcoreapplication_seteventdispatcher",ring_QCoreApplication_setEventDispatcher);
	ring_vm_funcregister("qcoreapplication_setlibrarypaths",ring_QCoreApplication_setLibraryPaths);
	ring_vm_funcregister("qcoreapplication_setorganizationdomain",ring_QCoreApplication_setOrganizationDomain);
	ring_vm_funcregister("qcoreapplication_setorganizationname",ring_QCoreApplication_setOrganizationName);
	ring_vm_funcregister("qcoreapplication_setquitlockenabled",ring_QCoreApplication_setQuitLockEnabled);
	ring_vm_funcregister("qcoreapplication_startingup",ring_QCoreApplication_startingUp);
	ring_vm_funcregister("qcoreapplication_testattribute",ring_QCoreApplication_testAttribute);
	ring_vm_funcregister("qcoreapplication_translate",ring_QCoreApplication_translate);
	ring_vm_funcregister("qtextbrowser_backwardhistorycount",ring_QTextBrowser_backwardHistoryCount);
	ring_vm_funcregister("qtextbrowser_clearhistory",ring_QTextBrowser_clearHistory);
	ring_vm_funcregister("qtextbrowser_forwardhistorycount",ring_QTextBrowser_forwardHistoryCount);
	ring_vm_funcregister("qtextbrowser_historytitle",ring_QTextBrowser_historyTitle);
	ring_vm_funcregister("qtextbrowser_historyurl",ring_QTextBrowser_historyUrl);
	ring_vm_funcregister("qtextbrowser_isbackwardavailable",ring_QTextBrowser_isBackwardAvailable);
	ring_vm_funcregister("qtextbrowser_isforwardavailable",ring_QTextBrowser_isForwardAvailable);
	ring_vm_funcregister("qtextbrowser_openexternallinks",ring_QTextBrowser_openExternalLinks);
	ring_vm_funcregister("qtextbrowser_openlinks",ring_QTextBrowser_openLinks);
	ring_vm_funcregister("qtextbrowser_searchpaths",ring_QTextBrowser_searchPaths);
	ring_vm_funcregister("qtextbrowser_setopenexternallinks",ring_QTextBrowser_setOpenExternalLinks);
	ring_vm_funcregister("qtextbrowser_setopenlinks",ring_QTextBrowser_setOpenLinks);
	ring_vm_funcregister("qtextbrowser_setsearchpaths",ring_QTextBrowser_setSearchPaths);
	ring_vm_funcregister("qtextbrowser_source",ring_QTextBrowser_source);
	ring_vm_funcregister("qtextbrowser_setanchorclickedevent",ring_QTextBrowser_setanchorClickedEvent);
	ring_vm_funcregister("qtextbrowser_setbackwardavailableevent",ring_QTextBrowser_setbackwardAvailableEvent);
	ring_vm_funcregister("qtextbrowser_setforwardavailableevent",ring_QTextBrowser_setforwardAvailableEvent);
	ring_vm_funcregister("qtextbrowser_sethighlightedevent",ring_QTextBrowser_sethighlightedEvent);
	ring_vm_funcregister("qtextbrowser_sethistorychangedevent",ring_QTextBrowser_sethistoryChangedEvent);
	ring_vm_funcregister("qtextbrowser_setsourcechangedevent",ring_QTextBrowser_setsourceChangedEvent);
	ring_vm_funcregister("qtextbrowser_getanchorclickedevent",ring_QTextBrowser_getanchorClickedEvent);
	ring_vm_funcregister("qtextbrowser_getbackwardavailableevent",ring_QTextBrowser_getbackwardAvailableEvent);
	ring_vm_funcregister("qtextbrowser_getforwardavailableevent",ring_QTextBrowser_getforwardAvailableEvent);
	ring_vm_funcregister("qtextbrowser_gethighlightedevent",ring_QTextBrowser_gethighlightedEvent);
	ring_vm_funcregister("qtextbrowser_gethistorychangedevent",ring_QTextBrowser_gethistoryChangedEvent);
	ring_vm_funcregister("qtextbrowser_getsourcechangedevent",ring_QTextBrowser_getsourceChangedEvent);
	ring_vm_funcregister("qregion_boundingrect",ring_QRegion_boundingRect);
	ring_vm_funcregister("qregion_contains",ring_QRegion_contains);
	ring_vm_funcregister("qregion_contains_2",ring_QRegion_contains_2);
	ring_vm_funcregister("qregion_intersected",ring_QRegion_intersected);
	ring_vm_funcregister("qregion_intersected_2",ring_QRegion_intersected_2);
	ring_vm_funcregister("qregion_intersects",ring_QRegion_intersects);
	ring_vm_funcregister("qregion_intersects_2",ring_QRegion_intersects_2);
	ring_vm_funcregister("qregion_isempty",ring_QRegion_isEmpty);
	ring_vm_funcregister("qregion_isnull",ring_QRegion_isNull);
	ring_vm_funcregister("qregion_rectcount",ring_QRegion_rectCount);
	ring_vm_funcregister("qregion_rects",ring_QRegion_rects);
	ring_vm_funcregister("qregion_setrects",ring_QRegion_setRects);
	ring_vm_funcregister("qregion_subtracted",ring_QRegion_subtracted);
	ring_vm_funcregister("qregion_swap",ring_QRegion_swap);
	ring_vm_funcregister("qregion_translate",ring_QRegion_translate);
	ring_vm_funcregister("qregion_translate_2",ring_QRegion_translate_2);
	ring_vm_funcregister("qregion_translated",ring_QRegion_translated);
	ring_vm_funcregister("qregion_translated_2",ring_QRegion_translated_2);
	ring_vm_funcregister("qregion_united",ring_QRegion_united);
	ring_vm_funcregister("qregion_united_2",ring_QRegion_united_2);
	ring_vm_funcregister("qregion_xored",ring_QRegion_xored);
	ring_vm_funcregister("qstackedwidget_addwidget",ring_QStackedWidget_addWidget);
	ring_vm_funcregister("qstackedwidget_count",ring_QStackedWidget_count);
	ring_vm_funcregister("qstackedwidget_currentindex",ring_QStackedWidget_currentIndex);
	ring_vm_funcregister("qstackedwidget_currentwidget",ring_QStackedWidget_currentWidget);
	ring_vm_funcregister("qstackedwidget_indexof",ring_QStackedWidget_indexOf);
	ring_vm_funcregister("qstackedwidget_insertwidget",ring_QStackedWidget_insertWidget);
	ring_vm_funcregister("qstackedwidget_removewidget",ring_QStackedWidget_removeWidget);
	ring_vm_funcregister("qstackedwidget_widget",ring_QStackedWidget_widget);
	ring_vm_funcregister("qstackedwidget_setcurrentindex",ring_QStackedWidget_setCurrentIndex);
	ring_vm_funcregister("qstackedwidget_setcurrentwidget",ring_QStackedWidget_setCurrentWidget);
	ring_vm_funcregister("qstackedwidget_setcurrentchangedevent",ring_QStackedWidget_setcurrentChangedEvent);
	ring_vm_funcregister("qstackedwidget_setwidgetremovedevent",ring_QStackedWidget_setwidgetRemovedEvent);
	ring_vm_funcregister("qstackedwidget_getcurrentchangedevent",ring_QStackedWidget_getcurrentChangedEvent);
	ring_vm_funcregister("qstackedwidget_getwidgetremovedevent",ring_QStackedWidget_getwidgetRemovedEvent);
	ring_vm_funcregister("qcalendarwidget_dateeditacceptdelay",ring_QCalendarWidget_dateEditAcceptDelay);
	ring_vm_funcregister("qcalendarwidget_datetextformat",ring_QCalendarWidget_dateTextFormat);
	ring_vm_funcregister("qcalendarwidget_datetextformat_2",ring_QCalendarWidget_dateTextFormat_2);
	ring_vm_funcregister("qcalendarwidget_firstdayofweek",ring_QCalendarWidget_firstDayOfWeek);
	ring_vm_funcregister("qcalendarwidget_headertextformat",ring_QCalendarWidget_headerTextFormat);
	ring_vm_funcregister("qcalendarwidget_horizontalheaderformat",ring_QCalendarWidget_horizontalHeaderFormat);
	ring_vm_funcregister("qcalendarwidget_isdateeditenabled",ring_QCalendarWidget_isDateEditEnabled);
	ring_vm_funcregister("qcalendarwidget_isgridvisible",ring_QCalendarWidget_isGridVisible);
	ring_vm_funcregister("qcalendarwidget_isnavigationbarvisible",ring_QCalendarWidget_isNavigationBarVisible);
	ring_vm_funcregister("qcalendarwidget_maximumdate",ring_QCalendarWidget_maximumDate);
	ring_vm_funcregister("qcalendarwidget_minimumdate",ring_QCalendarWidget_minimumDate);
	ring_vm_funcregister("qcalendarwidget_monthshown",ring_QCalendarWidget_monthShown);
	ring_vm_funcregister("qcalendarwidget_selecteddate",ring_QCalendarWidget_selectedDate);
	ring_vm_funcregister("qcalendarwidget_selectionmode",ring_QCalendarWidget_selectionMode);
	ring_vm_funcregister("qcalendarwidget_setdateeditacceptdelay",ring_QCalendarWidget_setDateEditAcceptDelay);
	ring_vm_funcregister("qcalendarwidget_setdateeditenabled",ring_QCalendarWidget_setDateEditEnabled);
	ring_vm_funcregister("qcalendarwidget_setdatetextformat",ring_QCalendarWidget_setDateTextFormat);
	ring_vm_funcregister("qcalendarwidget_setfirstdayofweek",ring_QCalendarWidget_setFirstDayOfWeek);
	ring_vm_funcregister("qcalendarwidget_setheadertextformat",ring_QCalendarWidget_setHeaderTextFormat);
	ring_vm_funcregister("qcalendarwidget_sethorizontalheaderformat",ring_QCalendarWidget_setHorizontalHeaderFormat);
	ring_vm_funcregister("qcalendarwidget_setmaximumdate",ring_QCalendarWidget_setMaximumDate);
	ring_vm_funcregister("qcalendarwidget_setminimumdate",ring_QCalendarWidget_setMinimumDate);
	ring_vm_funcregister("qcalendarwidget_setselectionmode",ring_QCalendarWidget_setSelectionMode);
	ring_vm_funcregister("qcalendarwidget_setverticalheaderformat",ring_QCalendarWidget_setVerticalHeaderFormat);
	ring_vm_funcregister("qcalendarwidget_setweekdaytextformat",ring_QCalendarWidget_setWeekdayTextFormat);
	ring_vm_funcregister("qcalendarwidget_verticalheaderformat",ring_QCalendarWidget_verticalHeaderFormat);
	ring_vm_funcregister("qcalendarwidget_weekdaytextformat",ring_QCalendarWidget_weekdayTextFormat);
	ring_vm_funcregister("qcalendarwidget_yearshown",ring_QCalendarWidget_yearShown);
	ring_vm_funcregister("qcalendarwidget_setcurrentpage",ring_QCalendarWidget_setCurrentPage);
	ring_vm_funcregister("qcalendarwidget_setdaterange",ring_QCalendarWidget_setDateRange);
	ring_vm_funcregister("qcalendarwidget_setgridvisible",ring_QCalendarWidget_setGridVisible);
	ring_vm_funcregister("qcalendarwidget_setnavigationbarvisible",ring_QCalendarWidget_setNavigationBarVisible);
	ring_vm_funcregister("qcalendarwidget_setselecteddate",ring_QCalendarWidget_setSelectedDate);
	ring_vm_funcregister("qcalendarwidget_shownextmonth",ring_QCalendarWidget_showNextMonth);
	ring_vm_funcregister("qcalendarwidget_shownextyear",ring_QCalendarWidget_showNextYear);
	ring_vm_funcregister("qcalendarwidget_showpreviousmonth",ring_QCalendarWidget_showPreviousMonth);
	ring_vm_funcregister("qcalendarwidget_showpreviousyear",ring_QCalendarWidget_showPreviousYear);
	ring_vm_funcregister("qcalendarwidget_showselecteddate",ring_QCalendarWidget_showSelectedDate);
	ring_vm_funcregister("qcalendarwidget_showtoday",ring_QCalendarWidget_showToday);
	ring_vm_funcregister("qcalendarwidget_setactivatedevent",ring_QCalendarWidget_setactivatedEvent);
	ring_vm_funcregister("qcalendarwidget_setclickedevent",ring_QCalendarWidget_setclickedEvent);
	ring_vm_funcregister("qcalendarwidget_setcurrentpagechangedevent",ring_QCalendarWidget_setcurrentPageChangedEvent);
	ring_vm_funcregister("qcalendarwidget_setselectionchangedevent",ring_QCalendarWidget_setselectionChangedEvent);
	ring_vm_funcregister("qcalendarwidget_getactivatedevent",ring_QCalendarWidget_getactivatedEvent);
	ring_vm_funcregister("qcalendarwidget_getclickedevent",ring_QCalendarWidget_getclickedEvent);
	ring_vm_funcregister("qcalendarwidget_getcurrentpagechangedevent",ring_QCalendarWidget_getcurrentPageChangedEvent);
	ring_vm_funcregister("qcalendarwidget_getselectionchangedevent",ring_QCalendarWidget_getselectionChangedEvent);
	ring_vm_funcregister("qopenglfunctions_glactivetexture",ring_QOpenGLFunctions_glActiveTexture);
	ring_vm_funcregister("qopenglfunctions_glattachshader",ring_QOpenGLFunctions_glAttachShader);
	ring_vm_funcregister("qopenglfunctions_glbindattriblocation",ring_QOpenGLFunctions_glBindAttribLocation);
	ring_vm_funcregister("qopenglfunctions_glbindbuffer",ring_QOpenGLFunctions_glBindBuffer);
	ring_vm_funcregister("qopenglfunctions_glbindframebuffer",ring_QOpenGLFunctions_glBindFramebuffer);
	ring_vm_funcregister("qopenglfunctions_glbindrenderbuffer",ring_QOpenGLFunctions_glBindRenderbuffer);
	ring_vm_funcregister("qopenglfunctions_glbindtexture",ring_QOpenGLFunctions_glBindTexture);
	ring_vm_funcregister("qopenglfunctions_glblendcolor",ring_QOpenGLFunctions_glBlendColor);
	ring_vm_funcregister("qopenglfunctions_glblendequation",ring_QOpenGLFunctions_glBlendEquation);
	ring_vm_funcregister("qopenglfunctions_glblendequationseparate",ring_QOpenGLFunctions_glBlendEquationSeparate);
	ring_vm_funcregister("qopenglfunctions_glblendfunc",ring_QOpenGLFunctions_glBlendFunc);
	ring_vm_funcregister("qopenglfunctions_glblendfuncseparate",ring_QOpenGLFunctions_glBlendFuncSeparate);
	ring_vm_funcregister("qopenglfunctions_glbufferdata",ring_QOpenGLFunctions_glBufferData);
	ring_vm_funcregister("qopenglfunctions_glbuffersubdata",ring_QOpenGLFunctions_glBufferSubData);
	ring_vm_funcregister("qopenglfunctions_glcheckframebufferstatus",ring_QOpenGLFunctions_glCheckFramebufferStatus);
	ring_vm_funcregister("qopenglfunctions_glclear",ring_QOpenGLFunctions_glClear);
	ring_vm_funcregister("qopenglfunctions_glclearcolor",ring_QOpenGLFunctions_glClearColor);
	ring_vm_funcregister("qopenglfunctions_glcleardepthf",ring_QOpenGLFunctions_glClearDepthf);
	ring_vm_funcregister("qopenglfunctions_glclearstencil",ring_QOpenGLFunctions_glClearStencil);
	ring_vm_funcregister("qopenglfunctions_glcolormask",ring_QOpenGLFunctions_glColorMask);
	ring_vm_funcregister("qopenglfunctions_glcompileshader",ring_QOpenGLFunctions_glCompileShader);
	ring_vm_funcregister("qopenglfunctions_glcompressedteximage2d",ring_QOpenGLFunctions_glCompressedTexImage2D);
	ring_vm_funcregister("qopenglfunctions_glcompressedtexsubimage2d",ring_QOpenGLFunctions_glCompressedTexSubImage2D);
	ring_vm_funcregister("qopenglfunctions_glcopyteximage2d",ring_QOpenGLFunctions_glCopyTexImage2D);
	ring_vm_funcregister("qopenglfunctions_glcopytexsubimage2d",ring_QOpenGLFunctions_glCopyTexSubImage2D);
	ring_vm_funcregister("qopenglfunctions_glcreateprogram",ring_QOpenGLFunctions_glCreateProgram);
	ring_vm_funcregister("qopenglfunctions_glcreateshader",ring_QOpenGLFunctions_glCreateShader);
	ring_vm_funcregister("qopenglfunctions_glcullface",ring_QOpenGLFunctions_glCullFace);
	ring_vm_funcregister("qopenglfunctions_gldeletebuffers",ring_QOpenGLFunctions_glDeleteBuffers);
	ring_vm_funcregister("qopenglfunctions_gldeleteframebuffers",ring_QOpenGLFunctions_glDeleteFramebuffers);
	ring_vm_funcregister("qopenglfunctions_gldeleteprogram",ring_QOpenGLFunctions_glDeleteProgram);
	ring_vm_funcregister("qopenglfunctions_gldeleterenderbuffers",ring_QOpenGLFunctions_glDeleteRenderbuffers);
	ring_vm_funcregister("qopenglfunctions_gldeleteshader",ring_QOpenGLFunctions_glDeleteShader);
	ring_vm_funcregister("qopenglfunctions_gldeletetextures",ring_QOpenGLFunctions_glDeleteTextures);
	ring_vm_funcregister("qopenglfunctions_gldepthfunc",ring_QOpenGLFunctions_glDepthFunc);
	ring_vm_funcregister("qopenglfunctions_gldepthmask",ring_QOpenGLFunctions_glDepthMask);
	ring_vm_funcregister("qopenglfunctions_gldepthrangef",ring_QOpenGLFunctions_glDepthRangef);
	ring_vm_funcregister("qopenglfunctions_gldetachshader",ring_QOpenGLFunctions_glDetachShader);
	ring_vm_funcregister("qopenglfunctions_gldisable",ring_QOpenGLFunctions_glDisable);
	ring_vm_funcregister("qopenglfunctions_gldisablevertexattribarray",ring_QOpenGLFunctions_glDisableVertexAttribArray);
	ring_vm_funcregister("qopenglfunctions_gldrawarrays",ring_QOpenGLFunctions_glDrawArrays);
	ring_vm_funcregister("qopenglfunctions_gldrawelements",ring_QOpenGLFunctions_glDrawElements);
	ring_vm_funcregister("qopenglfunctions_glenable",ring_QOpenGLFunctions_glEnable);
	ring_vm_funcregister("qopenglfunctions_glenablevertexattribarray",ring_QOpenGLFunctions_glEnableVertexAttribArray);
	ring_vm_funcregister("qopenglfunctions_glfinish",ring_QOpenGLFunctions_glFinish);
	ring_vm_funcregister("qopenglfunctions_glflush",ring_QOpenGLFunctions_glFlush);
	ring_vm_funcregister("qopenglfunctions_glframebufferrenderbuffer",ring_QOpenGLFunctions_glFramebufferRenderbuffer);
	ring_vm_funcregister("qopenglfunctions_glframebuffertexture2d",ring_QOpenGLFunctions_glFramebufferTexture2D);
	ring_vm_funcregister("qopenglfunctions_glfrontface",ring_QOpenGLFunctions_glFrontFace);
	ring_vm_funcregister("qopenglfunctions_glgenbuffers",ring_QOpenGLFunctions_glGenBuffers);
	ring_vm_funcregister("qopenglfunctions_glgenframebuffers",ring_QOpenGLFunctions_glGenFramebuffers);
	ring_vm_funcregister("qopenglfunctions_glgenrenderbuffers",ring_QOpenGLFunctions_glGenRenderbuffers);
	ring_vm_funcregister("qopenglfunctions_glgentextures",ring_QOpenGLFunctions_glGenTextures);
	ring_vm_funcregister("qopenglfunctions_glgeneratemipmap",ring_QOpenGLFunctions_glGenerateMipmap);
	ring_vm_funcregister("qopenglfunctions_glgetactiveattrib",ring_QOpenGLFunctions_glGetActiveAttrib);
	ring_vm_funcregister("qopenglfunctions_glgetactiveuniform",ring_QOpenGLFunctions_glGetActiveUniform);
	ring_vm_funcregister("qopenglfunctions_glgetattachedshaders",ring_QOpenGLFunctions_glGetAttachedShaders);
	ring_vm_funcregister("qopenglfunctions_glgetattriblocation",ring_QOpenGLFunctions_glGetAttribLocation);
	ring_vm_funcregister("qopenglfunctions_glgetbooleanv",ring_QOpenGLFunctions_glGetBooleanv);
	ring_vm_funcregister("qopenglfunctions_glgetbufferparameteriv",ring_QOpenGLFunctions_glGetBufferParameteriv);
	ring_vm_funcregister("qopenglfunctions_glgeterror",ring_QOpenGLFunctions_glGetError);
	ring_vm_funcregister("qopenglfunctions_glgetfloatv",ring_QOpenGLFunctions_glGetFloatv);
	ring_vm_funcregister("qopenglfunctions_glgetframebufferattachmentparameteriv",ring_QOpenGLFunctions_glGetFramebufferAttachmentParameteriv);
	ring_vm_funcregister("qopenglfunctions_glgetintegerv",ring_QOpenGLFunctions_glGetIntegerv);
	ring_vm_funcregister("qopenglfunctions_glgetprograminfolog",ring_QOpenGLFunctions_glGetProgramInfoLog);
	ring_vm_funcregister("qopenglfunctions_glgetprogramiv",ring_QOpenGLFunctions_glGetProgramiv);
	ring_vm_funcregister("qopenglfunctions_glgetrenderbufferparameteriv",ring_QOpenGLFunctions_glGetRenderbufferParameteriv);
	ring_vm_funcregister("qopenglfunctions_glgetshaderinfolog",ring_QOpenGLFunctions_glGetShaderInfoLog);
	ring_vm_funcregister("qopenglfunctions_glgetshaderprecisionformat",ring_QOpenGLFunctions_glGetShaderPrecisionFormat);
	ring_vm_funcregister("qopenglfunctions_glgetshadersource",ring_QOpenGLFunctions_glGetShaderSource);
	ring_vm_funcregister("qopenglfunctions_glgetshaderiv",ring_QOpenGLFunctions_glGetShaderiv);
	ring_vm_funcregister("qopenglfunctions_glgetstring",ring_QOpenGLFunctions_glGetString);
	ring_vm_funcregister("qopenglfunctions_glgettexparameterfv",ring_QOpenGLFunctions_glGetTexParameterfv);
	ring_vm_funcregister("qopenglfunctions_glgettexparameteriv",ring_QOpenGLFunctions_glGetTexParameteriv);
	ring_vm_funcregister("qopenglfunctions_glgetuniformlocation",ring_QOpenGLFunctions_glGetUniformLocation);
	ring_vm_funcregister("qopenglfunctions_glgetuniformfv",ring_QOpenGLFunctions_glGetUniformfv);
	ring_vm_funcregister("qopenglfunctions_glgetuniformiv",ring_QOpenGLFunctions_glGetUniformiv);
	ring_vm_funcregister("qopenglfunctions_glgetvertexattribfv",ring_QOpenGLFunctions_glGetVertexAttribfv);
	ring_vm_funcregister("qopenglfunctions_glgetvertexattribiv",ring_QOpenGLFunctions_glGetVertexAttribiv);
	ring_vm_funcregister("qopenglfunctions_glhint",ring_QOpenGLFunctions_glHint);
	ring_vm_funcregister("qopenglfunctions_glisbuffer",ring_QOpenGLFunctions_glIsBuffer);
	ring_vm_funcregister("qopenglfunctions_glisenabled",ring_QOpenGLFunctions_glIsEnabled);
	ring_vm_funcregister("qopenglfunctions_glisframebuffer",ring_QOpenGLFunctions_glIsFramebuffer);
	ring_vm_funcregister("qopenglfunctions_glisprogram",ring_QOpenGLFunctions_glIsProgram);
	ring_vm_funcregister("qopenglfunctions_glisrenderbuffer",ring_QOpenGLFunctions_glIsRenderbuffer);
	ring_vm_funcregister("qopenglfunctions_glisshader",ring_QOpenGLFunctions_glIsShader);
	ring_vm_funcregister("qopenglfunctions_glistexture",ring_QOpenGLFunctions_glIsTexture);
	ring_vm_funcregister("qopenglfunctions_gllinewidth",ring_QOpenGLFunctions_glLineWidth);
	ring_vm_funcregister("qopenglfunctions_gllinkprogram",ring_QOpenGLFunctions_glLinkProgram);
	ring_vm_funcregister("qopenglfunctions_glpixelstorei",ring_QOpenGLFunctions_glPixelStorei);
	ring_vm_funcregister("qopenglfunctions_glpolygonoffset",ring_QOpenGLFunctions_glPolygonOffset);
	ring_vm_funcregister("qopenglfunctions_glreadpixels",ring_QOpenGLFunctions_glReadPixels);
	ring_vm_funcregister("qopenglfunctions_glreleaseshadercompiler",ring_QOpenGLFunctions_glReleaseShaderCompiler);
	ring_vm_funcregister("qopenglfunctions_glrenderbufferstorage",ring_QOpenGLFunctions_glRenderbufferStorage);
	ring_vm_funcregister("qopenglfunctions_glsamplecoverage",ring_QOpenGLFunctions_glSampleCoverage);
	ring_vm_funcregister("qopenglfunctions_glscissor",ring_QOpenGLFunctions_glScissor);
	ring_vm_funcregister("qopenglfunctions_glshaderbinary",ring_QOpenGLFunctions_glShaderBinary);
	ring_vm_funcregister("qopenglfunctions_glstencilfunc",ring_QOpenGLFunctions_glStencilFunc);
	ring_vm_funcregister("qopenglfunctions_glstencilfuncseparate",ring_QOpenGLFunctions_glStencilFuncSeparate);
	ring_vm_funcregister("qopenglfunctions_glstencilmask",ring_QOpenGLFunctions_glStencilMask);
	ring_vm_funcregister("qopenglfunctions_glstencilmaskseparate",ring_QOpenGLFunctions_glStencilMaskSeparate);
	ring_vm_funcregister("qopenglfunctions_glstencilop",ring_QOpenGLFunctions_glStencilOp);
	ring_vm_funcregister("qopenglfunctions_glstencilopseparate",ring_QOpenGLFunctions_glStencilOpSeparate);
	ring_vm_funcregister("qopenglfunctions_glteximage2d",ring_QOpenGLFunctions_glTexImage2D);
	ring_vm_funcregister("qopenglfunctions_gltexparameterf",ring_QOpenGLFunctions_glTexParameterf);
	ring_vm_funcregister("qopenglfunctions_gltexparameterfv",ring_QOpenGLFunctions_glTexParameterfv);
	ring_vm_funcregister("qopenglfunctions_gltexparameteri",ring_QOpenGLFunctions_glTexParameteri);
	ring_vm_funcregister("qopenglfunctions_gltexparameteriv",ring_QOpenGLFunctions_glTexParameteriv);
	ring_vm_funcregister("qopenglfunctions_gltexsubimage2d",ring_QOpenGLFunctions_glTexSubImage2D);
	ring_vm_funcregister("qopenglfunctions_gluniform1f",ring_QOpenGLFunctions_glUniform1f);
	ring_vm_funcregister("qopenglfunctions_gluniform1fv",ring_QOpenGLFunctions_glUniform1fv);
	ring_vm_funcregister("qopenglfunctions_gluniform1i",ring_QOpenGLFunctions_glUniform1i);
	ring_vm_funcregister("qopenglfunctions_gluniform1iv",ring_QOpenGLFunctions_glUniform1iv);
	ring_vm_funcregister("qopenglfunctions_gluniform2f",ring_QOpenGLFunctions_glUniform2f);
	ring_vm_funcregister("qopenglfunctions_gluniform2fv",ring_QOpenGLFunctions_glUniform2fv);
	ring_vm_funcregister("qopenglfunctions_gluniform2i",ring_QOpenGLFunctions_glUniform2i);
	ring_vm_funcregister("qopenglfunctions_gluniform2iv",ring_QOpenGLFunctions_glUniform2iv);
	ring_vm_funcregister("qopenglfunctions_gluniform3f",ring_QOpenGLFunctions_glUniform3f);
	ring_vm_funcregister("qopenglfunctions_gluniform3fv",ring_QOpenGLFunctions_glUniform3fv);
	ring_vm_funcregister("qopenglfunctions_gluniform3i",ring_QOpenGLFunctions_glUniform3i);
	ring_vm_funcregister("qopenglfunctions_gluniform3iv",ring_QOpenGLFunctions_glUniform3iv);
	ring_vm_funcregister("qopenglfunctions_gluniform4f",ring_QOpenGLFunctions_glUniform4f);
	ring_vm_funcregister("qopenglfunctions_gluniform4fv",ring_QOpenGLFunctions_glUniform4fv);
	ring_vm_funcregister("qopenglfunctions_gluniform4i",ring_QOpenGLFunctions_glUniform4i);
	ring_vm_funcregister("qopenglfunctions_gluniform4iv",ring_QOpenGLFunctions_glUniform4iv);
	ring_vm_funcregister("qopenglfunctions_gluniformmatrix2fv",ring_QOpenGLFunctions_glUniformMatrix2fv);
	ring_vm_funcregister("qopenglfunctions_gluniformmatrix3fv",ring_QOpenGLFunctions_glUniformMatrix3fv);
	ring_vm_funcregister("qopenglfunctions_gluniformmatrix4fv",ring_QOpenGLFunctions_glUniformMatrix4fv);
	ring_vm_funcregister("qopenglfunctions_gluseprogram",ring_QOpenGLFunctions_glUseProgram);
	ring_vm_funcregister("qopenglfunctions_glvalidateprogram",ring_QOpenGLFunctions_glValidateProgram);
	ring_vm_funcregister("qopenglfunctions_glvertexattrib1f",ring_QOpenGLFunctions_glVertexAttrib1f);
	ring_vm_funcregister("qopenglfunctions_glvertexattrib1fv",ring_QOpenGLFunctions_glVertexAttrib1fv);
	ring_vm_funcregister("qopenglfunctions_glvertexattrib2f",ring_QOpenGLFunctions_glVertexAttrib2f);
	ring_vm_funcregister("qopenglfunctions_glvertexattrib2fv",ring_QOpenGLFunctions_glVertexAttrib2fv);
	ring_vm_funcregister("qopenglfunctions_glvertexattrib3f",ring_QOpenGLFunctions_glVertexAttrib3f);
	ring_vm_funcregister("qopenglfunctions_glvertexattrib3fv",ring_QOpenGLFunctions_glVertexAttrib3fv);
	ring_vm_funcregister("qopenglfunctions_glvertexattrib4f",ring_QOpenGLFunctions_glVertexAttrib4f);
	ring_vm_funcregister("qopenglfunctions_glvertexattrib4fv",ring_QOpenGLFunctions_glVertexAttrib4fv);
	ring_vm_funcregister("qopenglfunctions_glvertexattribpointer",ring_QOpenGLFunctions_glVertexAttribPointer);
	ring_vm_funcregister("qopenglfunctions_glviewport",ring_QOpenGLFunctions_glViewport);
	ring_vm_funcregister("qopenglfunctions_hasopenglfeature",ring_QOpenGLFunctions_hasOpenGLFeature);
	ring_vm_funcregister("qopenglfunctions_initializeopenglfunctions",ring_QOpenGLFunctions_initializeOpenGLFunctions);
	ring_vm_funcregister("qopenglfunctions_openglfeatures",ring_QOpenGLFunctions_openGLFeatures);
	ring_vm_funcregister("qopenglcontext_create",ring_QOpenGLContext_create);
	ring_vm_funcregister("qopenglcontext_defaultframebufferobject",ring_QOpenGLContext_defaultFramebufferObject);
	ring_vm_funcregister("qopenglcontext_donecurrent",ring_QOpenGLContext_doneCurrent);
	ring_vm_funcregister("qopenglcontext_extensions",ring_QOpenGLContext_extensions);
	ring_vm_funcregister("qopenglcontext_format",ring_QOpenGLContext_format);
	ring_vm_funcregister("qopenglcontext_functions",ring_QOpenGLContext_functions);
	ring_vm_funcregister("qopenglcontext_getprocaddress",ring_QOpenGLContext_getProcAddress);
	ring_vm_funcregister("qopenglcontext_getprocaddress_2",ring_QOpenGLContext_getProcAddress_2);
	ring_vm_funcregister("qopenglcontext_hasextension",ring_QOpenGLContext_hasExtension);
	ring_vm_funcregister("qopenglcontext_isopengles",ring_QOpenGLContext_isOpenGLES);
	ring_vm_funcregister("qopenglcontext_isvalid",ring_QOpenGLContext_isValid);
	ring_vm_funcregister("qopenglcontext_makecurrent",ring_QOpenGLContext_makeCurrent);
	ring_vm_funcregister("qopenglcontext_nativehandle",ring_QOpenGLContext_nativeHandle);
	ring_vm_funcregister("qopenglcontext_screen",ring_QOpenGLContext_screen);
	ring_vm_funcregister("qopenglcontext_setformat",ring_QOpenGLContext_setFormat);
	ring_vm_funcregister("qopenglcontext_setnativehandle",ring_QOpenGLContext_setNativeHandle);
	ring_vm_funcregister("qopenglcontext_setscreen",ring_QOpenGLContext_setScreen);
	ring_vm_funcregister("qopenglcontext_setsharecontext",ring_QOpenGLContext_setShareContext);
	ring_vm_funcregister("qopenglcontext_sharecontext",ring_QOpenGLContext_shareContext);
	ring_vm_funcregister("qopenglcontext_sharegroup",ring_QOpenGLContext_shareGroup);
	ring_vm_funcregister("qopenglcontext_surface",ring_QOpenGLContext_surface);
	ring_vm_funcregister("qopenglcontext_swapbuffers",ring_QOpenGLContext_swapBuffers);
	ring_vm_funcregister("qopenglcontext_versionfunctions",ring_QOpenGLContext_versionFunctions);
	ring_vm_funcregister("qopenglcontext_versionfunctions_2",ring_QOpenGLContext_versionFunctions_2);
	ring_vm_funcregister("qopenglcontext_aresharing",ring_QOpenGLContext_areSharing);
	ring_vm_funcregister("qopenglcontext_currentcontext",ring_QOpenGLContext_currentContext);
	ring_vm_funcregister("qopenglcontext_globalsharecontext",ring_QOpenGLContext_globalShareContext);
	ring_vm_funcregister("qopenglcontext_openglmodulehandle",ring_QOpenGLContext_openGLModuleHandle);
	ring_vm_funcregister("qopenglcontext_openglmoduletype",ring_QOpenGLContext_openGLModuleType);
	ring_vm_funcregister("qopenglcontext_supportsthreadedopengl",ring_QOpenGLContext_supportsThreadedOpenGL);
	ring_vm_funcregister("qobject_new",ring_QObject_new);
	ring_vm_funcregister("qwidget_new",ring_QWidget_new);
	ring_vm_funcregister("qlabel_new",ring_QLabel_new);
	ring_vm_funcregister("qpushbutton_new",ring_QPushButton_new);
	ring_vm_funcregister("qbitmap_new",ring_QBitmap_new);
	ring_vm_funcregister("qpixmap_new",ring_QPixmap_new);
	ring_vm_funcregister("qpixmap2_new",ring_QPixmap2_new);
	ring_vm_funcregister("qicon_new",ring_QIcon_new);
	ring_vm_funcregister("qsize_new",ring_QSize_new);
	ring_vm_funcregister("qlineedit_new",ring_QLineEdit_new);
	ring_vm_funcregister("qvboxlayout_new",ring_QVBoxLayout_new);
	ring_vm_funcregister("qhboxlayout_new",ring_QHBoxLayout_new);
	ring_vm_funcregister("qtextedit_new",ring_QTextEdit_new);
	ring_vm_funcregister("qlistwidget_new",ring_QListWidget_new);
	ring_vm_funcregister("qtreeview_new",ring_QTreeView_new);
	ring_vm_funcregister("qdir_new",ring_QDir_new);
	ring_vm_funcregister("qfilesystemmodel_new",ring_QFileSystemModel_new);
	ring_vm_funcregister("qtreewidget_new",ring_QTreeWidget_new);
	ring_vm_funcregister("qtreewidgetitem_new",ring_QTreeWidgetItem_new);
	ring_vm_funcregister("qcombobox_new",ring_QComboBox_new);
	ring_vm_funcregister("qmenubar_new",ring_QMenuBar_new);
	ring_vm_funcregister("qmenu_new",ring_QMenu_new);
	ring_vm_funcregister("qtoolbar_new",ring_QToolBar_new);
	ring_vm_funcregister("qmainwindow_new",ring_QMainWindow_new);
	ring_vm_funcregister("qstatusbar_new",ring_QStatusBar_new);
	ring_vm_funcregister("qdockwidget_new",ring_QDockWidget_new);
	ring_vm_funcregister("qtabwidget_new",ring_QTabWidget_new);
	ring_vm_funcregister("qtablewidgetitem_new",ring_QTableWidgetItem_new);
	ring_vm_funcregister("qframe_new",ring_QFrame_new);
	ring_vm_funcregister("qframe2_new",ring_QFrame2_new);
	ring_vm_funcregister("qframe3_new",ring_QFrame3_new);
	ring_vm_funcregister("qabstractscrollarea_new",ring_QAbstractScrollArea_new);
	ring_vm_funcregister("qtableview_new",ring_QTableView_new);
	ring_vm_funcregister("qtablewidget_new",ring_QTableWidget_new);
	ring_vm_funcregister("qprogressbar_new",ring_QProgressBar_new);
	ring_vm_funcregister("qspinbox_new",ring_QSpinBox_new);
	ring_vm_funcregister("qabstractslider_new",ring_QAbstractSlider_new);
	ring_vm_funcregister("qslider_new",ring_QSlider_new);
	ring_vm_funcregister("qdateedit_new",ring_QDateEdit_new);
	ring_vm_funcregister("qdatetimeedit_new",ring_QDateTimeEdit_new);
	ring_vm_funcregister("qabstractspinbox_new",ring_QAbstractSpinBox_new);
	ring_vm_funcregister("qdial_new",ring_QDial_new);
	ring_vm_funcregister("qwebview_new",ring_QWebView_new);
	ring_vm_funcregister("qurl_new",ring_QUrl_new);
	ring_vm_funcregister("qcheckbox_new",ring_QCheckBox_new);
	ring_vm_funcregister("qradiobutton_new",ring_QRadioButton_new);
	ring_vm_funcregister("qbuttongroup_new",ring_QButtonGroup_new);
	ring_vm_funcregister("qmediaplayer_new",ring_QMediaPlayer_new);
	ring_vm_funcregister("qmediaplaylist_new",ring_QMediaPlaylist_new);
	ring_vm_funcregister("qvideowidget_new",ring_QVideoWidget_new);
	ring_vm_funcregister("qaction_new",ring_QAction_new);
	ring_vm_funcregister("qevent_new",ring_QEvent_new);
	ring_vm_funcregister("qmessagebox_new",ring_QMessageBox_new);
	ring_vm_funcregister("qtimer_new",ring_QTimer_new);
	ring_vm_funcregister("qfiledialog_new",ring_QFileDialog_new);
	ring_vm_funcregister("qpainter_new",ring_QPainter_new);
	ring_vm_funcregister("qpainter2_new",ring_QPainter2_new);
	ring_vm_funcregister("qpicture_new",ring_QPicture_new);
	ring_vm_funcregister("qpen_new",ring_QPen_new);
	ring_vm_funcregister("qcolor_new",ring_QColor_new);
	ring_vm_funcregister("qprinter_new",ring_QPrinter_new);
	ring_vm_funcregister("qfont_new",ring_QFont_new);
	ring_vm_funcregister("qbrush_new",ring_QBrush_new);
	ring_vm_funcregister("qbytearray_new",ring_QByteArray_new);
	ring_vm_funcregister("qnetworkproxy_new",ring_QNetworkProxy_new);
	ring_vm_funcregister("qtcpsocket_new",ring_QTcpSocket_new);
	ring_vm_funcregister("qtcpserver_new",ring_QTcpServer_new);
	ring_vm_funcregister("qhostaddress_new",ring_QHostAddress_new);
	ring_vm_funcregister("qhostinfo_new",ring_QHostInfo_new);
	ring_vm_funcregister("qfileinfo_new",ring_QFileInfo_new);
	ring_vm_funcregister("qdirmodel_new",ring_QDirModel_new);
	ring_vm_funcregister("qfontdialog_new",ring_QFontDialog_new);
	ring_vm_funcregister("qdialog_new",ring_QDialog_new);
	ring_vm_funcregister("qtextcursor_new",ring_QTextCursor_new);
	ring_vm_funcregister("qcolordialog_new",ring_QColorDialog_new);
	ring_vm_funcregister("qstringlist_new",ring_QStringList_new);
	ring_vm_funcregister("qkeysequence_new",ring_QKeySequence_new);
	ring_vm_funcregister("qlcdnumber_new",ring_QLCDNumber_new);
	ring_vm_funcregister("qinputdialog_new",ring_QInputDialog_new);
	ring_vm_funcregister("qallevents_new",ring_QAllEvents_new);
	ring_vm_funcregister("qdesktopwidget_new",ring_QDesktopWidget_new);
	ring_vm_funcregister("qrect_new",ring_QRect_new);
	ring_vm_funcregister("qtextdocument_new",ring_QTextDocument_new);
	ring_vm_funcregister("qtextblock_new",ring_QTextBlock_new);
	ring_vm_funcregister("qtime_new",ring_QTime_new);
	ring_vm_funcregister("qlistwidgetitem_new",ring_QListWidgetItem_new);
	ring_vm_funcregister("qsystemtrayicon_new",ring_QSystemTrayIcon_new);
	ring_vm_funcregister("qdate_new",ring_QDate_new);
	ring_vm_funcregister("qsqldatabase_new",ring_QSqlDatabase_new);
	ring_vm_funcregister("qsqlquery_new",ring_QSqlQuery_new);
	ring_vm_funcregister("qsqlerror_new",ring_QSqlError_new);
	ring_vm_funcregister("qsqlindex_new",ring_QSqlIndex_new);
	ring_vm_funcregister("qsqlrecord_new",ring_QSqlRecord_new);
	ring_vm_funcregister("qsqlfield_new",ring_QSqlField_new);
	ring_vm_funcregister("qvariant_new",ring_QVariant_new);
	ring_vm_funcregister("qnetworkrequest_new",ring_QNetworkRequest_new);
	ring_vm_funcregister("qnetworkaccessmanager_new",ring_QNetworkAccessManager_new);
	ring_vm_funcregister("qpainterpath_new",ring_QPainterPath_new);
	ring_vm_funcregister("qimage_new",ring_QImage_new);
	ring_vm_funcregister("ringcodehighlighter_new",ring_RingCodeHighlighter_new);
	ring_vm_funcregister("qxmlstreamreader_new",ring_QXmlStreamReader_new);
	ring_vm_funcregister("qxmlstreamwriter_new",ring_QXmlStreamWriter_new);
	ring_vm_funcregister("qxmlstreamnotationdeclaration_new",ring_QXmlStreamNotationDeclaration_new);
	ring_vm_funcregister("qxmlstreamnamespacedeclaration_new",ring_QXmlStreamNamespaceDeclaration_new);
	ring_vm_funcregister("qxmlstreamentityresolver_new",ring_QXmlStreamEntityResolver_new);
	ring_vm_funcregister("qxmlstreamentitydeclaration_new",ring_QXmlStreamEntityDeclaration_new);
	ring_vm_funcregister("qxmlstreamattributes_new",ring_QXmlStreamAttributes_new);
	ring_vm_funcregister("qxmlstreamattribute_new",ring_QXmlStreamAttribute_new);
	ring_vm_funcregister("qthread_new",ring_QThread_new);
	ring_vm_funcregister("qthreadpool_new",ring_QThreadPool_new);
	ring_vm_funcregister("qregularexpression_new",ring_QRegularExpression_new);
	ring_vm_funcregister("qregularexpressionmatch_new",ring_QRegularExpressionMatch_new);
	ring_vm_funcregister("qregularexpressionmatchiterator_new",ring_QRegularExpressionMatchIterator_new);
	ring_vm_funcregister("qjsonarray_new",ring_QJsonArray_new);
	ring_vm_funcregister("qjsondocument_new",ring_QJsonDocument_new);
	ring_vm_funcregister("qjsonobject_new",ring_QJsonObject_new);
	ring_vm_funcregister("qjsonparseerror_new",ring_QJsonParseError_new);
	ring_vm_funcregister("qjsonvalue_new",ring_QJsonValue_new);
	ring_vm_funcregister("qplaintextedit_new",ring_QPlainTextEdit_new);
	ring_vm_funcregister("codeeditor_new",ring_CodeEditor_new);
	ring_vm_funcregister("qgridlayout_new",ring_QGridLayout_new);
	ring_vm_funcregister("qtextcharformat_new",ring_QTextCharFormat_new);
	ring_vm_funcregister("qcameraviewfinder_new",ring_QCameraViewfinder_new);
	ring_vm_funcregister("qgraphicsvideoitem_new",ring_QGraphicsVideoItem_new);
	ring_vm_funcregister("qcamera_new",ring_QCamera_new);
	ring_vm_funcregister("qcameraimagecapture_new",ring_QCameraImageCapture_new);
	ring_vm_funcregister("qheaderview_new",ring_QHeaderView_new);
	ring_vm_funcregister("qfontmetrics_new",ring_QFontMetrics_new);
	ring_vm_funcregister("qsplashscreen_new",ring_QSplashScreen_new);
	ring_vm_funcregister("qboxlayout_new",ring_QBoxLayout_new);
	ring_vm_funcregister("qlineargradient_new",ring_QLinearGradient_new);
	ring_vm_funcregister("qpointf_new",ring_QPointF_new);
	ring_vm_funcregister("qpoint_new",ring_QPoint_new);
	ring_vm_funcregister("qscrollarea_new",ring_QScrollArea_new);
	ring_vm_funcregister("qsplitter_new",ring_QSplitter_new);
	ring_vm_funcregister("qcompleter_new",ring_QCompleter_new);
	ring_vm_funcregister("qcompleter2_new",ring_QCompleter2_new);
	ring_vm_funcregister("qcompleter3_new",ring_QCompleter3_new);
	ring_vm_funcregister("qstring2_new",ring_QString2_new);
	ring_vm_funcregister("qprocess_new",ring_QProcess_new);
	ring_vm_funcregister("qmdiarea_new",ring_QMdiArea_new);
	ring_vm_funcregister("qmdisubwindow_new",ring_QMdiSubWindow_new);
	ring_vm_funcregister("qcursor_new",ring_QCursor_new);
	ring_vm_funcregister("qlistview_new",ring_QListView_new);
	ring_vm_funcregister("qaxobject_new",ring_QAxObject_new);
	ring_vm_funcregister("quuid_new",ring_QUuid_new);
	ring_vm_funcregister("qtoolbutton_new",ring_QToolButton_new);
	ring_vm_funcregister("qserialport_new",ring_QSerialPort_new);
	ring_vm_funcregister("qserialportinfo_new",ring_QSerialPortInfo_new);
	ring_vm_funcregister("qstringref_new",ring_QStringRef_new);
	ring_vm_funcregister("qmutex_new",ring_QMutex_new);
	ring_vm_funcregister("qmutexlocker_new",ring_QMutexLocker_new);
	ring_vm_funcregister("qbuffer_new",ring_QBuffer_new);
	ring_vm_funcregister("qbluetoothaddress_new",ring_QBluetoothAddress_new);
	ring_vm_funcregister("qbluetoothdevicediscoveryagent_new",ring_QBluetoothDeviceDiscoveryAgent_new);
	ring_vm_funcregister("qbluetoothdeviceinfo_new",ring_QBluetoothDeviceInfo_new);
	ring_vm_funcregister("qbluetoothhostinfo_new",ring_QBluetoothHostInfo_new);
	ring_vm_funcregister("qbluetoothlocaldevice_new",ring_QBluetoothLocalDevice_new);
	ring_vm_funcregister("qdatetime_new",ring_QDateTime_new);
	ring_vm_funcregister("qwindow_new",ring_QWindow_new);
	ring_vm_funcregister("qguiapplication_new",ring_QGuiApplication_new);
	ring_vm_funcregister("qtextbrowser_new",ring_QTextBrowser_new);
	ring_vm_funcregister("qregion_new",ring_QRegion_new);
	ring_vm_funcregister("qstackedwidget_new",ring_QStackedWidget_new);
	ring_vm_funcregister("qcalendarwidget_new",ring_QCalendarWidget_new);
	ring_vm_funcregister("qopenglfunctions_new",ring_QOpenGLFunctions_new);
	ring_vm_funcregister("qopenglcontext_new",ring_QOpenGLContext_new);
	ring_vm_funcregister("qobject_delete",ring_QObject_delete);
	ring_vm_funcregister("qwidget_delete",ring_QWidget_delete);
	ring_vm_funcregister("qlabel_delete",ring_QLabel_delete);
	ring_vm_funcregister("qpushbutton_delete",ring_QPushButton_delete);
	ring_vm_funcregister("qbitmap_delete",ring_QBitmap_delete);
	ring_vm_funcregister("qpixmap_delete",ring_QPixmap_delete);
	ring_vm_funcregister("qpixmap2_delete",ring_QPixmap2_delete);
	ring_vm_funcregister("qicon_delete",ring_QIcon_delete);
	ring_vm_funcregister("qsize_delete",ring_QSize_delete);
	ring_vm_funcregister("qlineedit_delete",ring_QLineEdit_delete);
	ring_vm_funcregister("qvboxlayout_delete",ring_QVBoxLayout_delete);
	ring_vm_funcregister("qhboxlayout_delete",ring_QHBoxLayout_delete);
	ring_vm_funcregister("qtextedit_delete",ring_QTextEdit_delete);
	ring_vm_funcregister("qlistwidget_delete",ring_QListWidget_delete);
	ring_vm_funcregister("qtreeview_delete",ring_QTreeView_delete);
	ring_vm_funcregister("qdir_delete",ring_QDir_delete);
	ring_vm_funcregister("qfilesystemmodel_delete",ring_QFileSystemModel_delete);
	ring_vm_funcregister("qtreewidget_delete",ring_QTreeWidget_delete);
	ring_vm_funcregister("qtreewidgetitem_delete",ring_QTreeWidgetItem_delete);
	ring_vm_funcregister("qcombobox_delete",ring_QComboBox_delete);
	ring_vm_funcregister("qmenubar_delete",ring_QMenuBar_delete);
	ring_vm_funcregister("qmenu_delete",ring_QMenu_delete);
	ring_vm_funcregister("qtoolbar_delete",ring_QToolBar_delete);
	ring_vm_funcregister("qmainwindow_delete",ring_QMainWindow_delete);
	ring_vm_funcregister("qstatusbar_delete",ring_QStatusBar_delete);
	ring_vm_funcregister("qdockwidget_delete",ring_QDockWidget_delete);
	ring_vm_funcregister("qtabwidget_delete",ring_QTabWidget_delete);
	ring_vm_funcregister("qtablewidgetitem_delete",ring_QTableWidgetItem_delete);
	ring_vm_funcregister("qframe_delete",ring_QFrame_delete);
	ring_vm_funcregister("qframe2_delete",ring_QFrame2_delete);
	ring_vm_funcregister("qframe3_delete",ring_QFrame3_delete);
	ring_vm_funcregister("qabstractscrollarea_delete",ring_QAbstractScrollArea_delete);
	ring_vm_funcregister("qtableview_delete",ring_QTableView_delete);
	ring_vm_funcregister("qtablewidget_delete",ring_QTableWidget_delete);
	ring_vm_funcregister("qprogressbar_delete",ring_QProgressBar_delete);
	ring_vm_funcregister("qspinbox_delete",ring_QSpinBox_delete);
	ring_vm_funcregister("qabstractslider_delete",ring_QAbstractSlider_delete);
	ring_vm_funcregister("qslider_delete",ring_QSlider_delete);
	ring_vm_funcregister("qdateedit_delete",ring_QDateEdit_delete);
	ring_vm_funcregister("qdatetimeedit_delete",ring_QDateTimeEdit_delete);
	ring_vm_funcregister("qabstractspinbox_delete",ring_QAbstractSpinBox_delete);
	ring_vm_funcregister("qdial_delete",ring_QDial_delete);
	ring_vm_funcregister("qwebview_delete",ring_QWebView_delete);
	ring_vm_funcregister("qurl_delete",ring_QUrl_delete);
	ring_vm_funcregister("qcheckbox_delete",ring_QCheckBox_delete);
	ring_vm_funcregister("qradiobutton_delete",ring_QRadioButton_delete);
	ring_vm_funcregister("qbuttongroup_delete",ring_QButtonGroup_delete);
	ring_vm_funcregister("qmediaplayer_delete",ring_QMediaPlayer_delete);
	ring_vm_funcregister("qmediaplaylist_delete",ring_QMediaPlaylist_delete);
	ring_vm_funcregister("qvideowidget_delete",ring_QVideoWidget_delete);
	ring_vm_funcregister("qaction_delete",ring_QAction_delete);
	ring_vm_funcregister("qevent_delete",ring_QEvent_delete);
	ring_vm_funcregister("qmessagebox_delete",ring_QMessageBox_delete);
	ring_vm_funcregister("qtimer_delete",ring_QTimer_delete);
	ring_vm_funcregister("qfiledialog_delete",ring_QFileDialog_delete);
	ring_vm_funcregister("qpainter_delete",ring_QPainter_delete);
	ring_vm_funcregister("qpainter2_delete",ring_QPainter2_delete);
	ring_vm_funcregister("qpicture_delete",ring_QPicture_delete);
	ring_vm_funcregister("qpen_delete",ring_QPen_delete);
	ring_vm_funcregister("qcolor_delete",ring_QColor_delete);
	ring_vm_funcregister("qprinter_delete",ring_QPrinter_delete);
	ring_vm_funcregister("qfont_delete",ring_QFont_delete);
	ring_vm_funcregister("qbrush_delete",ring_QBrush_delete);
	ring_vm_funcregister("qbytearray_delete",ring_QByteArray_delete);
	ring_vm_funcregister("qnetworkproxy_delete",ring_QNetworkProxy_delete);
	ring_vm_funcregister("qtcpsocket_delete",ring_QTcpSocket_delete);
	ring_vm_funcregister("qtcpserver_delete",ring_QTcpServer_delete);
	ring_vm_funcregister("qhostaddress_delete",ring_QHostAddress_delete);
	ring_vm_funcregister("qhostinfo_delete",ring_QHostInfo_delete);
	ring_vm_funcregister("qfileinfo_delete",ring_QFileInfo_delete);
	ring_vm_funcregister("qdirmodel_delete",ring_QDirModel_delete);
	ring_vm_funcregister("qfontdialog_delete",ring_QFontDialog_delete);
	ring_vm_funcregister("qdialog_delete",ring_QDialog_delete);
	ring_vm_funcregister("qtextcursor_delete",ring_QTextCursor_delete);
	ring_vm_funcregister("qcolordialog_delete",ring_QColorDialog_delete);
	ring_vm_funcregister("qstringlist_delete",ring_QStringList_delete);
	ring_vm_funcregister("qkeysequence_delete",ring_QKeySequence_delete);
	ring_vm_funcregister("qlcdnumber_delete",ring_QLCDNumber_delete);
	ring_vm_funcregister("qinputdialog_delete",ring_QInputDialog_delete);
	ring_vm_funcregister("qallevents_delete",ring_QAllEvents_delete);
	ring_vm_funcregister("qdesktopwidget_delete",ring_QDesktopWidget_delete);
	ring_vm_funcregister("qrect_delete",ring_QRect_delete);
	ring_vm_funcregister("qtextdocument_delete",ring_QTextDocument_delete);
	ring_vm_funcregister("qtextblock_delete",ring_QTextBlock_delete);
	ring_vm_funcregister("qtime_delete",ring_QTime_delete);
	ring_vm_funcregister("qlistwidgetitem_delete",ring_QListWidgetItem_delete);
	ring_vm_funcregister("qsystemtrayicon_delete",ring_QSystemTrayIcon_delete);
	ring_vm_funcregister("qdate_delete",ring_QDate_delete);
	ring_vm_funcregister("qsqldatabase_delete",ring_QSqlDatabase_delete);
	ring_vm_funcregister("qsqlquery_delete",ring_QSqlQuery_delete);
	ring_vm_funcregister("qsqlerror_delete",ring_QSqlError_delete);
	ring_vm_funcregister("qsqlindex_delete",ring_QSqlIndex_delete);
	ring_vm_funcregister("qsqlrecord_delete",ring_QSqlRecord_delete);
	ring_vm_funcregister("qsqlfield_delete",ring_QSqlField_delete);
	ring_vm_funcregister("qvariant_delete",ring_QVariant_delete);
	ring_vm_funcregister("qnetworkrequest_delete",ring_QNetworkRequest_delete);
	ring_vm_funcregister("qnetworkaccessmanager_delete",ring_QNetworkAccessManager_delete);
	ring_vm_funcregister("qpainterpath_delete",ring_QPainterPath_delete);
	ring_vm_funcregister("qimage_delete",ring_QImage_delete);
	ring_vm_funcregister("ringcodehighlighter_delete",ring_RingCodeHighlighter_delete);
	ring_vm_funcregister("qxmlstreamreader_delete",ring_QXmlStreamReader_delete);
	ring_vm_funcregister("qxmlstreamwriter_delete",ring_QXmlStreamWriter_delete);
	ring_vm_funcregister("qxmlstreamnotationdeclaration_delete",ring_QXmlStreamNotationDeclaration_delete);
	ring_vm_funcregister("qxmlstreamnamespacedeclaration_delete",ring_QXmlStreamNamespaceDeclaration_delete);
	ring_vm_funcregister("qxmlstreamentityresolver_delete",ring_QXmlStreamEntityResolver_delete);
	ring_vm_funcregister("qxmlstreamentitydeclaration_delete",ring_QXmlStreamEntityDeclaration_delete);
	ring_vm_funcregister("qxmlstreamattributes_delete",ring_QXmlStreamAttributes_delete);
	ring_vm_funcregister("qxmlstreamattribute_delete",ring_QXmlStreamAttribute_delete);
	ring_vm_funcregister("qthread_delete",ring_QThread_delete);
	ring_vm_funcregister("qthreadpool_delete",ring_QThreadPool_delete);
	ring_vm_funcregister("qregularexpression_delete",ring_QRegularExpression_delete);
	ring_vm_funcregister("qregularexpressionmatch_delete",ring_QRegularExpressionMatch_delete);
	ring_vm_funcregister("qregularexpressionmatchiterator_delete",ring_QRegularExpressionMatchIterator_delete);
	ring_vm_funcregister("qjsonarray_delete",ring_QJsonArray_delete);
	ring_vm_funcregister("qjsondocument_delete",ring_QJsonDocument_delete);
	ring_vm_funcregister("qjsonobject_delete",ring_QJsonObject_delete);
	ring_vm_funcregister("qjsonparseerror_delete",ring_QJsonParseError_delete);
	ring_vm_funcregister("qjsonvalue_delete",ring_QJsonValue_delete);
	ring_vm_funcregister("qplaintextedit_delete",ring_QPlainTextEdit_delete);
	ring_vm_funcregister("codeeditor_delete",ring_CodeEditor_delete);
	ring_vm_funcregister("qgridlayout_delete",ring_QGridLayout_delete);
	ring_vm_funcregister("qtextcharformat_delete",ring_QTextCharFormat_delete);
	ring_vm_funcregister("qcameraviewfinder_delete",ring_QCameraViewfinder_delete);
	ring_vm_funcregister("qgraphicsvideoitem_delete",ring_QGraphicsVideoItem_delete);
	ring_vm_funcregister("qcamera_delete",ring_QCamera_delete);
	ring_vm_funcregister("qcameraimagecapture_delete",ring_QCameraImageCapture_delete);
	ring_vm_funcregister("qheaderview_delete",ring_QHeaderView_delete);
	ring_vm_funcregister("qfontmetrics_delete",ring_QFontMetrics_delete);
	ring_vm_funcregister("qsplashscreen_delete",ring_QSplashScreen_delete);
	ring_vm_funcregister("qboxlayout_delete",ring_QBoxLayout_delete);
	ring_vm_funcregister("qlineargradient_delete",ring_QLinearGradient_delete);
	ring_vm_funcregister("qpointf_delete",ring_QPointF_delete);
	ring_vm_funcregister("qpoint_delete",ring_QPoint_delete);
	ring_vm_funcregister("qscrollarea_delete",ring_QScrollArea_delete);
	ring_vm_funcregister("qsplitter_delete",ring_QSplitter_delete);
	ring_vm_funcregister("qcompleter_delete",ring_QCompleter_delete);
	ring_vm_funcregister("qcompleter2_delete",ring_QCompleter2_delete);
	ring_vm_funcregister("qcompleter3_delete",ring_QCompleter3_delete);
	ring_vm_funcregister("qstring2_delete",ring_QString2_delete);
	ring_vm_funcregister("qprocess_delete",ring_QProcess_delete);
	ring_vm_funcregister("qmdiarea_delete",ring_QMdiArea_delete);
	ring_vm_funcregister("qmdisubwindow_delete",ring_QMdiSubWindow_delete);
	ring_vm_funcregister("qcursor_delete",ring_QCursor_delete);
	ring_vm_funcregister("qlistview_delete",ring_QListView_delete);
	ring_vm_funcregister("qaxobject_delete",ring_QAxObject_delete);
	ring_vm_funcregister("quuid_delete",ring_QUuid_delete);
	ring_vm_funcregister("qtoolbutton_delete",ring_QToolButton_delete);
	ring_vm_funcregister("qserialport_delete",ring_QSerialPort_delete);
	ring_vm_funcregister("qserialportinfo_delete",ring_QSerialPortInfo_delete);
	ring_vm_funcregister("qstringref_delete",ring_QStringRef_delete);
	ring_vm_funcregister("qmutex_delete",ring_QMutex_delete);
	ring_vm_funcregister("qmutexlocker_delete",ring_QMutexLocker_delete);
	ring_vm_funcregister("qbuffer_delete",ring_QBuffer_delete);
	ring_vm_funcregister("qbluetoothaddress_delete",ring_QBluetoothAddress_delete);
	ring_vm_funcregister("qbluetoothdevicediscoveryagent_delete",ring_QBluetoothDeviceDiscoveryAgent_delete);
	ring_vm_funcregister("qbluetoothdeviceinfo_delete",ring_QBluetoothDeviceInfo_delete);
	ring_vm_funcregister("qbluetoothhostinfo_delete",ring_QBluetoothHostInfo_delete);
	ring_vm_funcregister("qbluetoothlocaldevice_delete",ring_QBluetoothLocalDevice_delete);
	ring_vm_funcregister("qdatetime_delete",ring_QDateTime_delete);
	ring_vm_funcregister("qwindow_delete",ring_QWindow_delete);
	ring_vm_funcregister("qguiapplication_delete",ring_QGuiApplication_delete);
	ring_vm_funcregister("qtextbrowser_delete",ring_QTextBrowser_delete);
	ring_vm_funcregister("qregion_delete",ring_QRegion_delete);
	ring_vm_funcregister("qstackedwidget_delete",ring_QStackedWidget_delete);
	ring_vm_funcregister("qcalendarwidget_delete",ring_QCalendarWidget_delete);
	ring_vm_funcregister("qopenglfunctions_delete",ring_QOpenGLFunctions_delete);
	ring_vm_funcregister("qopenglcontext_delete",ring_QOpenGLContext_delete);
}
